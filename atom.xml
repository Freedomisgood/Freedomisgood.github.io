<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mrli&#39;s Blog</title>
  
  <subtitle>别装作很努力，结局不会陪你演戏。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://nymrli.top/"/>
  <updated>2019-09-24T14:13:41.560Z</updated>
  <id>https://nymrli.top/</id>
  
  <author>
    <name>Mrli</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux安装selenium执行Python程序</title>
    <link href="https://nymrli.top/2019/09/24/Linux%E5%AE%89%E8%A3%85selenium%E6%89%A7%E8%A1%8CPython%E7%A8%8B%E5%BA%8F/"/>
    <id>https://nymrli.top/2019/09/24/Linux安装selenium执行Python程序/</id>
    <published>2019-09-24T14:13:20.000Z</published>
    <updated>2019-09-24T14:13:41.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="linux安装selenium执行python程序"><a class="markdownIt-Anchor" href="#linux安装selenium执行python程序"></a> Linux安装selenium执行Python程序</h1><ol><li><p>配置python运行环境</p></li><li><p>安装selenium,<code>sudo pip install selenium</code></p></li><li><p>安装chrome</p><blockquote><p>提供下载网站<a href="https://www.chromedownloads.net/chrome64linux-stable/" target="_blank" rel="noopener">chromedownloads</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install libxss1 libappindicator1 libindicator7</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo dpkg -i google-chrome-stable_current_amd64-75.0.3770.80.deb </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 执行sudo dpkg -i google-chrome*.deb后报错的话，那就执行一下sudo apt-get install -f</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装后在/usr/bin目录下查看是否有google-chrome文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 检查chrome版本：</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> google-chrome-stable --version</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 当时无法查到版本,并报错error <span class="keyword">while</span> loading shared libraries: libasound.so.2,</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 输入sudo apt-get install -f后解决</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> google-chrome-stable --version</span></span><br></pre></td></tr></table></figure></li><li><p>安装chromedriver</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> wget -N http://chromedriver.storage.googleapis.com/75.0.3770.8/chromedriver_linux64.zip</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> unzip chromedriver_linux64.zip</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> chmod +x chromedriver</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo mv -f chromedriver /usr/<span class="built_in">local</span>/share/chromedriver</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo ln -s /usr/<span class="built_in">local</span>/share/chromedriver /usr/<span class="built_in">local</span>/bin/chromedriver</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo ln -s /usr/<span class="built_in">local</span>/share/chromedriver /usr/bin/chromedrive</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> chromedriver -v</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果发现版本不对，chrome可以使用这样卸载：</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum remove google-chrome</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> chromedriver可以直接删除目录：</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo rm -f /usr/bin/chromedriver</span></span><br></pre></td></tr></table></figure></li><li><p>编写python测试代码</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.options <span class="keyword">import</span> Options</span><br><span class="line">chrome_options = Options()</span><br><span class="line">chrome_options.add_argument(<span class="string">'--no-sandbox'</span>)</span><br><span class="line">chrome_options.add_argument(<span class="string">'--disable-dev-shm-usage'</span>)</span><br><span class="line">chrome_options.add_argument(<span class="string">'--headless'</span>)</span><br><span class="line">browser = webdriver.Chrome(chrome_options=chrome_options)</span><br><span class="line">browser.get(<span class="string">'https://www.baidu.com/'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;linux安装selenium执行python程序&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#linux安装selenium执行python程序&quot;&gt;&lt;/a&gt; Linux安装selenium执行Python程序&lt;/h1&gt;
&lt;ol&gt;
&lt;
      
    
    </summary>
    
    
      <category term="环境配置" scheme="https://nymrli.top/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
      <category term="Python" scheme="https://nymrli.top/tags/Python/"/>
    
      <category term="Linux" scheme="https://nymrli.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu16.04+CUDA toolkit10.1+cudNN7.6+bazel0.26.1</title>
    <link href="https://nymrli.top/2019/09/23/Ubuntu16-04-CUDA-toolkit10-1-cudNN7-6-bazel0-26-1/"/>
    <id>https://nymrli.top/2019/09/23/Ubuntu16-04-CUDA-toolkit10-1-cudNN7-6-bazel0-26-1/</id>
    <published>2019-09-23T08:38:55.000Z</published>
    <updated>2019-09-24T10:45:25.936Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ubuntu-1604-cuda-toolkit-100-cudnn76-bazel-0261"><a class="markdownIt-Anchor" href="#ubuntu-1604-cuda-toolkit-100-cudnn76-bazel-0261"></a> Ubuntu 16.04 + CUDA toolkit 10.0 + cudNN7.6 + bazel 0.26.1</h2><blockquote><p>保证<a href="https://developer.nvidia.com/rdp/cudnn-download" target="_blank" rel="noopener">cuDNN</a>跟<a href="https://developer.nvidia.com/cuda-toolkit-archive" target="_blank" rel="noopener">CUDA SDK</a>的版本一致即可.</p><p>从源码编译的话需要查看显卡的计算能力,可在<a href="https://developer.nvidia.com/cuda-gpus" target="_blank" rel="noopener">查看GPU计算能力</a>，在配置的时候填入即可，跟CUDA SDK的版本无关</p><p>▲必须注册账号后，才能选择下载</p></blockquote><p>▲最好先看我的踩坑记录，先确保自己知道有这些坑</p><p>▲.<strong>全程保持能连接外网（翻墙）</strong></p><h3 id="安装nvidia驱动"><a class="markdownIt-Anchor" href="#安装nvidia驱动"></a> <strong>安装NVIDIA驱动</strong></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ubuntu-drivers devices <span class="comment"># 查看</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看NVIDIA驱动版本</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo dpkg --list | grep nvidia-*</span></span><br><span class="line"><span class="meta">#</span><span class="bash">$ sudo apt install nvidia-418</span></span><br></pre></td></tr></table></figure><p>显卡驱动与CUDA版本对应关系</p><p><img src="https://img-blog.csdnimg.cn/20190308104315129.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0lUX3hpYW9fYmFp,size_16,color_FFFFFF,t_70" alt=""></p><p>▲注意:得对应匹配!!!</p><h3 id="cuda-toolkit-101"><a class="markdownIt-Anchor" href="#cuda-toolkit-101"></a> CUDA toolkit 10.1</h3><p>安装之前先看显卡的驱动版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装过程</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo dpkg -i cuda-repo-ubuntu1604-10-1-local-10.1.243-418.87.00_1.0-1_amd64.deb</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt update</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt install cuda</span></span><br></pre></td></tr></table></figure><p>设置环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo vim ~/.bashrc</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置环境变量</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/cuda-8.0/bin:<span class="variable">$PATH</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">export</span> LD_LIBRARY_PATH=/usr/<span class="built_in">local</span>/cuda-8.0/lib64:<span class="variable">$LD_LIBRARY_PATH</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生效</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> ~/.bashrc</span></span><br></pre></td></tr></table></figure><p>验证安装完成</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvcc -V</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/cuda/samples/1_Utilities/deviceQuery</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo make</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./deviceQuery</span></span><br></pre></td></tr></table></figure><p>△.如果显示Result:PASS才是安装成功。这一步一定要保证错误，不然之后bazel编译时报错就很难分析问题！！！！！(只有在驱动安装好的情况下才能运行成功,不然会报no CUDA-capable device is detected，或者GPU is lost)</p><p>如果失败,卸载重装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/cuda/bin</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo ./uninstall_cuda_9.2.pl</span></span><br></pre></td></tr></table></figure><h3 id="安装-python-和-tensorflow-软件包依赖项"><a class="markdownIt-Anchor" href="#安装-python-和-tensorflow-软件包依赖项"></a> 安装 Python 和 TensorFlow 软件包依赖项</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python-dev python-pip  # or python3-dev python3-pip</span><br></pre></td></tr></table></figure><p>安装 TensorFlow pip 软件包依赖项（如果使用虚拟环境，请省略 <code>--user</code> 参数）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install -U --user pip six numpy wheel setuptools mock future&gt;=0.17.1</span><br><span class="line">pip install -U --user keras_applications==1.0.6 --no-deps</span><br><span class="line">pip install -U --user keras_preprocessing==1.0.5 --no-deps</span><br></pre></td></tr></table></figure><h3 id="cudnn-763"><a class="markdownIt-Anchor" href="#cudnn-763"></a> cudNN 7.6.3</h3><p>选择<a href="https://developer.nvidia.com/compute/machine-learning/cudnn/secure/7.6.3.30/Production/10.1_20190822/cudnn-10.1-linux-x64-v7.6.3.30.tgz" target="_blank" rel="noopener">cuDNN Library for Linux</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 解压cudNN</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp  cudnn-8.0-linux-x64-v5.1.solitairetheme8 /usr/<span class="built_in">local</span>/cuda/cudnn-8.0-linux-x64-v5.1.tgz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/cuda/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tar -xvf cudnn-8.0-linux-x64-v5.1.tgz</span></span><br><span class="line"></span><br><span class="line">sudo cp cuda/include/cudnn.h /usr/local/cuda/include</span><br><span class="line">sudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64</span><br><span class="line">sudo chmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*</span><br></pre></td></tr></table></figure><h3 id="bazel"><a class="markdownIt-Anchor" href="#bazel"></a> Bazel</h3><p>构建Tensorflow需要用bazel,而wget下载很慢,需要代理,可以试着去<a href="https://github.com/bazelbuild/bazel/releases" target="_blank" rel="noopener">github</a>上下载后再传到服务器</p><p>后来<code>./configure</code>配置TensorFlow时,提示Bazel版本太高…</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WARNING: --batch mode is deprecated. Please instead explicitly shut down your Bazel server using the command "bazel shutdown".</span><br><span class="line">You have bazel 0.29.1 installed.</span><br><span class="line">Please downgrade your bazel installation to version 0.26.1 or lower to build TensorFlow! To downgrade: download the installer for the old version (from https://github.com/bazelbuild/bazel/releases) then run the installer.</span><br></pre></td></tr></table></figure><h3 id="从源码构建和安装tensorflow"><a class="markdownIt-Anchor" href="#从源码构建和安装tensorflow"></a> <a href="https://www.tensorflow.org/install/source" target="_blank" rel="noopener">从源码构建和安装Tensorflow</a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/tensorflow/tensorflow.git</span><br><span class="line"><span class="built_in">cd</span> tensorflow</span><br><span class="line">(tf) apollo3d@apollo1:~/Downloads/tensorflow-master$ ./configure </span><br><span class="line">WARNING: --batch mode is deprecated. Please instead explicitly shut down your Bazel server using the <span class="built_in">command</span> <span class="string">"bazel shutdown"</span>.</span><br><span class="line">You have bazel 0.26.0 installed.</span><br><span class="line">Please specify the location of python. [Default is /home/apollo3d/tf/bin/python]: /usr/bin/python3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Found possible Python library paths:</span><br><span class="line">  /usr/<span class="built_in">local</span>/lib/python3.5/dist-packages</span><br><span class="line">  /usr/lib/python3/dist-packages</span><br><span class="line">Please input the desired Python library path to use.  Default is [/usr/<span class="built_in">local</span>/lib/python3.5/dist-packages]</span><br><span class="line"></span><br><span class="line">Do you wish to build TensorFlow with XLA JIT support? [Y/n]: </span><br><span class="line">XLA JIT support will be enabled <span class="keyword">for</span> TensorFlow.</span><br><span class="line"></span><br><span class="line">Do you wish to build TensorFlow with OpenCL SYCL support? [y/N]: </span><br><span class="line">No OpenCL SYCL support will be enabled <span class="keyword">for</span> TensorFlow.</span><br><span class="line"></span><br><span class="line">Do you wish to build TensorFlow with ROCm support? [y/N]: </span><br><span class="line">No ROCm support will be enabled <span class="keyword">for</span> TensorFlow.</span><br><span class="line"></span><br><span class="line">Do you wish to build TensorFlow with CUDA support? [y/N]: y</span><br><span class="line">CUDA support will be enabled <span class="keyword">for</span> TensorFlow.</span><br><span class="line"></span><br><span class="line">Do you wish to build TensorFlow with TensorRT support? [y/N]: </span><br><span class="line">No TensorRT support will be enabled <span class="keyword">for</span> TensorFlow.</span><br><span class="line"></span><br><span class="line">Found CUDA 10.1 <span class="keyword">in</span>:</span><br><span class="line">    /usr/<span class="built_in">local</span>/cuda/lib64</span><br><span class="line">    /usr/<span class="built_in">local</span>/cuda/include</span><br><span class="line">Found cuDNN 7 <span class="keyword">in</span>:</span><br><span class="line">    /usr/<span class="built_in">local</span>/cuda/lib64</span><br><span class="line">    /usr/<span class="built_in">local</span>/cuda/include</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Please specify a list of comma-separated CUDA compute capabilities you want to build with.</span><br><span class="line">You can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.</span><br><span class="line">Please note that each additional compute capability significantly increases your build time and binary size, and that TensorFlow only supports compute capabilities &gt;= 3.5 [Default is: 3.5,7.0]: 5.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Do you want to use clang as CUDA compiler? [y/N]: N</span><br><span class="line">Clang will be used as CUDA compiler.</span><br><span class="line"></span><br><span class="line">Do you wish to download a fresh release of clang? (Experimental) [y/N]: N</span><br><span class="line">Clang will be downloaded and used to compile tensorflow.</span><br><span class="line"></span><br><span class="line">Please specify optimization flags to use during compilation when bazel option <span class="string">"--config=opt"</span> is specified [Default is -march=native -Wno-sign-compare]: --config=v2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Would you like to interactively configure ./WORKSPACE <span class="keyword">for</span> Android builds? [y/N]: </span><br><span class="line">Not configuring the WORKSPACE <span class="keyword">for</span> Android builds.</span><br><span class="line"></span><br><span class="line">Preconfigured Bazel build configs. You can use any of the below by adding <span class="string">"--config=&lt;&gt;"</span> to your build <span class="built_in">command</span>. See .bazelrc <span class="keyword">for</span> more details.</span><br><span class="line">--config=mkl         <span class="comment"># Build with MKL support.</span></span><br><span class="line">--config=monolithic  <span class="comment"># Config for mostly static monolithic build.</span></span><br><span class="line">--config=ngraph      <span class="comment"># Build with Intel nGraph support.</span></span><br><span class="line">--config=numa        <span class="comment"># Build with NUMA support.</span></span><br><span class="line">--config=dynamic_kernels<span class="comment"># (Experimental) Build kernels into separate shared objects.</span></span><br><span class="line">--config=v2          <span class="comment"># Build TensorFlow 2.x instead of 1.x.</span></span><br><span class="line">Preconfigured Bazel build configs to DISABLE default on features:</span><br><span class="line">--config=noaws       <span class="comment"># Disable AWS S3 filesystem support.</span></span><br><span class="line">--config=nogcp       <span class="comment"># Disable GCP support.</span></span><br><span class="line">--config=nohdfs      <span class="comment"># Disable HDFS support.</span></span><br><span class="line">--config=nonccl      <span class="comment"># Disable NVIDIA NCCL support.</span></span><br><span class="line">Configuration finished</span><br></pre></td></tr></table></figure><h3 id="编译-pip-软件包"><a class="markdownIt-Anchor" href="#编译-pip-软件包"></a> 编译 pip 软件包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ (tf) apollo3d@apollo1:~/Downloads/tensorflow-master$ bazel build -c --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package</span><br><span class="line"><span class="comment"># -c 不链接直接编译</span></span><br><span class="line">Starting <span class="built_in">local</span> Bazel server and connecting to it...</span><br><span class="line">WARNING: The following configs were expanded more than once: [cuda_clang, using_cuda, download_clang_use_lld]. For repeatable flags, repeats are counted twice and may lead to unexpected behavior.</span><br><span class="line">WARNING: option <span class="string">'--crosstool_top'</span> was expanded to from both option <span class="string">'--config=cuda_clang'</span> (<span class="built_in">source</span> /home/apollo3d/Downloads/tensorflow-master/.tf_configure.bazelrc) and option <span class="string">'--config=download_clang'</span> (<span class="built_in">source</span> /home/apollo3d/Downloads/tensorflow-master/.tf_configure.bazelrc)</span><br><span class="line"></span><br><span class="line">$ bazel-bin/tensorfLow/tools/pip_package/build_pip_package ~/</span><br><span class="line">tensorflow/bin <span class="comment"># 传入一个表示Python whell文件存储路径的参数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在虚拟环境打开的情况下安装</span></span><br></pre></td></tr></table></figure><h2 id="采坑记录"><a class="markdownIt-Anchor" href="#采坑记录"></a> 采坑记录</h2><p>▲下载tensorflow，一定要从官网下载最新的。千万不要去网盘上下载，我就是被这个坑了很久。最后从github下了后才逐渐正常。（github下载会很慢，可以见我的另外一篇文章，如何提速）</p><p>▲<code>./configure</code>的配置也很重要，除了CUDA选项其他都选默认</p><p><a href="https://blog.csdn.net/Junizxr/article/details/83578579" target="_blank" rel="noopener">Linux系统下安装TensorFlow的GPU版本</a></p><p><a href="https://blog.csdn.net/IT_xiao_bai/article/details/88342921" target="_blank" rel="noopener">CUDA、显卡驱动和Tensorflow版本之间的对应关系</a></p><blockquote><p>Linux x86_64 Driver Version与CUDA Toolkit的对应，一定要对应好，CUDA超出了Driver Version的话，是无法使用的<a href="https://blog.csdn.net/Junizxr/article/details/83578579" target="_blank" rel="noopener">^提示</a></p></blockquote><p>==&gt;CUDA 10.1的需要Linux x86_64 Driver Version&gt;=410.48。同时，tensorflow-gpu默认安装的是1.14版本，要求的cudNN为7，CUDA为9</p><p>▲<strong>google.xxxx.xxxx==&gt;unknown hosts</strong></p><p>报了这个错以后才发现，服务器的DNS没配置（云服务器一般不会出现这样的问题）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/resolv.conf</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Dynamic resolv.conf(5) file <span class="keyword">for</span> glibc resolver(3) generated by resolvconf(8)</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN</span></span><br><span class="line">nameserver 8.8.8.8</span><br><span class="line">nameserver 8.8.4.4</span><br></pre></td></tr></table></figure><p><strong>▲An error occurred during the fetch of repository ‘llvm’:Error 404 ， cant connect</strong></p><p>多次重试即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> (tf) apollo3d@apollo1:~/Downloads/tensorflow-master$ bazel build -c --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package</span></span><br></pre></td></tr></table></figure><p><strong>▲报错 AttributeError: ‘_NamespacePath’ object has no attribute 'sort’</strong></p><p>重新安装setuptools</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(pythonEnv) $ pip uninstall setuptools</span><br><span class="line">(pythonEnv) $ pip install setuptools</span><br><span class="line">(pythonEnv) $ pip  install googleapis-common-protos</span><br></pre></td></tr></table></figure><p>执行上述命令需要相当长的一段时间，具体时长取决于你的计算机性能。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Target //tensorflow/tools/pip_package:build_pip_package up-to-date:</span><br><span class="line">  bazel-bin/tensorflow/tools/pip_package/build_pip_package</span><br><span class="line">INFO: Elapsed time: 77.892s, Critical Path: 77.18s</span><br><span class="line">INFO: 45 processes: 45 local.</span><br><span class="line">INFO: Build completed successfully, 46 total actions</span><br></pre></td></tr></table></figure><p>待Bazel成功完成上述任务后会输出，运行输出的可执行程序，并传入一个表示Python whee文件存储路径的参数：</p><p><code>bazel-bin/tensorflow/tools/pip_package/build_pip_package ~/</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">(pythonEnv) apollo3d@apollo1:~/Downloads/tensorflow$ bazel-bin/tensorflow/tools/pip_package/build_pip_package ~/</span><br><span class="line">2019年 09月 24日 星期二 14:34:05 CST : === Preparing sources in dir: /tmp/tmp.pguTqrHuLA</span><br><span class="line">~/Downloads/tensorflow ~/Downloads/tensorflow</span><br><span class="line">~/Downloads/tensorflow</span><br><span class="line">/tmp/tmp.pguTqrHuLA/tensorflow/include ~/Downloads/tensorflow</span><br><span class="line">~/Downloads/tensorflow</span><br><span class="line">2019年 09月 24日 星期二 14:34:11 CST : === Building wheel</span><br><span class="line">warning: no files found matching &apos;*.pyd&apos; under directory &apos;*&apos;</span><br><span class="line">warning: no files found matching &apos;*.pd&apos; under directory &apos;*&apos;</span><br><span class="line">warning: no files found matching &apos;*.dylib&apos; under directory &apos;*&apos;</span><br><span class="line">warning: no files found matching &apos;*.dll&apos; under directory &apos;*&apos;</span><br><span class="line">warning: no files found matching &apos;*.lib&apos; under directory &apos;*&apos;</span><br><span class="line">warning: no files found matching &apos;*.csv&apos; under directory &apos;*&apos;</span><br><span class="line">warning: no files found matching &apos;*.h&apos; under directory &apos;tensorflow_core/include/tensorflow&apos;</span><br><span class="line">warning: no files found matching &apos;*&apos; under directory &apos;tensorflow_core/include/third_party&apos;</span><br><span class="line">2019年 09月 24日 星期二 14:34:33 CST : === Output wheel file is in: /home/apollo3d/</span><br></pre></td></tr></table></figure><p><strong>pip安装</strong></p><p>上述命令将在~/tensorlowbn下创建一个Python.wh文件。请确保你的“tensor-fow Virtualenv不境处于活动状态，然后用pip安装该whee文件（请注意该二进制文件的具体名称会依所安装的TensorFlow版本、所使用的操作系统和Python版本而不同）：</p><p><code>(pythonEnv) apollo3d@apollo1:~$ pip install tensorflow-2.0.0rc2-cp35-cp35m-linux_x86_64.whl</code></p><p><strong>▲安装成功后，使用时报错</strong></p><p>使用TensorFlow时报错FutureWarning: Passing (type, 1) or ‘1type’ as a synonym of type is deprecated; in a future version of numpy…</p><p>报错原因：numpy1-17-0版本过高，使用numpy-1.16-0版本即可</p><p>解决方法：重新安装numpy-1.16-0</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pip uninstall numpy</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pip install numpy==1.16.0</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ubuntu-1604-cuda-toolkit-100-cudnn76-bazel-0261&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#ubuntu-1604-cuda-toolkit-100-cudnn76-bazel-0261
      
    
    </summary>
    
    
      <category term="环境配置" scheme="https://nymrli.top/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>Github下载、访问慢解决方法[转]</title>
    <link href="https://nymrli.top/2019/09/23/Github%E4%B8%8B%E8%BD%BD%E3%80%81%E8%AE%BF%E9%97%AE%E6%85%A2%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95-%E8%BD%AC/"/>
    <id>https://nymrli.top/2019/09/23/Github下载、访问慢解决方法-转/</id>
    <published>2019-09-23T08:36:21.000Z</published>
    <updated>2019-09-23T08:37:04.871Z</updated>
    
    <content type="html"><![CDATA[<h1 id="github下载-访问慢解决方法转"><a class="markdownIt-Anchor" href="#github下载-访问慢解决方法转"></a> <a href="https://www.jianshu.com/p/0493dcc15d6f" target="_blank" rel="noopener">Github下载、访问慢解决方法[转]</a></h1><blockquote><p>下载tensorflow就16KiB/s,改完后能有900+KiB/s</p></blockquote><p>修改hosts</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">151.101.44.249 github.global.ssl.fastly.net</span><br><span class="line">192.30.253.113 github.com</span><br><span class="line">103.245.222.133 assets-cdn.github.com</span><br><span class="line">23.235.47.133 assets-cdn.github.com</span><br><span class="line">203.208.39.104 assets-cdn.github.com</span><br><span class="line">204.232.175.78 documentcloud.github.com</span><br><span class="line">204.232.175.94 gist.github.com</span><br><span class="line">107.21.116.220 help.github.com</span><br><span class="line">207.97.227.252 nodeload.github.com</span><br><span class="line">199.27.76.130 raw.github.com</span><br><span class="line">107.22.3.110 status.github.com</span><br><span class="line">204.232.175.78 training.github.com</span><br><span class="line">207.97.227.243 www.github.com</span><br><span class="line">185.31.16.184 github.global.ssl.fastly.net</span><br><span class="line">185.31.18.133 avatars0.githubusercontent.com</span><br><span class="line">185.31.19.133 avatars1.githubusercontent.com</span><br><span class="line">192.30.253.120 codeload.github.com</span><br></pre></td></tr></table></figure><p>windows更新:<code>ipconfig /flushdns</code></p><p>linux重启网络服务:<code>service network restart</code>&lt;===&gt;<code>/etc/init.d/networking restart</code>(两个都没尝试)</p><p>我重新打开终端就行了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;github下载-访问慢解决方法转&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#github下载-访问慢解决方法转&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.jianshu.com/p/0493dcc15d6f&quot; targ
      
    
    </summary>
    
    
      <category term="生活福利" scheme="https://nymrli.top/tags/%E7%94%9F%E6%B4%BB%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>同性交友网站Github的骚操作</title>
    <link href="https://nymrli.top/2019/09/21/%E5%90%8C%E6%80%A7%E4%BA%A4%E5%8F%8B%E7%BD%91%E7%AB%99Github%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/"/>
    <id>https://nymrli.top/2019/09/21/同性交友网站Github的骚操作/</id>
    <published>2019-09-21T03:56:19.000Z</published>
    <updated>2019-09-21T04:17:25.983Z</updated>
    
    <content type="html"><![CDATA[<h1 id="同性交友网站github的骚操作"><a class="markdownIt-Anchor" href="#同性交友网站github的骚操作"></a> 同性交友网站Github的骚操作</h1><h2 id="单击列表"><a class="markdownIt-Anchor" href="#单击列表"></a> 单击列表</h2><p>当提Issue的时候，总会贴很长的代码，有没有什么办法美观一点呢，方法如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">details</span>&gt;</span><span class="tag">&lt;<span class="name">summary</span>&gt;</span>Content of debug log<span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">Paste content here ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果如下</p><p><img src="/2019/09/21/同性交友网站Github的骚操作/list.jpg" alt="list"></p><h2 id="copy-readme"><a class="markdownIt-Anchor" href="#copy-readme"></a> Copy README</h2><p>Q：别人的REAMDE都那么炫酷，怎么办呢？</p><p>A:点击他人的README.md文件，然后显示<code>Raw</code>就能看到html辣，由于markdown语法是支持嵌入html，因此只要把结构复制、改下内容就成了。</p><p><img src="/2019/09/21/同性交友网站Github的骚操作/copy.jpg" alt="copy"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://travis-ci.com/xkcoding/spring-boot-demo"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">"Travis-CI"</span> <span class="attr">src</span>=<span class="string">"https://travis-ci.com/xkcoding/spring-boot-demo.svg?branch=master"</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.codacy.com/app/xkcoding/spring-boot-demo?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=xkcoding/spring-boot-demo&amp;amp;utm_campaign=Badge_Grade"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">"Codacy"</span> <span class="attr">src</span>=<span class="string">"https://api.codacy.com/project/badge/Grade/1f2e3d437b174bfc943dae1600332ec1"</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://xkcoding.com"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">"author"</span> <span class="attr">src</span>=<span class="string">"https://img.shields.io/badge/author-Yangkai.Shen-blue.svg"</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.oracle.com/technetwork/java/javase/downloads/index.html"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">"JDK"</span> <span class="attr">src</span>=<span class="string">"https://img.shields.io/badge/JDK-1.8.0_162-orange.svg"</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://docs.spring.io/spring-boot/docs/2.1.0.RELEASE/reference/html/"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">"Spring Boot"</span> <span class="attr">src</span>=<span class="string">"https://img.shields.io/badge/Spring Boot-2.1.0.RELEASE-brightgreen.svg"</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://github.com/xkcoding/spring-boot-demo/blob/master/LICENSE"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">"LICENSE"</span> <span class="attr">src</span>=<span class="string">"https://img.shields.io/github/license/xkcoding/spring-boot-demo.svg"</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://github.com/xkcoding/spring-boot-demo/stargazers"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">"star"</span> <span class="attr">src</span>=<span class="string">"https://img.shields.io/github/stars/xkcoding/spring-boot-demo.svg?label=Stars&amp;style=social"</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://github.com/xkcoding/spring-boot-demo/network/members"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">"star"</span> <span class="attr">src</span>=<span class="string">"https://img.shields.io/github/forks/xkcoding/spring-boot-demo.svg?label=Fork&amp;style=social"</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://github.com/xkcoding/spring-boot-demo/watchers"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">"star"</span> <span class="attr">src</span>=<span class="string">"https://img.shields.io/github/watchers/xkcoding/spring-boot-demo.svg?label=Watch&amp;style=social"</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>中文 | <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"./README.en.md"</span>&gt;</span>English<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="项目条幅"><a class="markdownIt-Anchor" href="#项目条幅"></a> 项目条幅</h2><p><img src="/2019/09/21/同性交友网站Github的骚操作/NJUPT.jpg" alt="NJUPT"></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">![Stargazers</span>](<span class="link">https://img.shields.io/github/stars/NJUPTFreeExams/NJUPT-CS-Free-Exams.svg?style=for-the-badge</span>)](<span class="link">https://github.com/NJUPTFreeExams/NJUPT-CS-Free-Exams/stargazers</span>)</span><br><span class="line">[<span class="string">![Forks</span>](<span class="link">https://img.shields.io/github/forks/NJUPTFreeExams/NJUPT-CS-Free-Exams.svg?style=for-the-badge</span>)](<span class="link">https://github.com/NJUPTFreeExams/NJUPT-CS-Free-Exams/network/members</span>)</span><br><span class="line">[<span class="string">![cloed prs</span>](<span class="link">https://img.shields.io/github/issues-pr-closed-raw/NJUPTFreeExams/NJUPT-CS-Free-Exams.svg?style=for-the-badge</span>)](<span class="link">https://github.com/NJUPTFreeExams/NJUPT-CS-Free-Exams/pulls</span>)</span><br><span class="line">!</span><br></pre></td></tr></table></figure><h2 id="贡献者名单"><a class="markdownIt-Anchor" href="#贡献者名单"></a> 贡献者名单</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">## 贡献者名单</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://github.com/imguozr"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://avatars1.githubusercontent.com/u/30227124?v=4"</span> <span class="attr">width</span>=<span class="string">"50px"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://github.com/Wonz5130"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://avatars1.githubusercontent.com/u/35889526?v=4"</span> <span class="attr">width</span>=<span class="string">"50px"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://github.com/Wen-He"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://avatars0.githubusercontent.com/u/18651139?v=4"</span> <span class="attr">width</span>=<span class="string">"50px"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://github.com/chenkangyang"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://avatars2.githubusercontent.com/u/28588778?v=4"</span> <span class="attr">width</span>=<span class="string">"50px"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://github.com/Davont"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://avatars0.githubusercontent.com/u/28757633?v=4"</span> <span class="attr">width</span>=<span class="string">"50px"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;同性交友网站github的骚操作&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#同性交友网站github的骚操作&quot;&gt;&lt;/a&gt; 同性交友网站Github的骚操作&lt;/h1&gt;
&lt;h2 id=&quot;单击列表&quot;&gt;&lt;a class=&quot;markdownI
      
    
    </summary>
    
    
      <category term="生活福利" scheme="https://nymrli.top/tags/%E7%94%9F%E6%B4%BB%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>搭建Jupyter服务器</title>
    <link href="https://nymrli.top/2019/09/21/%E6%90%AD%E5%BB%BAJupyter%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://nymrli.top/2019/09/21/搭建Jupyter服务器/</id>
    <published>2019-09-21T01:53:01.000Z</published>
    <updated>2019-09-24T10:23:35.418Z</updated>
    
    <content type="html"><![CDATA[<h1 id="搭建jupyter服务器"><a class="markdownIt-Anchor" href="#搭建jupyter服务器"></a> 搭建Jupyter服务器</h1><p>1.配置好Python环境及安装pip</p><p>2.安装jupyter:</p><p><code>pip3 install jupyter</code> (此处使用的是python3)</p><p>3.生成配置文件</p><p><code>jupyter notebook --generate-config</code></p><p>4.生成密钥:</p><p>终端输入<code>$ ipython</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">from</span> notebook.auth <span class="keyword">import</span> passwd</span><br><span class="line">In [<span class="number">2</span>]: passwd()</span><br><span class="line">Enter password: </span><br><span class="line">Verify password: </span><br><span class="line"><span class="comment">#此时会让你两次输入密码，然后就会生成秘钥</span></span><br><span class="line"><span class="comment">#＊＊＊＊＊＊＊＊＊＊＊＊</span></span><br></pre></td></tr></table></figure><p>5.修改配置文件<code>vim ~/.jupyter/jupyter_notebook_config.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">c=get_config()</span><br><span class="line">c.IPKernelApp.pylab =<span class="string">"inline"</span></span><br><span class="line">c.NotebookApp.ip=<span class="string">'*'</span> <span class="comment"># 设置所有ip皆可访问</span></span><br><span class="line">c.NotebookApp.password = <span class="string">'sha1:x'</span>   <span class="comment"># 刚生成的密文</span></span><br><span class="line">c.NotebookApp.open_browser = <span class="keyword">False</span>  <span class="comment"># 禁止自动打开浏览器</span></span><br><span class="line">c.NotebookApp.port = <span class="number">9999</span> <span class="comment"># 指定运行端口</span></span><br><span class="line">c.NotebookApp.notebook_dir = <span class="string">'/home/apollo3d/tf/jupyter_home'</span> <span class="comment"># 指定Jupyter的工作目录</span></span><br></pre></td></tr></table></figure><h1 id="拓展云服务器搭建神器jupyterlab转"><a class="markdownIt-Anchor" href="#拓展云服务器搭建神器jupyterlab转"></a> 拓展:<a href="https://blog.csdn.net/ds19991999/article/details/83663349?tdsourcetag=s_pctim_aiomsg#commentBox" target="_blank" rel="noopener">云服务器搭建神器JupyterLab(转)</a></h1><blockquote><p><a href="https://github.com/jupyterlab/jupyterlab" target="_blank" rel="noopener"><code>JupyterLab</code></a>是一个交互式的开发环境，其用于应对包含着<code>notebook</code>、代码以及数据的工作场景。</p></blockquote><h2 id="1-前言"><a class="markdownIt-Anchor" href="#1-前言"></a> 1、前言</h2><p>如果说vim是编辑器之神，那么JupyterLab就是笔记本之神。</p><p>从2017年开始我注意到这一神奇的IDE笔记本，第一眼见到它，就觉得它真的太强大了，作为一个交互式的Python开发工具，其实也不算开发工具，准确的来说，它是一个演示代码的科学数据工具，支持markdown预览，支持Draw扩展，支持丰富的文件格式和多种开发语言，拥有众多插件诸于GitHub， Google-Dirve， Git和TOC，更重要的是，它是把浏览器当作开发工具，十分有创意。JupyterLab的开发者众多，GitHub上面的isuue也十分活跃，众多的大牛开发者也纷纷加入到JupyterLab的阵营，为JupyterLab的发展作贡献，JupyterLab得到迅速发展。</p><p>好的工具当然是要好好利用了，回归正题，怎样通过云服务器搭建一个可远程使用的JupyterLab?</p><h2 id="2-添加ppa源"><a class="markdownIt-Anchor" href="#2-添加ppa源"></a> 2、添加ppa源</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@iZwz9huxtbd86xp91s3j16Z:~# sudo add-apt-repository ppa:chronitis/jupyter</span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo: add-apt-repository: <span class="built_in">command</span> not found</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 出现这种情况,可以如下解决</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> $ sudo apt-get install software-properties-common</span></span><br></pre></td></tr></table></figure><h2 id="3-配置python"><a class="markdownIt-Anchor" href="#3-配置python"></a> 3、配置python</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install python-pip python-dev build-essential </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo pip install --upgrade pip <span class="comment"># </span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo pip install --upgrade virtualenv <span class="comment">#安装虚拟环境</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 升级pip</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo pip3 install --upgrade pip</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo pip2 install --upgrade pip</span></span><br></pre></td></tr></table></figure><p>如果没有换源,先进行换源,下载速度会快很多</p><ul><li>阿里云 <a href="http://mirrors.aliyun.com/pypi/simple/" target="_blank" rel="noopener">http://mirrors.aliyun.com/pypi/simple/</a></li><li>中国科技大学 <a href="https://pypi.mirrors.ustc.edu.cn/simple/" target="_blank" rel="noopener">https://pypi.mirrors.ustc.edu.cn/simple/</a></li><li>豆瓣(douban) <a href="http://pypi.douban.com/simple/" target="_blank" rel="noopener">http://pypi.douban.com/simple/</a></li><li>清华大学 <a href="https://pypi.tuna.tsinghua.edu.cn/simple/" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple/</a></li><li>中国科学技术大学 <a href="http://pypi.mirrors.ustc.edu.cn/simple/" target="_blank" rel="noopener">http://pypi.mirrors.ustc.edu.cn/simple/</a></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; ~/.pip/pip.conf</span><br><span class="line">[global]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><p><code>npm</code>和<code>yarn</code>也可以换源，更简单，自行<code>google</code>。</p><p><code>pip</code>国内的一些镜像包,换源之后出现<code>python2</code>版本过低的情况导致以前的包下载不了，那就直接将文件夹<code>~/.pip/pip.conf</code>删除就可以恢复原来的源。</p><p>pip指向问题<br>有时候会出现pip,pip2,pip3都TM指向python2，这个之后就需要改一下这这三个文件。</p><p>编辑这三个文件，将第一行注释分别改为python\python2\python3</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">~ $which pip</span><br><span class="line">/usr/local/bin/pip</span><br><span class="line">21:36 alien@alien-Inspiron-3443:</span><br><span class="line">~ $which pip2</span><br><span class="line">/usr/local/bin/pip2</span><br><span class="line">21:36 alien@alien-Inspiron-3443:</span><br><span class="line">~ $which pip3</span><br><span class="line">/usr/local/bin/pip3</span><br></pre></td></tr></table></figure><h3 id="安装yarn和nodejs"><a class="markdownIt-Anchor" href="#安装yarn和nodejs"></a> 安装<code>yarn</code>和<code>nodejs</code></h3><h4 id="配置仓库"><a class="markdownIt-Anchor" href="#配置仓库"></a> 配置仓库</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -</span><br><span class="line">echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list</span><br></pre></td></tr></table></figure><h4 id="安装yarn"><a class="markdownIt-Anchor" href="#安装yarn"></a> 安装<code>yarn</code></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install yarn</span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果这边安装后,报错NameError: name <span class="string">'CoreConfig'</span> is not defined,那么需要更新nodejs版本</span></span><br></pre></td></tr></table></figure><p>注意这里<code>yarn</code>自动安装了<code>nodejs</code>，不过版本太低，安装<code>jupyterlab</code>的时候会出问题，而且使用<code>n</code>或者<code>nvm</code>安装的<code>nodejs</code>也有问题，总之<code>nodejs</code>要按照下面这种方式就没事，这个是官方的<code>bug</code>，官方<code>issue</code>也提到过，但是目前还未解决。</p><p>如果版本过低,安装插件、或是<code>jupyter lab build</code>发生<code>NameError: name 'CoreConfig' is not defined</code>错误,则可能是nodejs版本过低导致.我出现这个Bug后找了提了issue也没解决,后来突然想起了这边提到的<strong>nodejs版本问题</strong>,于是更新后解决…<a href="#nodejs%E6%9B%B4%E6%96%B0">nodejs更新方式见附录</a></p><h4 id="安装nodejs"><a class="markdownIt-Anchor" href="#安装nodejs"></a> 安装<code>nodejs</code></h4><p>创建一个新文件，输入两行<code>deb</code>，结束之后<code>Ctrl+C</code>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/apt/sources.list.d/nodesource.list</span><br><span class="line">deb https://deb.nodesource.com/node_6.x xenial main</span><br><span class="line">deb-src https://deb.nodesource.com/node_6.x xenial main</span><br></pre></td></tr></table></figure><p>导入公匙并安装<code>nodejs</code>，这个版本的<code>nodejs</code>对<code>jupyterlab</code>支持比较友好。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | sudo apt-key add -</span><br><span class="line">sudo apt-get update</span><br><span class="line">apt-cache policy nodejs</span><br><span class="line">sudo apt-get install nodejs</span><br><span class="line">nodejs --version</span><br><span class="line"></span><br><span class="line">​```shell</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">### 安装`ipython,matplotlib,scipy,pandas,numpy`</span></span></span><br><span class="line"></span><br><span class="line">最好`python2`和`python3`都安装。</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 安装`JupyterLab`及其配置</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 配置同上文Jupyter配置</span></span><br><span class="line"></span><br><span class="line">​```shell</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line">sudo pip3 install jupyterlab</span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成密码</span></span><br><span class="line">jupyter-notebook password</span><br></pre></td></tr></table></figure><h3 id="创建哈希密码"><a class="markdownIt-Anchor" href="#创建哈希密码"></a> 创建哈希密码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> notebook.auth <span class="keyword">import</span> passwd</span><br><span class="line">passwd()</span><br><span class="line"><span class="comment"># 输入你自己设置登录JupyterLab界面的密码，</span></span><br><span class="line"><span class="comment"># 然后就会生产下面这样的密码，将它记下来，待会儿用</span></span><br><span class="line"><span class="string">'sha1:b92f3fb7d848:a5d40ab2e26aa3b296ae1faa17aa34d3df351704'</span></span><br></pre></td></tr></table></figure><h3 id="修改jupyterlab配置文件"><a class="markdownIt-Anchor" href="#修改jupyterlab配置文件"></a> 修改<code>JupyterLab</code>配置文件</h3><p>先生成一个配置文件，记下输出的配置文件地址</p><p><code>jupyter lab --generate-config</code>-&gt;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">c.NotebookApp.allow_root = <span class="keyword">True</span> <span class="comment">#允许以root方式运行jupyterlab</span></span><br><span class="line">c.NotebookApp.ip = <span class="string">'0.0.0.0'</span> <span class="comment">#允许任意ip段访问</span></span><br><span class="line">c.NotebookApp.notebook_dir = <span class="string">u'/root/JupyterLab'</span> <span class="comment"># 设置jupyterlab页面的根目录</span></span><br><span class="line">c.NotebookApp.open_browser = <span class="keyword">False</span><span class="comment">#默认运行时不启动浏览器，因为服务器默认只有终端</span></span><br><span class="line">c.NotebookApp.password = <span class="string">u'sha1:b92f3fb7d848:a5d40ab2e26aa3b296ae1faa17aa34d3df351704'</span><span class="comment">#设置之前生产的哈希密码</span></span><br><span class="line">c.NotebookApp.port = <span class="number">8080</span><span class="comment">#设置访问端口</span></span><br></pre></td></tr></table></figure><p>到此，<code>JupyterLab</code>已经安装成功了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jupyter-lab --version</span><br><span class="line">0.33.12</span><br><span class="line">jupyter lab build</span><br></pre></td></tr></table></figure><p><code>jupyter lab build</code>时间有点久，如果没报错就成功了</p><h2 id="jupyterlab扩展安装"><a class="markdownIt-Anchor" href="#jupyterlab扩展安装"></a> <code>JupyterLab</code>扩展安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">jupyter labextension list # 查看已经安装的扩展及其状态：</span><br><span class="line">jupyter labextension install @mflevine/jupyterlab_html # 比如安装一个扩展jupyterlab_html，支持html预览:</span><br><span class="line">jupyter labextension uninstall @mflevine/jupyterlab_html #卸载扩展:</span><br><span class="line">jupyter labextension update --all#更新所有扩展:</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装一个生成目录的插件</span></span><br><span class="line">jupyter labextension install @jupyterlab/toc</span><br></pre></td></tr></table></figure><p>还有功能</p><ul><li>支持做图</li><li><code>markdown</code></li><li>多标签</li><li>内部打开网页</li><li><code>latex</code></li></ul><h3 id="快捷键"><a class="markdownIt-Anchor" href="#快捷键"></a> 快捷键</h3><p>编辑模式命令</p><ul><li>执行当前cell，执行后不自动调转到下一个cell：Ctrl-Enter</li><li>使当前的cell进入编辑模式：Enter</li><li>退出当前cell的编辑模式：Esc</li></ul><p>命令模式:</p><ul><li>删除当前的cell：双D</li><li>为当前的cell加入line number：单L</li><li>将当前的cell转化为具有一级标题的maskdown：单1</li><li>将当前的cell转化为具有二级标题的maskdown：单2</li><li>将当前的cell转化为具有三级标题的maskdown：单3</li><li>撤销对某个cell的删除：z</li><li>浏览器的各个Tab之间切换：Up和Dn</li></ul><h1 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h1><h2 id="nodejs更新"><a class="markdownIt-Anchor" href="#nodejs更新"></a> nodejs更新</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看更新前的版本</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> node -v</span></span><br><span class="line">v4.2.1</span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo npm cache clean -f</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo npm install -g n</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo n stable</span></span><br><span class="line"><span class="meta"> #</span><span class="bash"> 软链接,VERSION改成新的版本(删了后按TAB键)</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo ln -sf /usr/<span class="built_in">local</span>/n/versions/node/&lt;VERSION&gt;/bin/node /usr/bin/nodejs</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看是否更新成功</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> node -v</span></span><br><span class="line">v10.16.3</span><br></pre></td></tr></table></figure><h2 id="安装内核"><a class="markdownIt-Anchor" href="#安装内核"></a> 安装内核</h2><p>安装Python内核</p><blockquote><p>如果需要python2和python3同时存在的话</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo pip2 install ipykernel</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo pip3 install ipykernel</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看已经安装的内核</span></span><br><span class="line">jupyter kernelspec list</span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除你不需要的内核</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> jupyter kernelspec remove &lt;kernel_name&gt;</span></span><br><span class="line">/root/JupyterLab</span><br></pre></td></tr></table></figure><p>安装ijavascript</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:chronitis/jupyter</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install ijavascript</span><br><span class="line"><span class="meta">#</span><span class="bash"> ihaskell、ijulia、irkernel、iruby</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/jupyter/jupyter/wiki/Jupyter-kernels</span></span><br></pre></td></tr></table></figure><h2 id="插件安装"><a class="markdownIt-Anchor" href="#插件安装"></a> 插件安装</h2><h3 id="jupyterlab-toc"><a class="markdownIt-Anchor" href="#jupyterlab-toc"></a> <a href="https://github.com/ian-r-rose/jupyterlab-toc" target="_blank" rel="noopener">jupyterlab-toc</a>(目录功能)</h3><p>Installation</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter labextension install @jupyterlab/toc</span><br></pre></td></tr></table></figure><h3 id="jupyterlab-tensorboard"><a class="markdownIt-Anchor" href="#jupyterlab-tensorboard"></a> <a href="https://github.com/chaoleili/jupyterlab_tensorboard" target="_blank" rel="noopener">Jupyterlab-Tensorboard</a></h3><p>Installation</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ jupyter labextension install jupyterlab_tensorboard</span><br></pre></td></tr></table></figure><p><a href="http://image.rexking6.top/img/clip1545289777.png" target="_blank" rel="noopener"><img src="http://image.rexking6.top/img/clip1545289777.png" alt="img"></a></p><p><a href="http://image.rexking6.top/img/clip1545289896.png" target="_blank" rel="noopener"><img src="http://image.rexking6.top/img/clip1545289896.png" alt="img"></a></p><p><a href="http://image.rexking6.top/img/clip1545289906.png" target="_blank" rel="noopener"><img src="http://image.rexking6.top/img/clip1545289906.png" alt="img"></a></p><p><a href="http://image.rexking6.top/img/clip1545289922.png" target="_blank" rel="noopener"><img src="http://image.rexking6.top/img/clip1545289922.png" alt="img"></a></p><h3 id="jupyterlab-drawio"><a class="markdownIt-Anchor" href="#jupyterlab-drawio"></a> <a href="https://github.com/QuantStack/jupyterlab-drawio" target="_blank" rel="noopener">JupyterLab drawio</a>(processon图)</h3><p>Installation</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter labextension install jupyterlab-drawio</span><br></pre></td></tr></table></figure><p><a href="http://image.rexking6.top/img/clip1545289579.png" target="_blank" rel="noopener"><img src="http://image.rexking6.top/img/clip1545289579.png" alt="img"></a></p><p>注,图片来自<a href="http://blog.rexking6.top/2018/12/20/JupyterLab%E6%8F%92%E4%BB%B6/" target="_blank" rel="noopener">RexKing6’s Note</a></p><p>go_*to_*definition插件</p><p><code>jupyter labextension install @lckr/jupyterlab_variableinspector</code></p><p>在lab中按alt+ 点击变量名 or 函数名，可以跳转到其对应的最初定义的地方(注意看闪烁光标的位置变化)。</p><p><img src="https://pic2.zhimg.com/v2-14d06c618b4fa8a7fffb2455576a5bb9_b.webp" alt="img"></p><h2 id="快捷键-2"><a class="markdownIt-Anchor" href="#快捷键-2"></a> 快捷键</h2><p>Up : 选中上方单元<br>K : 选中上方单元<br>Down : 选中下方单元<br>J : 选中下方单元<br>Shift-K : 扩大选中上方单元<br>Shift-J : 扩大选中下方单元<br>A : 在上方插入新单元<br>B : 在下方插入新单元<br>X : 剪切选中的单元<br>C : 复制选中的单元<br>Shift-V : 粘贴到上方单元<br>V : 粘贴到下方单元<br>Z : 恢复删除的最后一个单元<br>D,D : 删除选中的单元<br>Shift-M : 合并选中的单元<br>I,I : 中断Notebook内核0,0<br>0,0 :重启Notebook内核<br>Tab : 代码补全或缩进<br>Shift-Tab : 提示<br>Ctrl-] : 缩进<br>Ctrl-[ : 解除缩进<br>Ctrl-A : 全选<br>Ctrl-Z : 复原<br>Ctrl-Shift-Z : 再做<br>Ctrl-Y : 再做<br>Ctrl-Home : 跳到单元开头<br>Ctrl-Up : 跳到单元开头<br>Ctrl-End : 跳到单元末尾<br>Ctrl-Down : 跳到单元末尾<br>Ctrl-Left : 跳到左边一个字首<br>Ctrl-Right : 跳到右边一个字首<br>Ctrl-Backspace : 删除前面一个字<br>Ctrl-Delete : 删除后面一个字<br>Esc : 进入命令模式<br>Ctrl-M : 进入命令模式<br>Shift-Enter : 运行本单元，选中下一单元<br>Ctrl-Enter : 运行本单元<br>Alt-Enter : 运行本单元，在下面插入一单元<br>Ctrl-Shift-- : 分割单元<br>Ctrl-Shift-Subtract : 分割单元<br>Ctrl-S : 文件存盘<br>Shift : 忽略<br>Up : 光标上移或转入上一单元<br>Down :光标下移或转入下一单元</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;搭建jupyter服务器&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#搭建jupyter服务器&quot;&gt;&lt;/a&gt; 搭建Jupyter服务器&lt;/h1&gt;
&lt;p&gt;1.配置好Python环境及安装pip&lt;/p&gt;
&lt;p&gt;2.安装jupyter:&lt;/p
      
    
    </summary>
    
    
      <category term="机器学习" scheme="https://nymrli.top/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="环境配置" scheme="https://nymrli.top/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
      <category term="Python" scheme="https://nymrli.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>深度学习</title>
    <link href="https://nymrli.top/2019/09/19/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    <id>https://nymrli.top/2019/09/19/深度学习/</id>
    <published>2019-09-19T12:32:44.000Z</published>
    <updated>2019-09-23T12:54:21.238Z</updated>
    
    <content type="html"><![CDATA[<h1 id="深度学习神经网络"><a class="markdownIt-Anchor" href="#深度学习神经网络"></a> 深度学习——神经网络</h1><h2 id="构建网络的总原则"><a class="markdownIt-Anchor" href="#构建网络的总原则"></a> 构建网络的总原则</h2><p>一、增大网络容量，直到过拟命<br>二、采取措施抑制过拟合<br>三、继续增大网络容量，直到过拟合</p><h2 id="线性回归"><a class="markdownIt-Anchor" href="#线性回归"></a> 线性回归</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Commented out IPython magic to ensure Python compatibility.</span></span><br><span class="line"><span class="keyword">import</span> keras</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="comment"># %matplotlib inline</span></span><br><span class="line"></span><br><span class="line">x = np.linspace(<span class="number">0</span>,<span class="number">80</span>,<span class="number">50</span>)</span><br><span class="line">y = <span class="number">3</span>*x + np.random.randn(<span class="number">50</span>)*<span class="number">15</span></span><br><span class="line"><span class="comment"># print(x,y,sep='\n')</span></span><br><span class="line">plt.scatter(x,y)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> keras <span class="keyword">import</span> layers</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化模型</span></span><br><span class="line">model = keras.Sequential()</span><br><span class="line"><span class="comment"># 增加一层：全连接层</span></span><br><span class="line">model.add(layers.Dense(<span class="number">1</span>,input_dim=<span class="number">1</span>))</span><br><span class="line">model.summary()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译模型</span></span><br><span class="line">model.compile(optimizer=<span class="string">'adam'</span>,</span><br><span class="line">             loss=<span class="string">'mse'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 训练模型</span></span><br><span class="line"><span class="comment"># 方法一</span></span><br><span class="line">model.fit(x,y,epochs=<span class="number">2000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法二</span></span><br><span class="line"><span class="comment">#for setp in range(3001):</span></span><br><span class="line"><span class="comment">#    cost = model.train_on_batch(x_data,y_data)</span></span><br><span class="line"><span class="comment">#    if step % 500 == 0:</span></span><br><span class="line"><span class="comment">#        print('cost:',cost)</span></span><br><span class="line"><span class="comment">#w,b = model.layers[0].get_weights()</span></span><br><span class="line"></span><br><span class="line">predict_y = model.predict(x)</span><br><span class="line">plt.scatter(x,y,s=<span class="number">10</span>,c=<span class="string">'r'</span>)</span><br><span class="line">plt.plot(x,predict_y)</span><br></pre></td></tr></table></figure><p>非线性回归</p><h2 id="激活函数"><a class="markdownIt-Anchor" href="#激活函数"></a> 激活函数</h2><p>softmax</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mrow><mi>i</mi></mrow></msub><mo>=</mo><mfrac><mrow><msup><mi>e</mi><mrow><mi>i</mi></mrow></msup></mrow><mrow><msub><mo>∑</mo><mrow><mi>j</mi></mrow></msub><msup><mi>e</mi><mrow><mi>j</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">S_{i}=\frac{e^{i}}{\sum_{j} e^{j}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.97786em;"></span><span class="strut bottom" style="height:1.6300869999999998em;vertical-align:-0.6522269999999999em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.05764em;">S</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.05764em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.3449999999999999em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mop"><span class="op-symbol small-op mop" style="top:0.074995em;">∑</span><span class="vlist"><span style="top:0.30001em;margin-right:0.07142857142857144em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit">e</span><span class="vlist"><span style="top:-0.289em;margin-right:0.07142857142857144em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord"><span class="mord mathit">e</span><span class="vlist"><span style="top:-0.363em;margin-right:0.07142857142857144em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle uncramped"><span class="mord scriptscriptstyle uncramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></p><h3 id="sigmod"><a class="markdownIt-Anchor" href="#sigmod"></a> sigmod:</h3><h4 id="logistic"><a class="markdownIt-Anchor" href="#logistic"></a> logistic:</h4><blockquote><p>范围是[0,1]</p></blockquote><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>t</mi><mo>)</mo><mo>=</mo><mfrac><mrow><msup><mrow><mi mathvariant="normal">e</mi></mrow><mrow><mi>t</mi></mrow></msup></mrow><mrow><msup><mrow><mi mathvariant="normal">e</mi></mrow><mrow><mi>t</mi></mrow></msup><mo>+</mo><mn>1</mn></mrow></mfrac><mo>=</mo><mfrac><mrow><mn>1</mn></mrow><mrow><mn>1</mn><mo>+</mo><msup><mrow><mi mathvariant="normal">e</mi></mrow><mrow><mo>−</mo><mi>t</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">f(t)=\frac{\mathrm{e}^{t}}{\mathrm{e}^{t}+1}=\frac{1}{1+\mathrm{e}^{-t}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.9556399999999999em;"></span><span class="strut bottom" style="height:1.358971em;vertical-align:-0.403331em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class=""><span class="mord scriptstyle cramped"><span class="mord mathrm">e</span></span><span class="vlist"><span style="top:-0.289em;margin-right:0.07142857142857144em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class=""><span class="mord scriptstyle uncramped"><span class="mord mathrm">e</span></span><span class="vlist"><span style="top:-0.363em;margin-right:0.07142857142857144em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle uncramped"><span class="mord scriptscriptstyle uncramped"><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mrel">=</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span><span class="mbin">+</span><span class=""><span class="mord scriptstyle cramped"><span class="mord mathrm">e</span></span><span class="vlist"><span style="top:-0.289em;margin-right:0.07142857142857144em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord">−</span><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></p><h3 id="relu"><a class="markdownIt-Anchor" href="#relu"></a> reLU</h3><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>x</mi><mo>)</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo>(</mo><mn>0</mn><mo separator="true">,</mo><mi>x</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f(x)=max(0,x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">x</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord mathit">m</span><span class="mord mathit">a</span><span class="mord mathit">x</span><span class="mopen">(</span><span class="mord mathrm">0</span><span class="mpunct">,</span><span class="mord mathit">x</span><span class="mclose">)</span></span></span></span></p><h3 id="tanh"><a class="markdownIt-Anchor" href="#tanh"></a> tanh</h3><blockquote><p>跟sigmoid函数很像,但是范围是[-1,1],而不是[0,1],实质是sigmoid函数平移</p></blockquote><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>tanh</mi><mo>(</mo><mi>x</mi><mo>)</mo><mo>=</mo><mfrac><mrow><mi>sinh</mi><mi>x</mi></mrow><mrow><mi>cosh</mi><mi>x</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><msup><mi>e</mi><mrow><mi>x</mi></mrow></msup><mo>−</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup></mrow><mrow><msup><mi>e</mi><mrow><mi>x</mi></mrow></msup><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\tanh(x)=\frac{\sinh x}{\cosh x}=\frac{e^{x}-e^{-x}}{e^{x}+e^{-x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.939765em;"></span><span class="strut bottom" style="height:1.343096em;vertical-align:-0.403331em;"></span><span class="base textstyle uncramped"><span class="mop">tanh</span><span class="mopen">(</span><span class="mord mathit">x</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mop">cosh</span><span class="mord mathit">x</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mop">sinh</span><span class="mord mathit">x</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mrel">=</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord"><span class="mord mathit">e</span><span class="vlist"><span style="top:-0.289em;margin-right:0.07142857142857144em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathit">x</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit">e</span><span class="vlist"><span style="top:-0.289em;margin-right:0.07142857142857144em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord">−</span><span class="mord mathit">x</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord"><span class="mord mathit">e</span><span class="vlist"><span style="top:-0.363em;margin-right:0.07142857142857144em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle uncramped"><span class="mord scriptscriptstyle uncramped"><span class="mord mathit">x</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">−</span><span class="mord"><span class="mord mathit">e</span><span class="vlist"><span style="top:-0.363em;margin-right:0.07142857142857144em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle uncramped"><span class="mord scriptscriptstyle uncramped"><span class="mord">−</span><span class="mord mathit">x</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></p><p>TensorFlow中其他的函数：</p><p>●tf.nn.elu(x)： 指数线性单元； 如果输入小于0， 返回exp(x)-1； 否<br>则， 返回x；<br>●tf.softsign(x)： 返回x/(abs(x)+1)；<br>●tf.nn.bias_add(value,bias)： 增加一个bias到value。</p><h2 id="tensorflow"><a class="markdownIt-Anchor" href="#tensorflow"></a> Tensorflow:</h2><blockquote><ul><li>张量——数据  :</li><li>多维数组,阶:张量的维数</li><li>计算图——神经网络</li><li>搭建神经网络的计算过程,只搭建,不运算</li></ul><p>会话——执行计算图===&gt;优化线上的权重====&gt;权重</p></blockquote><p>神经网络实现过程</p><blockquote><p>1.准备数据集,提取特征,作为输入<br>2.搭建NN结构,从输入到输出==&gt;(NN前向传播)</p><p>3.大量特征数据喂给NN,迭代优化NN参数==&gt;(NN反向传播)</p><p>4.使用训练好的模型预测和分类</p></blockquote><p><strong>====&gt;八股:准备,前传,后传,迭代&lt;====</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x  = tf.placehold(tf.float32,shape=(<span class="number">1</span>,<span class="number">2</span>))   <span class="comment">#占位符</span></span><br><span class="line">sess.run(要计算的节点,feed_dict=&#123;x:[[<span class="number">1.3</span>,<span class="number">2.0</span>]]&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Init_op =  tf.global_variables_initializer()</span><br><span class="line">sess.run(Init_op)</span><br></pre></td></tr></table></figure><p>y = matmul(x,w1)`相乘</p><h1 id="tensorflow机器学习项目实战笔记"><a class="markdownIt-Anchor" href="#tensorflow机器学习项目实战笔记"></a> 《TensorFlow机器学习项目实战》笔记</h1><h2 id="张量"><a class="markdownIt-Anchor" href="#张量"></a> 张量</h2><p>TensorFlow基于张量数据管理。 张量是数学领域的概念， 并且被开<br>发为向量和矩阵的线性代数项的泛化。 一个张量就是一个张量类的实例， 是绑定了相关运算的一个<strong>特定类型的多维数组</strong>。</p><p>张量的属性</p><ul><li>有一个静态的类型和动态的维数</li><li>只有张量类型的对象才能在计算图的节点中<br>传递。</li><li>秩rank</li><li>数据类型type</li><li>形状shape</li></ul><h2 id="numpy数组到tensorflow张量"><a class="markdownIt-Anchor" href="#numpy数组到tensorflow张量"></a> numpy数组到TensorFlow张量</h2><p>TensorFlow与numpy是可互操作的， 通常调用eval()函数会返回<br>numpy对象。因为张量对象只是一个操作结果的符号化句柄， 所以它并不持有该操作的结果 ,必须使用eval()方法来获得实际的<br>值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf <span class="comment">#we import tensorflow</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np <span class="comment">#we import numpy</span></span><br><span class="line">sess = tf.Session() <span class="comment">#start a new Session Object</span></span><br><span class="line">x_data = np.array([[<span class="number">1.</span>,<span class="number">2.</span>,<span class="number">3.</span>],</span><br><span class="line">[<span class="number">3.</span>,<span class="number">2.</span>,<span class="number">6.</span>]]) <span class="comment"># 2x3 matrix</span></span><br><span class="line">x = tf.convert_to_tensor(x_data,</span><br><span class="line">dtype=tf.float32) <span class="comment">#Finally, we create the</span></span><br><span class="line"><span class="comment">#tensor, starting from the fload 3x matrix</span></span><br></pre></td></tr></table></figure><p>tf.convert_to_tensor``： 该方法将Python对象转化为tensor对象。 它的<br>输入可以是tensor对象、 numpy数组、 Python列表和Python标量。</p><p>数据流图(data flow graph)</p><blockquote><p>数据流图是完整的TensorFlow计算</p></blockquote><ul><li><p>节点(node) 表示操作(operation) ,实现数学运算， 同时也表示数据或变量的供给(feed) ， 或输出结果 。一旦其输入边缘上的所有张量都到位， 则开始异步地并行执行</p></li><li><p>边(edge) 表示各操作之间流通的数据 ,描述节点之间的输入/输出关系。 这些数据边缘专门传输张量</p></li></ul><p>计算图(computation graph)</p><blockquote><p>由用户在创建张量(tensor) 和操作(op</p></blockquote><p>有用的操作对象方法如下：<br>●tf.Operation.type： 返回操作的类型(例如， MatMul) ；<br>●tf.Operation.inputs： 返回表示操作的输入张量对象列表；<br>●tf.Graph.get_operations()： 返回计算图中的操作列表；<br>●tf.Graph.version： 返回计算图的版本信息。</p><h2 id="变量"><a class="markdownIt-Anchor" href="#变量"></a> 变量</h2><blockquote><p>正如字面意思所示,是个变化的量。在TensorFlow具体表现为需要更新的参数</p></blockquote><p>在大多数计算中， 会多次执行计算图。 大多数张量的生存周期不会<br>超过单次执行周期。 然而， 变量是一种特殊的操作， 它返回一个持久<br>的、 可变的张量的句柄， 存活于多次计算图执行之中。 对于TensorFlow<br>的机器学习应用， 模型的参数通常存储在变量中， 并且在运行模型的训<br>练阶段被更新。</p><h2 id="placehold"><a class="markdownIt-Anchor" href="#placehold"></a> placehold</h2><p>给之后喂给的数据占位</p><h2 id="会话"><a class="markdownIt-Anchor" href="#会话"></a> 会话</h2><p>客户端程序通过创建会话(Session)与TensorFlow系统交互。<br>Session对象是运行环境的表示。Session对象开始为空，当程序员创建不同的操作和张量时，它们将被自动添加到Session，直到Run方法被调用，才开始运算。<br>Run方法输入是需要计算的操作，以及一组可选的张量，用来代替图中某些节点的输出。<br>如果我们调用这个方法，并且有命名操作所依赖的操作，Session对象将执行所有这些操作，然后继续执行命名操作。<br>用以下简单的代码可以创建一个会话：<br>s=tf.Session()</p><p>矩阵运算</p><p>转置、 乘法、 获取行列式和逆</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tf. transpose(x). eval()<span class="comment"># Transpose</span></span><br><span class="line">tf. matmul(x,y). eval()<span class="comment"># Matrix</span></span><br><span class="line">tf. matrix determinant(floatx). eval()<span class="comment"># 行列式</span></span><br><span class="line">tf.matrix_inverse(floatx).eval() <span class="comment"># 求逆</span></span><br></pre></td></tr></table></figure><p>约简(reduction) 是一种跨维度张量操作， 计算结果比原张量缩减<br>一个维度。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf </span><br><span class="line">In[<span class="number">2</span>]: sess=tf. InteractiveSession()</span><br><span class="line"></span><br><span class="line">In[<span class="number">3</span>]:x=tf. constant([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],</span><br><span class="line">                    [<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>],</span><br><span class="line">                    [<span class="number">-1</span>,<span class="number">2</span>,<span class="number">-3</span>]])</span><br><span class="line"></span><br><span class="line">In[<span class="number">5</span>]: tf.reduce_prod(x, reduction_indices=<span class="number">1</span>). eval() <span class="comment"># reduce prod,行操作,0为列操作</span></span><br><span class="line">    <span class="number">0</span>ut[<span class="number">5</span>]: array([<span class="number">6</span>,<span class="number">6</span>,<span class="number">-6</span>], dtype=int32)</span><br><span class="line"></span><br><span class="line">In [<span class="number">6</span>]: tf. reduce_min(x, reduction_indices=<span class="number">1</span>). eval()<span class="comment"># reduce min</span></span><br><span class="line">    <span class="number">0</span>ut[<span class="number">6</span>]: array([<span class="number">1</span>,<span class="number">1</span>,<span class="number">-3</span>], dtype=int32)</span><br><span class="line"></span><br><span class="line">In [<span class="number">7</span>]: tf. reduce_max(x, reduction_indices=<span class="number">1</span>). eval()<span class="comment"># reduce max</span></span><br><span class="line">    <span class="number">0</span>ut[<span class="number">7</span>]: array([<span class="number">3</span>,<span class="number">3</span>,<span class="number">-1</span>], dtype=int32)</span><br><span class="line"></span><br><span class="line">In [<span class="number">8</span>]: tf. reduce_mean(x, reduction indices=<span class="number">1</span>). eval()<span class="comment"># reduce mean</span></span><br><span class="line">    <span class="number">0</span>ut[<span class="number">8</span>]: array([ <span class="number">2</span>,<span class="number">2</span>,<span class="number">-2</span>], dtype=int32) </span><br><span class="line">In[<span class="number">9</span>]: tf. reduce_all(boolean_tensor, reduction_indices=<span class="number">1</span>). eval()<span class="comment"># reduce all </span></span><br><span class="line">    Out[<span class="number">9</span>]: array([ <span class="keyword">False</span>, <span class="keyword">False</span>, <span class="keyword">False</span>], dtype=bool)</span><br><span class="line"></span><br><span class="line">In [<span class="number">10</span>]: tf. reduce_any(boolean_tensor,</span><br></pre></td></tr></table></figure><p>序列实用程序包括诸如argmin和argmax(显示维度的最小和最大<br>值) ， listdiff(显示列表之间的交集的补码) ， where(显示张量上的真<br>实值的索引) 和unique(在列表上去除重复的元素) 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf sess=tf. InteractiveSession()</span><br><span class="line">x=tf. constant([[<span class="number">2</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">-5</span>],</span><br><span class="line">…:[<span class="number">0</span>,<span class="number">3</span>,<span class="number">-2</span>,<span class="number">5</span>],……:[<span class="number">4</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">3</span>],…:[<span class="number">6</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">0j</span>j)</span><br><span class="line">listx=tf. constant([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>])</span><br><span class="line">listy=tf. constant([<span class="number">4</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">9</span>])</span><br><span class="line">boolx=tf. constant([[ <span class="keyword">True</span>, <span class="keyword">False</span>],</span><br><span class="line">[ <span class="keyword">False</span>, <span class="keyword">True</span>]])</span><br><span class="line">                             </span><br><span class="line">tf. argmin(x,<span class="number">1</span>). eval()<span class="comment"># Position of the maximum value of columns</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>array([<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>])</span><br><span class="line">                             </span><br><span class="line">tf. argmax(x,<span class="number">1</span>). eval()<span class="comment"># Position of the minimum value of rows</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>array([<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">0</span>])</span><br><span class="line">                             </span><br><span class="line">tf. listdiff(listx, listy)[<span class="number">0</span>]. eval()<span class="comment">#List differences</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">7</span>], dtype=int32)</span><br><span class="line">                             </span><br><span class="line">tf.where(boolx). eval()<span class="comment"># Show true values</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>array([[o,<span class="number">0</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>]])</span><br><span class="line">                             </span><br><span class="line">tf. unique(listx)[<span class="number">0</span>]. eval()<span class="comment"># Unique values in list</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>], dtype=int32)</span><br></pre></td></tr></table></figure><p>形状变换 :</p><p>例如squeeze和expand_dims。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf </span><br><span class="line">In [<span class="number">2</span>]: sess=tf. InteractiveSession()</span><br><span class="line">In [<span class="number">3</span>]:x=tf. constant([[<span class="number">2</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">-5</span>],</span><br><span class="line">                    ……:[<span class="number">0</span>,<span class="number">3</span>,<span class="number">-2</span>,<span class="number">5</span>],</span><br><span class="line">                    …:[<span class="number">4</span>,<span class="number">3153</span>,</span><br><span class="line">                    …:[<span class="number">6</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">0</span>]])</span><br><span class="line">tf. shape(x). eval()<span class="comment"># Shape of the tensor</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>array([<span class="number">4</span>,<span class="number">4</span>], dtype=int32)</span><br><span class="line">tf. size(x). eval()<span class="comment"># size of the tensor</span></span><br><span class="line">&gt;&gt;&gt;<span class="number">16</span></span><br><span class="line">tf. rank(x). eval()<span class="comment"># rank of the tensor</span></span><br><span class="line">&gt;&gt;&gt;<span class="number">2</span></span><br><span class="line">tf. reshape(x,[<span class="number">8</span>,<span class="number">2</span>]). eval()<span class="comment">#</span></span><br><span class="line">converting to a <span class="number">10</span>×<span class="number">2</span> matrix</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">array([[ <span class="number">2</span>,<span class="number">5</span>],</span><br><span class="line">[<span class="number">3</span>,<span class="number">-5</span>],</span><br><span class="line">[<span class="number">0</span>,<span class="number">3</span>],</span><br><span class="line">[<span class="number">-2</span>,<span class="number">5</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">4</span>],</span><br><span class="line">[<span class="number">3</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">5</span>,<span class="number">3</span>],</span><br><span class="line">[<span class="number">6</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">4</span>,<span class="number">0</span>]], dtype=int32)</span><br><span class="line">tf. squeeze(x). eval()<span class="comment"># squeezing</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>array([[ <span class="number">2</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">-5</span>],</span><br><span class="line">[<span class="number">0</span>,<span class="number">3</span>,<span class="number">-2</span>,<span class="number">5</span>],</span><br><span class="line"><span class="number">4</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">3</span>],</span><br><span class="line">[<span class="number">6</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">0</span>]], dtype=int32)</span><br><span class="line">tf. expand_dims(x,<span class="number">1</span>). eval()<span class="comment"># Expanding dims</span></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">array([[[ <span class="number">2</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">-5</span>]],</span><br><span class="line">[[ <span class="number">0</span>,<span class="number">3</span>,<span class="number">-2</span>,<span class="number">5</span>]],</span><br><span class="line">[[<span class="number">4</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">3</span>]],</span><br><span class="line">[i <span class="number">6</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">0j</span>ji, dtype=int32)</span><br></pre></td></tr></table></figure><p>切片(slicing) 和连接(joining) :提取矩阵切片、 拆分、 添加填充(add padding) ， 以及打包(pack) 和解包(unpack) 行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf sess=tf. InteractiveSession()</span><br><span class="line">t_matrix=tf. constant([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],</span><br><span class="line">                    ……:[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],</span><br><span class="line">                    …:[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]])</span><br><span class="line">t_array=tf. constant([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">5</span>])</span><br><span class="line">t array2=tf. constant([<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]) tf. </span><br><span class="line"></span><br><span class="line">slice(t _matrix,[<span class="number">1</span>,<span class="number">1</span>],[<span class="number">2</span>,<span class="number">2</span>]). eval()</span><br><span class="line"><span class="comment"># cutting an slice</span></span><br><span class="line">&gt;&gt;&gt;array([[<span class="number">5</span>,<span class="number">6</span>],</span><br><span class="line">[<span class="number">8</span>,<span class="number">9</span>]], dtype=int32)</span><br><span class="line">tf. split(<span class="number">0</span>,<span class="number">2</span>,t_array)<span class="comment"># splitting the array in two</span></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">[&lt;tf. Tensor <span class="string">' split:0'</span> shape=(<span class="number">4</span>,) dtype=int32&gt;,</span><br><span class="line">&lt;tf. Tensor <span class="string">' split:1'</span> shape=(<span class="number">4</span>,) dtype=int32&gt;]</span><br><span class="line"></span><br><span class="line">tf. tile([<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>]). eval()<span class="comment"># tiling this little tensor 3 times重复</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>], dtype=int32)</span><br><span class="line"></span><br><span class="line">tf. pad(t_matrix,[[<span class="number">0</span>,<span class="number">1</span>],[<span class="number">2</span>,<span class="number">1</span>]]). evai()<span class="comment">#padding</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>array(i[o,o,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">0</span>],[o<span class="number">.0</span><span class="number">.7</span><span class="number">.8</span><span class="number">.9</span><span class="number">.01</span>.</span><br><span class="line">[o,o,o,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]], dtype=int32)</span><br><span class="line"></span><br><span class="line">tf. concat(<span class="number">0</span>,[t_array, t_array2]). eval()<span class="comment"># concatenating list</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>], dtype=int32)</span><br><span class="line"></span><br><span class="line">tf. pack([t_array,t_array2]). eval()<span class="comment"># packing 拼接</span></span><br><span class="line"><span class="number">0</span>ut[<span class="number">11</span>]:array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">5</span>],</span><br><span class="line">[<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]], dtype=int32)</span><br><span class="line">    </span><br><span class="line">sess.run(tf. unpack(t_matrix))<span class="comment">#Unpacking, we need the run method to view the tensors</span></span><br><span class="line">&gt;&gt;&gt;[array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],dtype=int32),</span><br><span class="line">array([<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],dtype=int32),</span><br><span class="line">array([<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>];dtype=int32)</span><br><span class="line">    </span><br><span class="line">In [<span class="number">13</span>]: tf. reverse(t_matrix,</span><br><span class="line">[ <span class="keyword">False</span>, <span class="keyword">True</span>]). eval()<span class="comment"># Reverse matrix,行不变,列反转</span></span><br><span class="line"><span class="number">0</span>ut[<span class="number">13</span>]: array([[<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">6</span>,<span class="number">5</span>,<span class="number">41</span>;</span><br><span class="line"><span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>]], dtype=int32)</span><br></pre></td></tr></table></figure><p>从磁盘读取信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列表格式——CSV </span></span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line">sess=tf.Session()</span><br><span class="line">filename_queue= tf.train.string_input_producer(</span><br><span class="line">tf.train.match_filenames_once(<span class="string">"./*.csv"</span>),</span><br><span class="line">shuffle=<span class="keyword">True</span>)</span><br><span class="line">reader=tf.TextLineReader(skip_header_lines=<span class="number">1</span>)</span><br><span class="line">key, value=reader.read(filename_queue)</span><br><span class="line">record_defaults=[[<span class="number">0.</span>],[<span class="number">0.</span>],[<span class="number">0</span>],[<span class="number">0.</span>],[<span class="string">""</span>]]</span><br><span class="line">col1, col2, col3, col4, col5=</span><br><span class="line">tf.decode_csv(value,</span><br><span class="line">record_defaults=record_defaults)<span class="comment"># Convert CSV</span></span><br><span class="line">records to tensors.Each</span><br><span class="line"><span class="comment"># column maps to one tensor.</span></span><br><span class="line">features=tf.pack([ col1, col2, col3, col4])</span><br><span class="line">tf.initialize_all_variables().run(session=sess)</span><br><span class="line">coord=tf.train.Coordinator()</span><br><span class="line">threads=</span><br><span class="line">tf.train.start_queue_runners(coord=coord, sess=sess)</span><br><span class="line"><span class="keyword">for</span> iteration <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">5</span>):</span><br><span class="line">example=sess.run([ features])</span><br><span class="line">print(example)</span><br><span class="line">coord.request_stop()</span><br><span class="line">coord.join(threads)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载和处理图像</span></span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf sess=tf.Session()</span><br><span class="line">filename_queue=</span><br><span class="line">tf.train.string_input_producer(tf.train.match_filenames_once(<span class="string">'./blue_jay.jpg'</span>))</span><br><span class="line">reader=tf.WholeFileReader()</span><br><span class="line">key, value= reader.read(filename_queue)</span><br><span class="line">image=tf.image.decode_jpeg(value)</span><br><span class="line">fliplmageUpDown=tf.image.encode _jpeg(tf.image.fli </span><br><span class="line">p_up_down(image))<span class="comment"># 获得上下翻转的图片                                   </span></span><br><span class="line">fliplmageleftRight=tf.image.encode_jpeg(tf.image.flip_left_right(image))<span class="comment"># 获得左右翻转的图片    </span></span><br><span class="line">tf.initialize_all_variables().run(session=sess)</span><br><span class="line">coord=tf.train.Coordinator()</span><br><span class="line">threads=</span><br><span class="line">tf.train.start_queue_runners(coord=coord, sess=sess)</span><br><span class="line">example=sess.run(fliplmageLeftRight)</span><br><span class="line"><span class="keyword">print</span> example file=open (<span class="string">"flippedUpDown.jpg"</span>,<span class="string">"wb+"</span>)</span><br><span class="line">file.write (fliplmageUpDown.eval(session=sess))<span class="comment"># 写入上下翻转图</span></span><br><span class="line">file.close()</span><br><span class="line">file=open (<span class="string">"flippedLeftRight.jpg"</span>,<span class="string">"wb+"</span>)<span class="comment"># 写入左右翻转图</span></span><br><span class="line">file.write</span><br><span class="line">(fliplmageLeftRight.eval(session=sess))</span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><p>流程:</p><ol><li>创建一个文件队列对象:<code>tf.train.string_input_producer(tf.train.match_filenames_once('xxx'))</code></li><li>创建一个reader对象</li><li>读取,并解码</li><li>提取特征</li><li><code>initialize_all_variables</code>-&gt;<code>Coordinator</code>-&gt;<code>start_queue_runners</code>-&gt;run</li></ol><h2 id="logit函数"><a class="markdownIt-Anchor" href="#logit函数"></a> logit函数</h2><p>\operatorname{logit}(\mathrm{p})=\log \left(\frac{\mathrm{p}}{1-\mathrm{p}}\right)</p><p>该函数实现了从区间[0,1]到区间(-∞,+∞)之间的映射。 那么我们只要将y用一个输入的线性函数替换， 那么就实现了输入的线性变化和区间[0,1]之间的映射。</p><p><img src="/2019/09/19/深度学习/E:%5Chexo%5Csource_posts%5C%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%5Clogit.jpg" alt="logit"></p><h2 id="logistic函数"><a class="markdownIt-Anchor" href="#logistic函数"></a> logistic函数</h2><p>对数几率函数的逆函数</p><p>\operatorname{logit}^{-1}(\alpha)=\operatorname{logistic}(\alpha)=\frac{1}{1+\exp (-\alpha)}=\frac{\operatorname{ep}(\alpha)}{\exp (\alpha)+1}</p><p>这是一个Sigmoid函数。<br>Logistic函数将使得我们能够在我们的回归任务表示为二项选择。</p><p><img src="/2019/09/19/深度学习/E:%5Chexo%5Csource_posts%5C%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%5Csigmoid.jpg" alt="sigmoid"></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi><mo>(</mo><mi>t</mi><mo>)</mo><mo>=</mo><mfrac><mrow><msup><mrow><mi mathvariant="normal">e</mi></mrow><mrow><mi>t</mi></mrow></msup></mrow><mrow><msup><mrow><mi mathvariant="normal">e</mi></mrow><mrow><mi>t</mi></mrow></msup><mo>+</mo><mn>1</mn></mrow></mfrac><mo>=</mo><mfrac><mrow><mn>1</mn></mrow><mrow><mn>1</mn><mo>+</mo><msup><mrow><mi mathvariant="normal">e</mi></mrow><mrow><mo>−</mo><mi>t</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\sigma(t)=\frac{\mathrm{e}^{t}}{\mathrm{e}^{t}+1}=\frac{1}{1+\mathrm{e}^{-t}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.9556399999999999em;"></span><span class="strut bottom" style="height:1.358971em;vertical-align:-0.403331em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class=""><span class="mord scriptstyle cramped"><span class="mord mathrm">e</span></span><span class="vlist"><span style="top:-0.289em;margin-right:0.07142857142857144em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class=""><span class="mord scriptstyle uncramped"><span class="mord mathrm">e</span></span><span class="vlist"><span style="top:-0.363em;margin-right:0.07142857142857144em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle uncramped"><span class="mord scriptscriptstyle uncramped"><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mrel">=</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span><span class="mbin">+</span><span class=""><span class="mord scriptstyle cramped"><span class="mord mathrm">e</span></span><span class="vlist"><span style="top:-0.289em;margin-right:0.07142857142857144em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord">−</span><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></p><p>一般的解释就是t为一个独立变量， 该函数将t映射到区间[0,1]之<br>间。 但是我们提升了这个模型， 将t转变为变量x的一个线性映射(当x<br>是一个多变量的向量时， t就是该向量中各个元素的线性组合) 。</p><p>我们可以将t表示如下：<br>t=wx+b<br>我们就能够得到以下方程 \operatorname{logit}(\mathrm{p})=\operatorname{In}\left(\frac{p}{1-p}\right)=w x+b</p><p>对于所有的元素， 我们计算了回归方程， 得出如下概率。 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>p</mi></mrow><mo>^</mo></mover><mo>=</mo><mfrac><mrow><msup><mrow><mi mathvariant="normal">e</mi></mrow><mrow><msub><mi>β</mi><mrow><mn>0</mn></mrow></msub><mo>+</mo><msub><mi>β</mi><mrow><mn>1</mn></mrow></msub><mi>x</mi></mrow></msup></mrow><mrow><mn>1</mn><mo>+</mo><msup><mrow><mi mathvariant="normal">e</mi></mrow><mrow><msub><mi>β</mi><mrow><mn>0</mn></mrow></msub><mo>+</mo><msub><mi>β</mi><mrow><mn>1</mn></mrow></msub><mi>x</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\hat{p}=\frac{\mathrm{e}^{\beta_{0}+\beta_{1} x}}{1+\mathrm{e}^{\beta_{0}+\beta_{1} x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.99532em;"></span><span class="strut bottom" style="height:1.436116em;vertical-align:-0.44079599999999997em;"></span><span class="base textstyle uncramped"><span class="mord accent"><span class="vlist"><span style="top:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">p</span></span></span><span style="top:0em;margin-left:0.16668em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="accent-body"><span>^</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.38246499999999994em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span><span class="mbin">+</span><span class=""><span class="mord scriptstyle cramped"><span class="mord mathrm">e</span></span><span class="vlist"><span style="top:-0.32177857142857147em;margin-right:0.07142857142857144em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord"><span class="mord mathit" style="margin-right:0.05278em;">β</span><span class="vlist"><span style="top:0.29964em;margin-right:0.1em;margin-left:-0.05278em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptscriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathrm">0</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:0.05278em;">β</span><span class="vlist"><span style="top:0.29964em;margin-right:0.1em;margin-left:-0.05278em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptscriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">x</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class=""><span class="mord scriptstyle uncramped"><span class="mord mathrm">e</span></span><span class="vlist"><span style="top:-0.363em;margin-right:0.07142857142857144em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle uncramped"><span class="mord scriptscriptstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.05278em;">β</span><span class="vlist"><span style="top:0.29964em;margin-right:0.1em;margin-left:-0.05278em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptscriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathrm">0</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:0.05278em;">β</span><span class="vlist"><span style="top:0.29964em;margin-right:0.1em;margin-left:-0.05278em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptscriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">x</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></p><p>线性函数的参数起什么作用呢？ 它们可以改变直线的斜率和<br>Sigmoid函数零的位置。 通过调整线性方程中的参数， 来缩小预测值与<br>真实值之间的差距。</p><p>Logistic函数的属性<br>函数空间中每个曲线都可以被描述成它所应用的可能目标。 具体到Logistic函数：<br>●事件的可能性p依赖于一个或者多个变量。 比如， 根据之前的资<br>历,预测获奖的可能性。<br>●对于特定的观察， 估算事件发生的可能性。<br>●预测改变独立变量对二项响应的影响。<br>●通过计算可能性， 将观测分配到某个确定的类。</p><p>损失函数</p><p>loss <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>=</mo><mo>−</mo><msub><mo>∑</mo><mrow><mi>i</mi></mrow></msub><msub><mi>y</mi><mrow><mi>i</mi></mrow></msub><mo>∙</mo><mi>log</mi><mrow><mo fence="true">(</mo><mi>y</mi><mi>p</mi><mi>r</mi><mi>e</mi><msub><mi>d</mi><mrow><mi>i</mi></mrow></msub><mo fence="true">)</mo></mrow><mo>+</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>y</mi><mrow><mi>i</mi></mrow></msub><mo fence="true">)</mo></mrow><mo>∙</mo><mi>log</mi><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><mi>y</mi><mi>p</mi><mi>r</mi><mi>e</mi><msub><mi>d</mi><mrow><mi>i</mi></mrow></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">=-\sum_{i} y_{i} \bullet \log \left(y p r e d_{i}\right)+\left(1-y_{i}\right) \bullet \log \left(1-y p r e d_{i}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1.0500099999999999em;vertical-align:-0.30001em;"></span><span class="base textstyle uncramped"><span class="mrel">=</span><span class="mord">−</span><span class="mop"><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">∑</span><span class="vlist"><span style="top:0.30001em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">∙</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mord mathit">p</span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathit">e</span><span class="mord"><span class="mord mathit">d</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span><span class="mbin">+</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord mathrm">1</span><span class="mbin">−</span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span><span class="mbin">∙</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord mathrm">1</span><span class="mbin">−</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mord mathit">p</span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathit">e</span><span class="mord"><span class="mord mathit">d</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span></span></span></span></p><p>该损失函数的主要性质就是偏爱相似行为， 而当误差超过0.5的时<br>候， 惩罚会急剧增加。</p><p>多类分类应用——Softmax回归</p><p>当我们面对多于二类的情况， 通常有两种方法： 一对多和一对所<br>有。<br>●第一类技术计算多个模型。 针对每个类都计算一个“一vs所有<br>(one against all) ”的概率。<br>●第二类技术只计算出一个概率集合， 每个概率表示属于其中某一<br>类的可能性。<br>●第二种技术的输出是Softmax回归格式， 这是Logistic回归对于n类<br>的泛化。</p><p>损失函数</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo>=</mo><msub><mo>∑</mo><mrow><mi>i</mi></mrow></msub><msub><mo>∑</mo><mrow><mi>c</mi></mrow></msub><msub><mi>y</mi><mrow><mi>c</mi></mrow></msub><mo>∙</mo><mi>log</mi><mrow><mo fence="true">(</mo><mi>y</mi><mi>p</mi><mi>r</mi><mi>e</mi><msub><mi>d</mi><mrow><mi>c</mi></mrow></msub><mo fence="true">)</mo></mrow><mo>=</mo><msub><mo>∑</mo><mrow><mi>i</mi></mrow></msub><msub><mo>∑</mo><mrow><mi>c</mi></mrow></msub><msub><mi>y</mi><mrow><mi>c</mi></mrow></msub><mo>∙</mo><mfrac><mrow><msup><mi>e</mi><mrow><mo>−</mo><msub><mi>x</mi><mrow><mi>c</mi></mrow></msub></mrow></msup></mrow><mrow><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>c</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mi>log</mi><mrow><mo fence="true">(</mo><msup><mi>e</mi><mrow><mo>−</mo><msub><mi>x</mi><mrow><mi>j</mi></mrow></msub></mrow></msup><mo fence="true">)</mo></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">loss=\sum_{i} \sum_{c} y_{c} \bullet \log \left(y p r e d_{c}\right)=\sum_{i} \sum_{c} y_{c} \bullet \frac{e^{-x_{c}}}{\sum_{j=0}^{c-1} \log \left(e^{-x_{j}}\right)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.939765em;"></span><span class="strut bottom" style="height:1.749765em;vertical-align:-0.81em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mord mathit">o</span><span class="mord mathit">s</span><span class="mord mathit">s</span><span class="mrel">=</span><span class="mop"><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">∑</span><span class="vlist"><span style="top:0.30001em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mop"><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">∑</span><span class="vlist"><span style="top:0.30001em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">c</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">c</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">∙</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mord mathit">p</span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathit">e</span><span class="mord"><span class="mord mathit">d</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">c</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span><span class="mrel">=</span><span class="mop"><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">∑</span><span class="vlist"><span style="top:0.30001em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mop"><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">∑</span><span class="vlist"><span style="top:0.30001em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">c</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">c</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">∙</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.5075000000000001em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mop"><span class="op-symbol small-op mop" style="top:0.074995em;">∑</span><span class="vlist"><span style="top:0.2862857142857143em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mrel">=</span><span class="mord mathrm">0</span></span></span></span><span style="top:-0.4043214285714285em;margin-right:0.07142857142857144em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathit">c</span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="minner scriptstyle cramped"><span class="style-wrap reset-scriptstyle textstyle uncramped" style="top:0.07500000000000001em;">(</span><span class="mord"><span class="mord mathit">e</span><span class="vlist"><span style="top:-0.47143571428571435em;margin-right:0.07142857142857144em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord">−</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.31472000000000006em;margin-right:0.1em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptscriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-scriptstyle textstyle uncramped" style="top:0.07500000000000001em;">)</span></span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord"><span class="mord mathit">e</span><span class="vlist"><span style="top:-0.363em;margin-right:0.07142857142857144em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle uncramped"><span class="mord scriptscriptstyle uncramped"><span class="mord">−</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.1em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptscriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathit">c</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></p><h2 id="感知器算法"><a class="markdownIt-Anchor" href="#感知器算法"></a> 感知器算法</h2><blockquote><p>简单来说就是一个二元分类函数</p></blockquote><p>简化版的感知器算法如下：<br>① 以一个随机分布初始化权值和偏差(通常比较小) ；<br>② 选择一个输入向量， 并将其放入神经网络中；<br>③ 将输入与权重相乘， 并加上偏差， 计算网络的输出y’；<br>④ 感知器的函数如下：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>x</mi><mo>)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable><mtr><mtd><mrow><mrow><mn>1</mn></mrow></mrow></mtd><mtd><mrow><mrow><mi>i</mi><mi>f</mi><mspace width="0.277778em"></mspace><mi>w</mi><mo>⋅</mo><mi>x</mi><mo>+</mo><mi>b</mi><mo>&gt;</mo><mn>0</mn></mrow></mrow></mtd></mtr><mtr><mtd><mrow><mrow><mn>0</mn></mrow></mrow></mtd><mtd><mrow><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>e</mi></mrow></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">f(x)=\left\{\begin{array}{ll}{1} &amp; {if \; w \cdot x+b&gt;0} \\ {0} &amp; otherwise \end{array}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.45em;"></span><span class="strut bottom" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">x</span><span class="mclose">)</span><span class="mrel">=</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist"><span style="top:-0.6099999999999999em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathrm">1</span></span></span></span><span style="top:0.5900000000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathrm">0</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist"><span style="top:-0.6099999999999999em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mord mspace thickspace"></span><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="mbin">⋅</span><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord mathit">b</span><span class="mrel">&gt;</span><span class="mord mathrm">0</span></span></span></span><span style="top:0.5900000000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord textstyle uncramped"><span class="mord mathit">o</span><span class="mord mathit">t</span><span class="mord mathit">h</span><span class="mord mathit">e</span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="mord mathit">i</span><span class="mord mathit">s</span><span class="mord mathit">e</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></p><p>⑤ 如果y′≠y， 将权重wi加上Δw=yxi；</p><p>⑥ 返回第②步。</p><h2 id="tensorflow中损失优化方法"><a class="markdownIt-Anchor" href="#tensorflow中损失优化方法"></a> TensorFlow中损失优化方法</h2><p>●tf.train.GradientDescentOptimizer(learning_rate, use_locking,<br>name)： 原始梯度下降方法， 唯一参数就是学习率。<br>●tf.train.AdagradOptimizer： 自适应调整学习率， 累加历史梯度的平<br>方， 作为分母， 防止有些方向的梯度值过大， 提高优化效率， 善于处理<br>稀疏梯度。<br>●tf.train.AdadeltaOptimizer： 扩展AdaGrad优化方法， 只累加最近的<br>梯度值， 而不对整个历史上的梯度值进行累加。<br>●tf.train.AdamOptimizertf.train.AdamOptimizer． (learningrate, beta1,<br>beta2, epsilon, use locking, name)： 梯度的一阶矩估计和二阶矩估计动态<br>调整每个参数的学习率。 Adam是自适应矩估计(Adaptive Moment<br>Estimation) 的首字母缩写。</p><h2 id="sklearn预处理函数"><a class="markdownIt-Anchor" href="#sklearn预处理函数"></a> Sklearn预处理函数</h2><p>我们看一些下面的Sklearn数据预处理函数：<br>●preprocessing.StandardScaler()： 数据正规化(Normalization) 是机<br>器学习估计的一个常见要求， 为了模型能更好地收敛， 我们通常会将数<br>据集预处理到一个零均值单位方差的高斯状分布。 通常， 我们会将数据<br>的各个维度都减去它的均值， 然后乘上一个非零的数。 这个非零的数就<br>是数据集的标准差。 对于该任务， 我们直接使用StandardScaler， 它已经<br>实现了我们上面提到的操作。 它也保留了变换操作， 让我们可以直接用<br>在测试集上。<br>●StandardScaler .fit_transform()： 将数据调整到所需要的形式。<br>StandardScaler对象会存储数据变化的变量， 这样我们可以把数据解正规<br>化到原先的格式。<br>●cross_validation.train_test_split： 该方法能够将数据集分割成训练<br>集和测试集。 我们只需要提供两者的比例， 该方法能够自动帮我们处<br>理</p><h2 id="书籍推荐"><a class="markdownIt-Anchor" href="#书籍推荐"></a> 书籍推荐</h2><p>了解tensorflow基础对象——《面向机器智能的tensorflow实践》</p><p>进阶操作tensor对象——《》</p><h2 id="hello-tensorflow"><a class="markdownIt-Anchor" href="#hello-tensorflow"></a> Hello TensorFlow</h2><blockquote><p><code>import tensorflow as tf</code>如果报错dtype…可以降低numpy的版本(从1.16-&gt;1.17)</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">% matplotlib inline </span><br><span class="line">a=tf.random_normal([<span class="number">2</span>,<span class="number">20</span>])</span><br><span class="line">sess=tf.Session()</span><br><span class="line">out=sess.run(a)</span><br><span class="line">x,y=out</span><br><span class="line">plt.scatter(x,y)</span><br><span class="line">plt. show()</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">%matplotlib inline</span></span><br><span class="line"><span class="string">这是一条专门的命令，用于通知笔记本将matplotib图表直接显示在浏览器中。</span></span><br><span class="line"><span class="string">下面逐行分析其余代码，如果你不理解某些术语，请不必担心，后面章节还会一一进行讲解：</span></span><br><span class="line"><span class="string">1)用TensorFlow定义一个由随机数构成的2×20的矩阵，并将其赋给变量a。</span></span><br><span class="line"><span class="string">2)启动TensorFlow Session，并将其赋予一个ses对象。</span></span><br><span class="line"><span class="string">3)用sess.run()方法执行对象a，并将输出(NumPy数组)赋给ot。</span></span><br><span class="line"><span class="string">4)将这个2×20的矩阵划分为两个1×10的向量x和y。</span></span><br><span class="line"><span class="string">5)利用pyplot模块绘制散点图，x对应横轴，y对应纵轴。</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><h3 id="sesstfsession"><a class="markdownIt-Anchor" href="#sesstfsession"></a> sess=tf.Session()</h3><p>Session对象在运行时负责对数据流图进行监督，并且是运行数据流图的主要接口。在本练习之后，我们还将对Session对象进行更为深入的探讨，但现在只需了解在TensorFow中，如果希望运行自己的代码，必须定义一个Session对象。上述代码将Session对象赋给了变量sess，以便后期能够对其进行访问。</p><ul><li>target指定了所要使用的执行引擎。对于大多数应用，该参数取为默认的空字符串。在分布式设置中使用Session对象时，该参数用于连接不同的tftrain Server实例(本书后续章节将对此进行介绍)。</li><li>graph参数指定了将要在Session对象中加载的Graph对象，其默认值为None，表示将使用当前默认数据流图。当使用多个数据流图时，最好的方式是显式传入你希望运行的Graph对象(而非在一个with语句块内创建Session对象)。</li><li>config参数允许用户指定配置Session对象所需的选项，如限制CPU或GPU的使用数目，为数据流图设置优化参数及日志选项等。</li></ul><p>Sesionnn()方法接收一个参数<strong>fetches</strong>，以及其他三个可选参数：<strong>feed_dict</strong>、options和rnn_metadata。本书不打算对options和run_metadata进行介绍，因为它们尚处在实验阶段(因此以后很可能会有变动)，且目前用途非常有限，但理解ed_dict非常重要，下文将对其进行讲解。</p><p>1.fetches参数<br>fetches参数接收任意的数据流图元素(Op或Tensor对象)，后者指定了用户希望执行的对象。如果请求对象为Tensor对象，则rnun()的输出将为一NumPy数组：如果请求对象为一个Op，则输出将为None。</p><p>除了利用fetches获取Tensor对象输出外，还将看到这样的例子：有时也会赋予ftches一个指向某个Op的句柄，这是在运行中的一种有价值的用法。<br>tf.initialize_all_variables()使是一个这样的例子，它会准备将要使用的所有TensorFow Variable对象(本章稍后将介绍Variable对象)。我们仍然将该Op传给etches参数，但Session.run()的结果将为None：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">执行初始化Variable对象所需的计算，但返回值为None sess.run(tf.initialize_all_variables())</span><br></pre></td></tr></table></figure><p>2.feed_dict参数</p><p>参数feed_dict用于覆盖数据流图中的Tensor对象值，它需要Python字典对象作为输入。字典中的“键”为指向应当被覆盖的Tensor对象的句柄，而字典的“值”可以是数字、字符串、列表或NumPy数组(之前介绍过)。这些“值”的类型必须与Tensor的“键”相同，或能够转换为相同的类型。下面通过一些代码来展示如何利用feed_dict重写之前的数据流图中a的值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">inport tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="comment">#创建Op、Tensor对象等(使用默认的数据流图)</span></span><br><span class="line">a=tf.add(<span class="number">2</span>，<span class="number">5</span>)</span><br><span class="line">b=tf.mul(a，<span class="number">3</span>)</span><br><span class="line"><span class="comment">#利用默认的数据流图启动一个Session对象</span></span><br><span class="line">sess=tf.Session()</span><br><span class="line"><span class="comment">#定义一个字典，比如将a的值替换为15</span></span><br><span class="line">replace_dict=&#123;a：<span class="number">15</span>&#125;</span><br><span class="line"><span class="comment">#运行Session对象，将replace_dict赋给feed_dict</span></span><br><span class="line">sess.run(b，feed_dict=replace_dict)<span class="comment">#返回45</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">请注意，即便a的计算结果通常为7，我们传给eeddict的字典也会将它替换为15。在相当多的场合中，fed_dict都极为有用。由于张量的值是预先提供的，数据流图不再需要对该张量的任何普通依赖节点进行计算。这意味着如果有一个规模较大的数据流图，并希望用一些虚构的值对某些部分进行测试，TensorFlow将不会在不必要的计算上浪费时间。对于指定输入值，eed_dict也十分有用，在稍后的占位符一节中我们将对此进行介绍。</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><h3 id="tfplacehold"><a class="markdownIt-Anchor" href="#tfplacehold"></a> tf.placehold</h3><p>之前定义的数据流图并未使用真正的“输入”，它总是使用相同的数值5和3。我们真正希望做的是从客户那里接收输入值，这样便可对数据流图中所描述的变换<br>以各种不同类型的数值进行复用，借助“占位符”可达到这个目的。正如其名称所预示的那样，占位符的行为与Tesor对象一致，但在创建时无须为它们指定具体的数值。它们的作用是为运行时即将到来的某个Tensor对象预留位置，因此实际上变成了“输入”节点。利用tfplaceholderOp可创建占位符：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line">inport numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment">#创建一个长度为2、数据类型为int32的占位向量</span></span><br><span class="line">a=tf.placeholder(tf.int32，shape=[<span class="number">2</span>]，name=<span class="string">"my_input"</span>)</span><br><span class="line"><span class="comment">#将该占位向量视为其他任意Tensor对象，加以使用</span></span><br><span class="line">b=tf.reduce_prod(a，name=<span class="string">"prod_b"</span>)</span><br><span class="line">c=tf.reduce_sum(a，name=<span class="string">"sum_c"</span>)</span><br><span class="line"><span class="comment">#完成数据流图的定义</span></span><br><span class="line">d=tf.add(b，c，name=<span class="string">"add_d"</span>)</span><br></pre></td></tr></table></figure><p>调用tf.placehoder()时，dtype参数是必须指定的，而shape参数可选：</p><ul><li>dtype指定了将传给该占位符的值的数据类型。该参数是必须指定的，因为需要确保不出现类型不匹配的错误。</li><li>shape指定了所要传入的Tensor对象的形状。请参考前文中对Tensor形状的讨论。shape参数的默认值为None，表示可接收任意形状的Tensor对象。<br>与任何Op一样，也可在fpaceholer中指定一个name标识符。<br>为了给占位符传入一个实际的值，需要使用Sesionnm()中的eed_dict参数。我们将指向占位符输出的句柄作为字典(在上述代码中，对应变量a)的“键”，而<br>将希望传入的Tensor对象作为字典的“值”：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义一个TensorFlow Session对象</span></span><br><span class="line">sess=tf.Session()</span><br><span class="line"><span class="comment">#创建一个将传给feed_dict参数的字典</span></span><br><span class="line"><span class="comment">#键：a’，指向占位符输出Tensor对象的句柄</span></span><br><span class="line"><span class="comment">#值：一个值为[5，3]、类型为int32的向量</span></span><br><span class="line">input_dict=&#123;a:np.array([<span class="number">5</span>，<span class="number">3</span>]，dtype=np.int32)&#125;</span><br><span class="line"><span class="comment">#计算d的值，将input_dict的“值”传给a</span></span><br><span class="line">sess.run(d，feed_dict=input_dict)</span><br></pre></td></tr></table></figure><p>必须在eed dixt中为待计算的节点的每个依赖占位符包含一个键值对。在上面的代码中，需要计算d的输出，而它依赖于a的输出。如果还定义了一些d不依赖的其他占位符，则无需将它们包含在eed_dict中。<br>placeholder的值是无法计算的—如果试图将其传入Session.nn()，将引发一个异常。</p><h3 id="variable对象"><a class="markdownIt-Anchor" href="#variable对象"></a> Variable对象</h3><h4 id="1创建variable对象"><a class="markdownIt-Anchor" href="#1创建variable对象"></a> 1.创建Variable对象</h4><p>Tensor对象和Op对象都是不可变的(immmtable)，但机器学习任务的本质决定了需要一种机制保存随时间变化的值。借助TensorFbw中的Varable对象，便可达到这个目的。Variabe对象包含了在对Session.un()多次调用中可持久化的可变张量值。Variabk对象的创建可通过Variabe类的构造方法tVariable()完成：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">inport tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="comment">#为Variable对象传入一个初始值3</span></span><br><span class="line">my_var=tf.Variable(<span class="number">3</span>，name=<span class="string">"my_variable"</span>)</span><br><span class="line"><span class="comment">#Variable对象可用于任何可能会使用Tensor对象的TensorFlbw函数或Op中，其当前值将传给使用它的Op：</span></span><br><span class="line">add=tf.add(<span class="number">5</span>，my_var)</span><br><span class="line">mul=tf.mul(<span class="number">8</span>，my_var)</span><br><span class="line"><span class="comment">#Variables对象的初值通常是全0、全1或用随机数填充的阶数较高的张量。为使创建具有这些常见类型初值的张量更加容易，TensorFlow提供了大量辅助Op，如tferos()、tfones()、tfrandom normal()和tfrandomuiform()，每个Op都接收一个sape参数，以指定所创建的Tensor对象的形状：</span></span><br><span class="line"><span class="comment">#2×2的零矩阵</span></span><br><span class="line">zeros=tf.zeros([<span class="number">2</span>，<span class="number">2</span>])</span><br><span class="line"><span class="comment">#长度为6的全1向量</span></span><br><span class="line">ones=tf.ones([<span class="number">6</span>])</span><br><span class="line"><span class="comment">#3×3×3的张量，其元素服从0~10的均匀分布</span></span><br><span class="line">uniform=tf.random_uniform([<span class="number">3</span>，<span class="number">3</span>，<span class="number">3</span>]，minval=<span class="number">0</span>，maxval=<span class="number">10</span>)</span><br><span class="line"><span class="comment">#3×3×3的张量，其元素服从0均值、标准差为2的正态分布</span></span><br><span class="line">normal=tf.random_normal([<span class="number">3</span>，<span class="number">3</span>，<span class="number">3</span>]，mean=<span class="number">0.0</span>，stddev=<span class="number">2.0</span>)</span><br></pre></td></tr></table></figure><p>除了tfrandom normal()外，经常还会看到人们使用ttrmncated nomal()，因为它不会创建任何<strong>偏离均值超过2倍标准差的值</strong>，从而可以防止有一个或两个元素与该张量中的其他元素显著不同的情况出现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#该Tensor对象不会返回任何小于3.0或大于7.0的值</span></span><br><span class="line">trunc=tf.truncated_normal([<span class="number">2</span>，<span class="number">2</span>]，mean=<span class="number">5.0</span>，stddev=<span class="number">1.0</span>)</span><br><span class="line">可像手工初始化张量那样将这些Op作为Variable对象的初值传入：</span><br><span class="line"><span class="comment">#默认均值为0，默认标准差为1.0</span></span><br><span class="line">randon_var=tf.Variable(tf.truncated_normal([<span class="number">2</span>，<span class="number">2</span>]))</span><br></pre></td></tr></table></figure><h4 id="2variable对象的初始化"><a class="markdownIt-Anchor" href="#2variable对象的初始化"></a> 2.Variable对象的初始化</h4><p>Variable对象与大多数其他TensorFlow对象在Graph中存在的方式都比较类似，但它们的状态实际上是由Session对象管理的。因此，为使用Varinbe对象，需要采取一些额外的步骤—必须在一个Session对象内对Variable对象进行初始化。这样会使Session对象开始追踪这个Variable对象的值的变化。Varabe对象的初始化通常是通过将tinitialize_all_variabkes()Op传给Sessionrun()完成的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">init=tf.initialize_all_variables()</span><br><span class="line">sess=tf.Session()</span><br><span class="line">sess.run(init)</span><br><span class="line"><span class="comment">#如果只需要对数据流图中定义的一个Variable对象子集初始化，可使用tfinitialie variables()。该函数可接收一个要进行初始化的Variable对象列表：</span></span><br><span class="line">var1=tf.Variable(<span class="number">0</span>，name=<span class="string">"initialize_me"</span>)</span><br><span class="line">var2=tf.Variable(<span class="number">1</span>，name=<span class="string">"no_initialization"</span>)</span><br><span class="line">init=tf.initialize_variables([var1]，name=<span class="string">"init_var1"</span>)</span><br><span class="line">sess=tf.Session()</span><br><span class="line">sess.run(init)</span><br></pre></td></tr></table></figure><h4 id="3variable对象的修改"><a class="markdownIt-Anchor" href="#3variable对象的修改"></a> 3.Variable对象的修改</h4><p>要修改Variablk对象的值，可使用Variable.assign()方法。该方法的作用是为Variable对象赋予新值。请注意，Variable.assign()是一个Op，要使其生效必须在一个Session对象中运行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建一个初值为1的Variable对象</span></span><br><span class="line">my_var=tf.Variable(<span class="number">1</span>)</span><br><span class="line"><span class="comment">#创建一个Op，使其在每次运行时都将该Variable对象乘以2</span></span><br><span class="line">my_var_times_two=my_var.assign(my_var*<span class="number">2</span>)</span><br><span class="line"><span class="comment">#初始化Op init=tf.initialize_all_variables()</span></span><br><span class="line"><span class="comment">#启动一个会话</span></span><br><span class="line">sess=tf.Session()</span><br><span class="line"><span class="comment">#初始化Variable对象</span></span><br><span class="line">sess.run(init)</span><br><span class="line"><span class="comment">#将Variable对象乘以2，并将其返回</span></span><br><span class="line">sess.run(my_var_times_two)</span><br><span class="line"><span class="comment">##输出：2</span></span><br><span class="line"><span class="comment">#再次相乘</span></span><br><span class="line">sess.run(my_var_times_two)</span><br><span class="line"><span class="comment">##输出：4</span></span><br><span class="line"><span class="comment">#再次相乘</span></span><br><span class="line">sess.run(my_var_times_two)</span><br><span class="line"><span class="comment">##输出：8</span></span><br><span class="line">对于Variablk对象的简单自增和自减，TensorFlow提供了Variable.asign add()方法和Variable.assignsub()方法：</span><br><span class="line"><span class="comment">#自增1</span></span><br><span class="line">sess.run(my_var.assign_add(<span class="number">1</span>))</span><br><span class="line"><span class="comment">#自减1</span></span><br><span class="line">sess.run(my_var.assign_sub(<span class="number">1</span>))</span><br></pre></td></tr></table></figure><p>△由于不同Session对象会各自独立地维护Varablk对象的值，因此每个Session对象都拥有自己的、在Graph对象中定义的Variabe对象的当前值：</p><h4 id="4trainable参数"><a class="markdownIt-Anchor" href="#4trainable参数"></a> 4.trainable参数</h4><p>在本书的后续章节将介绍各种能够自动训练机器学习模型的Optinmizer类，这意味着这些类将自动修改Variable对象的值，而无须显式做出请求。在大多数情况下，这与读者的期望一致，但如果要求Graph对象中的一些Variabk对象只可手工修改，而不允许使用Optimizer类时，可在创建这些Variable对象时将其raimbe参数设为False：not_trainable=tf.Variable(0，trainable=False)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;深度学习神经网络&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#深度学习神经网络&quot;&gt;&lt;/a&gt; 深度学习——神经网络&lt;/h1&gt;
&lt;h2 id=&quot;构建网络的总原则&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#构
      
    
    </summary>
    
    
      <category term="机器学习" scheme="https://nymrli.top/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>常用域名记录解释</title>
    <link href="https://nymrli.top/2019/09/17/%E5%B8%B8%E7%94%A8%E5%9F%9F%E5%90%8D%E8%AE%B0%E5%BD%95%E8%A7%A3%E9%87%8A/"/>
    <id>https://nymrli.top/2019/09/17/常用域名记录解释/</id>
    <published>2019-09-17T09:47:35.000Z</published>
    <updated>2019-09-17T09:47:50.806Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用域名记录解释"><a class="markdownIt-Anchor" href="#常用域名记录解释"></a> 常用域名记录解释</h1><h2 id="a记录"><a class="markdownIt-Anchor" href="#a记录"></a> A记录</h2><p>A记录是用来创建到IP地址的记录。</p><p><strong>A记录设置技巧</strong></p><p>1、如果想创建不带www的记录，<a href="http://xn--ezloo-k97h.com" target="_blank" rel="noopener">即ezloo.com</a>，在主机记录中填写@或者留空，不同的注册商可能不一样。</p><p>2、创建多个域名到同一个IP，比如给博客建了二级域名，可以使用*.blog.ezloo.com来指向一个IP，这样的话，不管是访问a.blog.ezloo.com还是b.blog.ezloo.com都能到同一个IP。</p><p>3、如果你给同一个二级域名设置了多个A记录，比如你建了两个blog的A记录，其中一个指向了111.111.111.111，另一个指向了111.111.111.112，那么在查询的时候，每次返回的数据包含了两个IP地址，但是在返回的过程中数据排列的顺序每次都不相同。由于大 部分的客户端只选择第一条记录所以通过这种方式可以实现一定程度的负载均衡。</p><p>在命令行下可以通过nslookup -qt=a <a href="https://www.ezloo.com/" target="_blank" rel="noopener">www.ezloo.com</a>来查看A记录。</p><h2 id="mx记录"><a class="markdownIt-Anchor" href="#mx记录"></a> MX记录</h2><p>在命令行下可以通过 nslookup -qt=mx <a href="http://ezloo.com" target="_blank" rel="noopener">ezloo.com</a> 来查看MX记录。</p><p>mx 记录的权重对 Mail 服务是很重要的，当发送邮件时，Mail 服务器先对域名进行解析，查找 mx 记录。先找权重数最小的服务器（比如说是 10），如果能连通，那么就将服务器发送过去；如果无法连通 mx 记录为 10 的服务器，那么才将邮件发送到权重为 20 的 mail 服务器上。</p><p>这里有一个重要的概念，权重 20 的服务器在配置上只是暂时缓存 mail ，当权重 20 的服务器能连通权重为 10 的服务器时，仍会将邮件发送的权重为 10 的 Mail 服务器上。当然，这个机制需要在 Mail 服务器上配置。（<a href="http://blog.ixpub.net/viewthread-1308142" target="_blank" rel="noopener">http://blog.ixpub.net/viewthread-1308142</a>）</p><h2 id="cname记录"><a class="markdownIt-Anchor" href="#cname记录"></a> CNAME记录</h2><p><a href="http://en.wikipedia.org/wiki/CNAME_record" target="_blank" rel="noopener">CNAME</a>记录也成别名记录，它允许你将多个记录映射到同一台计算机上。比如你建了如下几条记录：</p><p>a1 CNAME <a href="http://a.ezloo.com" target="_blank" rel="noopener">a.ezloo.com</a><br>a2 CNAME <a href="http://a.ezloo.com" target="_blank" rel="noopener">a.ezloo.com</a><br>a3 CNAME <a href="http://a.ezloo.com" target="_blank" rel="noopener">a.ezloo.com</a><br>a A 111.222.111.222</p><p>我们访问a1（a2，a3）.ezloo.com的时候，域名解析服务器会返回一个CNAME记录，<a href="http://xn--a-4o6ap5qc3lbrf.ezloo.com" target="_blank" rel="noopener">并且指向a.ezloo.com</a>，然后我们的本地电脑会再发送一个请求，请求a.ezloo.com的解析，返回IP地址。</p><p>当我们要指向很多的域名到一台电脑上的时候，用CNAME比较方便，就如上面的例子，我们如果服务器更换IP了，我们只要更换a.ezloo.com的A记录即可。</p><p>在命令行下可以使用nslookup -qt=cname a.ezloo.com来查看CNAME记录。</p><h2 id="txt记录"><a class="markdownIt-Anchor" href="#txt记录"></a> TXT记录</h2><p>TXT记录一般是为某条记录设置说明，比如你新建了一条a.ezloo.com的TXT记录，TXT记录内容&quot;this is a test TXT record.&quot;，然后你用 nslookup -qt=txt <a href="http://a.ezloo.com" target="_blank" rel="noopener">a.ezloo.com</a> ，你就能看到&quot;this is a test TXT record&quot;的字样。</p><p>除外，TXT还可以用来验证域名的所有，比如你的域名使用了Google的某项服务，Google会要求你建一个TXT记录，然后Google验证你对此域名是否具备管理权限。</p><p>在命令行下可以使用nslookup -qt=txt a.ezloo.com来查看TXT记录。</p><h2 id="aaaa记录"><a class="markdownIt-Anchor" href="#aaaa记录"></a> AAAA记录</h2><p>AAAA记录是一个指向IPv6地址的记录。</p><p>可以使用nslookup -qt=aaaa a.ezloo.com来查看AAAA记录。</p><h2 id="ns记录"><a class="markdownIt-Anchor" href="#ns记录"></a> NS记录</h2><p>NS记录是域名服务器记录，用来指定域名由哪台服务器来进行解析。可以使用nslookup -qt=ns ezloo.com来查看。</p><h2 id="ttl值"><a class="markdownIt-Anchor" href="#ttl值"></a> TTL值</h2><p>TTL=time to live，表示解析记录在DNS服务器中的缓存时间。比如当我们请求解析<a href="https://www.ezloo.com/" target="_blank" rel="noopener">www.ezloo.com</a>的时候，DNS服务器发现没有该记录，就会下个NS服务器发出请求，获得记录之后，该记录在DNS服务器上保存TTL的时间长度。当我们再次发出请求解析<a href="https://www.ezloo.com/" target="_blank" rel="noopener">www.ezloo.com</a> 的时候，DNS服务器直接返回刚才的记录，不去请求NS服务器。TTL的时间长度单位是秒，一般为3600秒。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;常用域名记录解释&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#常用域名记录解释&quot;&gt;&lt;/a&gt; 常用域名记录解释&lt;/h1&gt;
&lt;h2 id=&quot;a记录&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#a记录&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="网络知识" scheme="https://nymrli.top/tags/%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot学习笔记</title>
    <link href="https://nymrli.top/2019/09/17/Spring-Boot%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://nymrli.top/2019/09/17/Spring-Boot学习笔记/</id>
    <published>2019-09-17T09:01:40.000Z</published>
    <updated>2019-09-17T09:08:24.503Z</updated>
    
    <content type="html"><![CDATA[<h1 id="spring-boot"><a class="markdownIt-Anchor" href="#spring-boot"></a> Spring Boot</h1><h2 id="hello-word"><a class="markdownIt-Anchor" href="#hello-word"></a> hello word</h2><p>第一个controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Project Name:demo </span></span><br><span class="line"><span class="comment"> * File Name:HelloController.java </span></span><br><span class="line"><span class="comment"> * Package Name:com.example.demo </span></span><br><span class="line"><span class="comment"> * Date:2019年9月15日下午8:27:56 </span></span><br><span class="line"><span class="comment"> * Copyright (c) 2019, chenzhou1025@126.com All Rights Reserved. </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment">*/</span>  </span><br><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;cupsize&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> String cupsize;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(value=<span class="string">"hello"</span>,method= RequestMethod.GET)</span><br><span class="line"><span class="comment">//@GetMapping("/hello")</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">say</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> cupsize;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>application.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">5000</span></span><br><span class="line"><span class="comment">#  servlet:</span></span><br><span class="line"><span class="comment">#    context-path: /girl</span></span><br><span class="line"><span class="attr">cupsize:</span> <span class="string">B</span></span><br><span class="line"><span class="string">spring.datasource.url:</span> <span class="attr">jdbc:mysql://127.0.0.1:3306/</span></span><br><span class="line"><span class="string">spring.datasource.username:</span> <span class="string">root</span> <span class="string">spring.datasource.password:</span> <span class="number">123456</span></span><br><span class="line"><span class="string">spring.datasource.driver-class-name:</span> <span class="string">com.mysql.jdbc</span></span><br></pre></td></tr></table></figure><h2 id="controller的使用"><a class="markdownIt-Anchor" href="#controller的使用"></a> Controller的使用</h2><p>@Controller处理http请求Spring4之后新加的注解，原来返回json</p><ul><li><p>需要返回模板,即<code>return “index”;</code></p><ul><li><p>需要在POM.XML中添加spring-boot-starter-thymeleaf的依赖</p></li><li><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><p>@RestController等价于&lt;==&gt;@Controller+@ResponseBody</p><ul><li>可以返回JSON格式</li></ul><p>@RequestMapping 配置url映射</p><ul><li><p>▲如果没有指定Method那么所有方式都可以</p></li><li><p>给某个方法指定url路由</p><p><code>@RequestMapping(value={&quot;/hello&quot;,&quot;/hil&quot;},method=RequestMethod.GET)</code></p></li><li><p>给整个class指定路由</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Project Name:demo </span></span><br><span class="line"><span class="comment"> * File Name:HelloController.java </span></span><br><span class="line"><span class="comment"> * Package Name:com.example.demo </span></span><br><span class="line"><span class="comment"> * Date:2019年9月15日下午8:27:56 </span></span><br><span class="line"><span class="comment"> * Copyright (c) 2019, chenzhou1025@126.com All Rights Reserved. </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment">*/</span>  </span><br><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value=<span class="string">"/hello"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> GirlProperties girlProperties;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/say"</span>, method= RequestMethod.GET)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">say</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> girlProperties.getCupSize();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>@RequestMapping(value=xxx,method=RequestMethod.GET)</code>等价于<code>XxxMapping</code></p><ul><li>GetMapping</li><li>PostMapping</li></ul></li><li><p>@PathVariable</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/say/&#123;id&#125;"</span>, method= RequestMethod.GET)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">say</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> Integer id) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"id:"</span> + id;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>@RequestParam</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/say"</span>, method= RequestMethod.GET)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">say</span><span class="params">(@RequestParam(<span class="string">"id"</span>)</span> Integer mid) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"id:"</span> + mid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/say"</span>, method= RequestMethod.GET)</span><br><span class="line"><span class="comment">// defaultValue值必须为String</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">say</span><span class="params">(@RequestParam(value=<span class="string">"id"</span>, required=<span class="keyword">false</span>, defaultValue=<span class="string">"0"</span>)</span> Integer mid) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"id:"</span> + mid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="数据库管理"><a class="markdownIt-Anchor" href="#数据库管理"></a> 数据库管理</h2><p>JPA（Java Persistence APl）定义了一系列对象持久化的标准，目前实现这一规范的产品有Hibernate、TopLink等。</p><h3 id="启用jpa"><a class="markdownIt-Anchor" href="#启用jpa"></a> 启用JPA</h3><p>application.yml</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  profiles:</span><br><span class="line">    active: dev</span><br><span class="line">  datasource:</span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line">    url: jdbc:mysql:<span class="comment">//127.0.0.1:3306/dbgirl?characterEncoding=utf-8&amp;useLegacyDatetimeCode=false&amp;serverTimezone=UTC</span></span><br><span class="line">    username: root</span><br><span class="line">    password: cl123123</span><br><span class="line">  jpa:</span><br><span class="line">    hibernate:</span><br><span class="line">      ddl-auto: create</span><br><span class="line">    show-sql: <span class="keyword">true</span></span><br></pre></td></tr></table></figure><h3 id="增删改查curd"><a class="markdownIt-Anchor" href="#增删改查curd"></a> 增删改查CURD</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Project Name:demo </span></span><br><span class="line"><span class="comment"> * File Name:Girl.java </span></span><br><span class="line"><span class="comment"> * Package Name:com.example.demo </span></span><br><span class="line"><span class="comment"> * Date:2019年9月16日下午6:34:14 </span></span><br><span class="line"><span class="comment"> * Copyright (c) 2019, chenzhou1025@126.com All Rights Reserved. </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment">*/</span>  </span><br><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.Entity;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GeneratedValue;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Girl</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Id</span> </span><br><span class="line"><span class="meta">@GeneratedValue</span></span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"><span class="keyword">private</span> String cupSize;</span><br><span class="line"><span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Girl</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getCupSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> cupSize;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCupSize</span><span class="params">(String cupSize)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.cupSize = cupSize;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(Integer age)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"&#123;\"id\":\""</span> + id + <span class="string">"\",\"cupSize\":\""</span> + cupSize + <span class="string">"\",\"age\":\""</span> + age + <span class="string">"\"&#125;  "</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>GirlControllr.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Project Name:demo </span></span><br><span class="line"><span class="comment"> * File Name:GirlController.java </span></span><br><span class="line"><span class="comment"> * Package Name:com.example.demo </span></span><br><span class="line"><span class="comment"> * Date:2019年9月17日下午3:44:06 </span></span><br><span class="line"><span class="comment"> * Copyright (c) 2019, chenzhou1025@126.com All Rights Reserved. </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment">*/</span>  </span><br><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.DeleteMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PutMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GirlController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> GirlRepository girlRepository;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping</span>(value= <span class="string">"/girls"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Girl&gt; <span class="title">girlList</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> girlRepository.findAll();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@PostMapping</span>(value = <span class="string">"/girls"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Girl <span class="title">addGirl</span><span class="params">(@RequestParam(<span class="string">"cupSize"</span>)</span> String cupSize, </span></span><br><span class="line"><span class="function">@<span class="title">RequestParam</span><span class="params">(<span class="string">"age"</span>)</span> Integer age) </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"cupsize"</span>+cupSize);</span><br><span class="line">Girl girl= <span class="keyword">new</span> Girl();</span><br><span class="line">girl.setCupSize(cupSize);</span><br><span class="line">girl.setAge(age);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> girlRepository.save(girl);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping</span>(value=<span class="string">"/girls/&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Girl <span class="title">girlFindOne</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> Integer id) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> girlRepository.findById(id).get();</span><br><span class="line"><span class="comment">//return girlRepository.getOne(id); 无效，需要实例json</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@PutMapping</span>(value=<span class="string">"/girls/&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Girl <span class="title">girlUpdate</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> Integer id,</span></span><br><span class="line"><span class="function">@<span class="title">RequestParam</span><span class="params">(<span class="string">"cupSize"</span>)</span> String cupSize, </span></span><br><span class="line"><span class="function">@<span class="title">RequestParam</span><span class="params">(<span class="string">"age"</span>)</span> Integer age)  </span>&#123;</span><br><span class="line">Girl girl = <span class="keyword">new</span> Girl();</span><br><span class="line">girl.setId(id);</span><br><span class="line">girl.setAge(age);</span><br><span class="line">girl.setCupSize(cupSize);</span><br><span class="line"><span class="keyword">return</span> girlRepository.save(girl);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@DeleteMapping</span>(value=<span class="string">"/girls/&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">girlDelete</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> Integer id) </span>&#123;</span><br><span class="line">girlRepository.deleteById(id);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping</span>(value=<span class="string">"/girls/age/&#123;age&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Girl&gt; <span class="title">girlListByAge</span><span class="params">(@PathVariable(<span class="string">"age"</span>)</span> Integer age)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> girlRepository.findByAge(age);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>▲注意.视频中的findOne已经被淘汰，因为springboot版本问题，新的版本不再支持findone(id)方法。</p><p>可用<code>findById(id).get()</code>或<code>getOne(id)</code>来替换，区别是前者当参数id为空时返回null，后者直接报异常，因为getOne返回的是对象的引用。</p><p>我试了下getOne会报错，据说是要设置json的返回格式？</p><h3 id="自定义搜索方式findbyage"><a class="markdownIt-Anchor" href="#自定义搜索方式findbyage"></a> 自定义搜索方式findByAge</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Project Name:demo </span></span><br><span class="line"><span class="comment"> * File Name:GirlRepository.java </span></span><br><span class="line"><span class="comment"> * Package Name:com.example.demo </span></span><br><span class="line"><span class="comment"> * Date:2019年9月17日下午3:44:33 </span></span><br><span class="line"><span class="comment"> * Copyright (c) 2019, chenzhou1025@126.com All Rights Reserved. </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment">*/</span>  </span><br><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">GirlRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Girl</span>, <span class="title">Integer</span>&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Girl&gt; <span class="title">findByAge</span><span class="params">(Integer age)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数据库事务管理"><a class="markdownIt-Anchor" href="#数据库事务管理"></a> 数据库事务管理</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Project Name:demo </span></span><br><span class="line"><span class="comment"> * File Name:GirlController.java </span></span><br><span class="line"><span class="comment"> * Package Name:com.example.demo </span></span><br><span class="line"><span class="comment"> * Date:2019年9月17日下午3:44:06 </span></span><br><span class="line"><span class="comment"> * Copyright (c) 2019, chenzhou1025@126.com All Rights Reserved. </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment">*/</span>  </span><br><span class="line"><span class="meta">@PostMapping</span>(value = <span class="string">"/girls/two"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">girlTwo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        girlService.insertTwo();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Project Name:demo </span></span><br><span class="line"><span class="comment"> * File Name:GirlService.java </span></span><br><span class="line"><span class="comment"> * Package Name:com.example.demo </span></span><br><span class="line"><span class="comment"> * Date:2019年9月17日下午4:39:00 </span></span><br><span class="line"><span class="comment"> * Copyright (c) 2019, chenzhou1025@126.com All Rights Reserved. </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment">*/</span>  </span><br><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GirlService</span> </span>&#123;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> GirlRepository girlRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertTwo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Girl girlA = <span class="keyword">new</span> Girl();</span><br><span class="line">        girlA.setCupSize(<span class="string">"A"</span>);</span><br><span class="line">        girlA.setAge(<span class="number">18</span>);</span><br><span class="line">        girlRepository.save(girlA);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Girl girlB = <span class="keyword">new</span> Girl();</span><br><span class="line">        girlB.setCupSize(<span class="string">"BBBB"</span>);</span><br><span class="line">        girlB.setAge(<span class="number">19</span>);</span><br><span class="line">        girlRepository.save(girlB);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在项目开发过程中，使用了Spring data jpa自动创建表。但是默认情况下，创建出来的表类型为MyISAM。</p><p>（MySQL数据库默认的存储引擎类型是MyISAM，这种存储引擎类型不支持事务处理。）改成InnoDB存储引擎会就可以了。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jpa:</span></span><br><span class="line"><span class="attr">    database:</span> <span class="string">MYSQL</span></span><br><span class="line"><span class="attr">    hibernate:</span></span><br><span class="line"><span class="attr">      ddl-auto:</span> <span class="string">update</span></span><br><span class="line"><span class="attr">    show-sql:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    database-platform:</span> <span class="string">org.hibernate.dialect.MySQL5InnoDBDialect</span></span><br></pre></td></tr></table></figure><p>在navicat中数据库—&gt;表—&gt;单击表名，在右边可以出现表的所有信息</p><p><img src="/2019/09/17/Spring-Boot学习笔记/mysq%E5%AD%98%E5%82%A8l%E5%BC%95%E6%93%8E.jpg" alt="mysq存储l引擎"></p><p><a href="https://www.imooc.com/video/16357" target="_blank" rel="noopener">Spring Boot 2.0深度实践-初遇Spring Boot</a></p><ul><li>多模块：web、persistence、mdel</li><li>项目打包——多模块重构后</li></ul><h2 id="运行模式"><a class="markdownIt-Anchor" href="#运行模式"></a> 运行模式</h2><p>IDEA: 有图形界面的开发环境</p><p>JAR/WAR: 线上、服务器上的生产环境</p><ul><li><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mvn install </span><br><span class="line">$ <span class="built_in">cd</span> target</span><br><span class="line">$ java -jar</span><br></pre></td></tr></table></figure></li></ul><p>MAVEN插件: 无图形界面的开发环境</p><ul><li><code>mvn spring-boot:run</code></li></ul><h2 id="热加载"><a class="markdownIt-Anchor" href="#热加载"></a> 热加载：</h2><p>pom.xml中加上依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>热部署:</p><p>就是容器状态在运行的情况下重新部署整个项目.在这种情况下一般整个内存会清空,重新加载.简单来说就是Tomcat或者其他的web服务器会帮我们重新加载项目.这种方式可能会造成sessin丢失等情况.</p><p>热加载:</p><p>就是容器状态在运行的情况下重新加载改变编译后的类.在这种情况下内存不会清空,sessin不会丢失,但容易造成内存溢出,或者找不到方法。因为内存无法转变成对像.一般改变类的结构和模型就会有异常，在已经有的变量和方法中改变是不会出问题的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;spring-boot&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#spring-boot&quot;&gt;&lt;/a&gt; Spring Boot&lt;/h1&gt;
&lt;h2 id=&quot;hello-word&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot;
      
    
    </summary>
    
    
      <category term="后端" scheme="https://nymrli.top/tags/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="Java" scheme="https://nymrli.top/tags/Java/"/>
    
      <category term="Web" scheme="https://nymrli.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>如何成为一位老司机——考驾照经历</title>
    <link href="https://nymrli.top/2019/09/14/%E5%A6%82%E4%BD%95%E6%88%90%E4%B8%BA%E4%B8%80%E4%BD%8D%E8%80%81%E5%8F%B8%E6%9C%BA%E2%80%94%E2%80%94%E8%80%83%E9%A9%BE%E7%85%A7%E7%BB%8F%E5%8E%86/"/>
    <id>https://nymrli.top/2019/09/14/如何成为一位老司机——考驾照经历/</id>
    <published>2019-09-14T04:32:33.000Z</published>
    <updated>2019-09-15T08:07:31.044Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何成为一位老司机考驾照经历"><a class="markdownIt-Anchor" href="#如何成为一位老司机考驾照经历"></a> 如何成为一位老司机——考驾照经历</h1><p>大一下报的名，几经转折，终于在2019-9-12，中秋放假前一天拿到了本本。</p><h2 id="科一理论考试"><a class="markdownIt-Anchor" href="#科一理论考试"></a> 科一理论考试</h2><p>太久远了，已经忘记了…</p><h2 id="科二"><a class="markdownIt-Anchor" href="#科二"></a> 科二</h2><h3 id="训练"><a class="markdownIt-Anchor" href="#训练"></a> 训练</h3><h4 id="倒车入库"><a class="markdownIt-Anchor" href="#倒车入库"></a> 倒车入库：</h4><p>左边小镜子底座盖过黄线，向左打死。<br>正手倒车时，靠近左边直角距离3个手指回正，然后看左边镜子出现直角，然后。<br>左手是一到二指头。</p><p>▲入库重在自己调整，记住准则：左右镜子，哪边空隙大，方向盘往哪边打</p><h4 id="小四项"><a class="markdownIt-Anchor" href="#小四项"></a> 小四项：</h4><h5 id="直角转弯"><a class="markdownIt-Anchor" href="#直角转弯"></a> 直角转弯:</h5><ul><li>人在路中间，直角重合于车窗黑线后向左打死。</li></ul><h5 id="s弯道"><a class="markdownIt-Anchor" href="#s弯道"></a> S弯道：</h5><ul><li>确保人在路中间，可以略微偏左。左边小镜子底座压住右边黄线。方向盘一圈右手放在2点方向。如果黄线偏下，那么往1点方向调整，否则往3点方向调整。然后保持到车头中间碰到左边黄线回正；然后向前一小段距离，使得右边镜子与黄线只差一条线的距离，然后向右一圈，左手11点，保持小镜子与黄线夹角是钝角，然后一直保持到项目结束。</li></ul><h5 id="坡道停车"><a class="markdownIt-Anchor" href="#坡道停车"></a> 坡道停车：</h5><ul><li>对准坡道上的黄线大约在车头的右边三分之一处。上去之后，保持黄线在小镜子的左边三分之一处，大约与车身成三角形，接近接触。</li></ul><h5 id="侧方停车"><a class="markdownIt-Anchor" href="#侧方停车"></a> 侧方停车：</h5><ul><li><p>车头盖过蓝线后看右边后视镜，到第二根白线在后视镜中央开始倒车，直至消失时，向右一圈到11点，然后保持直至右边的黄线跑到两个把手的中间时回正，接着看左边，头伸出一点，看后车轮压倒虚线时立马向左打死，然后直至车身完全进入。</p></li><li><p>出去时，左方向灯和换1档，缓速出来，等到车头中央碰到黄线时回正，然后稍微开个0.5s向后一圈左右，车身回正。</p></li></ul><p><a href="https://pan.baidu.com/s/1NKVIC6cgtvp_8tGO4pk2xw" target="_blank" rel="noopener">视频资源——SXH科二教练</a>,提取码：gvqa</p><h3 id="考试"><a class="markdownIt-Anchor" href="#考试"></a> 考试</h3><p>我考的是6号线，也就是S弯结束后立马是直角的那条线。考试的直角给我的感觉是比谷峰训练的时候多很多，所以其实不用担心。至于这个S弯结束后立马是直角，根据模拟的时候开就行了，即出来就向右打死，然后开到路中间</p><h2 id="科三"><a class="markdownIt-Anchor" href="#科三"></a> 科三</h2><blockquote><p>灯光+上路行驶</p></blockquote><h3 id="训练-2"><a class="markdownIt-Anchor" href="#训练-2"></a> 训练</h3><h4 id="灯光"><a class="markdownIt-Anchor" href="#灯光"></a> 灯光</h4><p><img src="/2019/09/14/如何成为一位老司机——考驾照经历/kes2.jpg" alt="kes2"></p><h4 id="起步和靠边停车"><a class="markdownIt-Anchor" href="#起步和靠边停车"></a> 起步和靠边停车</h4><p><img src="/2019/09/14/如何成为一位老司机——考驾照经历/kes1.jpg" alt="kes1"></p><p>图片来自于科三教练——杨作栋</p><h3 id="考试-2"><a class="markdownIt-Anchor" href="#考试-2"></a> 考试</h3><p>科三比科二简单很多。科二10节课，科三只有8节也能说明一二。但感觉科三与科二最不同的地方是，科三记的点比科二自然很多。在转头看左右后视镜，我在临近考试的最后两天最后一节课上才练的，一开始觉得右边的后视镜为什么离得那么远，跑了两圈后就发现，看后视镜是件很自然的事，因为你就需要右边的信息。</p><p>而在考试过程中，虽然有安全员在旁边，可能会比科二紧张一些，但是整体上来讲，科三还是很容易的，只要记得，每次完成一个东西后，左右看后视镜基本上就行了。</p><p>▲.我考试的时候，前面有个挂了的人倒是补上了我一个盲点，原来提示前方路口后，如果你打了右方向灯，那么接着往后看。之前我还以为只有真过路口、点刹的时候才需要。只不过面对这种现象，还是之前说的，不管做了什么，左右摇头就是了。</p><p>挂到五档也不用担心，我当时考试时有两条路的路况绝对算不上好，但是我一共还是3次挂到了五档，所以其实升挡的机会还是很多的。</p><p>最后，需要注意的是灯光一定不能错。我是第三个考的，第一个女生灯光挂了一次；第二个男生，起步没打左方向灯，也挂了。</p><h2 id="科四理论考试"><a class="markdownIt-Anchor" href="#科四理论考试"></a> 科四理论考试</h2><p>刷了1280道题，由于有10道多选题的存在，所以真正考试的时候还是比较慌的，一上来就错了两题，最终考了94.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;如何成为一位老司机考驾照经历&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#如何成为一位老司机考驾照经历&quot;&gt;&lt;/a&gt; 如何成为一位老司机——考驾照经历&lt;/h1&gt;
&lt;p&gt;大一下报的名，几经转折，终于在2019-9-12，中秋放假前一天拿到
      
    
    </summary>
    
    
      <category term="生活福利" scheme="https://nymrli.top/tags/%E7%94%9F%E6%B4%BB%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>软件测试大赛</title>
    <link href="https://nymrli.top/2019/09/14/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%A7%E8%B5%9B/"/>
    <id>https://nymrli.top/2019/09/14/软件测试大赛/</id>
    <published>2019-09-14T04:07:12.000Z</published>
    <updated>2019-09-16T12:29:58.978Z</updated>
    
    <content type="html"><![CDATA[<h1 id="软件测试大赛"><a class="markdownIt-Anchor" href="#软件测试大赛"></a> 软件测试大赛</h1><h2 id="初学流程"><a class="markdownIt-Anchor" href="#初学流程"></a> 初学流程</h2><ol><li>首先了解比赛,查看帮助文档<a href="http://www.mooctest.net/summer-faq" target="_blank" rel="noopener">平台帮助</a></li><li>然后在<a href="http://www.mooctest.net/download" target="_blank" rel="noopener">工具下载</a>中下载工具、eclipse插件</li><li>最后根据教程中将插件安装好即可</li></ol><h2 id="移动应用测试开发"><a class="markdownIt-Anchor" href="#移动应用测试开发"></a> 移动应用测试开发</h2><h3 id="环境配置"><a class="markdownIt-Anchor" href="#环境配置"></a> 环境配置</h3><h4 id="配置java环境"><a class="markdownIt-Anchor" href="#配置java环境"></a> 配置Java环境</h4><p>略,见<a href="https://www.runoob.com/java/java-environment-setup.html" target="_blank" rel="noopener">Java 开发环境配置_菜鸟教程</a></p><h4 id="安装adb"><a class="markdownIt-Anchor" href="#安装adb"></a> 安装ADB</h4><p>1.菜单——&gt;Tools——&gt;Settings，将Server地址为 <a href="http://mirrors.neusoft.edu.cn" target="_blank" rel="noopener">mirrors.neusoft.edu.cn</a>， 端口 80 ，并且在Others里勾选 Forcehttps://…,最后一定要选择菜单——&gt;Packages菜单——&gt;Reload</p><p>注:其他<a href="http://ask.android-studio.org/?/article/34" target="_blank" rel="noopener">可用的镜像</a></p><p>2.把 AndroidSDK路径下的tools和 platform-tools两个目录路径加入到系统环境变量 Path</p><ul><li></li></ul><p>3.在终端(cmd)输入命令 adb ，回车，输出 adb 版本和帮助信息说明环境配置成功</p><h4 id="安装nodejs"><a class="markdownIt-Anchor" href="#安装nodejs"></a> 安装Node.js</h4><p>略</p><h4 id="安装appium"><a class="markdownIt-Anchor" href="#安装appium"></a> 安装Appium</h4><p>1)下载安装文件： <a href="http://pan.baidu.com/s/1jGvAISu" target="_blank" rel="noopener">http://pan.baidu.com/s/1jGvAISu</a> Windows下载zip文件，MAC请下载dmg<br>2)直接双击appium-installer.exe文件安装就好(务必记住安装路径)，桌面会生成一个Appium的图标<br>此时已经可以通过Appium在桌面快捷方式启动Appium桌面应用程序，并点击应用程序右上侧启动状按钮启动Appium，若成功启动会输出数行[info]级别的日志，打印出Appium server启动成功后占用的端口。</p><p>如果无法显示<code>appium-doctor</code>,可以<code>npm install -g appium</code>安装</p><h3 id="uiautomatorviewer使用"><a class="markdownIt-Anchor" href="#uiautomatorviewer使用"></a> UIautomatorviewer使用</h3><blockquote><p>Android 4.1发布的，uiautomator是用来做UI测试的。也就是普通的手工测试，点击每个控件元素 看看输出的结果是否符合预期。比如 登陆界面 分别输入正确和错误的用户名密码然后点击登陆按钮看看是否能否登陆以及是否有错误提示等。</p></blockquote><p>找到Andriod sdk安装目录下的uiautomatorviewer.bat,E:\android-sdk-windows\tools\uiautomatorviewer.bat,双击打开</p><p>由于自动获得手机信息失败,因此我只能通过手工进行获取</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Error obtaining UI hierarchy</span><br><span class="line">Reason:</span><br><span class="line">Error while creating temporary file to save snapshot:null</span><br></pre></td></tr></table></figure><p>自动导入成功的结果：</p><p><img src="https://images2015.cnblogs.com/blog/968033/201606/968033-20160624171643110-403576910.gif" alt=""></p><h4 id="手工获取手机信息"><a class="markdownIt-Anchor" href="#手工获取手机信息"></a> 手工获取手机信息</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> dump资源文件 再导出到本地</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> adb shell uiautomator dump</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> adb pull /sdcard/window_dump.xml</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 获取截图 导出</span></span><br><span class="line">adb shell screencap -p /data/local/tmp/app.png</span><br><span class="line">adb pull /data/local/tmp/app.png .</span><br></pre></td></tr></table></figure><p>传到Window里，有了截图文件和资源文件，点击UI Automator Viewer菜单栏第一个图标手工导入后即可解析，分析UI</p><p><img src="/2019/09/14/软件测试大赛/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%A7%E8%B5%9B%5Capp.jpg" alt="app"></p><ol><li><strong>获取快照</strong><ul><li>当你要分析一个页面时，首先将手机的页面停留在你要分析的页面，然后用数据线连接电脑。</li></ul></li><li><strong>页面层级</strong><ul><li>右上方的整个区域，就是当前页面布局的层级关系</li></ul></li><li><strong>不可用区域</strong><ul><li>右上方的整个区域中的第二个按钮Toggle NAF Nodes，按下后出现的黄色区域代表，这些控件是不被Uiautomator工具识别，无法获取到这些控件的实例</li></ul></li><li><strong>属性详情</strong>：<ul><li>右下方的整个区域，是当前选中的页面或者是控件的属性信息。写代码的时候就是需要通过查看属性中的控件的id或者是text等来获取控件的实例，然后点击操作它。</li></ul></li></ol><h4 id="编写脚本"><a class="markdownIt-Anchor" href="#编写脚本"></a> 编写脚本</h4><ol><li><strong>创建项目</strong>：创建新的Java项目(注意不是Android项目)。在该项目中来创建测试代码。</li><li><strong>导入库和包</strong>：在Project Explorer视图中，右键点击测试项目，选择“ Properties &gt; Java Build Path”，然后选择“Libraries” tab界面。在“Libraries”界面选择“ Add Library &gt; JUnit”来添加<strong>JUnit3</strong> 库；然后点击“Add External JARs… ”并导航到Android SDK目录。选择platforms目录下面的 <strong>uiautomator.jar</strong> 和 <strong>android.jar</strong>文件。</li></ol><p><a href="https://www.cnblogs.com/lazytest/p/5612709.html" target="_blank" rel="noopener">uiautomatorviewer</a></p><p><a href="https://www.cnblogs.com/givemelove/p/8486903.html" target="_blank" rel="noopener">uiautomatorviewer详解、脚本介绍</a></p><h3 id="junit使用"><a class="markdownIt-Anchor" href="#junit使用"></a> Junit使用</h3><h4 id="demo坑点记录"><a class="markdownIt-Anchor" href="#demo坑点记录"></a> DEMO坑点记录:</h4><p>1.JUnit4和JRE1.7配套使用,Junit5需要8以上。而JUnit4和JUnit5都不支持JRE11，所以当时我的报错是<code>The import org.apache cannot be resolved</code>.</p><p>2.右键项目-&gt;build path -&gt; Config build path -&gt; Libraries后还是报错,<code>java.lang.NoClassDefFoundError: org/junit/runner/manipulation/Filter</code>…解决方法是:①菜单栏-&gt;projects-&gt;clean②build path -&gt; Config build path -&gt; Libraries-&gt;remove重新导入Junit③运行OK</p><h4 id="编写规范"><a class="markdownIt-Anchor" href="#编写规范"></a> 编写规范</h4><p>1.测试方法上必须使用@Test进行修饰<br>2.测试方法必须使用public void 进行修饰，不能带任何的参数<br>3.新建一个源代码目录来存放我们的测试代码<br>4.测试类的包应该和被测试类保持一致<br>5.测试单元中的每个方法必须可以独立测试，测试方法间不能有任何的依赖<br>6.测试类使用Test作为类名的后缀（不是必须）<br>7.测试方法使用test作为方法名的前缀（不星必须）|</p><h4 id="运行流程"><a class="markdownIt-Anchor" href="#运行流程"></a> 运行流程</h4><p>1.@BeforeClass修饰的方法会在所有方法被调用前被执行，而且该方法是静态的，所以当测试类被加载后接着就会运行它，而且在内存中它只会存在一份实例，它<strong>比较适合加载配置文件</strong>。<br>2.@AfterClass所修饰的方法通常用来对资源的清理，如关闭数据库的连接<br>3.@Before和@After会在<strong>每个测试方法</strong>即(@Test修饰的方法函数)的前后各执行一次。</p><p>@Test：将一个普通的方法修饰成为一个测试方法</p><ul><li><p>@Test（expected=XX.class）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span>(expected=ArithmeticException.class)</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">divided</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">assertEquals(<span class="number">0</span>, <span class="keyword">new</span> calculate().divide(<span class="number">6</span>, <span class="number">0</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>@Test（timeout=毫秒）</p></li></ul><p>@BeforeClass：它会在所有的方法运行前被执行，static修饰<br>@AfterClass：它会在所有的方法运行结束后被执行，static修饰<br>@Before：会在每一个测试方法被运行前执行一次<br>@After：会在每一个测试方法运行后被执行一次<br>@lgnore：所修饰的测试方法会被测试运行器忽略<br>@RunWith：可以更改测试运行器org.junit.runner.Runner</p><h4 id="测试套件"><a class="markdownIt-Anchor" href="#测试套件"></a> 测试套件</h4><p>1.测试套件就是组织测试类一起运行的<br>写一个作为测试套件的入口类，这个类里不包含其他的方法<br>更改测试运行器Suite.class<br>将要测试的类作为数组传入到Suite.SuiteClasses（0）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Project Name:softTest </span></span><br><span class="line"><span class="comment"> * File Name:SuiteTest.java </span></span><br><span class="line"><span class="comment"> * Package Name:com.test.demo </span></span><br><span class="line"><span class="comment"> * Date:2019年9月15日下午1:57:13 </span></span><br><span class="line"><span class="comment"> * Copyright (c) 2019, chenzhou1025@126.com All Rights Reserved. </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment">*/</span>  </span><br><span class="line"><span class="keyword">package</span> com.test.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.junit.runners.Suite;</span><br><span class="line"><span class="keyword">import</span> org.junit.runners.Suite.SuiteClasses;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith</span>(Suite.class)</span><br><span class="line"><span class="meta">@Suite</span>.SuiteClasses(&#123;calculateTest.class&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SuiteTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="参数化设置"><a class="markdownIt-Anchor" href="#参数化设置"></a> 参数化设置</h4><p>1.更改默认的测试运行器为RunWith（Parameterized.class）<br>2.声明变量来存放预期值和结果值<br>3.声明一个返回值为Collection的公共静态方法，并使用@Parameters进行修饰<br>4.为测试类声明一个带有参数的公共构造函数，并在其中为之声明变量赋值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Project Name:softTest </span></span><br><span class="line"><span class="comment"> * File Name:parameterTest.java </span></span><br><span class="line"><span class="comment"> * Package Name:com.test.demo </span></span><br><span class="line"><span class="comment"> * Date:2019年9月15日下午2:06:38 </span></span><br><span class="line"><span class="comment"> * Copyright (c) 2019, chenzhou1025@126.com All Rights Reserved. </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment">*/</span>  </span><br><span class="line"><span class="keyword">package</span> com.test.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.assertEquals;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.junit.runners.Parameterized;</span><br><span class="line"><span class="keyword">import</span> org.junit.runners.Parameterized.Parameters;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith</span>(Parameterized.class)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">parameterTest</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> expected = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> input1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> input2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Parameters</span></span><br><span class="line">    <span class="comment">// 给构造函数赋值的时候被调用的</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Collection&lt;Object[]&gt; t() &#123;</span><br><span class="line"><span class="keyword">return</span> Arrays.asList(<span class="keyword">new</span> Object[][] &#123;</span><br><span class="line">&#123;<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>&#125;,</span><br><span class="line">&#123;<span class="number">4</span>,<span class="number">2</span>,<span class="number">2</span>&#125;,</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">parameterTest</span><span class="params">(<span class="keyword">int</span> expected, <span class="keyword">int</span> input1, <span class="keyword">int</span> input2)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.expected = expected;</span><br><span class="line"><span class="keyword">this</span>.input1 = input1;</span><br><span class="line"><span class="keyword">this</span>.input2 = input2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAdd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">assertEquals(expected, <span class="keyword">new</span> calculate().add(input1, input2));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意点"><a class="markdownIt-Anchor" href="#注意点"></a> 注意点：</h3><h4 id="定位控件的参数选择要求"><a class="markdownIt-Anchor" href="#定位控件的参数选择要求"></a> 定位控件的参数选择要求：</h4><ol><li><p>对脚本控件定位参数的选择要追求在要求范围内的唯一性：</p><ul><li><p>参数选择优先级：控件 Resource-id (driver.findElementById())&gt; 控件 XPath(driver.findElementByXPath())</p><ul><li>id举例：<code>com.floral.life:id/tv_title</code></li><li>Xpath举例：<code>//android.widget.TextView[@text='鲜切花 ']，</code>▲.(此处’鲜切花 '的花字后面还有一个空格，所以不要自己输入属性值，应该直接把在 UI Automator Viewer 中的值直接拷贝到代码中去)。</li></ul></li><li><p>Xpath选择时，首要选择 text、content-desc 这种特殊性较强的属性值，不要选择 index、bounds 这种多个控件极易相同(即未满足全局唯一)的属性值。</p></li><li><p>脚本中使用 XPath 进行定位时，务必与脚本编写要求中的 XPath 格式完全一致，即<code>//控件类名[@控件属性名='控件属性值']</code>不要使用<code>//*[@控件属性名='控件属性值']</code>等一系列其他格式</p></li></ul></li><li><p>脚本中不要使用 driver.findElementsByxxx()一类的方法，不要用该方法<br>定位多个控件得到一个 list 再循环来操作 list 中控件(除非该控件的 XPath都不能满足在测试范围内的全局唯一)。</p></li><li><p>脚本中允许自定义函数，但对于 driver.findElementById()这类原生方法，不要进行封装。</p></li><li><p>逻辑上是一句话的代码务必写在一行内，不要在函数的参数处换行。</p></li></ol><h2 id="开发者测试"><a class="markdownIt-Anchor" href="#开发者测试"></a> 开发者测试</h2><p>同样需要配置Java sdk和Andriod SDK环境,除此之外还需要配置maven</p><h3 id="配置maven"><a class="markdownIt-Anchor" href="#配置maven"></a> 配置maven</h3><p>1.在<a href="http://maven.apache.org/download.cgi" target="_blank" rel="noopener">maven官网</a>下载<a href="http://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.6.2/binaries/apache-maven-3.6.2-bin.zip" target="_blank" rel="noopener"><br>apache-maven-3.6.2-bin.zip</a>后解压,根据<a href="https://www.bilibili.com/video/av37883702?from=search&amp;seid=16282408693429403604" target="_blank" rel="noopener">视频</a>配置好maven</p><p>2.发现最初安装eclipse时没有安装maven,于是安装maven.菜单–&gt;windwos–&gt;install new software–&gt;输入 <a href="http://download.eclipse.org/technology/m2e/milestones/1.4%E5%90%8E%E5%9B%9E%E8%BD%A6" target="_blank" rel="noopener">http://download.eclipse.org/technology/m2e/milestones/1.4后回车</a></p><p>环境配置好后,测试一下</p><p><img src="/2019/09/14/软件测试大赛/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%A7%E8%B5%9B%5C%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C.jpg" alt="测试结果"></p><ul><li>branchscore是主要评分规则</li><li>变异得分无法实时查看，使用选手最后一次的提交脚本统一运行</li></ul><h3 id="编程建议"><a class="markdownIt-Anchor" href="#编程建议"></a> 编程建议:</h3><ol><li>必须使用断言<ul><li>确认最后提交的测试用例全部正确， Webide或者客户端能运行得分</li><li>使用setup()和teardown()方法进行环境初始化</li><li>使用timeout限制测试用例运行时间，避免测试用例出现无响应情况</li></ul></li><li>Evosuite生成的捕获异常的自动测试用例，可能导致变异无法跑通，<br>学生自己注意</li><li>测试点注意事项:</li></ol><ul><li><p>对double类型进行判断</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">double</span> a = <span class="number">1.0</span>;</span><br><span class="line">assertEquals(<span class="number">1.0</span>,a,<span class="number">0.00001</span>) <span class="comment">// bingo</span></span><br><span class="line">    <span class="comment">//assertEquals(1.0,a,0.00001)     wrong</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>对控制台输出进行测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BinPackageTest</span></span>&#123;</span><br><span class="line">    String sep；</span><br><span class="line">    BinPackage bp；</span><br><span class="line">    PrintStream console=<span class="keyword">null</span>；</span><br><span class="line">    ByteArray InputStream in=<span class="keyword">null</span>；</span><br><span class="line">    ByteArrayOutputStream out=<span class="keyword">null</span>；</span><br><span class="line">    InputStream input=<span class="keyword">null</span>；</span><br><span class="line"></span><br><span class="line"><span class="meta">@Before</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUp</span><span class="params">()</span><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    bp=<span class="keyword">new</span> BinPackage()；</span><br><span class="line">    out=<span class="keyword">new</span> ByteArrayoutputstream()；</span><br><span class="line">    input=System.in；</span><br><span class="line">    console=System.out；</span><br><span class="line">    System.setout(<span class="keyword">new</span> PrintStream(out))；</span><br><span class="line">    sep=System.getProperty(<span class="string">"line.separator"</span>)；</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="meta">@After</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">tearDown</span><span class="params">()</span><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    System.setIn(input)；</span><br><span class="line">    out.close()；</span><br><span class="line">    System.setout(console)；</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Test</span>(timeout=<span class="number">4000</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span>&#123;</span><br><span class="line">    in=<span class="keyword">new</span> ByteArrayInputStream((<span class="string">"2"</span>+sep+<span class="string">"12"</span>tsep +<span class="string">"3"</span>+sep+<span class="string">"211"</span>+sep+<span class="string">"222"</span>+sep+<span class="string">"232"</span>).getBytes())；</span><br><span class="line">    System.setIn(in)；</span><br><span class="line">    bp.entrance()；</span><br><span class="line">    string ans=out.tostring()；</span><br><span class="line">    assertEquals(<span class="string">"false"</span>+ sep+<span class="string">"true"</span>+sep+<span class="string">"22"</span>+sep+<span class="string">"false"</span>+sep，ans)；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>对异常报错进行测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.*;</span><br><span class="line"><span class="keyword">import</span> org.junit.Rule;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.rules.ExpectedException;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountTest</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">double</span> DOUBLE_DELTA=<span class="number">1e-15</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Rule</span></span><br><span class="line">    <span class="keyword">public</span> ExpectedException  thrown=ExpectedException.none();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span>(timeout=<span class="number">4000</span>)</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Bank bank=<span class="keyword">new</span> Bank();</span><br><span class="line">        Account checkingAccount=<span class="keyword">new</span> Account(Account.CHECKING);</span><br><span class="line">        Customer bill=<span class="keyword">new</span> Customer(<span class="string">"Bi11"</span>).openAccount(checkingAccount);</span><br><span class="line">        bank.addCustomer(bil1);</span><br><span class="line">        thrown.expect(I1legalArgumentException.class);</span><br><span class="line">        thrown.expectMessage(<span class="string">"amount must be greater than zero"</span>);</span><br><span class="line">        checkingAccount.withdraw(-<span class="number">100</span>.e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="nextday-参数化单元测试测试用例设计"><a class="markdownIt-Anchor" href="#nextday-参数化单元测试测试用例设计"></a> <a href="https://www.cnblogs.com/juking/p/6885925.html" target="_blank" rel="noopener">Nextday 参数化单元测试(测试用例)设计</a></h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;软件测试大赛&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#软件测试大赛&quot;&gt;&lt;/a&gt; 软件测试大赛&lt;/h1&gt;
&lt;h2 id=&quot;初学流程&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#初学流程&quot;&gt;&lt;/a&gt; 初学
      
    
    </summary>
    
    
      <category term="环境配置" scheme="https://nymrli.top/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
      <category term="Java" scheme="https://nymrli.top/tags/Java/"/>
    
      <category term="软件测试" scheme="https://nymrli.top/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Java自动化构建工具——Maven</title>
    <link href="https://nymrli.top/2019/09/13/Java%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E2%80%94%E2%80%94Maven/"/>
    <id>https://nymrli.top/2019/09/13/Java自动化构建工具——Maven/</id>
    <published>2019-09-13T03:45:50.000Z</published>
    <updated>2019-09-15T08:07:30.945Z</updated>
    
    <content type="html"><![CDATA[<h1 id="java自动化构建工具maven"><a class="markdownIt-Anchor" href="#java自动化构建工具maven"></a> Java自动化构建工具——Maven</h1><h2 id="目前的技术在开发中存在的问题-maven作用"><a class="markdownIt-Anchor" href="#目前的技术在开发中存在的问题-maven作用"></a> 目前的技术在开发中存在的问题、Maven作用</h2><p>①一个项目就是一个工程</p><ul><li>如果项目非常庞大，就不适合继续使用package来划分模块。最好是每一个模块对应一个工程，利于分工协作。</li></ul><p>△借助于Maven就可以将一个项目拆分成多个工程。</p><p>②项目中需要的jar包必须手动“复制”、“粘贴”到WEB-INF/lib目录下</p><ul><li>带来的问题是：同样的jar包文件重复出现在不同的项目工程中，一方面浪费存储空间，另外也让工程比较臃肿。</li></ul><p>△借助Maven，可以将jar包仅仅保存在“仓库”中，有需要使用的工程“引用”这个文件接口，并不需要真的把jar包复制过来。</p><p>③jar包需要别人替我们准备好，或到官网下载</p><ul><li>不同技术的官网提供jar包下载的形式是五花八门的。<br>有些技术的官网就是通过Maven或SVN等专门的工具来提供下载的。<br>如果是以不规范的方式下载的jar包，那么其中的内容很可能也是不规范的。</li></ul><p>△借助于Maven可以以一种规范的方式下载jar包。因为所有知名框架或第三方工具的jar包以及按照统一的规范存放在了Maven的中央仓库中。<br>以规范的方式下载的jar包，内容也是可靠的。</p><p>④一个jar包依赖的其他jar包需要自己手动加入到项目中</p><ul><li>FileUpload组件→IO组件。commons-fileupload-1.3.jar依赖于commons-io-2.0.1.jar。如果所有jar包之间的依赖关系都需要程序员自己非常清楚的了解，那么就会极大的增加学习成本。</li></ul><p>△Maven会自动将被依赖的jar包导入进来。</p><h2 id="maven是什么what"><a class="markdownIt-Anchor" href="#maven是什么what"></a> Maven是什么[What]</h2><p>①Maven是一款服务于Java平台的自动化构建工具。<br>Make→Ant→Maven→Gradle妹文、麦文<br>②构建<br>[1]概念：以&quot;ava源文件”、“框架配置文件”、&quot;JSP”、“HTML”、“图片”等资源为“原材料”，去“生产”一个可以运行的项目的过程。</p><ul><li>编译</li><li>部署</li><li>搭建</li></ul><p>[2]编译：Java源文件[User.java]→编译→Class字节码文件[User.class]→交给JVM去执行<br>[3]部署：一个BS项目最终运行的并不是动态Web工程本身，而是这个动态Web工程“编译的结果&quot;<br>生的鸡→处理一熟的鸡<br>动态Web工程→编译、部署→编译结果</p><h2 id="构建过程中的各个环节"><a class="markdownIt-Anchor" href="#构建过程中的各个环节"></a> 构建过程中的各个环节</h2><p>[1]清理：将以前编译得到的旧的class字节码文件删除，为下一次编译做准备<br>[2]编译：将Java源程序编程成class字节码文件<br>[3]测试：自动测试，自动调用junit程序<br>[4]报告：测试程序执行的结果<br>[5]打包：动态Web工程打war包，Java工程打jar包<br>[6]安装：Maven特定的概念——将打包得到的文件复制到“仓库”中的指定位置<br>[7]部署：将动态Web工程生成的war包复制到Servlet容器的指定目录下，使其可以运行</p><h2 id="常用maven命令"><a class="markdownIt-Anchor" href="#常用maven命令"></a> 常用Maven命令</h2><p>①注意：执行与构建过程相关的Maven命令，必须进入pom.xml所在的目录。<br>与构建过程相关：编译、测试、打包、……<br>②常用命令<br>[1]mvn clean：清理<br>[2]mvn compile：编译主程序<br>[3]mvn test-compile：编译测试程序<br>[4]mvn test：执行测试<br>[5]mvn package：打包</p><h2 id="联网问题"><a class="markdownIt-Anchor" href="#联网问题"></a> 联网问题</h2><p>①Maven的核心程序中仅仅定义了抽象的生命周期，但是具体的工作必须由特定的插件来完成。而插件本身并不包含在Maven的核心程序中。<br>②当我们执行的Maven命令需要用到某些插件时，Maven核心程序会首先到本地仓库中查找。<br>③本地仓库的默认位置：[系统中当前用户的家目录]/.m2/repository 如<code>C:/Users/[登录当前系统的用户名]/.m2/repository</code><br>④Maven核心程序如果在本地仓库中找不到需要的插件，那么它会自动连接外网，到中央仓库下载。<br>⑤如果此时无法连接外网，则构建失败。<br>⑥修改默认本地仓库的位置可以让Maven核心程序到我们事先准备好的目录下查找插件<br>[1]找到Maven解压目录<code>/conf/settings.xml</code><br>[2]在settings.xml文件中找到localRepository标签<br>[3]将<code>&lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt;</code>从注释中取出<code>E:/apache-maven-3.6.2/MavenRepo</code><br>[4]将标签体内容修改为已经准备好的Maven仓库目录</p><h3 id="补充"><a class="markdownIt-Anchor" href="#补充"></a> 补充:</h3><p>换镜像,可以在settings.xml的第153行左右,设置阿里云镜像</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/av63847523/?p=3" target="_blank" rel="noopener">介绍Maven的视频</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;java自动化构建工具maven&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#java自动化构建工具maven&quot;&gt;&lt;/a&gt; Java自动化构建工具——Maven&lt;/h1&gt;
&lt;h2 id=&quot;目前的技术在开发中存在的问题-maven作用&quot;
      
    
    </summary>
    
    
      <category term="Java" scheme="https://nymrli.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>打jar包和使用jar包</title>
    <link href="https://nymrli.top/2019/09/13/%E6%89%93jar%E5%8C%85%E5%92%8C%E4%BD%BF%E7%94%A8jar%E5%8C%85/"/>
    <id>https://nymrli.top/2019/09/13/打jar包和使用jar包/</id>
    <published>2019-09-13T03:45:11.000Z</published>
    <updated>2019-09-15T08:07:31.064Z</updated>
    
    <content type="html"><![CDATA[<h1 id="打jar包和使用jar包"><a class="markdownIt-Anchor" href="#打jar包和使用jar包"></a> 打jar包和使用jar包</h1><h2 id="一-为什么要打jar包"><a class="markdownIt-Anchor" href="#一-为什么要打jar包"></a> 一、为什么要打jar包</h2><p>给别人用的时候一般给别人的是class文件。如果有很多类这么办？把类变成一个压缩包！windows下的压缩包是.zip格式等，而eclipse压缩包是.jar格式。</p><h2 id="二-如何查看jar包"><a class="markdownIt-Anchor" href="#二-如何查看jar包"></a> 二、如何查看jar包</h2><p>用<strong>解压缩软件解压</strong>即可。可以看到里面有哪些class文件。</p><h2 id="三-如何开发jar包"><a class="markdownIt-Anchor" href="#三-如何开发jar包"></a> 三、如何开发jar包</h2><p>开发jar包的人员开发流程：</p><h3 id="步骤1编写类"><a class="markdownIt-Anchor" href="#步骤1编写类"></a> 步骤1:编写类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//GetSum.java</span></span><br><span class="line"><span class="keyword">package</span> cn.itcast.sum;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetSum</span></span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="title">getSum</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> a+b;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤2打包成jar包"><a class="markdownIt-Anchor" href="#步骤2打包成jar包"></a> 步骤2:打包成jar包</h3><p>在要导出的类上,右键-&gt;Export-&gt;java -&gt; JAR file,然后选择路径,如D:/sum.jar -&gt;导出。</p><p>打开jar包可以看到jar包中含有class文件。</p><h2 id="四-如何使用jar包"><a class="markdownIt-Anchor" href="#四-如何使用jar包"></a> 四、如何使用jar包</h2><p>当别人发过来一个jar包(jar包里面有很多class文件)后，比如上面的sum.jar包，如何使用呢？</p><p>有两种方法。第一种方法一般不用，太low了。</p><h4 id="使用方法一这个方法太low了不用"><a class="markdownIt-Anchor" href="#使用方法一这个方法太low了不用"></a> 使用方法一：这个方法太low了，不用</h4><p>步骤1:编写Test.java文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Test.java</span></span><br><span class="line"><span class="keyword">import</span> cn.itcast.sum.*;<span class="comment">//光设置classpath的环境变量还是不够，还要导入包 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">            <span class="keyword">int</span> a = GetSum.getSum(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">            System.out.println(); </span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>步骤2:在cmd窗口中使用</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="built_in">set</span> classpath = D:/sum.jar;                        //设置环境变量，知道在哪里找jar包。只在当前的窗口有效。</span><br><span class="line">&gt;javac Test.java</span><br><span class="line">&gt;java Test</span><br></pre></td></tr></table></figure><h4 id="使用方法二一般使用这个方法"><a class="markdownIt-Anchor" href="#使用方法二一般使用这个方法"></a> 使用方法二：一般使用这个方法</h4><p>步骤1:在工程目录下新建文件夹lib：File-&gt;New-&gt;Folder,文件名lib，将需要使用的jar包复制进去（ctrl c、ctrl v）。在工程上右键刷新就可以看到jar包了</p><p>步骤2:在需要使用的jar包上，右键-&gt;build path -&gt;Add to build Path，发现多了一个小奶瓶～</p><p>步骤3:编写测试类Test.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Test.java</span></span><br><span class="line"><span class="keyword">import</span> cn.itcast.GetSum;<span class="comment">//不用自己导入。当下面输入GetSum.getSum()时候，按Ctrl+Shift+o自动输入包名。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">            <span class="keyword">int</span> a = GetSum.getSum(<span class="number">1</span>,<span class="number">2</span>);            <span class="comment">//直接使用jar包下面的class类</span></span><br><span class="line">            System.out.println(); </span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：</p><p>鼠标点到getSum()上，然后按F3，是看不到源码的。出现下面这种界面。这是因为<strong>源码不在jdk里面</strong>。<br>可以点击Attach Source按钮，然后点击&quot;External File…&quot;或者&quot;External Folder&quot;找到jar包对应的源码。（jar包中有class文件，并不是源码。）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;打jar包和使用jar包&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#打jar包和使用jar包&quot;&gt;&lt;/a&gt; 打jar包和使用jar包&lt;/h1&gt;
&lt;h2 id=&quot;一-为什么要打jar包&quot;&gt;&lt;a class=&quot;markdownIt-Anc
      
    
    </summary>
    
    
      <category term="Java" scheme="https://nymrli.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>验证码识别程序设计流程</title>
    <link href="https://nymrli.top/2019/09/09/%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E6%B5%81%E7%A8%8B/"/>
    <id>https://nymrli.top/2019/09/09/验证码识别程序设计流程/</id>
    <published>2019-09-09T13:31:35.000Z</published>
    <updated>2019-09-15T08:07:31.101Z</updated>
    
    <content type="html"><![CDATA[<h1 id="验证码识别程序设计流程"><a class="markdownIt-Anchor" href="#验证码识别程序设计流程"></a> 验证码识别程序设计流程</h1><blockquote><p>以<a href="http://jwxt.njupt.edu.cn/" target="_blank" rel="noopener">南邮正方教务系统</a>为例</p></blockquote><h2 id="找到验证码图片的链接"><a class="markdownIt-Anchor" href="#找到验证码图片的链接"></a> 找到验证码图片的链接</h2><blockquote><p>“<a href="http://jwxt.njupt.edu.cnCheckCode.aspx" target="_blank" rel="noopener">http://jwxt.njupt.edu.cnCheckCode.aspx</a>”</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getCaptcha</span><span class="params">()</span>:</span></span><br><span class="line">    CAPTCHA_URL = <span class="string">"http://jwxt.njupt.edu.cn/CheckCode.aspx"</span></span><br><span class="line"></span><br><span class="line">    r = requests.get(CAPTCHA_URL)</span><br><span class="line">    img = r.content</span><br><span class="line">    img = Image.open(BytesIO(img))</span><br><span class="line">    <span class="keyword">return</span> img</span><br></pre></td></tr></table></figure><h2 id="对图片去噪"><a class="markdownIt-Anchor" href="#对图片去噪"></a> 对图片去噪</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">image_pre_process</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="comment"># 去除杂色点</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(self.image.width):</span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> range(self.image.height):</span><br><span class="line">            pix = self.image.getpixel((x, y))</span><br><span class="line">            <span class="keyword">if</span> pix == <span class="number">43</span>:</span><br><span class="line">                self.image.putpixel((x, y), WHITE)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    self.image.putpixel((x, y), BLACK)</span><br><span class="line"></span><br><span class="line">                    <span class="comment"># 去除单像素噪点并进行二值化(八值法)</span></span><br><span class="line">                    <span class="keyword">for</span> x <span class="keyword">in</span> range(self.image.width):</span><br><span class="line">                        <span class="keyword">for</span> y <span class="keyword">in</span> range(self.image.height):</span><br><span class="line">                            count = <span class="number">0</span></span><br><span class="line">                            <span class="keyword">if</span> x != <span class="number">0</span> <span class="keyword">and</span> y != <span class="number">0</span> <span class="keyword">and</span> x != self.image.width - <span class="number">1</span> <span class="keyword">and</span> y != self.image.height - <span class="number">1</span>:</span><br><span class="line">                                <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">-1</span>, <span class="number">2</span>):</span><br><span class="line">                                    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">-1</span>, <span class="number">2</span>):</span><br><span class="line">                                        tx = x + i</span><br><span class="line">                                        ty = y + j</span><br><span class="line">                                        <span class="keyword">if</span> self.image.getpixel((tx, ty)) == BLACK:</span><br><span class="line">                                            count += <span class="number">1</span></span><br><span class="line">                                            <span class="keyword">if</span> self.image.getpixel((x, y)) == WHITE <span class="keyword">and</span> count == <span class="number">8</span>:</span><br><span class="line">                                                <span class="comment"># 如果一个白色区域的附近八连通区域都是黑色,那么该点也认为是黑色</span></span><br><span class="line">                                                self.image.putpixel((x, y), BLACK)</span><br><span class="line">                                                self.image = self.image.convert(<span class="string">'1'</span>)</span><br></pre></td></tr></table></figure><p>△二值化:将需要识别的蓝色字符(43)转为白色(WHITE),其他的全部变为黑色(BLACK)</p><ul><li>二值化的过程需要灵性一点,不能直接用convert函数,那样的效果并不理想。</li></ul><p>直接convert的效果:</p><p><img src="/2019/09/09/验证码识别程序设计流程/hexo/source/_posts/%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E6%B5%81%E7%A8%8B/%E7%9B%B4%E6%8E%A5%E4%BA%8C%E5%80%BC%E5%8C%96.bmp" alt="直接二值化"></p><p>先对蓝色43进行二值化，然后去单点噪声、最后二值化的效果：</p><p><img src="/2019/09/09/验证码识别程序设计流程/hexo/source/_posts/%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E6%B5%81%E7%A8%8B/%E5%8E%BB%E5%99%AA%E5%86%8D%E4%BA%8C%E5%80%BC%E5%8C%96.bmp" alt="去噪再二值化"></p><h2 id="设计打码程序设计"><a class="markdownIt-Anchor" href="#设计打码程序设计"></a> 设计打码程序设计</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">方便收集验证码的简单打码工具</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageTk</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CaptchaGUI</span>:</span></span><br><span class="line">    captcha_url = <span class="string">"http://jwxt.njupt.edu.cn/CheckCode.aspx"</span></span><br><span class="line">    login_url = <span class="string">"http://jwxt.njupt.edu.cn/default2.aspx"</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">        self.s = requests.session()</span><br><span class="line">        self.get_viewstate()</span><br><span class="line">        self.r = self.s.get(self.captcha_url)</span><br><span class="line">        self.im = Image.open(BytesIO(self.r.content))</span><br><span class="line"></span><br><span class="line">        self.root = tkinter.Tk()</span><br><span class="line">        self.tkimg = ImageTk.PhotoImage(self.im)</span><br><span class="line">        self.imgLabel = tkinter.Label(self.root, image=self.tkimg)</span><br><span class="line">        self.imgLabel.pack()</span><br><span class="line">        self.message = tkinter.Entry(self.root)</span><br><span class="line">        self.message.pack()</span><br><span class="line">        self.root.bind(<span class="string">'&lt;Return&gt;'</span>, self.judge_and_save)</span><br><span class="line">        self.root.mainloop()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_viewstate</span><span class="params">(self)</span>:</span></span><br><span class="line">        r = self.s.get(self.login_url)</span><br><span class="line">        soup = BeautifulSoup(r.content, <span class="string">"lxml"</span>)</span><br><span class="line">        self.viewstate = soup.find(<span class="string">'input'</span>, attrs=&#123;<span class="string">"name"</span>: <span class="string">"__VIEWSTATE"</span>&#125;).get(<span class="string">"value"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">judge_and_save</span><span class="params">(self, event)</span>:</span></span><br><span class="line">        captcha_value = self.message.get()</span><br><span class="line">        print(captcha_value)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">"__VIEWSTATE"</span>: self.viewstate,</span><br><span class="line">            <span class="string">'txtUserName'</span>: <span class="string">""</span>,  <span class="comment"># 账号</span></span><br><span class="line">            <span class="string">'TextBox2'</span>: <span class="string">""</span>,  <span class="comment"># 密码</span></span><br><span class="line">            <span class="string">'RadioButtonList1'</span>: <span class="string">"%D1%A7%C9%FA"</span>,</span><br><span class="line">            <span class="string">"Button1"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"txtSecretCode"</span>: captcha_value,</span><br><span class="line">            <span class="string">"hidPdrs"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"hidsc"</span>: <span class="string">""</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        r = self.s.post(self.login_url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"请到信息维护中完善个人联系方式"</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(<span class="string">"成功！"</span>)</span><br><span class="line">            <span class="keyword">with</span> open(<span class="string">"captchas/&#123;&#125;.gif"</span>.format(captcha_value), <span class="string">'wb+'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(self.r.content)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"验证码输错了"</span>)</span><br><span class="line">        self.get_viewstate()</span><br><span class="line">        self.r = self.s.get(self.captcha_url)</span><br><span class="line">        self.im = Image.open(BytesIO(self.r.content))</span><br><span class="line">        self.tkimg = ImageTk.PhotoImage(self.im)</span><br><span class="line">        self.imgLabel.config(image=self.tkimg)</span><br><span class="line">        self.message.delete(<span class="number">0</span>, <span class="string">'end'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    captcha_gui = CaptchaGUI()</span><br></pre></td></tr></table></figure><h2 id="将结果分割到每个字符"><a class="markdownIt-Anchor" href="#将结果分割到每个字符"></a> 将结果分割到每个字符</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_split_image</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="comment"># 切割验证码，返回包含四个字符图像的列表</span></span><br><span class="line">    y_min, y_max = <span class="number">0</span>, <span class="number">22</span></span><br><span class="line">    split_lines = [<span class="number">5</span>, <span class="number">17</span>, <span class="number">29</span>, <span class="number">41</span>, <span class="number">53</span>]</span><br><span class="line">    ims = [rotate_img(self.image.crop([u, y_min, v, y_max])) <span class="keyword">for</span> u, v <span class="keyword">in</span> zip(split_lines[:<span class="number">-1</span>], split_lines[<span class="number">1</span>:])]</span><br><span class="line">    <span class="keyword">return</span> ims</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">spilt2chars</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    分割已有的数据为字符并保存</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        shutil.rmtree(<span class="string">'captcha_chars'</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    os.mkdir(<span class="string">"captcha_chars"</span>)</span><br><span class="line">    values = <span class="string">"abcdefghijklmnopqrstuvwxyz1234567890"</span></span><br><span class="line">    <span class="keyword">for</span> value <span class="keyword">in</span> values:</span><br><span class="line">        os.mkdir(<span class="string">'captcha_chars/&#123;&#125;'</span>.format(value))</span><br><span class="line"></span><br><span class="line">    file_names = os.listdir(<span class="string">'captchas'</span>)</span><br><span class="line">    <span class="keyword">for</span> file_name <span class="keyword">in</span> file_names:  <span class="comment">#</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(file_name) <span class="keyword">and</span> file_name != <span class="string">'.DS_Store'</span>:</span><br><span class="line">            values = file_name[:<span class="number">4</span>]</span><br><span class="line">            im = Image.open(<span class="string">'captchas/&#123;&#125;'</span>.format(file_name))</span><br><span class="line">            captcha = ZhengfangCaptcha(im)</span><br><span class="line">            <span class="comment"># 用的是去噪、二值化的图片</span></span><br><span class="line">            <span class="keyword">for</span> im_part, value <span class="keyword">in</span> zip(captcha.handle_split_image(), values):</span><br><span class="line">                m = hashlib.md5()</span><br><span class="line">                m.update(<span class="string">"&#123;&#125;&#123;&#125;"</span>.format(time.time(), value).encode(<span class="string">'utf8'</span>))</span><br><span class="line">                im_part.save(<span class="string">"captcha_chars/&#123;&#125;/&#123;&#125;.png"</span>.format(value, m.hexdigest()))</span><br></pre></td></tr></table></figure><h2 id="保存模型数据"><a class="markdownIt-Anchor" href="#保存模型数据"></a> 保存模型数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="comment"># spilt2chars()</span></span><br><span class="line">    letters = list(<span class="string">'qwertyuiopasdfghjklzcxvbnm1234567890'</span>)</span><br><span class="line">    <span class="comment"># 将图像数据转为向量数据并保存</span></span><br><span class="line">    imageset = []</span><br><span class="line">    <span class="keyword">for</span> letter <span class="keyword">in</span> letters:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">for</span> img <span class="keyword">in</span> os.listdir(<span class="string">'captcha_chars/&#123;&#125;/'</span>.format(letter)):</span><br><span class="line">                <span class="keyword">if</span> img != <span class="string">"Thumbs.db"</span> <span class="keyword">and</span> img != <span class="string">".DS_Store"</span>:</span><br><span class="line">                    vector = ZhengfangCaptcha.buildvector(Image.open(<span class="string">"captcha_chars/&#123;&#125;/&#123;&#125;"</span>.format(letter, img)))</span><br><span class="line">                    imageset.append(&#123;letter: vector&#125;)</span><br><span class="line">        <span class="keyword">except</span> FileNotFoundError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'image_data.json'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        json.dump(imageset, f)</span><br></pre></td></tr></table></figure><h2 id="识别"><a class="markdownIt-Anchor" href="#识别"></a> 识别</h2><p>辅助函数:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> operator</span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"></span><br><span class="line">BLACK = <span class="number">0</span></span><br><span class="line">WHITE = <span class="number">255</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">magnitude</span><span class="params">(concordance)</span>:</span></span><br><span class="line">    total = reduce(operator.add, map(<span class="keyword">lambda</span> x: x ** <span class="number">2</span>, concordance))</span><br><span class="line">    <span class="keyword">return</span> math.sqrt(total)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算矢量之间的余弦距离</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">distance_cos</span><span class="params">(vector1, vector2)</span>:</span></span><br><span class="line">    sum_value = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> value1, value2 <span class="keyword">in</span> zip(vector1, vector2):</span><br><span class="line">        sum_value += value1 * value2</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> - sum_value / (magnitude(vector1) * magnitude(vector2))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">distance_hanmming</span><span class="params">(vector1, vector2)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    计算两向量的汉明距，（向量只包含0，1时）</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> value1, value2 <span class="keyword">in</span> zip(vector1, vector2):</span><br><span class="line">        <span class="keyword">if</span> value1 != value2:</span><br><span class="line">            count += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> count</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">build_vector</span><span class="params">(image, binary=True)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    图像转一维特征向量</span></span><br><span class="line"><span class="string">    :param image: pillow Image object with mode 1 or mode L</span></span><br><span class="line"><span class="string">    :param binary: 黑白图是否生成为0，1向量</span></span><br><span class="line"><span class="string">    :return: list of int</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    vector = []</span><br><span class="line">    <span class="keyword">for</span> pixel <span class="keyword">in</span> image.getdata():</span><br><span class="line">        <span class="keyword">if</span> binary:</span><br><span class="line">            vector.append(<span class="number">1</span> <span class="keyword">if</span> pixel == <span class="number">255</span> <span class="keyword">else</span> <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            vector.append(pixel)</span><br><span class="line">    <span class="keyword">return</span> vector</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rotate_img</span><span class="params">(image)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    根据图像在x轴方向投影大小确定字符的摆放方向</span></span><br><span class="line"><span class="string">    :param image: PIL.Image object</span></span><br><span class="line"><span class="string">    :return: rotated Image object</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    min_count = <span class="number">1000</span></span><br><span class="line">    final_angle = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> angle <span class="keyword">in</span> range(<span class="number">-45</span>, <span class="number">45</span>):</span><br><span class="line">        x_count = <span class="number">0</span></span><br><span class="line">        ti = image.rotate(angle, expand=<span class="keyword">True</span>)</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> range(ti.width):</span><br><span class="line">            <span class="keyword">for</span> y <span class="keyword">in</span> range(ti.height):</span><br><span class="line">                <span class="keyword">if</span> ti.getpixel((x, y)) == WHITE:</span><br><span class="line">                    x_count += <span class="number">1</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> x_count &lt; min_count:</span><br><span class="line">            min_count = x_count</span><br><span class="line">            final_angle = angle</span><br><span class="line">    image = image.rotate(final_angle, expand=<span class="keyword">False</span>)</span><br><span class="line">    <span class="keyword">return</span> image</span><br></pre></td></tr></table></figure><p>识别部分:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xxx</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    knn 识别正方验证码</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, image)</span>:</span></span><br><span class="line">        self.image = image</span><br><span class="line">        self.image_pre_process()</span><br><span class="line">        <span class="comment"># 初始化时就对图片进行去噪和二值化</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">crack</span><span class="params">(self)</span>:</span></span><br><span class="line">        result = []</span><br><span class="line">        <span class="comment"># 加载数据</span></span><br><span class="line">        <span class="keyword">with</span> open(os.path.join(current_dir, <span class="string">'image_data.json'</span>), <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            image_data = json.load(f)</span><br><span class="line">            <span class="keyword">for</span> letter <span class="keyword">in</span> self.handle_split_image():</span><br><span class="line">                letter_vector = build_vector(letter)</span><br><span class="line">                guess = []</span><br><span class="line">                <span class="keyword">for</span> image <span class="keyword">in</span> image_data:</span><br><span class="line">                    <span class="keyword">for</span> x, y <span class="keyword">in</span> image.items():</span><br><span class="line">                        guess.append((distance_hanmming(y, letter_vector), x))</span><br><span class="line">                        guess.sort()</span><br><span class="line">                        neighbors = guess[:<span class="number">15</span>]  <span class="comment"># 距离最近的十五个向量</span></span><br><span class="line">                        class_votes = &#123;&#125;  <span class="comment"># 投票</span></span><br><span class="line">                        <span class="keyword">for</span> neighbor <span class="keyword">in</span> neighbors:</span><br><span class="line">                            class_votes.setdefault(neighbor[<span class="number">-1</span>], <span class="number">0</span>)</span><br><span class="line">                            class_votes[neighbor[<span class="number">-1</span>]] += <span class="number">1</span></span><br><span class="line">                            sorted_votes = sorted(class_votes.items(), key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="keyword">True</span>)</span><br><span class="line">                            result.append(sorted_votes[<span class="number">0</span>][<span class="number">0</span>])</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">''</span>.join(result)</span><br></pre></td></tr></table></figure><p>△.在对象的识别上,一定要保证两者的统一性。而因为进行预处理的图片识别率更高。即<strong>模型需要保存去噪、二值化的数据，识别的图片在识别前也要做相应的处理</strong>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;验证码识别程序设计流程&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#验证码识别程序设计流程&quot;&gt;&lt;/a&gt; 验证码识别程序设计流程&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;以&lt;a href=&quot;http://jwxt.njupt.edu.
      
    
    </summary>
    
    
      <category term="爬虫" scheme="https://nymrli.top/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Python" scheme="https://nymrli.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>新加坡游玩经验</title>
    <link href="https://nymrli.top/2019/09/09/%E6%96%B0%E5%8A%A0%E5%9D%A1%E6%B8%B8%E7%8E%A9%E7%BB%8F%E9%AA%8C/"/>
    <id>https://nymrli.top/2019/09/09/新加坡游玩经验/</id>
    <published>2019-09-09T11:35:49.000Z</published>
    <updated>2019-09-15T08:07:31.075Z</updated>
    
    <content type="html"><![CDATA[<h1 id="新加坡南洋理工大学访学"><a class="markdownIt-Anchor" href="#新加坡南洋理工大学访学"></a> 新加坡南洋理工大学访学</h1><p>此次访学长达14天，不少安排都是学校安排，在此仅列出个人安排、经验心得。</p><hr><h2 id="门票购买"><a class="markdownIt-Anchor" href="#门票购买"></a> 门票购买：</h2><p>番薯游：这是老师推荐我们的，但下载以后感觉界面还是比较丑的，而且价格也不是非常便宜。这家是唯一一家促进扫码买门票的公司。</p><p>KLOOK客路：界面比番薯游好多了，还是非常精致的。最大的优势在于可以找到经典的位置及景点介绍、门票时间等信息。</p><p>淘宝：跟好几个平台对比之后，价格应该是最低的，并且时间限制比较小，其他的可能要预约，而TB当天购买就行（强调：动物园门票）</p><p>▲特别说明下，动物园的门票水很深。当面购买$50,我当时去时没有预约，结果在KLOOK上看当天的票已经没有库存了，于是问了下换票机旁边的黄牛，他看我一个人，给我的报价也是50，不知道他咋想的。最后这个预约问题是通过淘宝解决的，￥156一张夜间动物园门票，5分钟就出票了。购买后会有一张带有二维码的PDF发到邮箱中，用机子扫出后即可。</p><hr><h2 id="地铁卡购买"><a class="markdownIt-Anchor" href="#地铁卡购买"></a> 地铁卡购买：</h2><p>网上的说法都推荐购买<strong>EZ-LINK</strong>，但我们在NTU里的711便利店买时最后一张正好卖掉了，于是我们买的是这样的卡，后来发现这卡比EZ-LINK强多了。</p><p>由于它支持多家银行支付（由于种种原因，扫码支付在新加坡很难推行），因此其实这张卡十分的方便。既能在学校食堂消费，又能在外消费，同时地铁公交也都支持。</p><h2 id="地铁公交价格明细"><a class="markdownIt-Anchor" href="#地铁公交价格明细"></a> 地铁公交价格明细：</h2><p>如果有卡和没卡，价格区别是很大的，因此如果出行需要坐公交、地铁的话，强烈建议直接办地铁卡。</p><p>虽然每次充钱最低10/，但几乎每次坐车都在0.83/以上，所以开销还是非常大的。2.坐地铁低于2/就无法进站，公交低于1（不知道是不是所有）</p><hr><h2 id="行为规范"><a class="markdownIt-Anchor" href="#行为规范"></a> 行为规范：</h2><p>新加坡的治安、素质是相当高的。其中比较明显的现象有：不乱丢垃圾；在地铁上不能饮食；地铁、公交先下后上；</p><p>▲1.如果有残疾人士，会有人帮忙放下挡板，帮残疾人士下车。我看到的那次是车上只有司机，坐轮椅的老奶奶要下公交，司机特地跑来放挡板，帮老人下车。</p><p>2.问司机路，他甚至会下车下来给你指往哪个方向怎么走</p><p>3.公交车到站需要按<strong>BUS STOPPING</strong>按钮，不然司机是真的不会停的！地铁的话几乎每站都会停。还有个非常重要的是，BUS每一站是不会报的，因此在新加坡坐公交很容易坐过头，这就需要看清楚地图定位和留意每一站名字。</p><hr><h2 id="地图推荐"><a class="markdownIt-Anchor" href="#地图推荐"></a> 地图推荐</h2><p>高德不支持国外，因此我主要使用的是两个：Google Maps、百度地图。</p><p>其实百度地图挺好用的，我同学都用的百度，没必要特地去下载Google Maps。而在此我说一下我用Google Maps碰到的问题。1.坐地铁、公交时不会提醒花费。2.没有Google Player服务，周围推荐功能无法使用。3.我用的是MI6，但总感觉有时定位效果特别差，不知道是我手机GPS功能问题，还是Google Maps的问题</p><hr><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>新加坡是非常适合国人旅游的，首先是新加坡双语教学，很多人都会说中文，遇上麻烦，看看周围的人总能碰到说中文的；其次是商城里也大多有中文介绍，买东西时几乎每个店都会有说中文的店员来做国人生意，也几乎不太会碰上麻烦。</p><p>新加坡有70%的人是中国人或是华裔，10%是印度人，10%是马来人，还有10%是来自欧洲和日本、韩国等地。总的来说中国人比例还是非常大的，而且85%左右的旅客都来自中国，所以其实路上看到很多说中文的说不定也是跟你一样的游客。我交流比较多的都是中国人，特别是彭年纪大的老奶奶或是老爷爷，你如果向他问路，他们都会非常热心地帮助，恨不得亲自带你去了。</p><hr><h2 id="外文缩写"><a class="markdownIt-Anchor" href="#外文缩写"></a> 外文缩写</h2><p>新加坡，几乎都有双语标注，因此英语不好的问题也不大。这边就列出几个常见的缩写</p><p>st --&gt; street</p><p>rd --&gt; road</p><p>sch --&gt; school</p><hr><h2 id="景点推荐"><a class="markdownIt-Anchor" href="#景点推荐"></a> 景点推荐：</h2><h3 id="乌节路-orchard-road"><a class="markdownIt-Anchor" href="#乌节路-orchard-road"></a> 乌节路 Orchard road</h3><ul><li>购物一条街，ION商城，义乌城……里面全是品牌。</li></ul><h3 id="圣淘沙-sentosa"><a class="markdownIt-Anchor" href="#圣淘沙-sentosa"></a> 圣淘沙 Sentosa</h3><ul><li>环球影城就在这岛上，门票350+，我没去，同学去了，感觉很不错，类似迪士尼的游乐园，有多种的主题</li></ul><h3 id="滨海湾-marina-bay"><a class="markdownIt-Anchor" href="#滨海湾-marina-bay"></a> 滨海湾 Marina Bay</h3><ul><li>superTree Grove是免费的，晚上有表演，大约在8：45左右开始，非常的好看。此处景点有两个收费的地方，我也没去。</li><li>靠近湖边，有两个博物馆，一个是<strong>红点设计博物馆</strong>（这个我去了，门票大约￥70，地方很小，出来的商店卖的东西很贵）；另一个是<strong>金沙艺术科学博物馆</strong>（主题是“超越未来”，看介绍有点像是失恋博物馆里的光影效果）</li></ul><h3 id="鱼尾狮公园-merlion-park"><a class="markdownIt-Anchor" href="#鱼尾狮公园-merlion-park"></a> 鱼尾狮公园 Merlion  Park</h3><ul><li>其实没啥好看的，有鱼尾狮，打个卡、拍个照差不多了。</li></ul><h3 id="植物园-botanic-garden"><a class="markdownIt-Anchor" href="#植物园-botanic-garden"></a> 植物园 Botanic garden</h3><ul><li>免费，徒步走还挺大的，大约半小时。里面植物很多，一般都是国内看不到的，喜欢看植物的人可以去看一下。同时那也有不少动物，都可以当个小型动物园了。</li></ul><h3 id="小印度-little-indian"><a class="markdownIt-Anchor" href="#小印度-little-indian"></a> 小印度 Little Indian</h3><ul><li>印度人很多，印度氛围很重。其他的话个人感觉没什么意思，在那边比较有名的印度餐馆里吃了咖喱鱼头，味道还不错，只不过两个人吃点中份的有点太多了。</li><li>Mustafa百货商城，真的很大，有两栋楼互相连通，深不见底，一共有四层。那边的东西也是比较便宜的，比如在NTU超市里买的饮料/$2.5，这边只要/$1.8左右；还有oldTown咖啡，在fairprice超市卖/$7.2，在Mustafa只要$5.4。这边非常值得去，可以在这捎点带给朋友的东西</li></ul><h3 id="夜间动物园"><a class="markdownIt-Anchor" href="#夜间动物园"></a> 夜间动物园</h3><ul><li>比较偏，去和回都很麻烦，坐地铁转公交啥的回NTU要1个半钟头，打车回只要15分钟。门票现场买时/$50，淘宝上￥150。买了门票进去后现有游览车观光，但是如果不加钱是英文讲解的（几乎听不懂w_w）。由于夜色较暗（灯光考虑到对动物的效果也不是很亮），且大多动物都已睡眠，所以游览车观光没什么意思。比较有意思的是<strong>动物表演</strong>，去的人几乎都会推荐，但需要注意的是，要提前等，因为先来先得位置，位置满后就不能进了，超时10分钟也不会让进了（表演一共15-20分钟左右）。游览车观光后的自由行也是比较有意思的，氛围就像是在丛林中，隔一段距离就是一个品种的动物。有很多平时没见过的大动物与小动物，小动物一般都有玻璃格挡，大动物的站台与马路就一道坎的隔离，管理员似乎很放心他们不会跑出来（老虎除外）</li></ul><h3 id="城市规划馆ura"><a class="markdownIt-Anchor" href="#城市规划馆ura"></a> 城市规划馆URA</h3><ul><li>很有意思，由60岁的Steven给我们讲解了新加坡建设的历史以及未雨绸缪地规划，其中3D立体模型图非常精致地还原了各地地细节，在游玩之前看一下这个对出游有极大的帮助</li></ul><h3 id="国家博物馆"><a class="markdownIt-Anchor" href="#国家博物馆"></a> 国家博物馆</h3><ul><li>真的很有意思，比国内的博物馆真实多了。在里面能看到新加坡的发展史、侵略史，能看到英军的身影，也能看到中国和日本的身影。当然其中比较有意思的是有真的坦克在里面展览。</li><li>比较遗憾的是我们是上午10点开门的时候去的，而讲解在11：30才开始，因此我们全参观完后讲解正刚开始，侥幸还听到了一点，真的很有意思，建议要去的话凑着这个时间点去，因为虽然有手册介绍，但是自己看真的可能看不明白</li></ul><h3 id="国家美术馆"><a class="markdownIt-Anchor" href="#国家美术馆"></a> 国家美术馆</h3><ul><li>由于8月上旬新加坡国庆在美术馆附近举行，因此8月9日之前都关闭着，因此没几乎进去看看。</li></ul><h2 id="美食推荐"><a class="markdownIt-Anchor" href="#美食推荐"></a> 美食推荐</h2><p>叻沙</p><p>沙爹</p><p>福建炒面</p><p>印度飞饼</p><p>辣椒螃蟹(Big Eater seafood)</p><p>肉骨茶</p><hr><h2 id="附录2019年8月9日新加坡国庆节节目安排"><a class="markdownIt-Anchor" href="#附录2019年8月9日新加坡国庆节节目安排"></a> <strong><a href="https://mp.weixin.qq.com/s/UCpV10WZm8lcKNH08YNoTA" target="_blank" rel="noopener">附录：2019年8月9日新加坡国庆节节目安排</a></strong></h2><blockquote><p>（万事通根据预演推测独家整理）</p></blockquote><p>下午6点3分-6点10分 红狮跳伞队表演（随天气变化时间）</p><p>下午6点27分-下午6点30分 特遣队入场</p><p>下午6:35-6:38 国家色彩和荣誉护卫队入场</p><p>下午6:39 总理抵达</p><p>下午6:44 总统抵达</p><p>下午6:45-6:46 国旗飞扬</p><p>下午6:47 新加坡空军空中表演（F15战斗机）</p><p>下午6:49-6:52  鸣礼炮21响致敬</p><p>下午6:56-6:57 欢乐之火（大型篝火）</p><p>下午6:57 飞行表演</p><p>晚上7:00-7:01 新加坡空军多架F15战斗机飞行表演</p><p>晚上7:01-7:12 阅兵仪式</p><p>晚上7:14-7:39 机动部队出动</p><p>晚上8:00-8:05 新加坡河烟花表演（亚洲文明博物馆附近）</p><p>晚上8:10-8:18 烟花表演</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;新加坡南洋理工大学访学&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#新加坡南洋理工大学访学&quot;&gt;&lt;/a&gt; 新加坡南洋理工大学访学&lt;/h1&gt;
&lt;p&gt;此次访学长达14天，不少安排都是学校安排，在此仅列出个人安排、经验心得。&lt;/p&gt;
&lt;hr&gt;
      
    
    </summary>
    
    
      <category term="生活福利" scheme="https://nymrli.top/tags/%E7%94%9F%E6%B4%BB%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>CDN加速个人博客——又拍云</title>
    <link href="https://nymrli.top/2019/09/09/CDN%E5%8A%A0%E9%80%9F%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E2%80%94%E2%80%94%E5%8F%88%E6%8B%8D%E4%BA%91/"/>
    <id>https://nymrli.top/2019/09/09/CDN加速个人博客——又拍云/</id>
    <published>2019-09-09T11:34:27.000Z</published>
    <updated>2019-09-15T08:07:30.925Z</updated>
    
    <content type="html"><![CDATA[<h1 id="cdn加速个人博客又拍云"><a class="markdownIt-Anchor" href="#cdn加速个人博客又拍云"></a> CDN加速个人博客——又拍云</h1><blockquote><p>CDN(Content Delivery Network)内容发布网络，基本思路就是将你网站放置在各地节点服务器，用户访问时找最近的节点服务器获取数据，达到加速的目的。</p></blockquote><h2 id="几大厂商的cdn方案"><a class="markdownIt-Anchor" href="#几大厂商的cdn方案"></a> 几大厂商的CDN方案</h2><table><thead><tr><th>资费介绍页面</th><th>免费额度</th><th>是否支持HTTPS</th><th>额外限制</th><th>注册邀请链接</th></tr></thead><tbody><tr><td><a href="https://www.qiniu.com/prices?source=fusion" target="_blank" rel="noopener">七牛云</a></td><td>10GB/月</td><td>按量付费支持</td><td>/</td><td><a href="https://portal.qiniu.com/signup?code=3liwfwr7z4eoi" target="_blank" rel="noopener">&gt;&gt;&gt; 点击注册</a></td></tr><tr><td><a href="https://buy.cloud.tencent.com/price/cdn/overview" target="_blank" rel="noopener">腾讯云</a></td><td>10GB/月</td><td>免费支持</td><td>加了腾讯云CDN没有感觉多大加速</td><td>/</td></tr><tr><td><a href="https://su.baidu.com/plan.html#compare" target="_blank" rel="noopener">百度云</a></td><td>10GB/天</td><td>年费付费支持</td><td>巨贵…</td><td>/</td></tr><tr><td><a href="https://www.upyun.com/league" target="_blank" rel="noopener">又拍云</a></td><td>15GB/月</td><td>免费支持</td><td>加入又拍云联盟，并在网站底部放置logo</td><td><a href="https://console.upyun.com/register/?invite=r1A6SzenN" target="_blank" rel="noopener">&gt;&gt;&gt; 点击注册</a></td></tr></tbody></table><p>因此，选择尝试了下“又拍云”。</p><h2 id="一创建cdn服务"><a class="markdownIt-Anchor" href="#一创建cdn服务"></a> 一.创建CDN服务</h2><p>1.服务名称为唯一的ID</p><p>2.加速域名就是自己的网站域名</p><p>3.选择一个应用场景，在这，我选的是“网页图片”</p><p>4.回源管理-&gt;源站设置，网站原本是什么协议就选择什么协议。</p><blockquote><p>回源: 当缓存服务器(CDN提供的服务器)上找不到资源的时候,将会去回源服务器(自己的服务器)上找相应的资源</p></blockquote><p>当然最省事的是选择“<strong>协议跟随</strong>”</p><p>5.选择“创建”，则服务创建完成</p><p>6.需要完成“实名认证”，否则服务将处于“关闭”状态</p><p>有“支付宝认证”和“身份认证”，“<strong>支付宝认证</strong>”是直接拍照采取你的个人照片，拍完即认证完毕比较迅速，但可能会泄露更多的个人信息， 毕竟支付宝上已经收集了很多个人信息了。&quot;身份认证&quot;通过提交手持身份证正反面的照片来认证，提交后会有一天的审核期，相对于“支付宝认证”来说可能慢一点。</p><h2 id="二配置ssl证书非必须"><a class="markdownIt-Anchor" href="#二配置ssl证书非必须"></a> 二.配置SSL证书（非必须）</h2><p>7.如果博客没有配置HTTPS，可以在这申请免费的SSL证书配置</p><blockquote><p>又拍云提供了两款证书的免费申请方案，用户可通过 <a href="https://console.upyun.com/toolbox/createCertificate/" target="_blank" rel="noopener">SSL 证书申购</a>平台，免费申请 Symantec-TrustAsia、Let’s Encrypt 的 DV（域名型） SSL 证书，帮助用户零成本实现全站部署 HTTPS。并且还实现了 Let’s Encrypt 证书到期自动续签，用户无需担心证书过期时间，降低维护成本。</p></blockquote><p>服务中的&quot;HTTPS&quot;-&gt;“HTTPS配置”–&gt;“无证书，可前往 SSL <a href="https://console.upyun.com/toolbox/ssl/" target="_blank" rel="noopener">证书管理</a> 添加自有证书或申购新证书”</p><p><img src="/2019/09/09/CDN加速个人博客——又拍云/SSL%E8%AF%81%E4%B9%A6.png" alt="SSL证书"></p><p>短信验证，付款完成后，需要“<strong>请前往证书申购界面补全后续信息</strong>&quot;，在”SSL证书服务“中能看到证书，但还需要执行”补全“步骤。</p><p><img src="/2019/09/09/CDN加速个人博客——又拍云/%E8%A1%A5%E5%85%A8.png" alt="补全"></p><p>之后，如果当前域名为第一次配置证书，那么需要”域名所有权验证“。可以查看又拍云提供的<a href="https://help.upyun.com/knowledge-base/ssl-product/#dv-ssle8af81e4b9a6e9aa8ce8af81" target="_blank" rel="noopener">帮助文档</a>，分为<strong>OV 或 EV SSL 证书</strong>和<strong>DV SSL证书验证</strong>，其中DV SSL证书验证又分为”文件检验“和&quot;DNS 验证&quot;.</p><p>DNS验证，需要修改域名的 DNS，添加 <code>TXT 记录</code>，然后 CA 机构通过解析域名的 <code>TXT 记录</code>来验证域名所有权。其中如果是阿里云解析，在设置过CNAME记录的同时再添加新的TXT记录会报错，说有冲突。此时可查看<a href="#%E9%98%BF%E9%87%8C%E4%BA%91%E7%BB%91%E5%AE%9A%E5%8A%A0%E9%80%9F%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90%E6%97%B6%EF%BC%8C%E6%8F%90%E7%A4%BATXT%E4%B8%8E@%E8%AE%B0%E5%BD%95%E5%86%B2%E7%AA%81%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95">解决方案</a></p><p><img src="/2019/09/09/CDN加速个人博客——又拍云/CNAME%E8%AE%A4%E8%AF%81.png" alt="CNAME认证"></p><p>只不过此时状态仍为“审核中”，即CA 机构信息审核验证状态，一般需要 1 个工作日。</p><p><img src="/2019/09/09/CDN加速个人博客——又拍云/%E5%AE%A1%E6%A0%B8.png" alt="审核"></p><p>▲我测试了两个免费的证书，发现“Let’s Encrypt DV SSL 单域名证书”审核比&quot;TrustAsia DV SSL 单域名证书&quot;快多了，几乎5分钟就自动审核通过了。</p><p>e.g.由于我的博客是搭建在Github pages的，所以配置了HTTPS，因此，这个我就不需要再弄了。</p><h2 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h2><h3 id="阿里云绑定加速域名解析时提示txt与记录冲突解决办法"><a class="markdownIt-Anchor" href="#阿里云绑定加速域名解析时提示txt与记录冲突解决办法"></a> 阿里云绑定加速域名解析时，提示TXT与@记录冲突解决办法</h3><h3 id="方法一"><a class="markdownIt-Anchor" href="#方法一"></a> 方法一：</h3><p>实际上，TXT记录的作用只是做域名所有权验证。也就是说，一旦域名被验证，就可以删除它。</p><p>知道了这个原理，我们可以在解析时先删除其他@主机记录的解析，然后添加百度云加速TXT记录。</p><p>通过百度云加速后台显示验证后，我们删除TXT并解析其他@主机记录就可以了。</p><h3 id="方法二"><a class="markdownIt-Anchor" href="#方法二"></a> 方法二：</h3><p>如果你是使用免费智能 DNS 解析服务——CloudXNS 来解析域名应该是不会遇到这些问题，但是如果使用阿里云解析的话，应该或多或少都会遇到解析记录冲突的问题。所以可以采取更换解析商，即把<strong>阿里云解析更换为 CloudXNS 解析</strong></p><h3 id="方法三"><a class="markdownIt-Anchor" href="#方法三"></a> 方法三：</h3><p>**解析到不同的线路来解决。**默认情况下，我们 CNAME 解析时，只填写主机记录和记录值，其他都是默认，这个时候“解析线路”就是默认线路。如果后续你添加 TXT 记录或 MX 记录时，解析线路也是默认线路，那么就会出现解析记录冲突从而无法成功解析。此时，需要做的就是在解析 TXT 或 MX 记录时，把“解析线路”选择到其他线路，如选择“中国电信”或其他线路，然后保存就不会与 CNANE 的默认线路冲突了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;cdn加速个人博客又拍云&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#cdn加速个人博客又拍云&quot;&gt;&lt;/a&gt; CDN加速个人博客——又拍云&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;CDN(Content Delivery Networ
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>RL强化学习概念</title>
    <link href="https://nymrli.top/2019/09/09/RL%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E6%A6%82%E5%BF%B5/"/>
    <id>https://nymrli.top/2019/09/09/RL强化学习概念/</id>
    <published>2019-09-09T11:33:12.000Z</published>
    <updated>2019-09-15T08:07:30.999Z</updated>
    
    <content type="html"><![CDATA[<h1 id="rl强化学习概念"><a class="markdownIt-Anchor" href="#rl强化学习概念"></a> RL强化学习概念</h1><h2 id="方法汇总"><a class="markdownIt-Anchor" href="#方法汇总"></a> 方法汇总</h2><h3 id="价值-直接-想象"><a class="markdownIt-Anchor" href="#价值-直接-想象"></a> 价值-直接-想象</h3><p>通过价值选择行为：</p><ul><li>Q Learning</li><li>Sarsa</li><li>Deep Q Network</li></ul><p>直接选择行为：</p><ul><li>Policy Gradients</li></ul><p>想象环境并从中学习</p><ul><li>Model Based RL</li></ul><h3 id="基于模型"><a class="markdownIt-Anchor" href="#基于模型"></a> 基于模型</h3><ul><li><p>Model-Free RL（无模型）不需要去理解环境的含义</p><ul><li>Q Learning</li><li>Sarsa</li><li>Policy Gradients</li></ul></li><li><p>Model-Based RL（有环境）需要去理解环境的含义，在&quot;脑子&quot;中模拟虚拟环境</p><ul><li>Q Learning</li><li>Sarsa</li><li>Policy Gradient</li></ul><p>前者需要一步一步得到环境的反馈后才能进行下一步；而后者通过想象来预判断接下来会发生的情况。</p><p><img src="/2019/09/09/RL强化学习概念/Users/10630/Documents/20190831224947.png" alt="20190831224947"></p></li></ul><h3 id="基于概率-价值"><a class="markdownIt-Anchor" href="#基于概率-价值"></a> 基于概率-价值</h3><p>基于概率（Policy Based RL）：</p><ul><li>Policy Gradients</li></ul><p>即使是概率最高的也不一定能被选择到，因此基于价值的结果更为铁定</p><p>基于价值（Value Based RL）：</p><ul><li>Q Learning</li><li>Sarsa</li></ul><p>不能用于连续动作，但基于概率能使用概率分布在连续动作中选择一个动作</p><p>两者的统一体：Actor-Critic</p><h3 id="回合-单步"><a class="markdownIt-Anchor" href="#回合-单步"></a> 回合-单步</h3><p>回合更新（Monte-Carlo update）</p><ul><li>基础版Policy Gradients</li><li>Monte-Carlo Learning</li></ul><p>在整个回合结束后再学习转折点</p><p>单步更新（Temporal-Difference update）</p><ul><li>Q Learning</li><li>Sarsa</li><li>升级版Policy Gradients</li></ul><p>不需要等待回合结束，边玩边学习</p><p>更多的情况下单步更新效率更高，但围棋游戏一般采用的都是回合更新</p><p><img src="/2019/09/09/RL强化学习概念/Users/10630/Documents/setp.png" alt="setp"></p><h3 id="在线-离线"><a class="markdownIt-Anchor" href="#在线-离线"></a> 在线-离线</h3><p>在线学习（online ）</p><blockquote><p>本人在场，本人边玩边学习。</p></blockquote><ul><li>Sarsa</li><li>Sarsa(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">/</mi><mi>l</mi><mi>a</mi><mi>m</mi><mi>b</mi><mi>d</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">/lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">/</span><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mord mathit">a</span><span class="mord mathit">m</span><span class="mord mathit">b</span><span class="mord mathit">d</span><span class="mord mathit">a</span></span></span></span>)</li></ul><p>离散学习（offline）</p><blockquote><p>可以选择自己玩或者看别人玩。可以从保存的结果中学习</p></blockquote><ul><li>Q Learning</li><li>Deep Q Network</li></ul><h3 id="onpolicy-offpolicy"><a class="markdownIt-Anchor" href="#onpolicy-offpolicy"></a> onPolicy-offPolicy</h3><p>on-policy</p><blockquote><p>Agent必然执行使Q函数最大的动作MAX_ACTION</p></blockquote><ul><li>Sarsa</li></ul><p>off-plicy</p><blockquote><p>Agent实际不一定执行使Q函数最大的动作MAX_ACTION</p></blockquote><ul><li>Q Learning</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;rl强化学习概念&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#rl强化学习概念&quot;&gt;&lt;/a&gt; RL强化学习概念&lt;/h1&gt;
&lt;h2 id=&quot;方法汇总&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#方法汇总&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="RL" scheme="https://nymrli.top/tags/RL/"/>
    
  </entry>
  
  <entry>
    <title>强化学习——QLearning</title>
    <link href="https://nymrli.top/2019/09/09/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94QLearning/"/>
    <id>https://nymrli.top/2019/09/09/强化学习——QLearning/</id>
    <published>2019-09-09T11:32:08.000Z</published>
    <updated>2019-09-15T08:07:31.061Z</updated>
    
    <content type="html"><![CDATA[<h1 id="强化学习qlearning"><a class="markdownIt-Anchor" href="#强化学习qlearning"></a> 强化学习——QLearning</h1><p>价值转移公式只有一条<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Q</mi><mo>(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo>)</mo><mo>&lt;</mo><mo>=</mo><mi>Q</mi><mo>(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo>)</mo><mo>+</mo><mi mathvariant="normal">/</mi><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi><mo>∗</mo><mo>(</mo><mi>r</mi><mi>e</mi><mi>w</mi><mi>a</mi><mi>r</mi><mi>d</mi><mo>−</mo><mi>Q</mi><mo>(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo>)</mo><mo>+</mo><mi mathvariant="normal">/</mi><mi>g</mi><mi>a</mi><mi>m</mi><mi>m</mi><mi>a</mi><mo>∗</mo><mi>m</mi><mi>a</mi><msub><mi>x</mi><mi>a</mi></msub><mi>Q</mi><mo>(</mo><msup><mi>s</mi><mrow><mi mathvariant="normal">′</mi></mrow></msup><mo separator="true">,</mo><mi>a</mi><mo>)</mo><mo>)</mo><mo>=</mo><mo>(</mo><mn>1</mn><mo>−</mo><mi mathvariant="normal">/</mi><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi><mo>)</mo><mo>∗</mo><mi>Q</mi><mo>(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo>)</mo><mo>+</mo><mi mathvariant="normal">/</mi><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi><mo>∗</mo><mo>(</mo><mi>r</mi><mi>e</mi><mi>w</mi><mi>a</mi><mi>r</mi><mi>d</mi><mo>+</mo><mi mathvariant="normal">/</mi><mi>g</mi><mi>a</mi><mi>m</mi><mi>m</mi><mi>a</mi><mo>∗</mo><mi>m</mi><mi>a</mi><msub><mi>x</mi><mi>a</mi></msub><mi>Q</mi><mo>(</mo><msup><mi>s</mi><mrow><mi mathvariant="normal">′</mi></mrow></msup><mo separator="true">,</mo><mi>a</mi><mo>)</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">Q(s,a) &lt;= Q(s,a) + /alpha*(reward - Q(s,a) + /gamma*max_aQ(s&#x27;,a)) = (1-/alpha)*Q(s,a) + /alpha*(reward + /gamma*max_aQ(s&#x27;,a))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.751892em;"></span><span class="strut bottom" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">Q</span><span class="mopen">(</span><span class="mord mathit">s</span><span class="mpunct">,</span><span class="mord mathit">a</span><span class="mclose">)</span><span class="mrel">&lt;</span><span class="mrel">=</span><span class="mord mathit">Q</span><span class="mopen">(</span><span class="mord mathit">s</span><span class="mpunct">,</span><span class="mord mathit">a</span><span class="mclose">)</span><span class="mbin">+</span><span class="mord mathrm">/</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mord mathit">p</span><span class="mord mathit">h</span><span class="mord mathit">a</span><span class="mbin">∗</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathit">e</span><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathit">d</span><span class="mbin">−</span><span class="mord mathit">Q</span><span class="mopen">(</span><span class="mord mathit">s</span><span class="mpunct">,</span><span class="mord mathit">a</span><span class="mclose">)</span><span class="mbin">+</span><span class="mord mathrm">/</span><span class="mord mathit" style="margin-right:0.03588em;">g</span><span class="mord mathit">a</span><span class="mord mathit">m</span><span class="mord mathit">m</span><span class="mord mathit">a</span><span class="mbin">∗</span><span class="mord mathit">m</span><span class="mord mathit">a</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">a</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">Q</span><span class="mopen">(</span><span class="mord"><span class="mord mathit">s</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">′</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord mathit">a</span><span class="mclose">)</span><span class="mclose">)</span><span class="mrel">=</span><span class="mopen">(</span><span class="mord mathrm">1</span><span class="mbin">−</span><span class="mord mathrm">/</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mord mathit">p</span><span class="mord mathit">h</span><span class="mord mathit">a</span><span class="mclose">)</span><span class="mbin">∗</span><span class="mord mathit">Q</span><span class="mopen">(</span><span class="mord mathit">s</span><span class="mpunct">,</span><span class="mord mathit">a</span><span class="mclose">)</span><span class="mbin">+</span><span class="mord mathrm">/</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mord mathit">p</span><span class="mord mathit">h</span><span class="mord mathit">a</span><span class="mbin">∗</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathit">e</span><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathit">d</span><span class="mbin">+</span><span class="mord mathrm">/</span><span class="mord mathit" style="margin-right:0.03588em;">g</span><span class="mord mathit">a</span><span class="mord mathit">m</span><span class="mord mathit">m</span><span class="mord mathit">a</span><span class="mbin">∗</span><span class="mord mathit">m</span><span class="mord mathit">a</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">a</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">Q</span><span class="mopen">(</span><span class="mord"><span class="mord mathit">s</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">′</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord mathit">a</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>，即新Q(s1,a2) = 老Q(s1,a2) + /alpha * 差距(现实-估计)</p><ul><li>ALPHA为学习率，设置<strong>估计与现实的差距</strong>有多少被学习。能够使得更新比较平缓，防止模型过早收敛到局部解<ul><li>如果有两种途径都能得到Reward宝藏，如果直接设置1，那么很大程度上，算法都会沿着已尝试出有Reward的路走，虽然有E-Greedy的探索，但是那样的得分可能不至于让第二条路成为更优的选择。所以设置学习率有助于找到第二条路。</li></ul></li><li>GAMMA为衰减系数，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>a</mi><msub><mi>x</mi><mi>a</mi></msub><mi>Q</mi><mo>(</mo><msup><mi>s</mi><mrow><mi mathvariant="normal">′</mi></mrow></msup><mo separator="true">,</mo><mi>a</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">max_aQ(s&#x27;,a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.751892em;"></span><span class="strut bottom" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mord mathit">a</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">a</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">Q</span><span class="mopen">(</span><span class="mord"><span class="mord mathit">s</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">′</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord mathit">a</span><span class="mclose">)</span></span></span></span>是下一个时间点的最大期望奖励，因此需要用衰减系数来权衡下。即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Q</mi><mo>(</mo><mi>s</mi><mn>1</mn><mo>)</mo><mo>=</mo><mi>r</mi><mn>2</mn><mo>+</mo><mi mathvariant="normal">/</mi><mi>g</mi><mi>a</mi><mi>m</mi><mi>m</mi><mi>a</mi><mi>Q</mi><mo>(</mo><mi>s</mi><mn>2</mn><mo>)</mo><mo>=</mo><mi>r</mi><mn>2</mn><mo>+</mo><mi mathvariant="normal">/</mi><mi>g</mi><mi>a</mi><mi>m</mi><mi>m</mi><mi>a</mi><mo>(</mo><mi>r</mi><mn>3</mn><mo>+</mo><mi mathvariant="normal">/</mi><mi>g</mi><mi>a</mi><mi>m</mi><mi>m</mi><mi>a</mi><mi>Q</mi><mo>(</mo><mi>S</mi><mn>3</mn><mo>)</mo><mo>)</mo><mo>=</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>=</mo><mi>r</mi><mn>2</mn><mo>+</mo><mi mathvariant="normal">/</mi><mi>g</mi><mi>a</mi><mi>m</mi><mi>m</mi><mi>a</mi><mo>∗</mo><mi>r</mi><mn>3</mn><mo>+</mo><mi mathvariant="normal">/</mi><mi>g</mi><mi>a</mi><mi>m</mi><mi>m</mi><msup><mi>a</mi><mrow><mn>2</mn></mrow></msup><mo>∗</mo><mi>r</mi><mn>4</mn><mo>+</mo><mi mathvariant="normal">/</mi><mi>g</mi><mi>a</mi><mi>m</mi><mi>m</mi><msup><mi>a</mi><mrow><mn>3</mn></mrow></msup><mi>r</mi><mn>5</mn><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">Q(s1) = r2 + /gamma Q(s2) = r2 + /gamma(r3+/gamma Q(S3)) = ...= r2 + /gamma *r3+/gamma^{2} *r4+ /gamma^{3} r5 + ...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">Q</span><span class="mopen">(</span><span class="mord mathit">s</span><span class="mord mathrm">1</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathrm">2</span><span class="mbin">+</span><span class="mord mathrm">/</span><span class="mord mathit" style="margin-right:0.03588em;">g</span><span class="mord mathit">a</span><span class="mord mathit">m</span><span class="mord mathit">m</span><span class="mord mathit">a</span><span class="mord mathit">Q</span><span class="mopen">(</span><span class="mord mathit">s</span><span class="mord mathrm">2</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathrm">2</span><span class="mbin">+</span><span class="mord mathrm">/</span><span class="mord mathit" style="margin-right:0.03588em;">g</span><span class="mord mathit">a</span><span class="mord mathit">m</span><span class="mord mathit">m</span><span class="mord mathit">a</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathrm">3</span><span class="mbin">+</span><span class="mord mathrm">/</span><span class="mord mathit" style="margin-right:0.03588em;">g</span><span class="mord mathit">a</span><span class="mord mathit">m</span><span class="mord mathit">m</span><span class="mord mathit">a</span><span class="mord mathit">Q</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.05764em;">S</span><span class="mord mathrm">3</span><span class="mclose">)</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathrm">2</span><span class="mbin">+</span><span class="mord mathrm">/</span><span class="mord mathit" style="margin-right:0.03588em;">g</span><span class="mord mathit">a</span><span class="mord mathit">m</span><span class="mord mathit">m</span><span class="mord mathit">a</span><span class="mbin">∗</span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathrm">3</span><span class="mbin">+</span><span class="mord mathrm">/</span><span class="mord mathit" style="margin-right:0.03588em;">g</span><span class="mord mathit">a</span><span class="mord mathit">m</span><span class="mord mathit">m</span><span class="mord"><span class="mord mathit">a</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">∗</span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathrm">4</span><span class="mbin">+</span><span class="mord mathrm">/</span><span class="mord mathit" style="margin-right:0.03588em;">g</span><span class="mord mathit">a</span><span class="mord mathit">m</span><span class="mord mathit">m</span><span class="mord"><span class="mord mathit">a</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">3</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathrm">5</span><span class="mbin">+</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span></span></span></span>，约后面的影响越小<ul><li>GAMMA == 1时，Agent能看到之后所有步的奖励。<ul><li>只不过真正的理解应该时反序的，即最后一步是得到最终的reward，然后之前的状态的动作选择回报是在这个最终的reward上不断乘以GAMMA进行衰减，使得S1的选择不至于被最后的选择而过多影响</li></ul></li><li>GAMMA == 0时，Agent只能看到眼前的奖励</li></ul></li></ul><p>▲需要注意的是，这个公式是更新公式，而不是等式，因此两边不能化简，用代码来表示就是<code>Q[state, action] = (1-ALPHA)*Q[state, action] + ALPHA*(reward + GAMMA*Q[newstate, action].max())</code></p><p><img src="/2019/09/09/强化学习——QLearning/f2.png" alt="f2"></p><p><img src="/2019/09/09/强化学习——QLearning/f1.png" alt="f1"></p><h2 id="qlearning-maze夺宝藏"><a class="markdownIt-Anchor" href="#qlearning-maze夺宝藏"></a> QLearning-Maze夺宝藏：</h2><h3 id="demo代码"><a class="markdownIt-Anchor" href="#demo代码"></a> demo代码：</h3><p>环境代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># env.py</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MAP = /</span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">.........</span></span><br><span class="line"><span class="string">.       .</span></span><br><span class="line"><span class="string">.     o .</span></span><br><span class="line"><span class="string">.       .</span></span><br><span class="line"><span class="string">.........</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># MAP = /</span></span><br><span class="line"><span class="comment">#     '''</span></span><br><span class="line"><span class="comment"># .........</span></span><br><span class="line"><span class="comment"># .  x    .</span></span><br><span class="line"><span class="comment"># .   x o .</span></span><br><span class="line"><span class="comment"># .       .</span></span><br><span class="line"><span class="comment"># .........</span></span><br><span class="line"><span class="comment"># '''</span></span><br><span class="line">MAP = MAP.strip().split(<span class="string">'/n'</span>)</span><br><span class="line">MAP = [[c <span class="keyword">for</span> c <span class="keyword">in</span> line] <span class="keyword">for</span> line <span class="keyword">in</span> MAP]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DX = [<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">DY = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Env</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.map = copy.deepcopy(MAP)</span><br><span class="line">        self.x = <span class="number">1</span></span><br><span class="line">        self.y = <span class="number">1</span></span><br><span class="line">        self.step = <span class="number">0</span></span><br><span class="line">        self.total_reward = <span class="number">0</span></span><br><span class="line">        self.is_end = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">interact</span><span class="params">(self, action)</span>:</span></span><br><span class="line">        <span class="keyword">assert</span> self.is_end <span class="keyword">is</span> <span class="keyword">False</span></span><br><span class="line">        new_x = self.x + DX[action]</span><br><span class="line">        new_y = self.y + DY[action]</span><br><span class="line">        new_pos_char = self.map[new_x][new_y]</span><br><span class="line">        self.step += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> new_pos_char == <span class="string">'.'</span>:</span><br><span class="line">            reward = <span class="number">0</span>  <span class="comment"># do not change position</span></span><br><span class="line">        <span class="keyword">elif</span> new_pos_char == <span class="string">' '</span>:</span><br><span class="line">            self.x = new_x</span><br><span class="line">            self.y = new_y</span><br><span class="line">            reward = <span class="number">0</span></span><br><span class="line">        <span class="keyword">elif</span> new_pos_char == <span class="string">'o'</span>:</span><br><span class="line">            self.x = new_x</span><br><span class="line">            self.y = new_y</span><br><span class="line">            self.map[new_x][new_y] = <span class="string">' '</span>  <span class="comment"># update map</span></span><br><span class="line">            self.is_end = <span class="keyword">True</span>  <span class="comment"># end</span></span><br><span class="line">            reward = <span class="number">100</span></span><br><span class="line">        <span class="keyword">elif</span> new_pos_char == <span class="string">'x'</span>:</span><br><span class="line">            self.x = new_x</span><br><span class="line">            self.y = new_y</span><br><span class="line">            self.map[new_x][new_y] = <span class="string">' '</span>  <span class="comment"># update map</span></span><br><span class="line">            reward = <span class="number">-5</span></span><br><span class="line">        self.total_reward += reward</span><br><span class="line">        <span class="keyword">return</span> reward</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">state_num</span><span class="params">(self)</span>:</span></span><br><span class="line">        rows = len(self.map)</span><br><span class="line">        cols = len(self.map[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">return</span> rows * cols</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">present_state</span><span class="params">(self)</span>:</span></span><br><span class="line">        cols = len(self.map[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">return</span> self.x * cols + self.y</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print_map</span><span class="params">(self)</span>:</span></span><br><span class="line">        printed_map = copy.deepcopy(self.map)</span><br><span class="line">        printed_map[self.x][self.y] = <span class="string">'A'</span></span><br><span class="line">        print(<span class="string">'/n'</span>.join([<span class="string">''</span>.join([c <span class="keyword">for</span> c <span class="keyword">in</span> line]) <span class="keyword">for</span> line <span class="keyword">in</span> printed_map]))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print_map_with_reprint</span><span class="params">(self, output_list)</span>:</span></span><br><span class="line">        printed_map = copy.deepcopy(self.map)</span><br><span class="line">        printed_map[self.x][self.y] = <span class="string">'A'</span></span><br><span class="line">        printed_list = [<span class="string">''</span>.join([c <span class="keyword">for</span> c <span class="keyword">in</span> line]) <span class="keyword">for</span> line <span class="keyword">in</span> printed_map]</span><br><span class="line">        <span class="keyword">for</span> i, line <span class="keyword">in</span> enumerate(printed_list):</span><br><span class="line">            output_list[i] = line</span><br></pre></td></tr></table></figure><p>Agent代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># qlearning.py</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> env <span class="keyword">import</span> Env</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">EPSILON = <span class="number">0.1</span></span><br><span class="line">ALPHA = <span class="number">0.1</span></span><br><span class="line">GAMMA = <span class="number">0.9</span></span><br><span class="line">MAX_STEP = <span class="number">30</span></span><br><span class="line"></span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">epsilon_greedy</span><span class="params">(Q, state)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> (np.random.uniform() &gt; <span class="number">1</span> - EPSILON) <span class="keyword">or</span> ((Q[state, :] == <span class="number">0</span>).all()):</span><br><span class="line">        action = np.random.randint(<span class="number">0</span>, <span class="number">4</span>)  <span class="comment"># 0~3</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        action = Q[state, :].argmax()</span><br><span class="line">    <span class="keyword">return</span> action</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">e = Env()</span><br><span class="line">Q = np.zeros((e.state_num, <span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">200</span>):</span><br><span class="line">    e = Env()</span><br><span class="line">    <span class="keyword">while</span> (e.is_end <span class="keyword">is</span> <span class="keyword">False</span>) <span class="keyword">and</span> (e.step &lt; MAX_STEP):</span><br><span class="line">        action = epsilon_greedy(Q, e.present_state)</span><br><span class="line">        state = e.present_state</span><br><span class="line">        reward = e.interact(action)</span><br><span class="line">        new_state = e.present_state</span><br><span class="line">        Q[state, action] = (<span class="number">1</span> - ALPHA) * Q[state, action] + /</span><br><span class="line">            ALPHA * (reward + GAMMA * Q[new_state, :].max())</span><br><span class="line">        e.print_map()</span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line">    print(<span class="string">'Episode:'</span>, i, <span class="string">'Total Step:'</span>, e.step, <span class="string">'Total Reward:'</span>, e.total_reward)</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><h4 id="第一次魔改代码"><a class="markdownIt-Anchor" href="#第一次魔改代码"></a> 第一次魔改代码：</h4><p>环境代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"></span><br><span class="line">maze = /</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">..........</span></span><br><span class="line"><span class="string">.        .</span></span><br><span class="line"><span class="string">.    o   .</span></span><br><span class="line"><span class="string">.        .</span></span><br><span class="line"><span class="string">..........</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(maze)</span></span><br><span class="line">maze = maze.strip().split(<span class="string">'/n'</span>)</span><br><span class="line"><span class="comment"># print(maze)</span></span><br><span class="line"></span><br><span class="line">MAP = [[col <span class="keyword">for</span> col <span class="keyword">in</span> line] <span class="keyword">for</span> line <span class="keyword">in</span> maze]</span><br><span class="line"><span class="comment"># print(MAP)</span></span><br><span class="line">DX = [<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>]</span><br><span class="line">DY = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Env</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    交互环境</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.map = copy.deepcopy(MAP)</span><br><span class="line">        self.x = <span class="number">1</span></span><br><span class="line">        self.y = <span class="number">1</span></span><br><span class="line">        self.step = <span class="number">0</span></span><br><span class="line">        self.isEnd = <span class="keyword">False</span></span><br><span class="line">        self._score = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">interact</span><span class="params">(self, action)</span>:</span></span><br><span class="line">        <span class="comment"># state = self.state</span></span><br><span class="line">        <span class="comment"># assert self.isEnd is True</span></span><br><span class="line"></span><br><span class="line">        newx = self.x + DX[action]</span><br><span class="line">        newy = self.y + DY[action]</span><br><span class="line">        newPos = self.map[newx][newy]</span><br><span class="line">        self.step += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> newPos == <span class="string">'.'</span>:</span><br><span class="line">            reward = <span class="number">-10</span></span><br><span class="line">        <span class="keyword">elif</span> newPos == <span class="string">' '</span>:</span><br><span class="line">            self.x = newx</span><br><span class="line">            self.y = newy</span><br><span class="line">            reward = <span class="number">2</span></span><br><span class="line">        <span class="keyword">elif</span> newPos == <span class="string">'o'</span>:</span><br><span class="line">            self.x = newx</span><br><span class="line">            self.y = newy</span><br><span class="line">            reward = <span class="number">100</span></span><br><span class="line">            <span class="comment"># self.map[newx][newy] = ' '如果不update会怎么样？</span></span><br><span class="line">            self.isEnd = <span class="keyword">True</span></span><br><span class="line">        self._score += reward</span><br><span class="line">        <span class="keyword">return</span> reward</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">state_num</span><span class="params">(self)</span>:</span></span><br><span class="line">        rows = len(self.map)</span><br><span class="line">        cols = len(self.map[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">return</span> rows * cols</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">score</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self._score</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">present_state</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> len(self.map[<span class="number">0</span>])*self.x + self.y</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printMap</span><span class="params">(self)</span>:</span></span><br><span class="line">        printed_map = copy.deepcopy(self.map)</span><br><span class="line">        printed_map[self.x][self.y] = <span class="string">'A'</span></span><br><span class="line">        print(<span class="string">'/n'</span>.join([<span class="string">''</span>.join([c <span class="keyword">for</span> c <span class="keyword">in</span> line]) <span class="keyword">for</span> line <span class="keyword">in</span> printed_map]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    e = Env()</span><br><span class="line">    e.printMap()</span><br><span class="line">    print(e.score)</span><br></pre></td></tr></table></figure><h5 id="进行了如下的修改"><a class="markdownIt-Anchor" href="#进行了如下的修改"></a> 进行了如下的修改：</h5><ul><li>碰到边界<code>'.'</code>时，将会扣分</li><li>如果没有任何事发生的话，那么奖励2分</li><li><a href="#%E4%BF%AE%E6%94%B9%E5%90%8E%E7%BB%93%E6%9E%9C">修改后结果如下</a></li></ul><p>Agent代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> pprint <span class="keyword">import</span> pprint</span><br><span class="line"><span class="keyword">from</span> env <span class="keyword">import</span> Env</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">EPSILON = <span class="number">0.2</span></span><br><span class="line">ALPHA = <span class="number">0.1</span></span><br><span class="line">GAMMA = <span class="number">0.9</span></span><br><span class="line">MAX_STEP = <span class="number">30</span></span><br><span class="line">TIMES = <span class="number">30</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">epsilonGreedy</span><span class="params">(Q, state)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> np.random.uniform() &gt; <span class="number">1</span>-EPSILON <span class="keyword">or</span> ((Q[state, :] == <span class="number">0</span>).all()):</span><br><span class="line">        action = np.random.randint(<span class="number">0</span>,<span class="number">4</span>) <span class="comment"># 0-3，随机选择一个方向探索</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        action = Q[state, :].argmax() <span class="comment"># 找到当前价值最大的决策</span></span><br><span class="line">    <span class="keyword">return</span> action</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">e = Env()</span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">Q = np.zeros((e.state_num, <span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">success = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(TIMES):</span><br><span class="line">    ne = Env()</span><br><span class="line">    <span class="keyword">while</span> (ne.isEnd == <span class="keyword">False</span>) <span class="keyword">and</span> (ne.step &lt; MAX_STEP):</span><br><span class="line">        state = ne.present_state</span><br><span class="line">        action = epsilonGreedy(Q, state)</span><br><span class="line">        print(action)</span><br><span class="line">        <span class="comment"># print(Q[ne.x*10+ne.y,:])</span></span><br><span class="line">        reward = ne.interact(action)</span><br><span class="line">        newstate = ne.present_state</span><br><span class="line">        <span class="keyword">if</span> ne.map[newstate//<span class="number">10</span>][newstate%<span class="number">10</span>] == <span class="string">'o'</span>:</span><br><span class="line">            success += <span class="number">1</span></span><br><span class="line">            print(<span class="string">'success='</span>,success)</span><br><span class="line">        print(<span class="string">"结果为："</span>)</span><br><span class="line">        ne.printMap()</span><br><span class="line">        print(<span class="string">"再下一步的得分："</span>,Q[newstate,:])</span><br><span class="line">        Q[state, action] = (<span class="number">1</span>-ALPHA)*Q[state, action] + /</span><br><span class="line">            ALPHA*(reward + GAMMA*Q[newstate, action].max())</span><br><span class="line">        time.sleep(<span class="number">.05</span>)</span><br><span class="line">    print(<span class="string">'Episode:'</span>, i, <span class="string">'Total Step:'</span>, ne.step, <span class="string">'Total Reward:'</span>, ne.score)</span><br><span class="line">    <span class="comment"># Qp = np.reshape(Q, (5,10,4))</span></span><br><span class="line">    <span class="comment"># print(Qp) </span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># [第一行,[10列,4个方向]]</span></span><br><span class="line">    <span class="comment"># [第二行,[10列,4个方向]]</span></span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">print(Q)</span><br><span class="line">print(success)</span><br></pre></td></tr></table></figure><h5 id="修改后结果"><a class="markdownIt-Anchor" href="#修改后结果"></a> 修改后结果</h5><ul><li>走<code>&quot; &quot;</code>得奖励值设为+2得情况下，当EPSILON=0.1时，30次训练，几乎都在起点左右摇摆。<ul><li>原因是没碰到宝藏前，他们这样漫无目的的走是得分最高的。</li><li>处理的方法：1.修改Epsilon值，让他们有更多的机会去探索；2.增大训练的次数，一旦他们曾经到过宝藏，那么他们会往这个好的方向优化</li></ul></li><li><strong>注意</strong>，如果设置<code>&quot; &quot;</code>的奖励的话，需要慎重考虑，因为左右摇摆最高的奖励值在MAX_STEP=30的情况下是能达到60的。所以<strong>宝藏的奖励值一定要略大于MAX_SETP*EMPTY_REWARD</strong>才能达到训练的目的；同时，可能<strong>导致找不到最快寻到宝藏的可能</strong>,比如在宝藏门前来回晃悠来获得<code>&quot; &quot;</code>奖励-&gt;解决方案：可以<strong>根据当前步数来设置宝藏的分数</strong></li><li>碰到<code>'.'</code>扣分，使得Agent不倾向于撞墙，这个是个不错的修改，从Q表中也能看到明显的效果。但是一旦之后出现有陷阱的情况<code>&quot;X&quot;</code>，那么这边的惩罚值得设定需要慎重考虑</li><li></li></ul><h4 id="第二次魔改代码"><a class="markdownIt-Anchor" href="#第二次魔改代码"></a> 第二次魔改代码</h4><p>环境代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"></span><br><span class="line">TREASURE = <span class="string">'o'</span></span><br><span class="line">TRAP = <span class="string">'X'</span></span><br><span class="line"></span><br><span class="line">maze = /</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">..........</span></span><br><span class="line"><span class="string">. &#123;trap&#125;      .</span></span><br><span class="line"><span class="string">.    &#123;treasure&#125;   .</span></span><br><span class="line"><span class="string">.       .</span></span><br><span class="line"><span class="string">..........</span></span><br><span class="line"><span class="string">'''</span>.format(treasure=TREASURE,trap=TRAP)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(maze)</span></span><br><span class="line">maze = maze.strip().split(<span class="string">'/n'</span>)</span><br><span class="line"><span class="comment"># print(maze)</span></span><br><span class="line"></span><br><span class="line">MAP = [[col <span class="keyword">for</span> col <span class="keyword">in</span> line] <span class="keyword">for</span> line <span class="keyword">in</span> maze]</span><br><span class="line"><span class="comment"># print(MAP)</span></span><br><span class="line">DX = [<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>]</span><br><span class="line">DY = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Env</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    交互环境</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.map = copy.deepcopy(MAP)</span><br><span class="line">        self.x = <span class="number">1</span></span><br><span class="line">        self.y = <span class="number">1</span></span><br><span class="line">        self.step = <span class="number">0</span></span><br><span class="line">        self.isEnd = <span class="keyword">False</span></span><br><span class="line">        self._score = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">interact</span><span class="params">(self, action)</span>:</span></span><br><span class="line">        <span class="comment"># state = self.state</span></span><br><span class="line">        <span class="comment"># assert self.isEnd is True</span></span><br><span class="line"></span><br><span class="line">        newx = self.x + DX[action]</span><br><span class="line">        newy = self.y + DY[action]</span><br><span class="line">        newPos = self.map[newx][newy]</span><br><span class="line">        self.step += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> newPos == <span class="string">'.'</span>:</span><br><span class="line">            reward = <span class="number">-10</span></span><br><span class="line">        <span class="keyword">elif</span> newPos == <span class="string">' '</span>:</span><br><span class="line">            self.x = newx</span><br><span class="line">            self.y = newy</span><br><span class="line">            reward = <span class="number">2</span></span><br><span class="line">        <span class="keyword">elif</span> newPos == <span class="string">'o'</span>:</span><br><span class="line">            self.x = newx</span><br><span class="line">            self.y = newy</span><br><span class="line">            reward = <span class="number">100</span></span><br><span class="line">            <span class="comment"># self.map[newx][newy] = ' '如果不update会怎么样？</span></span><br><span class="line">            self.isEnd = <span class="keyword">True</span></span><br><span class="line">        <span class="keyword">elif</span> newPos == <span class="string">'X'</span>:</span><br><span class="line">            self.x = newx</span><br><span class="line">            self.y = newy</span><br><span class="line">            reward = <span class="number">-50</span></span><br><span class="line">            self.isEnd = <span class="keyword">True</span></span><br><span class="line">        self._score += reward</span><br><span class="line">        <span class="keyword">return</span> reward</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">state_num</span><span class="params">(self)</span>:</span></span><br><span class="line">        rows = len(self.map)</span><br><span class="line">        cols = len(self.map[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">return</span> rows * cols</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">score</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self._score</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">present_state</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> len(self.map[<span class="number">0</span>])*self.x + self.y</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printMap</span><span class="params">(self)</span>:</span></span><br><span class="line">        printed_map = copy.deepcopy(self.map)</span><br><span class="line">        printed_map[self.x][self.y] = <span class="string">'A'</span></span><br><span class="line">        print(<span class="string">'/n'</span>.join([<span class="string">''</span>.join([c <span class="keyword">for</span> c <span class="keyword">in</span> line]) <span class="keyword">for</span> line <span class="keyword">in</span> printed_map]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    e = Env()</span><br><span class="line">    e.printMap()</span><br><span class="line">    print(e.score)</span><br></pre></td></tr></table></figure><h5 id="进行了如下修改"><a class="markdownIt-Anchor" href="#进行了如下修改"></a> 进行了如下修改</h5><ul><li>碰到陷阱<code>'X'</code>时，将会扣较多的分</li></ul><p>Agent代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> pprint <span class="keyword">import</span> pprint</span><br><span class="line"><span class="keyword">from</span> env <span class="keyword">import</span> Env</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">EPSILON = <span class="number">0.2</span></span><br><span class="line">ALPHA = <span class="number">0.1</span></span><br><span class="line">GAMMA = <span class="number">0.9</span></span><br><span class="line">MAX_STEP = <span class="number">30</span></span><br><span class="line">TIMES = <span class="number">40</span></span><br><span class="line">TEST_TIMES = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">epsilonGreedy</span><span class="params">(Q, state)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> np.random.uniform() &gt; <span class="number">1</span>-EPSILON <span class="keyword">or</span> ((Q[state, :] == <span class="number">0</span>).all()):</span><br><span class="line">        action = np.random.randint(<span class="number">0</span>,<span class="number">4</span>) <span class="comment"># 0-3，随机选择一个方向探索</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        action = Q[state, :].argmax() <span class="comment"># 找到当前价值最大的决策</span></span><br><span class="line">    <span class="keyword">return</span> action</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">e = Env()</span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">Q = np.zeros((e.state_num, <span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用Epsilon_Greedy策略获得Q表</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Qtrain</span><span class="params">()</span>:</span></span><br><span class="line">    success = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(TIMES):</span><br><span class="line">        ne = Env()</span><br><span class="line">        <span class="keyword">while</span> (ne.isEnd == <span class="keyword">False</span>) <span class="keyword">and</span> (ne.step &lt; MAX_STEP):</span><br><span class="line">            state = ne.present_state</span><br><span class="line">            action = epsilonGreedy(Q, state)</span><br><span class="line">            print(<span class="string">"当前的选择为："</span>,action)</span><br><span class="line">            <span class="comment"># print(Q[ne.x*10+ne.y,:])</span></span><br><span class="line">            reward = ne.interact(action)</span><br><span class="line">            newstate = ne.present_state</span><br><span class="line">            <span class="keyword">if</span> ne.map[newstate//<span class="number">10</span>][newstate%<span class="number">10</span>] == <span class="string">'o'</span>:</span><br><span class="line">                success += <span class="number">1</span></span><br><span class="line">                print(<span class="string">'success='</span>,success)</span><br><span class="line">            print(<span class="string">"结果为："</span>)</span><br><span class="line">            ne.printMap()</span><br><span class="line">            print(<span class="string">"再下一步的得分："</span>,Q[newstate,:],<span class="string">'/n'</span>)</span><br><span class="line">            Q[state, action] = (<span class="number">1</span>-ALPHA)*Q[state, action] + /</span><br><span class="line">                ALPHA*(reward + GAMMA*Q[newstate, action].max())</span><br><span class="line">            time.sleep(<span class="number">.05</span>)</span><br><span class="line">        print(<span class="string">'Episode:'</span>, i, <span class="string">'Total Step:'</span>, ne.step, <span class="string">'Total Reward:'</span>, ne.score)</span><br><span class="line">        print(<span class="string">'-'</span>*<span class="number">20</span>, <span class="string">'/n/n'</span>)</span><br><span class="line">        <span class="comment"># Qp = np.reshape(Q, (5,10,4))</span></span><br><span class="line">        <span class="comment"># print(Qp)</span></span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    print(Q)</span><br><span class="line">    print(success)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用Q表走棋测试,由于Q表确定，所以其实每次的结果都是一样的</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Qtest</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'*'</span>*<span class="number">10</span>,<span class="string">"开始测试"</span>,<span class="string">'*'</span>*<span class="number">10</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(TEST_TIMES):</span><br><span class="line">        ne = Env()</span><br><span class="line">        <span class="keyword">while</span> (ne.isEnd == <span class="keyword">False</span>) <span class="keyword">and</span> (ne.step &lt; MAX_STEP):</span><br><span class="line">            state = ne.present_state</span><br><span class="line">            action = Q[state,:].argmax()</span><br><span class="line">            print(<span class="string">"当前的选择为："</span>,action)</span><br><span class="line">            <span class="comment"># print(Q[ne.x*10+ne.y,:])</span></span><br><span class="line">            reward = ne.interact(action)</span><br><span class="line">            newstate = ne.present_state</span><br><span class="line">            print(<span class="string">"结果为："</span>)</span><br><span class="line">            ne.printMap()</span><br><span class="line">            print(<span class="string">"再下一步的得分："</span>,Q[newstate,:],<span class="string">'/n'</span>)</span><br><span class="line">            time.sleep(<span class="number">.05</span>)</span><br><span class="line">        print(<span class="string">'Episode:'</span>, i, <span class="string">'Total Step:'</span>, ne.step, <span class="string">'Total Reward:'</span>, ne.score)</span><br><span class="line">        print(<span class="string">'-'</span>*<span class="number">20</span>,<span class="string">'/n/n'</span>)</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    Qtrain()</span><br><span class="line">    Qtest()</span><br></pre></td></tr></table></figure><h5 id="修改后结果-2"><a class="markdownIt-Anchor" href="#修改后结果-2"></a> 修改后结果：</h5><ul><li>由于走空<code>&quot; &quot;</code>现象仍然存在，感觉奖励给2仍是太多</li><li>EPSILON=0.2，随机乱走的几率很高，导致开局踩到陷阱<code>X</code>的概率很大</li></ul><h5 id="暴毙结果训练中没碰到过宝藏"><a class="markdownIt-Anchor" href="#暴毙结果训练中没碰到过宝藏"></a> 暴毙结果(训练中没碰到过宝藏)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">********** 开始测试 **********</span><br><span class="line">当前的选择为： 2</span><br><span class="line">结果为：</span><br><span class="line">..........</span><br><span class="line">. X      .</span><br><span class="line">.A   o   .</span><br><span class="line">.       .</span><br><span class="line">..........</span><br><span class="line">再下一步的得分： [ 0.12753822  0.          1.0434062  -2.9701    ] </span><br><span class="line"></span><br><span class="line">当前的选择为： 2</span><br><span class="line">结果为：</span><br><span class="line">..........</span><br><span class="line">. X      .</span><br><span class="line">.    o   .</span><br><span class="line">.A      .</span><br><span class="line">..........</span><br><span class="line">再下一步的得分： [ 0.21147844  2.30159071  0.         -1.99      ] </span><br><span class="line"></span><br><span class="line">当前的选择为： 1</span><br><span class="line">结果为：</span><br><span class="line">..........</span><br><span class="line">. X      .</span><br><span class="line">.    o   .</span><br><span class="line">. A     .</span><br><span class="line">..........</span><br><span class="line">再下一步的得分： [-0.313       0.398      -1.          1.04984339] </span><br><span class="line"></span><br><span class="line">当前的选择为： 3</span><br><span class="line">结果为：</span><br><span class="line">..........</span><br><span class="line">. X      .</span><br><span class="line">.    o   .</span><br><span class="line">.A      .</span><br><span class="line">..........</span><br><span class="line">再下一步的得分： [ 0.21147844  2.30159071  0.         -1.99      ] </span><br><span class="line"></span><br><span class="line">当前的选择为： 1</span><br><span class="line">结果为：</span><br><span class="line">..........</span><br><span class="line">. X      .</span><br><span class="line">.    o   .</span><br><span class="line">. A     .</span><br><span class="line">..........</span><br><span class="line">再下一步的得分： [-0.313       0.398      -1.          1.04984339] </span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">之后都是1和3的循环选择</span><br></pre></td></tr></table></figure><p>可以看到，这边上下变成了死循环。这是当所有训练中都没有踩到过宝藏的情况。</p><p>▲.使训练中更有可能碰到宝藏的方法</p><ol><li>训练的次数T足够多</li><li>如果训练次数少的话，需要合理设置EPSILON，使得Agent有更多的机会探索</li><li>MAX_STEP设置合理</li></ol><h3 id="特殊情况考虑发生概率很小"><a class="markdownIt-Anchor" href="#特殊情况考虑发生概率很小"></a> 特殊情况考虑（发生概率很小）</h3><p>▲.还有一点要说明的是：Q:有种情况是，同样都是走空得2分，为什么向上得得分是18，而向右得得分是2呢？</p><p>A：因为Dx，Dy的循序（上右下左）决定了。<strong>当四个得分都一样时如[2,2,2,2]，那么将会优先选择上</strong>，因为如果走空有奖励，所以上比右的得分会高很多。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># env.py</span></span><br><span class="line">DX = [<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>]</span><br><span class="line">DY = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>]</span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">epsilonGreedy</span><span class="params">(Q, state)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> np.random.uniform() &gt; <span class="number">1</span>-EPSILON <span class="keyword">or</span> ((Q[state, :] == <span class="number">0</span>).all()):</span><br><span class="line">        action = np.random.randint(<span class="number">0</span>,<span class="number">4</span>) <span class="comment"># 0-3，随机选择一个方向探索</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        action = Q[state, :].argmax() <span class="comment"># 找到当前价值最大的决策</span></span><br><span class="line">        <span class="comment"># ▲argmax()当最大值相同时，取索引最小的</span></span><br><span class="line">    <span class="keyword">return</span> action</span><br></pre></td></tr></table></figure><p>即</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Test1</span></span><br><span class="line">a = np.array([</span><br><span class="line">    [<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">    [<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>]</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">print(a[<span class="number">0</span>,:].argmax())<span class="comment"># 0</span></span><br><span class="line"><span class="comment"># Test2</span></span><br><span class="line">a = np.array([</span><br><span class="line">    [<span class="number">1</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">3</span>],</span><br><span class="line">    [<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>]</span><br><span class="line">])</span><br><span class="line">print(a[<span class="number">0</span>,:].argmax())<span class="comment"># 2</span></span><br></pre></td></tr></table></figure><h3 id="测试走空奖励值"><a class="markdownIt-Anchor" href="#测试走空奖励值"></a> 测试走空–奖励值</h3><h4 id="走空无奖励值"><a class="markdownIt-Anchor" href="#走空无奖励值"></a> 走空无奖励值</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">当前的选择为： 2</span><br><span class="line">结果为：</span><br><span class="line">..........</span><br><span class="line">. X      .</span><br><span class="line">.A   o   .</span><br><span class="line">.       .</span><br><span class="line">..........</span><br><span class="line">再下一步的得分： [-0.501399  23.9585123  0.        -3.940399 ] </span><br><span class="line"></span><br><span class="line">当前的选择为： 1</span><br><span class="line">结果为：</span><br><span class="line">..........</span><br><span class="line">. X      .</span><br><span class="line">. A  o   .</span><br><span class="line">.       .</span><br><span class="line">..........</span><br><span class="line">再下一步的得分： [-20.4755      41.20097133   0.          -0.267309  ] </span><br><span class="line"></span><br><span class="line">当前的选择为： 1</span><br><span class="line">结果为：</span><br><span class="line">..........</span><br><span class="line">. X      .</span><br><span class="line">.  A o   .</span><br><span class="line">.       .</span><br><span class="line">..........</span><br><span class="line">再下一步的得分： [-0.457659   66.18493075 -0.2439      0.        ] </span><br><span class="line"></span><br><span class="line">当前的选择为： 1</span><br><span class="line">结果为：</span><br><span class="line">..........</span><br><span class="line">. X      .</span><br><span class="line">.   Ao   .</span><br><span class="line">.       .</span><br><span class="line">..........</span><br><span class="line">再下一步的得分： [ 0.        94.1850263  0.         0.       ] </span><br><span class="line"></span><br><span class="line">当前的选择为： 1</span><br><span class="line">结果为：</span><br><span class="line">..........</span><br><span class="line">. X      .</span><br><span class="line">.    A   .</span><br><span class="line">.       .</span><br><span class="line">..........</span><br><span class="line">再下一步的得分： [0. 0. 0. 0.] </span><br><span class="line"></span><br><span class="line">Episode: 4 Total Step: 5 Total Reward: 100</span><br><span class="line">--------------------</span><br></pre></td></tr></table></figure><h4 id="走空有2奖励的结果"><a class="markdownIt-Anchor" href="#走空有2奖励的结果"></a> 走空有+2奖励的结果</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">当前的选择为： 2</span><br><span class="line">结果为：</span><br><span class="line">..........</span><br><span class="line">. X      .</span><br><span class="line">.A   o   .</span><br><span class="line">.       .</span><br><span class="line">..........</span><br><span class="line">再下一步的得分： [-0.41254159  6.24693379 -0.03645728 -3.940399  ] </span><br><span class="line"></span><br><span class="line">当前的选择为： 1</span><br><span class="line">结果为：</span><br><span class="line">..........</span><br><span class="line">. X      .</span><br><span class="line">. A  o   .</span><br><span class="line">.       .</span><br><span class="line">..........</span><br><span class="line">再下一步的得分： [-9.5        21.14440154  0.2981      0.        ] </span><br><span class="line"></span><br><span class="line">当前的选择为： 1</span><br><span class="line">结果为：</span><br><span class="line">..........</span><br><span class="line">. X      .</span><br><span class="line">.  A o   .</span><br><span class="line">.       .</span><br><span class="line">..........</span><br><span class="line">再下一步的得分： [ 5.16800000e-01  5.26069497e+01 -3.14898100e-02  3.80000000e-01] </span><br><span class="line"></span><br><span class="line">当前的选择为： 1</span><br><span class="line">结果为：</span><br><span class="line">..........</span><br><span class="line">. X      .</span><br><span class="line">.   Ao   .</span><br><span class="line">.       .</span><br><span class="line">..........</span><br><span class="line">再下一步的得分： [ 0.45506025 83.3228183   1.0434062   2.28281481] </span><br><span class="line"></span><br><span class="line">当前的选择为： 1</span><br><span class="line">结果为：</span><br><span class="line">..........</span><br><span class="line">. X      .</span><br><span class="line">.    A   .</span><br><span class="line">.       .</span><br><span class="line">..........</span><br><span class="line">再下一步的得分： [0. 0. 0. 0.] </span><br><span class="line"></span><br><span class="line">Episode: 4 Total Step: 5 Total Reward: 108</span><br><span class="line">--------------------</span><br></pre></td></tr></table></figure><h3 id="多次测试经验总结"><a class="markdownIt-Anchor" href="#多次测试经验总结"></a> 多次测试经验总结：</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;强化学习qlearning&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#强化学习qlearning&quot;&gt;&lt;/a&gt; 强化学习——QLearning&lt;/h1&gt;
&lt;p&gt;价值转移公式只有一条&lt;span class=&quot;katex&quot;&gt;&lt;span c
      
    
    </summary>
    
    
      <category term="Python" scheme="https://nymrli.top/tags/Python/"/>
    
      <category term="RL" scheme="https://nymrli.top/tags/RL/"/>
    
  </entry>
  
  <entry>
    <title>机器学习——决策树</title>
    <link href="https://nymrli.top/2019/08/30/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94%E5%86%B3%E7%AD%96%E6%A0%91/"/>
    <id>https://nymrli.top/2019/08/30/机器学习——决策树/</id>
    <published>2019-08-30T13:44:35.000Z</published>
    <updated>2019-09-20T14:18:46.310Z</updated>
    
    <content type="html"><![CDATA[<h1 id="机器学习决策树"><a class="markdownIt-Anchor" href="#机器学习决策树"></a> 机器学习——决策树</h1><h2 id="决策树基础概念"><a class="markdownIt-Anchor" href="#决策树基础概念"></a> 决策树基础概念</h2><blockquote><p>决策树分为分类树和回归树两种，分类树对离散变量做决策树，回归树对连续变量做决策树。</p><p>每个<strong>内部节点（非叶子节点）<strong>表示一个属性上的测试条件，每个</strong>分支</strong>代表一个测试输出结果，每个<strong>叶节点</strong>代表一种类别</p></blockquote><p>决策树分为分类树和回归树两种，分类树对离散变量做决策树，回归树对连续变量做决策树。</p><p>决策树的构造过程就是找到这些具有决定性作用的特征，根据其决定性程度来构造一个倒立的树–决定性作用最大的那个特征作为根节点，然后递归找到各分支下子数据集中次大的决定性特征，直至子数据集中所有数据都属于同一类。</p><p>特征：</p><ul><li>有监督的学习</li><li>非参数学习算法</li><li>自顶向下递归方式构造决策树</li><li>在每一步选择中都采取在当前状态下最好\优的选择</li></ul><h2 id="决策树生成过程"><a class="markdownIt-Anchor" href="#决策树生成过程"></a> 决策树生成过程</h2><p>一棵决策树的生成过程主要分为以下3个部分:</p><ul><li><strong>特征选择</strong>：特征选择是指从训练数据中众多的特征中选择一个特征作为当前节点的分裂标准，如何选择特征有着很多不同量化评估标准标准，从而衍生出不同的决策树算法。</li><li><strong>决策树生成</strong>： 根据选择的特征评估标准，从上至下递归地生成子节点，直到数据集不可分则停止决策树停止生长。 树结构来说，递归结构是最容易理解的方式。</li><li><strong>剪枝</strong>：决策树容易过拟合，一般来需要剪枝，缩小树结构规模、缓解过拟合。剪枝技术有预剪枝和后剪枝两种。</li></ul><h2 id="基于信息论的三种决策树算法"><a class="markdownIt-Anchor" href="#基于信息论的三种决策树算法"></a> 基于信息论的三种决策树算法</h2><blockquote><p>划分数据集的最大原则是：使无序的数据变的有序。</p><p>熵降低的速度越快越好==&gt;树的高度最矮</p></blockquote><p>基于信息论的决策树算法有ID3、CART和C4.5等算法，其中C4.5和CART两种算法从ID3算法中衍生而来。</p><h3 id="id3算法"><a class="markdownIt-Anchor" href="#id3算法"></a> ID3算法</h3><ul><li>信息增益作为评估标准，分支节点选择特征X信息增益最大的</li></ul><p>可用于划分标称型数据集，<strong>没有剪枝的过程</strong>，为了去除过度数据匹配的问题，可通过裁剪合并相邻的无法产生大量信息增益的叶子节点（例如设置信息增益阀值）。使用信息增益的话，其实是有一个缺点，那就是它<strong>偏向于具有大量值的属性</strong>–就是说在训练集中，某个属性所取的不同值的个数越多，那么越有可能拿它来作为分裂属性</p><h3 id="c45算法"><a class="markdownIt-Anchor" href="#c45算法"></a> C4.5算法</h3><p>C4.5是ID3的一个改进算法，继承了ID3算法的优点。</p><ul><li><strong>C4.5算法用信息增益率来选择属性</strong>，</li><li>克服了用信息增益选择属性时偏向选择取值多的属性的不足在树构造过程中进行<strong>剪枝</strong>；</li><li>能够完成对<strong>连续属性的离散化处理</strong>；<strong>能够对不完整数据进行处理</strong>。</li></ul><h3 id="cart算法classification-and-regression-tree"><a class="markdownIt-Anchor" href="#cart算法classification-and-regression-tree"></a> CART算法（Classification And Regression Tree）</h3><ul><li>**采用的是Gini指数（选Gini指数最小的特征s）**作为分裂标准</li><li>同时它也是包含<strong>后剪枝</strong>操作</li><li>ID3和C4.5虽可尽可能挖掘数据信息，但生成的决策树分支较大。CART可以简化决策树的规模，提高生成决策树的效率</li></ul><h2 id="决策树优缺点"><a class="markdownIt-Anchor" href="#决策树优缺点"></a> 决策树优缺点</h2><p>决策树适用于数值型和标称型（离散型数据，变量的结果只在有限目标集中取值），能够读取数据集合，提取一些列数据中蕴含的规则。在分类问题中使用决策树模型有很多的优点，1.决策树<strong>计算复杂度不高</strong>、便于使用、而且高效，2.决策树<strong>可处理具有不相关特征的数据</strong>、3.可很容易地构造出易于理解的规则，而<strong>规则通常易于解释和理解</strong>。</p><p>决策树模型也有一些缺点，比如1.处理<strong>缺失数据</strong>时的困难、2.<strong>过度拟合</strong>以及3.<strong>忽略数据集中属性之间的相关性</strong>等。</p><h2 id="id3数学原理"><a class="markdownIt-Anchor" href="#id3数学原理"></a> ID3数学原理</h2><h3 id="信息熵香农熵"><a class="markdownIt-Anchor" href="#信息熵香农熵"></a> 信息熵(香农熵)：</h3><blockquote><p>一种度量不确定性的方式，是用来衡量随机变量不确定性的，熵就是信息的期望值</p></blockquote><p>如果待分类的事物可能划分在多个分类之中，则符号xi的信息定义为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi mathvariant="normal">I</mi></mrow><mrow><mo fence="true">(</mo><msub><mi>x</mi><mrow><mi>i</mi></mrow></msub><mo fence="true">)</mo></mrow><mo>=</mo><mo>−</mo><msub><mi>log</mi><mrow><mn>2</mn></mrow></msub><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mrow><mi>i</mi></mrow></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\mathrm{I}\left(x_{i}\right)=-\log _{2} p\left(x_{i}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathrm">I</span></span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span><span class="mrel">=</span><span class="mord">−</span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="vlist"><span style="top:0.24444em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">p</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span></span></span></span>，其中p(xi)是选择该分类的概率。</p><p>有人可能会问，信息为啥这样定义啊？答曰：前辈得出的结论。这就跟1+1等于2一样，记住并且会用即可。上述式中的对数以2为底，也可以e为底(自然对数)。</p><p>若随机事件发生的结果记为X，且待分类的事物可能划分在N类中，分别是x1，x2，……，xn，每一种取到的概率分别是P1，P2，……，Pn，那么X的熵就定义为：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi mathvariant="normal">H</mi></mrow><mo>=</mo><mo>−</mo><msubsup><mo>∑</mo><mrow><mrow><mi mathvariant="normal">i</mi></mrow><mo>=</mo><mn>1</mn></mrow><mrow><mi>n</mi></mrow></msubsup><mrow><mi mathvariant="normal">p</mi></mrow><mrow><mo fence="true">(</mo><msub><mi>x</mi><mrow><mi>i</mi></mrow></msub><mo fence="true">)</mo></mrow><msub><mi>log</mi><mrow><mn>2</mn></mrow></msub><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mrow><mi>i</mi></mrow></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\mathrm{H}=-\sum_{\mathrm{i}=1}^{n} \mathrm{p}\left(x_{i}\right) \log _{2} p\left(x_{i}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1.0500099999999999em;vertical-align:-0.30001em;"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathrm">H</span></span><span class="mrel">=</span><span class="mord">−</span><span class="mop"><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">∑</span><span class="vlist"><span style="top:0.30001em;margin-left:0em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">i</span></span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.364em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord textstyle uncramped"><span class="mord mathrm">p</span></span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="vlist"><span style="top:0.24444em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">p</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span></span></span></span></p><p>反映了每一个元素在该类别下的不纯度，如{1,2,3,4}跟{1,1,1,2}相比,每个元素1-4的logPi都很大,因此sum的熵就要大很多。</p><p>注：有&quot;某个类别的结果&quot;的熵（某个特征有多个值），也有&quot;某事件结果&quot;的熵（该事件有多个特征）。直观来讲，结果种类越多，熵值越大。</p><p>当熵中的概率由数据估计(特别是最大似然估计)得到时，所对应的熵称为<strong>经验熵</strong>(empirical entropy)。什么叫由数据估计？比如有10个数据，一共有两个类别，A类和B类。其中有7个数据属于A类，则该A类的概率即为十分之七。其中有3个数据属于B类，则该B类的概率即为十分之三。浅显的解释就是，这概率是我们根据数据数出来的。</p><h4 id="经验熵举例"><a class="markdownIt-Anchor" href="#经验熵举例"></a> 经验熵举例：</h4><p>我们定义<a href="#%E8%B4%B7%E6%AC%BE%E7%94%B3%E8%AF%B7%E6%A0%B7%E6%9C%AC%E6%95%B0%E6%8D%AE%E8%A1%A8">贷款申请样本数据表</a>中的数据为训练数据集D，则训练数据集D的经验熵为H(D)。|D|表示其样本容量，即样本个数。设有K个类Ck, = 1,2,3,…,K,|Ck|为属于类Ck的样本个数，因此经验熵公式就可以写为 ：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi mathvariant="normal">H</mi></mrow><mo>(</mo><mrow><mi mathvariant="normal">D</mi></mrow><mo>)</mo><mo>=</mo><mo>−</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>K</mi></mrow></msubsup><mfrac><mrow><mrow><mo fence="true">∣</mo><msub><mi>c</mi><mrow><mi>k</mi></mrow></msub><mo fence="true">∣</mo></mrow></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><msub><mi>log</mi><mrow><mn>2</mn></mrow></msub><mfrac><mrow><mrow><mo fence="true">∣</mo><msub><mi>C</mi><mrow><mi>k</mi></mrow></msub><mo fence="true">∣</mo></mrow></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\mathrm{H}(\mathrm{D})=-\sum_{k=1}^{K} \frac{\left|c_{k}\right|}{|D|} \log _{2} \frac{\left|C_{k}\right|}{|D|}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.01em;"></span><span class="strut bottom" style="height:1.53em;vertical-align:-0.52em;"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathrm">H</span></span><span class="mopen">(</span><span class="mord textstyle uncramped"><span class="mord mathrm">D</span></span><span class="mclose">)</span><span class="mrel">=</span><span class="mord">−</span><span class="mop"><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">∑</span><span class="vlist"><span style="top:0.30001em;margin-left:0em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.364em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:0.07153em;">K</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.34500000000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">∣</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mord mathrm">∣</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.485em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="minner scriptstyle uncramped"><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span><span class="mord"><span class="mord mathit">c</span><span class="vlist"><span style="top:0.15122857142857138em;margin-right:0.07142857142857144em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="vlist"><span style="top:0.24444em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.34500000000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">∣</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mord mathrm">∣</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.485em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="minner scriptstyle uncramped"><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15122857142857138em;margin-right:0.07142857142857144em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span> ，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>(</mo><msub><mi>C</mi><mi>k</mi></msub><mo>)</mo><mo>=</mo><mfrac><mrow><mrow><mo fence="true">∣</mo><msub><mi>C</mi><mrow><mi>k</mi></mrow></msub><mo fence="true">∣</mo></mrow></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">p(C_k)=\frac{\left|C_{k}\right|}{|D|}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.01em;"></span><span class="strut bottom" style="height:1.53em;vertical-align:-0.52em;"></span><span class="base textstyle uncramped"><span class="mord mathit">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mclose">)</span><span class="mrel">=</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.34500000000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">∣</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mord mathrm">∣</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.485em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="minner scriptstyle uncramped"><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15122857142857138em;margin-right:0.07142857142857144em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span>由样本数据出来的结果。</p><p>根据此公式计算经验熵H(D)，分析贷款申请样本数据表中的数据。最终分类结果只有两类，即放贷和不放贷。根据表中的数据统计可知，在15个数据中，9个数据的结果为放贷，6个数据的结果为不放贷。所以数据集D的经验熵H(D)为：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi mathvariant="normal">H</mi></mrow><mo>(</mo><mrow><mi mathvariant="normal">D</mi></mrow><mo>)</mo><mo>=</mo><mo>−</mo><mfrac><mrow><mn>9</mn></mrow><mrow><mn>1</mn><mn>5</mn></mrow></mfrac><msub><mi>log</mi><mrow><mn>2</mn></mrow></msub><mfrac><mrow><mn>9</mn></mrow><mrow><mn>1</mn><mn>5</mn></mrow></mfrac><mo>−</mo><mfrac><mrow><mn>6</mn></mrow><mrow><mn>1</mn><mn>5</mn></mrow></mfrac><msub><mi>log</mi><mrow><mn>2</mn></mrow></msub><mfrac><mrow><mn>6</mn></mrow><mrow><mn>1</mn><mn>5</mn></mrow></mfrac><mo>=</mo><mn>0</mn><mi mathvariant="normal">.</mi><mn>9</mn><mn>7</mn><mn>1</mn></mrow><annotation encoding="application/x-tex">\mathrm{H}(\mathrm{D})=-\frac{9}{15} \log _{2} \frac{9}{15}-\frac{6}{15} \log _{2} \frac{6}{15}=0.971</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.845108em;"></span><span class="strut bottom" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathrm">H</span></span><span class="mopen">(</span><span class="mord textstyle uncramped"><span class="mord mathrm">D</span></span><span class="mclose">)</span><span class="mrel">=</span><span class="mord">−</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span><span class="mord mathrm">5</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">9</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="vlist"><span style="top:0.24444em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span><span class="mord mathrm">5</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">9</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mbin">−</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span><span class="mord mathrm">5</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">6</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="vlist"><span style="top:0.24444em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span><span class="mord mathrm">5</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">6</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mrel">=</span><span class="mord mathrm">0</span><span class="mord mathrm">.</span><span class="mord mathrm">9</span><span class="mord mathrm">7</span><span class="mord mathrm">1</span></span></span></span></p><p>经过计算可知，数据集D的经验熵H(D)的值为0.971。</p><p>▲熵值越高，则数据混合的种类越高，其蕴含的含义是一个变量可能的变化越多（反而跟变量具体的取值没有任何关系，只和<strong>值的种类</strong>多少以及<strong>发生概率</strong>有关）</p><h3 id="条件熵"><a class="markdownIt-Anchor" href="#条件熵"></a> 条件熵</h3><p>表示在已知随机变量X的条件下随机变量Y的不确定性，其定义为X在给定条件下Y的条件概率分布的熵对X的数学期望:</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo>(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo>)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>n</mi></mrow></msubsup><msub><mi>p</mi><mrow><mi>i</mi></mrow></msub><mi>H</mi><mrow><mo fence="true">(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo>=</mo><msub><mi>x</mi><mrow><mi>i</mi></mrow></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">H(Y | X)=\sum_{i=1}^{n} p_{i} H\left(Y | X=x_{i}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1.0500099999999999em;vertical-align:-0.30001em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.22222em;">Y</span><span class="mord mathrm">∣</span><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mrel">=</span><span class="mop"><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">∑</span><span class="vlist"><span style="top:0.30001em;margin-left:0em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.364em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit">p</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:0.08125em;">H</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord mathit" style="margin-right:0.22222em;">Y</span><span class="mord mathrm">∣</span><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mrel">=</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span></span></span></span>,其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mrow><mi>i</mi></mrow></msub><mo>=</mo><mi>P</mi><mrow><mo fence="true">(</mo><mi>X</mi><mo>=</mo><msub><mi>x</mi><mrow><mi>i</mi></mrow></msub><mo fence="true">)</mo></mrow><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>⋯</mo><mo separator="true">,</mo><mrow><mi mathvariant="normal">n</mi></mrow></mrow><annotation encoding="application/x-tex">p_{i}=P\left(X=x_{i}\right), i=1,2, \cdots, \mathrm{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">p</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.13889em;">P</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mrel">=</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span><span class="mpunct">,</span><span class="mord mathit">i</span><span class="mrel">=</span><span class="mord mathrm">1</span><span class="mpunct">,</span><span class="mord mathrm">2</span><span class="mpunct">,</span><span class="minner">⋯</span><span class="mpunct">,</span><span class="mord textstyle uncramped"><span class="mord mathrm">n</span></span></span></span></span></p><h4 id="经验条件熵举例"><a class="markdownIt-Anchor" href="#经验条件熵举例"></a> 经验条件熵举例：</h4><p>设特征A有n个不同的取值{a1,a2,···,an}，根据特征A的取值将D划分为n个子集{D1,D2，···,Dn}，|Di|为Di的样本个数。记子集Di中属于Ck的样本的集合为Dik，即Dik = Di ∩ Ck，|Dik|为Dik的样本个数</p><p>\begin{align*}\mathrm{H}(\mathrm{D} | \mathrm{A}) & =\sum_{i=1}^{\mathrm{n}} \frac{\left|D_{i}\right|}{|D|} \mathrm{H}\left(D_{i}\right) \\ & =-\sum_{i=1}^{n} \frac{\left|D_{i}\right|}{|D|} \sum_{k=1}^{K} \frac{\left|D_{i k}\right|}{\left|D_{i}\right|} \log _{2} \frac{\left|D_{i k}\right|}{\left|D_{i}\right|}\end{align*}</p><h3 id="信息增益"><a class="markdownIt-Anchor" href="#信息增益"></a> 信息增益</h3><p>信息增益(information gain)表示得知特征X的信息后，而使得Y的不确定性减少的程度。定义为集合D的经验熵H(D)与给定特征A条件下D的经验条件熵H(D|A)之差:</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo>(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo>)</mo><mo>=</mo><mi>H</mi><mo>(</mo><mi>D</mi><mo>)</mo><mo>−</mo><mi>H</mi><mo>(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">g(D, A)=H(D)-H(D| A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mord mathit">A</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mbin">−</span><span class="mord mathit" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mord mathrm">∣</span><span class="mord mathit">A</span><span class="mclose">)</span></span></span></span></p><p>一般地，熵H(D)与条件熵H(D|A)之差称为<strong>互信息</strong>(mutual information)。决策树学习中的信息增益等价于训练数据集中类与特征的互信息。</p><p>举例：以<a href="#%E8%B4%B7%E6%AC%BE%E7%94%B3%E8%AF%B7%E6%A0%B7%E6%9C%AC%E6%95%B0%E6%8D%AE%E8%A1%A8">贷款申请样本数据表</a>为例进行说明。看下年龄这一列的数据，也就是特征A1，一共有三个类别，分别是：青年、中年和老年。我们只看年龄是青年的数据，年龄是青年的数据一共有5个，所以年龄是青年的数据在训练数据集出现的概率是5\15，也就是1\3。同理，年龄是中年和老年的数据在训练数据集出现的概率也都是1\3。现在我们只看年龄是青年的数据的最终得到贷款的概率为2\5，因为在五个数据中，只有两个数据显示拿到了最终的贷款，同理，年龄是中年和老年的数据最终得到贷款的概率分别为3\5、4\5。所以计算年龄的信息增益，过程如下：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtable><mtr><mtd><mrow><mrow><mi mathvariant="normal">g</mi></mrow><mrow><mo fence="true">(</mo><mrow><mi mathvariant="normal">D</mi></mrow><mo separator="true">,</mo><msub><mi>A</mi><mrow><mn>1</mn></mrow></msub><mo fence="true">)</mo></mrow></mrow></mtd><mtd><mrow><mrow></mrow><mo>=</mo><mi>H</mi><mo>(</mo><mi>D</mi><mo>)</mo><mo>−</mo><mi>H</mi><mrow><mo fence="true">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><msub><mi>A</mi><mrow><mn>1</mn></mrow></msub><mo fence="true">)</mo></mrow></mrow></mtd></mtr><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow><mo>=</mo><mi>H</mi><mo>(</mo><mi>D</mi><mo>)</mo><mo>−</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mrow><mi mathvariant="normal">n</mi></mrow></mrow></msubsup><mfrac><mrow><mrow><mo fence="true">∣</mo><msub><mi>D</mi><mrow><mi>i</mi></mrow></msub><mo fence="true">∣</mo></mrow></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mrow><mi mathvariant="normal">H</mi></mrow><mrow><mo fence="true">(</mo><msub><mi>D</mi><mrow><mi>i</mi></mrow></msub><mo fence="true">)</mo></mrow></mrow></mtd></mtr><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow><mo>=</mo><mi>H</mi><mo>(</mo><mi>D</mi><mo>)</mo><mo>−</mo><mrow><mo fence="true">[</mo><mfrac><mrow><mrow><mo fence="true">∣</mo><msub><mi>D</mi><mrow><mn>1</mn></mrow></msub><mo fence="true">∣</mo></mrow></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>H</mi><mrow><mo fence="true">(</mo><msub><mrow><mi mathvariant="normal">D</mi></mrow><mrow><mn>1</mn></mrow></msub><mo fence="true">)</mo></mrow><mo>+</mo><mfrac><mrow><mrow><mo fence="true">∣</mo><msub><mi>D</mi><mrow><mn>2</mn></mrow></msub><mo fence="true">∣</mo></mrow></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>H</mi><mrow><mo fence="true">(</mo><msub><mi>D</mi><mrow><mn>2</mn></mrow></msub><mo fence="true">)</mo></mrow><mo>+</mo><mfrac><mrow><mrow><mo fence="true">∣</mo><msub><mi>D</mi><mrow><mn>3</mn></mrow></msub><mo fence="true">∣</mo></mrow></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>H</mi><mrow><mo fence="true">(</mo><msub><mi>D</mi><mrow><mn>3</mn></mrow></msub><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow></mtd></mtr><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow><mo>=</mo><mi>H</mi><mo>(</mo><mi>D</mi><mo>)</mo><mo>−</mo><mfrac><mrow><mrow><mo fence="true">∣</mo><msub><mi>D</mi><mrow><mi>i</mi></mrow></msub><mo fence="true">∣</mo></mrow></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mn>3</mn></mrow></msubsup><msub><mi>p</mi><mrow><mi>i</mi></mrow></msub><mo>∗</mo><msub><mi>log</mi><mrow><mn>2</mn></mrow></msub><msub><mi>p</mi><mrow><mi>i</mi></mrow></msub></mrow></mtd></mtr><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow><mo>=</mo><mn>0</mn><mi mathvariant="normal">.</mi><mn>9</mn><mn>7</mn><mn>1</mn><mo>−</mo><mrow><mo fence="true">[</mo><mfrac><mrow><mn>5</mn></mrow><mrow><mn>1</mn><mn>5</mn></mrow></mfrac><mrow><mo fence="true">(</mo><mo>−</mo><mfrac><mrow><mn>2</mn></mrow><mrow><mn>5</mn></mrow></mfrac><msub><mi>log</mi><mrow><mn>2</mn></mrow></msub><mfrac><mrow><mn>2</mn></mrow><mrow><mn>5</mn></mrow></mfrac><mo>−</mo><mfrac><mrow><mn>3</mn></mrow><mrow><mn>5</mn></mrow></mfrac><msub><mi>log</mi><mrow><mn>2</mn></mrow></msub><mfrac><mrow><mn>3</mn></mrow><mrow><mn>5</mn></mrow></mfrac><mo fence="true">)</mo></mrow><mo>+</mo><mfrac><mrow><mn>5</mn></mrow><mrow><mn>1</mn><mn>5</mn></mrow></mfrac><mrow><mo fence="true">(</mo><mo>−</mo><mfrac><mrow><mn>3</mn></mrow><mrow><mn>5</mn></mrow></mfrac><msub><mi>log</mi><mrow><mn>2</mn></mrow></msub><mfrac><mrow><mn>3</mn></mrow><mrow><mn>5</mn></mrow></mfrac><mo>−</mo><mfrac><mrow><mn>2</mn></mrow><mrow><mn>5</mn></mrow></mfrac><msub><mi>log</mi><mrow><mn>2</mn></mrow></msub><mfrac><mrow><mn>2</mn></mrow><mrow><mn>5</mn></mrow></mfrac><mo fence="true">)</mo></mrow></mrow></mrow></mtd></mtr><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow><mrow><mo>+</mo><mfrac><mrow><mn>5</mn></mrow><mrow><mn>1</mn><mn>5</mn></mrow></mfrac><mrow><mo fence="true">(</mo><mo>−</mo><mfrac><mrow><mn>4</mn></mrow><mrow><mn>5</mn></mrow></mfrac><msub><mi>log</mi><mrow><mn>2</mn></mrow></msub><mfrac><mrow><mn>4</mn></mrow><mrow><mn>5</mn></mrow></mfrac><mo>−</mo><mfrac><mrow><mn>1</mn></mrow><mrow><mn>5</mn></mrow></mfrac><msub><mi>log</mi><mrow><mn>2</mn></mrow></msub><mfrac><mrow><mn>1</mn></mrow><mrow><mn>5</mn></mrow></mfrac><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow></mtd></mtr><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow><mo>=</mo><mn>0</mn><mi mathvariant="normal">.</mi><mn>9</mn><mn>7</mn><mn>1</mn><mo>−</mo><mn>0</mn><mi mathvariant="normal">.</mi><mn>8</mn><mn>8</mn><mn>8</mn><mo>=</mo><mn>0</mn><mi mathvariant="normal">.</mi><mn>0</mn><mn>8</mn><mn>3</mn></mrow></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{aligned} \mathrm{g}\left(\mathrm{D}, A_{1}\right) &amp;=H(D)-H\left(D | A_{1}\right) \\ &amp;=H(D)-\sum_{i=1}^{\mathrm{n}} \frac{\left|D_{i}\right|}{|D|} \mathrm{H}\left(D_{i}\right) \\ &amp;=H(D)-\left[\frac{\left|D_{1}\right|}{|D|}H\left(\mathrm{D}_{1}\right)+\frac{\left|D_{2}\right|}{|D|} H\left(D_{2}\right)+\frac{\left|D_{3}\right|}{|D|} H\left(D_{3}\right)\right] \\ &amp;=H(D)- \frac{\left|D_{i}\right|}{|D|} \sum_{i=1}^{3} p_{i} * \log _{2} p_{i} \\ &amp;=0.971-\left[\frac{5}{15}\left(-\frac{2}{5} \log _{2} \frac{2}{5}-\frac{3}{5} \log _{2} \frac{3}{5}\right)+\frac{5}{15}\left(-\frac{3}{5} \log _{2} \frac{3}{5}-\frac{2}{5} \log _{2} \frac{2}{5}\right)\right.\\ &amp;\left.+\frac{5}{15}\left(-\frac{4}{5} \log _{2} \frac{4}{5}-\frac{1}{5} \log _{2} \frac{1}{5}\right)\right] \\ &amp;=0.971-0.888=0.083 \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:5.0900099999999995em;"></span><span class="strut bottom" style="height:9.680019999999999em;vertical-align:-4.59001em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist"><span style="top:-4.25001em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="mord textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathrm" style="margin-right:0.01389em;">g</span></span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord textstyle uncramped"><span class="mord mathrm">D</span></span><span class="mpunct">,</span><span class="mord"><span class="mord mathit">A</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span></span></span><span style="top:-2.880009999999999em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="mord textstyle uncramped"></span></span><span style="top:-1.2100099999999991em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="mord textstyle uncramped"></span></span><span style="top:0.45001000000000113em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="mord textstyle uncramped"></span></span><span style="top:1.8200100000000001em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="mord textstyle uncramped"></span></span><span style="top:3.030010000000001em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="mord textstyle uncramped"></span></span><span style="top:4.23001em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="mord textstyle uncramped"></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span>​</span></span></span><span class="col-align-l"><span class="vlist"><span style="top:-4.25001em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="mord textstyle uncramped"><span class="mord textstyle uncramped"></span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mbin">−</span><span class="mord mathit" style="margin-right:0.08125em;">H</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mord mathrm">∣</span><span class="mord"><span class="mord mathit">A</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span></span></span><span style="top:-2.880009999999999em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="mord textstyle uncramped"><span class="mord textstyle uncramped"></span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mbin">−</span><span class="mop"><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">∑</span><span class="vlist"><span style="top:0.30001em;margin-left:0em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.364em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">n</span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.34500000000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">∣</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mord mathrm">∣</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.485em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="minner scriptstyle uncramped"><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.07142857142857144em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mord textstyle uncramped"><span class="mord mathrm">H</span></span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span></span></span><span style="top:-1.2100099999999991em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="mord textstyle uncramped"><span class="mord textstyle uncramped"></span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mbin">−</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.34500000000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">∣</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mord mathrm">∣</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.485em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="minner scriptstyle uncramped"><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.07142857142857144em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mord mathit" style="margin-right:0.08125em;">H</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class=""><span class="mord textstyle uncramped"><span class="mord mathrm">D</span></span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span><span class="mbin">+</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.34500000000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">∣</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mord mathrm">∣</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.485em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="minner scriptstyle uncramped"><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.07142857142857144em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mord mathit" style="margin-right:0.08125em;">H</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span><span class="mbin">+</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.34500000000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">∣</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mord mathrm">∣</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.485em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="minner scriptstyle uncramped"><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.07142857142857144em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathrm">3</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mord mathit" style="margin-right:0.08125em;">H</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">3</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">]</span></span></span></span></span><span style="top:0.45001000000000113em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="mord textstyle uncramped"><span class="mord textstyle uncramped"></span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mbin">−</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.34500000000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">∣</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mord mathrm">∣</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.485em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="minner scriptstyle uncramped"><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.07142857142857144em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mop"><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">∑</span><span class="vlist"><span style="top:0.30001em;margin-left:0em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.364em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">3</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit">p</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">∗</span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="vlist"><span style="top:0.24444em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit">p</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span><span style="top:1.8200100000000001em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="mord textstyle uncramped"><span class="mord textstyle uncramped"></span><span class="mrel">=</span><span class="mord mathrm">0</span><span class="mord mathrm">.</span><span class="mord mathrm">9</span><span class="mord mathrm">7</span><span class="mord mathrm">1</span><span class="mbin">−</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span><span class="mord mathrm">5</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">5</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">−</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">5</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="vlist"><span style="top:0.24444em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">5</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mbin">−</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">5</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">3</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="vlist"><span style="top:0.24444em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">5</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">3</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mbin">+</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span><span class="mord mathrm">5</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">5</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">−</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">5</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">3</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="vlist"><span style="top:0.24444em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">5</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">3</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mbin">−</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">5</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="vlist"><span style="top:0.24444em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">5</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span><span style="top:3.030010000000001em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="mord textstyle uncramped"><span class="mord textstyle uncramped"></span><span class="minner textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mord">+</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span><span class="mord mathrm">5</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">5</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">−</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">5</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">4</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="vlist"><span style="top:0.24444em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">5</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">4</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mbin">−</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">5</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="vlist"><span style="top:0.24444em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">5</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span><span style="top:4.23001em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="mord textstyle uncramped"><span class="mord textstyle uncramped"></span><span class="mrel">=</span><span class="mord mathrm">0</span><span class="mord mathrm">.</span><span class="mord mathrm">9</span><span class="mord mathrm">7</span><span class="mord mathrm">1</span><span class="mbin">−</span><span class="mord mathrm">0</span><span class="mord mathrm">.</span><span class="mord mathrm">8</span><span class="mord mathrm">8</span><span class="mord mathrm">8</span><span class="mrel">=</span><span class="mord mathrm">0</span><span class="mord mathrm">.</span><span class="mord mathrm">0</span><span class="mord mathrm">8</span><span class="mord mathrm">3</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span>​</span></span></span></span></span></span></span></span></p><p>其中|Di|为特征该类别的数量，Pi为该类别下为true（事件发生）的概率</p><h2 id="c45数学原理"><a class="markdownIt-Anchor" href="#c45数学原理"></a> C4.5数学原理</h2><p>以信息增益进行分类决策时，存在偏向于取值较多的特征的问题。于是有了基于<strong>信息增益比</strong>的分类决策方法C4.5。C4.5与ID3都是利用贪心算法进行求解，不同的是分类决策的依据不同。</p><p>信息增益比率度量:信息增益比率度量Gain(D，X) \ 分裂信息度量SplitInformation(D，X)</p><p>SplitInformation(D，X） = -\sum_{i=1}^{n}{P_{x_i} }*log_2{P_{x_i} }</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi>R</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><mo>(</mo><mi>D</mi><mo separator="true">,</mo><mi>X</mi><mo>)</mo><mo>=</mo><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo>(</mo><mi>D</mi><mo separator="true">,</mo><mi>X</mi><mo>)</mo><mo>÷</mo><mi>S</mi><mi>p</mi><mi>l</mi><mi>i</mi><mi>t</mi><mi>I</mi><mi>n</mi><mi>f</mi><mi>o</mi><mi>r</mi><mi>m</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>(</mo><mi>D</mi><mo separator="true">,</mo><mi>X</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">GainRatio(D,X) = Gain(D,X) \div SplitInformation(D,X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">G</span><span class="mord mathit">a</span><span class="mord mathit">i</span><span class="mord mathit">n</span><span class="mord mathit" style="margin-right:0.00773em;">R</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord mathit">G</span><span class="mord mathit">a</span><span class="mord mathit">i</span><span class="mord mathit">n</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mbin">÷</span><span class="mord mathit" style="margin-right:0.05764em;">S</span><span class="mord mathit">p</span><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mord mathit">i</span><span class="mord mathit">t</span><span class="mord mathit" style="margin-right:0.07847em;">I</span><span class="mord mathit">n</span><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mord mathit">o</span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathit">m</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span></p><h2 id="cart数学原理"><a class="markdownIt-Anchor" href="#cart数学原理"></a> CART数学原理</h2><h3 id="基尼指数gini"><a class="markdownIt-Anchor" href="#基尼指数gini"></a> 基尼指数GINI</h3><p>1、是一种不等性度量，表示一个随机选中的样本在子集中被分错的可能性；<br>2、通常用来度量收入不平衡，可以用来度量任何不均匀分布；<br>3、是介于0~1之间的数，0-完全相等，1-完全不相等；<br>4、总体内包含的类别越杂乱，GINI指数就越大（跟熵的概念很相似）</p><p><strong>Gini系数</strong>的计算方式如下 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>i</mi><mi>n</mi><mi>i</mi><mo>(</mo><mi>p</mi><mo>)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>K</mi></mrow></msubsup><msub><mi>p</mi><mrow><mi>k</mi></mrow></msub><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>p</mi><mrow><mi>k</mi></mrow></msub><mo fence="true">)</mo></mrow><mo>=</mo><mn>1</mn><mo>−</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>K</mi></mrow></msubsup><msubsup><mi>p</mi><mrow><mi>k</mi></mrow><mrow><mn>2</mn></mrow></msubsup></mrow><annotation encoding="application/x-tex">Gini(p)=\sum_{k=1}^{K} p_{k}\left(1-p_{k}\right)=1-\sum_{k=1}^{K} p_{k}^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8423309999999999em;"></span><span class="strut bottom" style="height:1.142341em;vertical-align:-0.30001em;"></span><span class="base textstyle uncramped"><span class="mord mathit">G</span><span class="mord mathit">i</span><span class="mord mathit">n</span><span class="mord mathit">i</span><span class="mopen">(</span><span class="mord mathit">p</span><span class="mclose">)</span><span class="mrel">=</span><span class="mop"><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">∑</span><span class="vlist"><span style="top:0.30001em;margin-left:0em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.364em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:0.07153em;">K</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit">p</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord mathrm">1</span><span class="mbin">−</span><span class="mord"><span class="mord mathit">p</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span><span class="mrel">=</span><span class="mord mathrm">1</span><span class="mbin">−</span><span class="mop"><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">∑</span><span class="vlist"><span style="top:0.30001em;margin-left:0em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.364em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:0.07153em;">K</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit">p</span><span class="vlist"><span style="top:0.2831079999999999em;margin-left:0em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></p><p>上面式子表述的意思就是，加入特征X以后，数据不纯度减小的程度.</p><p>如果D为样本数据集，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>i</mi><mi>n</mi><mi>i</mi><mo>(</mo><mi>D</mi><mo>)</mo><mo>=</mo><mn>1</mn><mo>−</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>K</mi></mrow></msubsup><msup><mrow><mo fence="true">(</mo><mfrac><mrow><mrow><mo fence="true">∣</mo><msub><mi>C</mi><mrow><mi>k</mi></mrow></msub><mo fence="true">∣</mo></mrow></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mo fence="true">)</mo></mrow><mrow><mn>2</mn></mrow></msup></mrow><annotation encoding="application/x-tex">Gini(D)=1-\sum_{k=1}^{K}\left(\frac{\left|C_{k}\right|}{|D|}\right)^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.2151079999999999em;"></span><span class="strut bottom" style="height:1.865128em;vertical-align:-0.65002em;"></span><span class="base textstyle uncramped"><span class="mord mathit">G</span><span class="mord mathit">i</span><span class="mord mathit">n</span><span class="mord mathit">i</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord mathrm">1</span><span class="mbin">−</span><span class="mop"><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">∑</span><span class="vlist"><span style="top:0.30001em;margin-left:0em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.364em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:0.07153em;">K</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="minner"><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.34500000000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">∣</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mord mathrm">∣</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.485em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="minner scriptstyle uncramped"><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15122857142857138em;margin-right:0.07142857142857144em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="vlist"><span style="top:-0.7639999999999999em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>其中Ck是D中属于第k类的样本子集，K是类的个数。</p><p>如果D被特征A划分为D1、D2两部分，这个时候就是<em>统计均值</em>，样本数据集D的基尼系数：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>i</mi><mi>n</mi><mi>i</mi><mo>(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo>)</mo><mo>=</mo><mfrac><mrow><mrow><mo fence="true">∣</mo><msub><mi>D</mi><mrow><mn>1</mn></mrow></msub><mo fence="true">∣</mo></mrow></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>G</mi><mi>i</mi><mi>n</mi><mi>i</mi><mrow><mo fence="true">(</mo><msub><mi>D</mi><mrow><mn>1</mn></mrow></msub><mo fence="true">)</mo></mrow><mo>+</mo><mfrac><mrow><mrow><mo fence="true">∣</mo><msub><mi>D</mi><mrow><mn>2</mn></mrow></msub><mo fence="true">∣</mo></mrow></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>G</mi><mi>i</mi><mi>n</mi><mi>i</mi><mrow><mo fence="true">(</mo><msub><mi>D</mi><mrow><mn>2</mn></mrow></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">Gini(D, A)=\frac{\left|D_{1}\right|}{|D|} Gini\left(D_{1}\right)+\frac{\left|D_{2}\right|}{|D|} Gini\left(D_{2}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.01em;"></span><span class="strut bottom" style="height:1.53em;vertical-align:-0.52em;"></span><span class="base textstyle uncramped"><span class="mord mathit">G</span><span class="mord mathit">i</span><span class="mord mathit">n</span><span class="mord mathit">i</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mord mathit">A</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.34500000000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">∣</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mord mathrm">∣</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.485em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="minner scriptstyle uncramped"><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.07142857142857144em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mord mathit">G</span><span class="mord mathit">i</span><span class="mord mathit">n</span><span class="mord mathit">i</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span><span class="mbin">+</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.34500000000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">∣</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mord mathrm">∣</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.485em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="minner scriptstyle uncramped"><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.07142857142857144em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mord mathit">G</span><span class="mord mathit">i</span><span class="mord mathit">n</span><span class="mord mathit">i</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span></span></span></span></p><p>[<a href="https:%5Cwww.cnblogs.com%5Cxingshansi%5Cp%5C6847334.html" target="_blank" rel="noopener">统计学习方法：CART算法</a>](https:\<a href="http://www.cnblogs.com" target="_blank" rel="noopener">www.cnblogs.com</a>\xingshansi\p\6847334.html)</p><hr><h3 id="最小二乘回归树"><a class="markdownIt-Anchor" href="#最小二乘回归树"></a> 最小二乘回归树</h3><p>一个回归树对应着输入空间（即特征空间）的一个划分以及在划分的单元上的输出值。假设已将输入空间划分为M个单元R1,R2,…Rm，并且在每个单元Rm上有一个固定的输出值Cm，于是回归树模型可表示为：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>x</mi><mo>)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>m</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>M</mi></mrow></msubsup><msub><mi>c</mi><mrow><mi>m</mi></mrow></msub><mi>I</mi><mrow><mo fence="true">(</mo><mi>x</mi><mo>∈</mo><msub><mi>R</mi><mrow><mi>m</mi></mrow></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">f(x)=\sum_{m=1}^{M} c_{m} I\left(x \in R_{m}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8423309999999999em;"></span><span class="strut bottom" style="height:1.142341em;vertical-align:-0.30001em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">x</span><span class="mclose">)</span><span class="mrel">=</span><span class="mop"><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">∑</span><span class="vlist"><span style="top:0.30001em;margin-left:0em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">m</span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.364em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:0.10903em;">M</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit">c</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">m</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:0.07847em;">I</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord mathit">x</span><span class="mrel">∈</span><span class="mord"><span class="mord mathit" style="margin-right:0.00773em;">R</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.00773em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">m</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span></span></span></span></p><p>模型输出值与实际值的误差：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo>∑</mo><mrow><msub><mi>x</mi><mrow><mi>i</mi></mrow></msub><mo>∈</mo><msub><mi>R</mi><mrow><mi>m</mi></mrow></msub></mrow></msub><msup><mrow><mo fence="true">(</mo><msub><mi>y</mi><mrow><mi>i</mi></mrow></msub><mo>−</mo><mi>f</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mrow><mi>i</mi></mrow></msub><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mrow><mn>2</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\sum_{x_{i} \in R_{m}}\left(y_{i}-f\left(x_{i}\right)\right)^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8151079999999999em;"></span><span class="strut bottom" style="height:1.2201179999999998em;vertical-align:-0.40501em;"></span><span class="base textstyle uncramped"><span class="mop"><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">∑</span><span class="vlist"><span style="top:0.30001em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.07142857142857144em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">∈</span><span class="mord"><span class="mord mathit" style="margin-right:0.00773em;">R</span><span class="vlist"><span style="top:0.15em;margin-right:0.07142857142857144em;margin-left:-0.00773em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathit">m</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="minner"><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">−</span><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span><span class="vlist"><span style="top:-0.364em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></p><p>我们希望每个单元上的Cm，可以是的这个平方误差最小化。易知，当<strong>Cm为相应单元的所有实际值的均值时，可以到最优：</strong></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mrow><mi>c</mi></mrow><mo>^</mo></mover><mrow><mi>m</mi></mrow></msub><mo>=</mo><mi>a</mi><mi>v</mi><mi>e</mi><mrow><mo fence="true">(</mo><msub><mi>y</mi><mrow><mi>i</mi></mrow></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mi>i</mi></mrow></msub><mo>∈</mo><msub><mi>R</mi><mrow><mi>m</mi></mrow></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\hat{c}_{m}=ave\left(y_{i} | x_{i} \in R_{m}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord accent"><span class="vlist"><span style="top:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">c</span></span></span><span style="top:0em;margin-left:0.11112em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="accent-body"><span>^</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">m</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right:0.03588em;">v</span><span class="mord mathit">e</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathrm">∣</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">∈</span><span class="mord"><span class="mord mathit" style="margin-right:0.00773em;">R</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.00773em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">m</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span></span></span></span></p><p>假设，我们选择变量 xj 为切分变量，它的取值 s 为切分点，那么就会得到两个区域：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mrow><mi mathvariant="normal">R</mi></mrow><mrow><mn>1</mn></mrow></msub><mo>(</mo><mi>j</mi><mo separator="true">,</mo><mi>s</mi><mo>)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mi>x</mi><mi mathvariant="normal">∣</mi><msup><mi>x</mi><mrow><mo>(</mo><mi>j</mi><mo>)</mo></mrow></msup><mo>≤</mo><mi>s</mi><mo fence="true">}</mo></mrow><mo separator="true">,</mo><msub><mrow><mi mathvariant="normal">R</mi></mrow><mrow><mn>2</mn></mrow></msub><mo>(</mo><mi>j</mi><mo separator="true">,</mo><mi>s</mi><mo>)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mi>x</mi><mi mathvariant="normal">∣</mi><msup><mi>x</mi><mrow><mo>(</mo><mi>j</mi><mo>)</mo></mrow></msup><mo>&gt;</mo><mi>s</mi><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">\mathrm{R}_{1}(j, s)=\left\{x | x^{(j)} \leq s\right\}, \mathrm{R}_{2}(j, s)=\left\{x | x^{(j)}&gt;s\right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8879999999999999em;"></span><span class="strut bottom" style="height:1.2380099999999998em;vertical-align:-0.35001em;"></span><span class="base textstyle uncramped"><span class=""><span class="mord textstyle uncramped"><span class="mord mathrm">R</span></span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mpunct">,</span><span class="mord mathit">s</span><span class="mclose">)</span><span class="mrel">=</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">{</span></span><span class="mord mathit">x</span><span class="mord mathrm">∣</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">≤</span><span class="mord mathit">s</span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">}</span></span></span><span class="mpunct">,</span><span class=""><span class="mord textstyle uncramped"><span class="mord mathrm">R</span></span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mpunct">,</span><span class="mord mathit">s</span><span class="mclose">)</span><span class="mrel">=</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">{</span></span><span class="mord mathit">x</span><span class="mord mathrm">∣</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">&gt;</span><span class="mord mathit">s</span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">}</span></span></span></span></span></span></p><p>当j和s固定时，我们要找到两个区域的代表值c1，c2使各自区间上的平方差最小：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>min</mi><mrow><mi>j</mi><mo separator="true">,</mo><mi>s</mi></mrow></msub><mrow><mo fence="true">[</mo><msub><mi>min</mi><mrow><msub><mi>c</mi><mrow><mn>1</mn></mrow></msub></mrow></msub><msub><mo>∑</mo><mrow><msub><mi>x</mi><mrow><mi>i</mi></mrow></msub><mo>∈</mo><msub><mi>R</mi><mrow><mn>1</mn></mrow></msub><mo>(</mo><mi>j</mi><mo separator="true">,</mo><mi>s</mi><mo>)</mo></mrow></msub><msup><mrow><mo fence="true">(</mo><msub><mi>y</mi><mrow><mi>i</mi></mrow></msub><mo>−</mo><msub><mi>c</mi><mrow><mn>1</mn></mrow></msub><mo fence="true">)</mo></mrow><mrow><mn>2</mn></mrow></msup><mo>+</mo><msub><mi>min</mi><mrow><msub><mi>c</mi><mrow><mn>2</mn></mrow></msub></mrow></msub><msub><mo>∑</mo><mrow><msub><mi>x</mi><mrow><mi>i</mi></mrow></msub><mo>∈</mo><msub><mi>R</mi><mrow><mn>2</mn></mrow></msub><mo>(</mo><mi>j</mi><mo separator="true">,</mo><mi>s</mi><mo>)</mo></mrow></msub><msup><mrow><mo fence="true">(</mo><msub><mi>y</mi><mrow><mi>i</mi></mrow></msub><mo>−</mo><msub><mi>c</mi><mrow><mn>2</mn></mrow></msub><mo fence="true">)</mo></mrow><mrow><mn>2</mn></mrow></msup><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\min _{j, s}\left[\min _{c_{1}} \sum_{x_{i} \in R_{1}(j, s)}\left(y_{i}-c_{1}\right)^{2}+\min _{c_{2}} \sum_{x_{i} \in R_{2}(j, s)}\left(y_{i}-c_{2}\right)^{2}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.15em;"></span><span class="strut bottom" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="base textstyle uncramped"><span class="mop"><span class="mop">min</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mpunct">,</span><span class="mord mathit">s</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="mop"><span class="mop">min</span><span class="vlist"><span style="top:0.15000000000000002em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord"><span class="mord mathit">c</span><span class="vlist"><span style="top:0.15em;margin-right:0.07142857142857144em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mop"><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">∑</span><span class="vlist"><span style="top:0.30001em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.07142857142857144em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">∈</span><span class="mord"><span class="mord mathit" style="margin-right:0.00773em;">R</span><span class="vlist"><span style="top:0.15em;margin-right:0.07142857142857144em;margin-left:-0.00773em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mpunct">,</span><span class="mord mathit">s</span><span class="mclose">)</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="minner"><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">−</span><span class="mord"><span class="mord mathit">c</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span><span class="vlist"><span style="top:-0.364em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mop"><span class="mop">min</span><span class="vlist"><span style="top:0.15000000000000002em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord"><span class="mord mathit">c</span><span class="vlist"><span style="top:0.15em;margin-right:0.07142857142857144em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mop"><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">∑</span><span class="vlist"><span style="top:0.30001em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.07142857142857144em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">∈</span><span class="mord"><span class="mord mathit" style="margin-right:0.00773em;">R</span><span class="vlist"><span style="top:0.15em;margin-right:0.07142857142857144em;margin-left:-0.00773em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mpunct">,</span><span class="mord mathit">s</span><span class="mclose">)</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="minner"><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">−</span><span class="mord"><span class="mord mathit">c</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span><span class="vlist"><span style="top:-0.364em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">]</span></span></span></span></span></span></p><p>前面已经知道c1，c2为区间上的平均：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mrow><mi>c</mi></mrow><mo>^</mo></mover><mrow><mn>1</mn></mrow></msub><mo>=</mo><mi>a</mi><mi>v</mi><mi>e</mi><mrow><mo fence="true">(</mo><msub><mi>y</mi><mrow><mi>i</mi></mrow></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mi>i</mi></mrow></msub><mi>ϵ</mi><msub><mi>R</mi><mrow><mn>1</mn></mrow></msub><mo>(</mo><mi>j</mi><mo separator="true">,</mo><mi>s</mi><mo>)</mo><mo fence="true">)</mo></mrow><mo separator="true">,</mo><msub><mover accent="true"><mrow><mi>c</mi></mrow><mo>^</mo></mover><mrow><mn>2</mn></mrow></msub><mo>=</mo><mi>a</mi><mi>v</mi><mi>e</mi><mrow><mo fence="true">(</mo><msub><mi>y</mi><mrow><mi>i</mi></mrow></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mi>i</mi></mrow></msub><mi>ϵ</mi><msub><mi>R</mi><mrow><mn>1</mn></mrow></msub><mo>(</mo><mi>j</mi><mo separator="true">,</mo><mi>s</mi><mo>)</mo><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\hat{c}_{1}=ave\left(y_{i} | x_{i} \epsilon R_{1}(j, s)\right), \hat{c}_{2}=ave\left(y_{i} | x_{i} \epsilon R_{1}(j, s)\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord accent"><span class="vlist"><span style="top:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">c</span></span></span><span style="top:0em;margin-left:0.11112em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="accent-body"><span>^</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right:0.03588em;">v</span><span class="mord mathit">e</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathrm">∣</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">ϵ</span><span class="mord"><span class="mord mathit" style="margin-right:0.00773em;">R</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.00773em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mpunct">,</span><span class="mord mathit">s</span><span class="mclose">)</span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span><span class="mpunct">,</span><span class="mord"><span class="mord accent"><span class="vlist"><span style="top:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">c</span></span></span><span style="top:0em;margin-left:0.11112em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="accent-body"><span>^</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right:0.03588em;">v</span><span class="mord mathit">e</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathrm">∣</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">ϵ</span><span class="mord"><span class="mord mathit" style="margin-right:0.00773em;">R</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.00773em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mpunct">,</span><span class="mord mathit">s</span><span class="mclose">)</span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span></span></span></span></p><p>那么对固定的 j 只需要找到最优的s，然后通过遍历所有的变量，我们可以找到最优的j，这样我们就可以得到最优对（j，s）,（特征j，特征分类值s），并s得到两个区间。</p><p>这样的回归树通常称为最小二乘回归树（least squares regression tree）。</p><p><strong>上述过程表示的算法步骤为:</strong></p><p><img src="https:%5Ccuijiahua.com%5Cwp-content%5Cuploads%5C2017%5C12%5Cml_13_9.png" alt=""></p><h2 id="处理连续数值型特征"><a class="markdownIt-Anchor" href="#处理连续数值型特征"></a> 处理连续数值型特征</h2><p>C4.5和CART既可以处理离散型属性，也可以处理连续性属性。对于离散型描述属性，处理方法与ID3相同。对于连续分布的特征，其处理方法是：</p><p>以C4.5为例子，在C4.5中，对连续属性的处理如下：</p><p>1、对特征的取值进行升序排序</p><p>2、两个特征取值之间的中点作为可能的<strong>分裂点</strong>，从分裂点将数据集分成两部分，计算每个可能的分裂点的信息增益（InforGain）。优化算法就是只计算分类属性发生改变的那些特征取值。</p><p>3、选择修正后信息增益(InforGain)最大的分裂点作为该特征的最佳分裂点</p><p>4、计算最佳分裂点的信息增益率（Gain Ratio）作为特征的Gain Ratio。注意，此处需对最佳分裂点的信息增益进行修正：减去log2(N-1)|D|（N是连续特征的取值个数，D是训练数据数目，此修正的原因在于：当离散属性和连续属性并存时，C4.5算法倾向于选择连续特征做最佳树分裂点）</p><p>Q：为什么这边是使用的信息增益率？</p><p>A：经证明，在决定连续特征的分界点时采用增益这个指标（因为若采用增益率，splittedinfo影响分裂点信息度量准确性，若某分界点恰好将连续特征分成数目相等的两部分时其抑制作用最大），而选择属性的时候才使用增益率这个指标能选择出最佳分类特征。</p><h2 id="剪枝"><a class="markdownIt-Anchor" href="#剪枝"></a> 剪枝</h2><h3 id="预剪枝pre-pruning"><a class="markdownIt-Anchor" href="#预剪枝pre-pruning"></a> 预剪枝(Pre-pruning)</h3><blockquote><p>在构建决策树的过程时，提前停止。</p></blockquote><ul><li>根据一些原则及早的停止树增长，如树的深度达到用户所要的深度、节点中样本个数少于用户指定个数、不纯度指标下降的最大幅度小于用户指定的幅度等</li><li>采用检验技术对当前结点对应的样本集合进行检验，如果该样本集合的样本数量已小于事先指定的最小允许值，那么停止该结点的继续生长，并将该结点变为叶子结点，否则可以继续扩展该结点。</li><li>▲核心问题是如何事先指定树的最大深度，如果设置的最大深度不恰当，那么将会导致过于限制树的生长，使决策树的表达式规则趋于一般，不能更好地对新数据集进行分类和预测</li></ul><h3 id="后剪枝post-pruning"><a class="markdownIt-Anchor" href="#后剪枝post-pruning"></a> 后剪枝(Post-pruning)</h3><blockquote><p>决策树构建好后，然后才开始裁剪。</p></blockquote><ul><li>代价复杂性剪枝、最小误差剪枝、悲观误差剪枝等等</li><li>是一个边修剪边检验的过程。<ul><li>在决策树的不断剪枝操作过程中，将原样本集合或新数据集合作为测试数据，检验决策树对测试数据的预测精度，并计算出相应的错误率，如果剪掉某个子树后的决策树对测试数据的预测精度或其他测度不降低，那么剪掉该子树。</li><li>▲关键就是用独立的验证数据集对训练集生长的树进行剪枝</li></ul></li></ul><h3 id="cart剪枝"><a class="markdownIt-Anchor" href="#cart剪枝"></a> CART剪枝</h3><p>先来看看剪枝用到的准则函数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>α</mi></mrow></msub><mo>(</mo><mi>T</mi><mo>)</mo><mo>=</mo><mi>C</mi><mo>(</mo><mi>T</mi><mo>)</mo><mo>+</mo><mi>α</mi><mi mathvariant="normal">∣</mi><msub><mi>T</mi><mrow><mi>l</mi><mi>e</mi><mi>a</mi><mi>f</mi></mrow></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">C_{\alpha}(T)=C(T)+\alpha|T_{leaf}|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.0037em;">α</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.0037em;">α</span><span class="mord mathrm">∣</span><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mord mathit">e</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right:0.10764em;">f</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathrm">∣</span></span></span></span></p><p>C（T）是叶节点特性的度量，C4.3里它是熵的均值，CART决策树里它是基尼系数的概率均值，原理类似。多一个正则项，就是稀疏性约束。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mrow><mi>l</mi><mi>e</mi><mi>a</mi><mi>f</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{leaf}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mord mathit">e</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right:0.10764em;">f</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>为叶子节点个数，越多，损失越大</p><p>ID3、C4.5算法中的剪枝原理是给定α，事实上很难一次给出理想的α。CART剪枝不再给定一个α，然后选择最优决策树，而是通过设定不同的α，通过交叉验证选择最优CART树，也就是：</p><p><strong>训练集</strong>：得到不同的子树;</p><p><strong>测试集</strong>：交叉验证选择最优树.</p><p>从有限个子树<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">{</mo><msub><mi>T</mi><mrow><mn>0</mn></mrow></msub><mo separator="true">,</mo><msub><mi>T</mi><mrow><mn>1</mn></mrow></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>T</mi><mrow><mi>n</mi></mrow></msub><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">\left\{T_{0}, T_{1}, \ldots, T_{n}\right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">{</span><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">0</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="minner">…</span><span class="mpunct">,</span><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">}</span></span></span></span></span>中计算最优子树，最优子树由验证集得出的测试误差决定，哪个最小就是哪个。</p><p>这里就引出了一个问题，每次剪哪一个节点呢？如何让<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mrow><mi>l</mi><mi>e</mi><mi>a</mi><mi>f</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{leaf}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mord mathit">e</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right:0.10764em;">f</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>到达一个合适的点呢？先看分析剪枝的两个极端情况：</p><p>1）完全没剪：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>α</mi></mrow></msub><mrow><mo fence="true">(</mo><msub><mi>T</mi><mrow><mi>t</mi></mrow></msub><mo fence="true">)</mo></mrow><mo>=</mo><mi>C</mi><mrow><mo fence="true">(</mo><msub><mi>T</mi><mrow><mi>t</mi></mrow></msub><mo fence="true">)</mo></mrow><mo>+</mo><mi>α</mi><mrow><mo fence="true">∣</mo><msub><mi>T</mi><mrow><mi>t</mi></mrow></msub><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">C_{\alpha}\left(T_{t}\right)=C\left(T_{t}\right)+\alpha\left|T_{t}\right|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.0037em;">α</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.0037em;">α</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">∣</span><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">∣</span></span></span></span></span></p><p>2）只剩根节点：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>α</mi></mrow></msub><mo>(</mo><mi>t</mi><mo>)</mo><mo>=</mo><mi>C</mi><mo>(</mo><mi>t</mi><mo>)</mo><mo>+</mo><mi>α</mi></mrow><annotation encoding="application/x-tex">C_{\alpha}(t)=C(t)+\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.0037em;">α</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.0037em;">α</span></span></span></span></p><p>在α较小或者为0时，有：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>α</mi></mrow></msub><mrow><mo fence="true">(</mo><msub><mi>T</mi><mrow><mi>t</mi></mrow></msub><mo fence="true">)</mo></mrow><mo>&lt;</mo><msub><mi>C</mi><mrow><mi>α</mi></mrow></msub><mo>(</mo><mi>t</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">C_{\alpha}\left(T_{t}\right)&lt;C_{\alpha}(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.0037em;">α</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span><span class="mrel">&lt;</span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.0037em;">α</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span></span></span></span></p><p>在α取+∞大时，有：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>α</mi></mrow></msub><mrow><mo fence="true">(</mo><msub><mi>T</mi><mrow><mi>t</mi></mrow></msub><mo fence="true">)</mo></mrow><mo>&gt;</mo><msub><mi>C</mi><mrow><mi>α</mi></mrow></msub><mo>(</mo><mi>t</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">C_{\alpha}\left(T_{t}\right)&gt;C_{\alpha}(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.0037em;">α</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span><span class="mrel">&gt;</span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.0037em;">α</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span></span></span></span></p><p>α是连续变量，因此总有临界点：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>α</mi></mrow></msub><mrow><mo fence="true">(</mo><msub><mi>T</mi><mrow><mi>t</mi></mrow></msub><mo fence="true">)</mo></mrow><mo>=</mo><msub><mi>C</mi><mrow><mi>α</mi></mrow></msub><mo>(</mo><mi>t</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">C_{\alpha}\left(T_{t}\right)=C_{\alpha}(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.0037em;">α</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;">)</span></span><span class="mrel">=</span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.0037em;">α</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span></span></span></span></p><p>为了不混淆变量，重新定义：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo>(</mo><mi>t</mi><mo>)</mo><mo>=</mo><mfrac><mrow><mi>C</mi><mo>(</mo><mi>t</mi><mo>)</mo><mo>−</mo><mi>C</mi><mrow><mo fence="true">(</mo><msub><mi>T</mi><mrow><mi>t</mi></mrow></msub><mo fence="true">)</mo></mrow></mrow><mrow><mrow><mo fence="true">∣</mo><msub><mi>T</mi><mrow><mi>t</mi></mrow></msub><mo fence="true">∣</mo></mrow><mo>−</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">g(t)=\frac{C(t)-C\left(T_{t}\right)}{\left|T_{t}\right|-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.01em;"></span><span class="strut bottom" style="height:1.53em;vertical-align:-0.52em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.34500000000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="minner scriptstyle cramped"><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="vlist"><span style="top:0.15em;margin-right:0.07142857142857144em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">∣</span></span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.485em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span><span class="mbin">−</span><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="minner scriptstyle uncramped"><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="vlist"><span style="top:0.15em;margin-right:0.07142857142857144em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;">)</span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0.7em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></p><p><strong>α大于g(t)就是该剪</strong>。简而言之：</p><blockquote><p>对于同一棵树的结点，α都是一样的，当α从0开始缓慢增大（或者从+∞慢慢减小），总会有某棵子树该剪，其他子树不该剪的情况，即α超过了某个结点的g(t)，但还没有超过其他结点的g(t)。这样随着alpha不断增大，不断地剪枝，就得到了n+1棵子树，接下来只要用独立数据集测试这n+1棵子树，试试哪棵子树的误差最小 就知道那棵是最好的方案了。</p></blockquote><h4 id="cart剪枝的算法过程"><a class="markdownIt-Anchor" href="#cart剪枝的算法过程"></a> CART剪枝的算法过程</h4><p><img src="/2019/08/30/机器学习——决策树/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94%E5%86%B3%E7%AD%96%E6%A0%91%5CCART%E5%89%AA%E6%9E%9D.png" alt="CART剪枝"></p><h2 id="代码编写注意点"><a class="markdownIt-Anchor" href="#代码编写注意点"></a> 代码编写注意点</h2><p>递归的结束条件：</p><h3 id="一到达叶节点"><a class="markdownIt-Anchor" href="#一到达叶节点"></a> 一.到达叶节点</h3><p>1.当某集合的值全是同一类时，那么该子集直接可作为叶子节点，为一个类别，此时不再下探。</p><p>2.在决策树构造过程中可能会出现这种情况：所有特征都作为分裂特征<strong>用光</strong>了，但<strong>子集还不是纯净集</strong>（集合内的元素不属于同一类别）。在这种情况下，由于没有更多信息可以使用了，一般对这些子集进行“<strong>多数表决</strong>”，即使用此子集中出现次数最多的类别作为此节点类别，然后将此节点作为叶子节点，此时不再下探</p><h3 id="二预剪枝条件"><a class="markdownIt-Anchor" href="#二预剪枝条件"></a> 二.预剪枝条件</h3><p>1.树的深度达到用户所要的深度</p><p>2.节点中样本个数少于用户指定个数</p><h2 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h2><p><img src="https:%5Ccuijiahua.com%5Cwp-content%5Cuploads%5C2017%5C11%5Cml_3_1.jpg" alt=""></p><p>借鉴：</p><ul><li><a href="https:%5Ccuijiahua.com%5Cblog%5C2017%5C11%5Cml_3_decision_tree_2.html%5Ccomment-page-2#comments" target="_blank" rel="noopener">机器学习实战教程（三）：决策树实战篇之为自己配个隐形眼镜</a></li><li><a href="https:%5Cwww.cnblogs.com%5Csxron%5Cp%5C5471078.html" target="_blank" rel="noopener">决策树算法原理及实现</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;机器学习决策树&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#机器学习决策树&quot;&gt;&lt;/a&gt; 机器学习——决策树&lt;/h1&gt;
&lt;h2 id=&quot;决策树基础概念&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#决策树基础
      
    
    </summary>
    
    
      <category term="机器学习" scheme="https://nymrli.top/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Sklearn——决策树</title>
    <link href="https://nymrli.top/2019/08/30/Sklearn%E2%80%94%E2%80%94%E5%86%B3%E7%AD%96%E6%A0%91/"/>
    <id>https://nymrli.top/2019/08/30/Sklearn——决策树/</id>
    <published>2019-08-30T13:43:27.000Z</published>
    <updated>2019-09-15T08:07:31.004Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sklearn决策树"><a class="markdownIt-Anchor" href="#sklearn决策树"></a> Sklearn——决策树</h1><blockquote><p>注明：转载自<a href="https://cuijiahua.com/wp-content/uploads/2017/11/ml_3_11.jpg" target="_blank" rel="noopener">Jack Gui的博客</a></p></blockquote><h2 id="1-实战背景"><a class="markdownIt-Anchor" href="#1-实战背景"></a> 1、实战背景</h2><p>进入本文的正题：眼科医生是如何判断患者需要佩戴隐形眼镜的类型的？一旦理解了决策树的工作原理，我们甚至也可以帮助人们判断需要佩戴的镜片类型。</p><p>隐形眼镜数据集是非常著名的数据集，它包含很多换着眼部状态的观察条件以及医生推荐的隐形眼镜类型。隐形眼镜类型包括硬材质(hard)、软材质(soft)以及不适合佩戴隐形眼镜(no lenses)。数据来源与UCI数据库，数据集下载地址：[lenses.txt)]([<a href="https://github.com/Jack-Cherish/Machine-Learning/blob/master/Decision%20Tree/lenses.txt" target="_blank" rel="noopener">https://github.com/Jack-Cherish/Machine-Learning/blob/master/Decision Tree/lenses.txt</a>](<a href="https://github.com/Jack-Cherish/Machine-Learning/blob/master/Decision" target="_blank" rel="noopener">https://github.com/Jack-Cherish/Machine-Learning/blob/master/Decision</a> Tree/lenses.txt))</p><table><thead><tr><th>young</th><th>myope</th><th>no</th><th>reduced</th><th>no lenses</th></tr></thead><tbody><tr><td>young</td><td>myope</td><td>no</td><td>normal</td><td>soft</td></tr><tr><td>young</td><td>myope</td><td>yes</td><td>reduced</td><td>no lenses</td></tr><tr><td>young</td><td>myope</td><td>yes</td><td>normal</td><td>hard</td></tr><tr><td>young</td><td>hyper</td><td>no</td><td>reduced</td><td>no lenses</td></tr><tr><td>young</td><td>hyper</td><td>no</td><td>normal</td><td>soft</td></tr><tr><td>young</td><td>hyper</td><td>yes</td><td>reduced</td><td>no lenses</td></tr><tr><td>young</td><td>hyper</td><td>yes</td><td>normal</td><td>hard</td></tr><tr><td>pre</td><td>myope</td><td>no</td><td>reduced</td><td>no lenses</td></tr><tr><td>pre</td><td>myope</td><td>no</td><td>normal</td><td>soft</td></tr><tr><td>pre</td><td>myope</td><td>yes</td><td>reduced</td><td>no lenses</td></tr><tr><td>pre</td><td>myope</td><td>yes</td><td>normal</td><td>hard</td></tr><tr><td>pre</td><td>hyper</td><td>no</td><td>reduced</td><td>no lenses</td></tr><tr><td>pre</td><td>hyper</td><td>no</td><td>normal</td><td>soft</td></tr><tr><td>pre</td><td>hyper</td><td>yes</td><td>reduced</td><td>no lenses</td></tr><tr><td>pre</td><td>hyper</td><td>yes</td><td>normal</td><td>no lenses</td></tr><tr><td>presbyopic</td><td>myope</td><td>no</td><td>reduced</td><td>no lenses</td></tr><tr><td>presbyopic</td><td>myope</td><td>no</td><td>normal</td><td>no lenses</td></tr><tr><td>presbyopic</td><td>myope</td><td>yes</td><td>reduced</td><td>no lenses</td></tr><tr><td>presbyopic</td><td>myope</td><td>yes</td><td>normal</td><td>hard</td></tr><tr><td>presbyopic</td><td>hyper</td><td>no</td><td>reduced</td><td>no lenses</td></tr><tr><td>presbyopic</td><td>hyper</td><td>no</td><td>normal</td><td>soft</td></tr><tr><td>presbyopic</td><td>hyper</td><td>yes</td><td>reduced</td><td>no lenses</td></tr><tr><td>presbyopic</td><td>hyper</td><td>yes</td><td>normal</td><td>no lenses</td></tr></tbody></table><p>一共有24组数据，数据的Labels依次是<code>age</code>、<code>prescript</code>、<code>astigmatic</code>、<code>tearRate</code>、<code>class</code>，也就是第一列是年龄，第二列是症状，第三列是是否散光，第四列是眼泪数量，第五列是最终的分类标签。数据如下图所示：</p><h2 id="2-使用sklearn构建决策树"><a class="markdownIt-Anchor" href="#2-使用sklearn构建决策树"></a> 2、使用Sklearn构建决策树</h2><p>官方英文文档地址：<a href="https://cuijiahua.com/wp-content/themes/begin/inc/go.php?url=https://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html" target="_blank" rel="noopener">http://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html</a></p><p>sklearn.tree模块提供了决策树模型，用于解决分类问题和回归问题：</p><p><img src="https://cuijiahua.com/wp-content/uploads/2017/11/ml_3_11.jpg" alt=""></p><p>本次实战内容使用的是DecisionTreeClassifier和export_graphviz，前者用于决策树构建，后者用于决策树可视化。</p><p><strong>DecisionTreeClassifier构建决策树：</strong></p><p>让我们先看下DecisionTreeClassifier这个函数，一共有12个参数：</p><p>参数说明如下：</p><ul><li><p>**criterion：**特征选择标准，可选参数，默认是<code>gini</code>，可以设置为<code>entropy</code>。<code>gini</code>是基尼不纯度，是将来自集合的某种结果随机应用于某一数据项的预期误差率，是一种基于统计的思想。<code>entropy</code>是香农熵，也就是上篇文章讲过的内容，是一种基于信息论的思想。Sklearn把<code>gini</code>设为默认参数，应该也是做了相应的斟酌的，精度也许更高些？ID3算法使用的是<code>entropy</code>，CART算法使用的则是<code>gini</code>。</p></li><li><p>**splitter：**特征划分点选择标准，可选参数，默认是<code>best</code>，可以设置为<code>random</code>。每个结点的选择策略。<code>best</code>参数是根据算法选择最佳的切分特征，例如<code>gini</code>、<code>entropy</code>。<code>random</code>随机的在部分划分点中找局部最优的划分点。默认的&quot;best&quot;适合样本量不大的时候，而如果样本数据量非常大，此时决策树构建推荐&quot;random&quot;。</p></li><li><p>max_features：</p><p>划分时考虑的最大特征数，可选参数，默认是None。寻找最佳切分时考虑的最大特征数(n_features为总共的特征数)，有如下6种情况：</p><ul><li>如果max_features是整型的数，则考虑max_features个特征；</li><li>如果max_features是浮点型的数，则考虑int(max_features * n_features)个特征；</li><li>如果max_features设为<code>auto</code>，那么max_features = sqrt(n_features)；</li><li>如果max_features设为<code>sqrt</code>，那么max_featrues = sqrt(n_features)，跟<code>auto</code>一样；</li><li>如果max_features设为<code>log2</code>，那么max_features = log2(n_features)；</li><li>如果max_features设为<code>None</code>，那么max_features = n_features，也就是所有特征都用。</li><li>一般来说，如果样本特征数不多，比如小于50，我们用默认的&quot;None&quot;就可以了，如果特征数非常多，我们可以灵活使用刚才描述的其他取值来控制划分时考虑的最大特征数，以控制决策树的生成时间。</li></ul></li><li><p>**max_depth：**决策树最大深，可选参数，默认是<code>None</code>。这个参数是这是树的层数的。层数的概念就是，比如在贷款的例子中，决策树的层数是2层。如果这个参数设置为<code>None</code>，那么决策树在建立子树的时候不会限制子树的深度。一般来说，数据少或者特征少的时候可以不管这个值。或者如果设置了<code>min_samples_slipt</code>参数，那么直到少于<code>min_smaples_split</code>个样本为止。如果模型样本量多，特征也多的情况下，推荐限制这个最大深度，具体的取值取决于数据的分布。常用的可以取值10-100之间。</p></li><li><p>**min_samples_split：**内部节点再划分所需最小样本数，可选参数，默认是2。这个值限制了子树继续划分的条件。如果<code>min_samples_split</code>为整数，那么在切分内部结点的时候，<code>min_samples_split</code>作为最小的样本数，也就是说，如果样本已经少于<code>min_samples_split</code>个样本，则停止继续切分。如果<code>min_samples_split</code>为浮点数，那么<code>min_samples_split</code>就是一个百分比，ceil(min_samples_split * n_samples)，数是向上取整的。如果样本量不大，不需要管这个值。如果样本量数量级非常大，则推荐增大这个值。</p></li><li><p>**min_samples_leaf：**叶子节点最少样本数，可选参数，默认是1。这个值限制了叶子节点最少的样本数，如果某叶子节点数目小于样本数，则会和兄弟节点一起被剪枝。叶结点需要最少的样本数，也就是最后到叶结点，需要多少个样本才能算一个叶结点。如果设置为1，哪怕这个类别只有1个样本，决策树也会构建出来。如果<code>min_samples_leaf</code>是整数，那么<code>min_samples_leaf</code>作为最小的样本数。如果是浮点数，那么<code>min_samples_leaf</code>就是一个百分比，同上，celi(min_samples_leaf * n_samples)，数是向上取整的。如果样本量不大，不需要管这个值。如果样本量数量级非常大，则推荐增大这个值。</p></li><li><p>**min_weight_fraction_leaf：**叶子节点最小的样本权重和，可选参数，默认是0。这个值限制了叶子节点所有样本权重和的最小值，如果小于这个值，则会和兄弟节点一起被剪枝。一般来说，如果我们有较多样本有缺失值，或者分类树样本的分布类别偏差很大，就会引入样本权重，这时我们就要注意这个值了。</p></li><li><p>**max_leaf_nodes：**最大叶子节点数，可选参数，默认是<code>None</code>。通过限制最大叶子节点数，可以防止过拟合。如果加了限制，算法会建立在最大叶子节点数内最优的决策树。如果特征不多，可以不考虑这个值，但是如果特征分成多的话，可以加以限制，具体的值可以通过交叉验证得到。</p></li><li><p>**class_weight：**类别权重，可选参数，默认是<code>None</code>，也可以字典、字典列表、<code>balanced</code>。指定样本各类别的的权重，主要是为了防止训练集某些类别的样本过多，导致训练的决策树过于偏向这些类别。类别的权重可以通过<code>{class_label：weight}</code>这样的格式给出，这里可以自己指定各个样本的权重，或者用<code>balanced</code>，如果使用<code>balanced</code>，则算法会自己计算权重，样本量少的类别所对应的样本权重会高。当然，如果你的样本类别分布没有明显的偏倚，则可以不管这个参数，选择默认的<code>None</code>。</p></li><li><p>**random_state：**可选参数，默认是<code>None</code>。随机数种子。如果是证书，那么<code>random_state</code>会作为随机数生成器的随机数种子。随机数种子，如果没有设置随机数，随机出来的数与当前系统时间有关，每个时刻都是不同的。如果设置了随机数种子，那么相同随机数种子，不同时刻产生的随机数也是相同的。如果是<code>RandomState instance</code>，那么<code>random_state</code>是随机数生成器。如果为<code>None</code>，则随机数生成器使用np.random。</p></li><li><p>**min_impurity_split：**节点划分最小不纯度,可选参数，默认是1e-7。这是个阈值，这个值限制了决策树的增长，如果某节点的不纯度(基尼系数，信息增益，均方差，绝对差)小于这个阈值，则该节点不再生成子节点。即为叶子节点 。</p></li><li><p>**presort：**数据是否预排序，可选参数，默认为<code>False</code>，这个值是布尔值，默认是False不排序。一般来说，如果样本量少或者限制了一个深度很小的决策树，设置为true可以让划分点选择更加快，决策树建立的更加快。如果样本量太大的话，反而没有什么好处。问题是样本量少的时候，我速度本来就不慢。所以这个值一般懒得理它就可以了。</p></li></ul><p>除了这些参数要注意以外，其他在调参时的注意点有：</p><ul><li>当样本数量少但是样本特征非常多的时候，决策树很容易过拟合，一般来说，样本数比特征数多一些会比较容易建立健壮的模型</li><li>如果样本数量少但是样本特征非常多，在拟合决策树模型前，推荐先做维度规约，比如主成分分析（PCA），特征选择（Losso）或者独立成分分析（ICA）。这样特征的维度会大大减小。再来拟合决策树模型效果会好。</li><li>推荐多用决策树的可视化，同时先限制决策树的深度，这样可以先观察下生成的决策树里数据的初步拟合情况，然后再决定是否要增加深度。</li><li>在训练模型时，注意观察样本的类别情况（主要指分类树），如果类别分布非常不均匀，就要考虑用class_weight来限制模型过于偏向样本多的类别。</li><li>决策树的数组使用的是numpy的float32类型，如果训练数据不是这样的格式，算法会先做copy再运行。</li><li>如果输入的样本矩阵是稀疏的，推荐在拟合前调用csc_matrix稀疏化，在预测前调用csr_matrix稀疏化。</li></ul><p>sklearn.tree.DecisionTreeClassifier()提供了一些方法供我们使用，如下图所示：</p><p><a href="https://cuijiahua.com/wp-content/uploads/2017/11/ml_3_13.jpg" target="_blank" rel="noopener"><img src="https://cuijiahua.com/wp-content/uploads/2017/11/ml_3_13.jpg" alt="机器学习实战教程（三）：决策树实战篇之为自己配个隐形眼镜"></a></p><p>Code1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> tree</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    fr = open(<span class="string">'lenses.txt'</span>)</span><br><span class="line">    lenses = [inst.strip().split(<span class="string">'/t'</span>) <span class="keyword">for</span> inst <span class="keyword">in</span> fr.readlines()]</span><br><span class="line">    print(lenses)</span><br><span class="line">    lensesLabels = [<span class="string">'age'</span>, <span class="string">'prescript'</span>, <span class="string">'astigmatic'</span>, <span class="string">'tearRate'</span>]</span><br><span class="line">    clf = tree.DecisionTreeClassifier()</span><br><span class="line">    lenses = clf.fit(lenses, lensesLabels)</span><br></pre></td></tr></table></figure><p>▲我们可以看到程序报错了，这是为什么？因为在fit()函数不能接收string类型的数据，通过打印的信息可以看到，数据都是string类型的。在使用fit()函数之前，我们需要对数据集进行编码，这里可以使用两种方法：</p><ul><li><a href="https://cuijiahua.com/wp-content/themes/begin/inc/go.php?url=https://scikit-learn.org/dev/modules/generated/sklearn.preprocessing.LabelEncoder.html" target="_blank" rel="noopener">LabelEncoder</a> ：将字符串转换为增量值</li><li><a href="https://cuijiahua.com/wp-content/themes/begin/inc/go.php?url=https://scikit-learn.org/dev/modules/generated/sklearn.preprocessing.OneHotEncoder.html#sklearn.preprocessing.OneHotEncoder" target="_blank" rel="noopener">OneHotEncoder</a>：使用One-of-K算法将字符串转换为整数</li></ul><p>为了对<code>string</code>类型的数据序列化，需要先生成pandas数据，这样方便我们的序列化工作。这里我使用的方法是，原始数据-&gt;字典-&gt;pandas数据，编写代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'lenses.txt'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> fr: <span class="comment">#加载文件</span></span><br><span class="line">        lenses = [inst.strip().split(<span class="string">'/t'</span>) <span class="keyword">for</span> inst <span class="keyword">in</span> fr.readlines()] <span class="comment">#处理文件</span></span><br><span class="line">    lenses_target = [] <span class="comment">#提取每组数据的类别，保存在列表里</span></span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> lenses:</span><br><span class="line">        lenses_target.append(each[<span class="number">-1</span>])</span><br><span class="line"></span><br><span class="line">    lensesLabels = [<span class="string">'age'</span>, <span class="string">'prescript'</span>, <span class="string">'astigmatic'</span>, <span class="string">'tearRate'</span>] <span class="comment">#特征标签       </span></span><br><span class="line">    lenses_list = [] <span class="comment">#保存lenses数据的临时列表</span></span><br><span class="line">    lenses_dict = &#123;&#125; <span class="comment">#保存lenses数据的字典，用于生成pandas</span></span><br><span class="line">    <span class="keyword">for</span> each_label <span class="keyword">in</span> lensesLabels: <span class="comment">#提取信息，生成字典</span></span><br><span class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> lenses:</span><br><span class="line">            lenses_list.append(each[lensesLabels.index(each_label)])</span><br><span class="line">        lenses_dict[each_label] = lenses_list</span><br><span class="line">        lenses_list = []</span><br><span class="line">    print(lenses_dict) <span class="comment">#打印字典信息</span></span><br><span class="line">    lenses_pd = pd.DataFrame(lenses_dict) <span class="comment">#生成pandas.DataFrame</span></span><br><span class="line">    print(lenses_pd)</span><br><span class="line">    <span class="comment"># 顺利生成pandas数据。</span></span><br></pre></td></tr></table></figure><p>接下来，将数据序列化，编写代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> LabelEncoder</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pydotplus</span><br><span class="line"><span class="keyword">from</span> sklearn.externals.six <span class="keyword">import</span> StringIO</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'lenses.txt'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> fr: <span class="comment">#加载文件</span></span><br><span class="line">        lenses = [inst.strip().split(<span class="string">'/t'</span>) <span class="keyword">for</span> inst <span class="keyword">in</span> fr.readlines()] <span class="comment">#处理文件</span></span><br><span class="line">    lenses_target = [] <span class="comment">#提取每组数据的类别，保存在列表里</span></span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> lenses:</span><br><span class="line">        lenses_target.append(each[<span class="number">-1</span>])</span><br><span class="line"></span><br><span class="line">    lensesLabels = [<span class="string">'age'</span>, <span class="string">'prescript'</span>, <span class="string">'astigmatic'</span>, <span class="string">'tearRate'</span>] <span class="comment">#特征标签       </span></span><br><span class="line">    lenses_list = [] <span class="comment">#保存lenses数据的临时列表</span></span><br><span class="line">    lenses_dict = &#123;&#125; <span class="comment">#保存lenses数据的字典，用于生成pandas</span></span><br><span class="line">    <span class="keyword">for</span> each_label <span class="keyword">in</span> lensesLabels: <span class="comment">#提取信息，生成字典</span></span><br><span class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> lenses:</span><br><span class="line">            lenses_list.append(each[lensesLabels.index(each_label)])</span><br><span class="line">        lenses_dict[each_label] = lenses_list</span><br><span class="line">        lenses_list = []</span><br><span class="line">    <span class="comment"># print(lenses_dict) #打印字典信息</span></span><br><span class="line">    lenses_pd = pd.DataFrame(lenses_dict) <span class="comment"># 生成pandas.DataFrame</span></span><br><span class="line">    print(lenses_pd) <span class="comment">#打印pandas.DataFrame</span></span><br><span class="line">    le = LabelEncoder() <span class="comment">#创建LabelEncoder()对象，用于序列化            </span></span><br><span class="line">    <span class="keyword">for</span> col <span class="keyword">in</span> lenses_pd.columns: <span class="comment">#为每一列序列化</span></span><br><span class="line">        lenses_pd[col] = le.fit_transform(lenses_pd[col])</span><br><span class="line">    print(lenses_pd)</span><br></pre></td></tr></table></figure><p>从打印结果可以看到，我们已经将数据顺利序列化，接下来。我们就可以fit()数据，构建决策树了。</p><h2 id="3-使用graphviz可视化决策树"><a class="markdownIt-Anchor" href="#3-使用graphviz可视化决策树"></a> 3、使用Graphviz可视化决策树</h2><p>Graphviz的是AT&amp;T Labs Research开发的图形绘制工具，他可以很方便的用来绘制结构化的图形网络，支持多种格式输出，生成图片的质量和速度都不错。它的输入是一个用dot语言编写的绘图脚本，通过对输入脚本的解析，分析出其中的点，边以及子图，然后根据属性进行绘制。是使用Sklearn生成的决策树就是dot格式的，因此我们可以直接利用Graphviz将决策树可视化。</p><p>在讲解编写代码之前，我们需要安装两样东西，即pydotplus和Grphviz。</p><p><strong>（1）安装Pydotplus</strong></p><p>pydotplus可以在CMD窗口中，直接使用指令安装：<code>pip3 install pydotplus</code></p><p><strong>（2）安装Graphviz</strong></p><p>Graphviz不能使用<code>pip</code>进行安装，我们需要手动安装，下载地址：<a href="https://cuijiahua.com/wp-content/themes/begin/inc/go.php?url=https://www.graphviz.org/" target="_blank" rel="noopener">https://www.graphviz.org</a>，可能下载比较慢。</p><p>安装以后，需要设置环境变量，如将<code>D:/graphviz-2.38/release/bin</code>加入到Path中，然后运行下之后的代码看是否能正常使用。</p><p><strong>（3）编写代码</strong></p><p>Talk is Cheap, show me the code.(废话少说，放码过来)。可视化部分的代码不难，都是有套路的，直接填参数就好，详细内容可以查看官方教程：<a href="https://cuijiahua.com/wp-content/themes/begin/inc/go.php?url=https://scikit-learn.org/stable/modules/tree.html#tree" target="_blank" rel="noopener">http://scikit-learn.org/stable/modules/tree.html#tree</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> LabelEncoder, OneHotEncoder</span><br><span class="line"><span class="keyword">from</span> sklearn.externals.six <span class="keyword">import</span> StringIO</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> tree</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pydotplus</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'lenses.txt'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> fr:                                        <span class="comment">#加载文件</span></span><br><span class="line">        lenses = [inst.strip().split(<span class="string">'/t'</span>) <span class="keyword">for</span> inst <span class="keyword">in</span> fr.readlines()]        <span class="comment">#处理文件</span></span><br><span class="line">    lenses_target = []                                                        <span class="comment">#提取每组数据的类别，保存在列表里</span></span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> lenses:</span><br><span class="line">        lenses_target.append(each[<span class="number">-1</span>])</span><br><span class="line">    print(lenses_target)</span><br><span class="line"></span><br><span class="line">    lensesLabels = [<span class="string">'age'</span>, <span class="string">'prescript'</span>, <span class="string">'astigmatic'</span>, <span class="string">'tearRate'</span>]            <span class="comment">#特征标签       </span></span><br><span class="line">    lenses_list = []                                                        <span class="comment">#保存lenses数据的临时列表</span></span><br><span class="line">    lenses_dict = &#123;&#125;                                                        <span class="comment">#保存lenses数据的字典，用于生成pandas</span></span><br><span class="line">    <span class="keyword">for</span> each_label <span class="keyword">in</span> lensesLabels:                                            <span class="comment">#提取信息，生成字典</span></span><br><span class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> lenses:</span><br><span class="line">            lenses_list.append(each[lensesLabels.index(each_label)])</span><br><span class="line">        lenses_dict[each_label] = lenses_list</span><br><span class="line">        lenses_list = []</span><br><span class="line">    <span class="comment"># print(lenses_dict)                                                        #打印字典信息</span></span><br><span class="line">    lenses_pd = pd.DataFrame(lenses_dict)                                    <span class="comment">#生成pandas.DataFrame</span></span><br><span class="line">    <span class="comment"># print(lenses_pd)                                                        #打印pandas.DataFrame</span></span><br><span class="line">    le = LabelEncoder()                                                        <span class="comment">#创建LabelEncoder()对象，用于序列化           </span></span><br><span class="line">    <span class="keyword">for</span> col <span class="keyword">in</span> lenses_pd.columns:                                            <span class="comment">#序列化</span></span><br><span class="line">        lenses_pd[col] = le.fit_transform(lenses_pd[col])</span><br><span class="line">    <span class="comment"># print(lenses_pd)                                                        #打印编码信息</span></span><br><span class="line"></span><br><span class="line">    clf = tree.DecisionTreeClassifier(max_depth = <span class="number">4</span>)                        <span class="comment">#创建DecisionTreeClassifier()类</span></span><br><span class="line">    clf = clf.fit(lenses_pd.values.tolist(), lenses_target)                    <span class="comment">#使用数据，构建决策树</span></span><br><span class="line">    dot_data = StringIO()</span><br><span class="line">    tree.export_graphviz(clf, out_file = dot_data,                            <span class="comment">#绘制决策树</span></span><br><span class="line">                        feature_names = lenses_pd.keys(),</span><br><span class="line">                        class_names = clf.classes_,</span><br><span class="line">                        filled=<span class="keyword">True</span>, rounded=<span class="keyword">True</span>,</span><br><span class="line">                        special_characters=<span class="keyword">True</span>)</span><br><span class="line">    graph = pydotplus.graph_from_dot_data(dot_data.getvalue())</span><br><span class="line">    graph.write_pdf(<span class="string">"tree.pdf"</span>)                                                <span class="comment">#保存绘制好的决策树，以PDF的形式存储。</span></span><br></pre></td></tr></table></figure><p>运行代码，在该python文件保存的相同目录下，会生成一个名为tree的PDF文件，打开文件，我们就可以看到决策树的可视化效果图了。</p><p><img src="https://cuijiahua.com/wp-content/uploads/2017/11/ml_3_19.jpg" alt=""></p><p>确定好决策树之后，我们就可以做预测了。可以根据自己的眼睛情况和年龄等特征，看一看自己适合何种材质的隐形眼镜。使用如下代码就可以看到预测结果：<code>print(clf.predict([[1,1,1,0]])) #预测</code></p><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p><strong>决策树的一些优点：</strong></p><ul><li>易于理解和解释。决策树可以可视化。</li><li>几乎不需要数据预处理。其他方法经常需要数据标准化，创建虚拟变量和删除缺失值。决策树还不支持缺失值。</li><li>使用树的花费（例如预测数据）是训练数据点(data points)数量的对数。</li><li>可以同时处理数值变量和分类变量。其他方法大都适用于分析一种变量的集合。</li><li>可以处理多值输出变量问题。</li><li>使用白盒模型。如果一个情况被观察到，使用逻辑判断容易表示这种规则。相反，如果是黑盒模型（例如人工神经网络），结果会非常难解释。</li><li>即使对真实模型来说，假设无效的情况下，也可以较好的适用。</li></ul><p><strong>决策树的一些缺点：</strong></p><ul><li>决策树学习可能创建一个过于复杂的树，并不能很好的预测数据。也就是过拟合。修剪机制（现在不支持），设置一个叶子节点需要的最小样本数量，或者数的最大深度，可以避免过拟合。</li><li>决策树可能是不稳定的，因为即使非常小的变异，可能会产生一颗完全不同的树。这个问题通过decision trees with an ensemble来缓解。</li><li>概念难以学习，因为决策树没有很好的解释他们，例如，XOR, parity or multiplexer problems。</li><li>如果某些分类占优势，决策树将会创建一棵有偏差的树。因此，建议在训练之前，先抽样使样本均衡。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;sklearn决策树&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sklearn决策树&quot;&gt;&lt;/a&gt; Sklearn——决策树&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;注明：转载自&lt;a href=&quot;https://cuijiahua.
      
    
    </summary>
    
    
      <category term="机器学习" scheme="https://nymrli.top/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Pythton" scheme="https://nymrli.top/tags/Pythton/"/>
    
  </entry>
  
  <entry>
    <title>ACM-博弈论</title>
    <link href="https://nymrli.top/2019/08/30/ACM-%E5%8D%9A%E5%BC%88%E8%AE%BA/"/>
    <id>https://nymrli.top/2019/08/30/ACM-博弈论/</id>
    <published>2019-08-30T13:41:28.000Z</published>
    <updated>2019-09-15T08:07:30.912Z</updated>
    
    <content type="html"><![CDATA[<h1 id="acm-博弈论gambling"><a class="markdownIt-Anchor" href="#acm-博弈论gambling"></a> ACM-博弈论（gambling）</h1><blockquote><p>博弈论：是二人或多人在平等的对局中各自利用对方的策略变换自己的对抗策略，达到取胜目标的理论。假设，双方每步都是最优决策</p></blockquote><p>博弈论是研究互动决策的理论。博弈可以分析自己与对手的利弊关系，从而确立自己在博弈中的优势，因此有不少博弈理论，可以帮助对弈者分析局势，从而采取相应策略，最终达到取胜的目的。</p><h2 id="巴什博弈"><a class="markdownIt-Anchor" href="#巴什博弈"></a> 巴什博弈</h2><blockquote><p>只有一堆n个物品，两个人轮流从这堆物品中取物，规定每次至少取一个，最多取m个。最后取光者得胜。</p></blockquote><p>显然，如果n=m+1，1那么由于一次最多只能取m个，所以，<strong>无论先取者拿走多少个，后取者都能够一次拿走剩余的物品，后者取胜</strong>。因此我们发现了先手如何取胜的法则：除了先手取以外，之后每个双方回合时保证取走m+1个物品则能保证先手胜。</p><p>▲即如果n=(m+1)*r+s，（r为任意自然数，0&lt;s&lt;=m），那么先取者要拿走s个物品，如果后取者拿走k（&lt;=m）个，那么先取者再拿走m+1-k个，结果剩下（m+1）（r-1）个，以后保持这样的取法，那么先取者肯定获胜。总之，要保持给对手留下（m+1）的倍数，就能最后获胜。</p><p>结论</p><ul><li>编程解题的方法就是判断n是否能表示为(m+1)*r+s，找到这个m，和存在r，s</li><li>s不为0，所以当n=(m+1)*r时，后手必胜</li></ul><p>这个游戏还可以有一种变相的玩法：两个人轮流报数，每次至少报一个，最多报十个，谁能报到100者胜。</p><h3 id="例题hdu1846brave-game裸题"><a class="markdownIt-Anchor" href="#例题hdu1846brave-game裸题"></a> 例题<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1846" target="_blank" rel="noopener">HDU1846——Brave Game</a>，裸题</h3><blockquote><p>n为总价、总和，m为每次能取的大小</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n &gt;&gt;m;</span><br><span class="line">        <span class="keyword">int</span> mod = n%(m+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (mod != <span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">"first"</span> &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"second"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="public-sale"><a class="markdownIt-Anchor" href="#public-sale"></a> <a href="http://acm.hdu.edu.cn/showproblem.php?pid=2149" target="_blank" rel="noopener">Public Sale</a></h3><blockquote><p>区别在于还存在n&lt;m的情况，由于题目要求<strong>每次加价的幅度要在1～N之间，当价格大于或等于田地的成本价 M 时，主办方就把这块田地卖给这次叫价的人。</strong>，所以此时，第一次出价n+1~m都可以<strong>直接</strong>将物品买下，需要单独考虑</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; n&gt;&gt;m)&#123;</span><br><span class="line">        <span class="keyword">if</span> (n&lt;m) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=n+<span class="number">1</span>;i&lt;=m;i++) </span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> mod = n%(m+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (mod == <span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">"none"</span>&lt;&lt;<span class="built_in">endl</span>; <span class="comment">//s=0，后手必胜</span></span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; mod &lt;&lt; <span class="built_in">endl</span>;   <span class="comment">//存在s，即先手的Lele能买到</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="斐波那契博弈"><a class="markdownIt-Anchor" href="#斐波那契博弈"></a> 斐波那契博弈</h2><blockquote><p>有一堆个数为n的石子，游戏双方轮流取石子，满足：<br>1）先手不能在第一次把所有的石子取完；<br>2）之后每次可以取的石子数介于<strong>1到对手刚取的石子数的2倍之间</strong>（包含1和对手刚取的石子数的2倍）。</p></blockquote><p>▲ 游戏规则动态化</p><p>这个游戏叫做Fibonacci Nim，肯定和Fibonacci数列：f[n]：1，2，3，5，8，13，21，34，55，89…有密切的关系。如果试验一番之后，可以猜测：先手胜当且仅当n不是Fibonacci数。换句话说，必败态构成Fibonacci数列。<br>就像“Wythof博弈”需要“Beatty定理”来帮忙一样，这里需要借助**“Zeckendof定理”（齐肯多夫定理）**：<u>任何正整数</u>可以表示为若干个<u>不连续</u>的Fibonacci数之和。定理的证明可以在这里看到，不过我觉得更重要的是自己动手分解一下。<br>e.g.比如，我们要分解83，注意到83被夹在55和89之间，于是把83可以写成83=55+28；然后再想办法分解28，28被夹在21和34之间，于是28=21+7；依此类推7=5+2，故；</p><p>如果n=83，我们看看这个分解有什么指导意义：假如先手取2颗，那么后手无法取5颗或更多，而5是一个Fibonacci数，如果猜测正确的话，（面临这5颗的先手实际上是整个游戏的后手）归纳得如果需要取走斐波那契数n，那么后手必胜，即那么一定是游戏的先手（此时为取5个的后手）取走这5颗石子中的最后一颗，而这个我们可以通过第二类归纳法来绕过，同样的道理，接下去先手取走接下来的后21颗中的最后一颗，再取走后55颗中的最后一颗，那么先手赢。需要注意到的是<strong>分解后不连续的若干个数单个的两倍都小于分解的最大数，即2n&lt;m</strong></p><p>▲如果n是斐波那契数，后手一定赢，如果不是，先手一定赢（先手胜当且仅当n不是斐波那契数列）。因为如果n是斐波那契数，那么先手取走数之后剩下的一定不是斐波那契数，后手必胜</p><h3 id="例题hdoj-2516"><a class="markdownIt-Anchor" href="#例题hdoj-2516"></a> 例题hdoj 2516</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> arr[<span class="number">50</span>];</span><br><span class="line"><span class="comment">// feibo</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    arr[<span class="number">0</span>] = <span class="number">2</span>,arr[<span class="number">1</span>] = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">50</span>;i++) arr[i]=arr[i<span class="number">-1</span>]+arr[i<span class="number">-2</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; n &amp;&amp; n)&#123;</span><br><span class="line">        <span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">50</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[i]==n) flag=<span class="number">0</span>,<span class="built_in">cout</span>&lt;&lt;<span class="string">"Second win"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">if</span> (arr[i]&gt;n) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag) <span class="built_in">cout</span> &lt;&lt; <span class="string">"First win"</span> &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：</p><p>不需要深究博弈论数学原理，只需要知道结论，就可以写出代码。如，</p><p>巴什博弈：判断mod=n%(m+1)的结果s</p><p>斐波那契博弈：判断n是否为斐波那契数</p><h2 id="威佐夫博弈"><a class="markdownIt-Anchor" href="#威佐夫博弈"></a> 威佐夫博弈</h2><blockquote><p>有两维各若干个物品(ak, bk)，两个人轮流从<strong>某一堆或同时从两堆中取同样多</strong>的物品，规定每次至少取一个，多者不限，最后取光者得胜。</p></blockquote><p>这种情况下是颇为复杂的。我们用（ak，bk）（ak&lt;=bk，k=0，1，2，.……n）表示两堆物品的数量并称其为局势，如果甲面对（0，0），那么甲已经输了，这种局势我们称为奇异局势。前几个奇异局势是：（0，0）、（1，2）、（3，5）、（4，7）、（6，10）、（8，13）、（9，15）、（11，18）、（12，20）。<br>可以看出，a0=b0=0，ak是未在前面出现过的最小自然数，而bk=ak+k，奇异局势有如下三条性质：</p><ul><li><p>1.任何自然数都包含在一个且仅有一个奇异局势中。</p><p>由于ak是未在前面出现过的最小自然数，所以有ak&gt;ak-1，而bk=ak+k&gt;ak-1+k-1=bk-1&gt;ak-1。所以性质1。成立。</p></li><li><p>2.任意操作都可将奇异局势变为非奇异局势。<br>事实上，若只改变奇异局势（ak，bk）的某一个分量，那么另一个分量不可能在其他奇异局势中，所以必然是非奇异局势。如果使（ak，bk）的两个分量同时减少，则由于其差不变，且不可能是其他奇异局势的差，因此也是非奇异局势。</p></li><li><p>3.采用适当的方法，可以将非奇异局势变为奇异局势。</p></li></ul><p>从如上性质可知，两个人如果都采用正确操作，那么面对非奇异局势，先拿者必胜；反之，面对奇异局势，则后拿者取胜。</p><p>Betty定理:…</p><p>▲那么任给一个局势（a，b），怎样判断它是不是奇异局势呢？我们有如下公式：</p><p>ak =[k（1+V5）/2]，bk=ak+k（k=0，1，2，.……n方括号表示取整函数）奇妙的是其中出现了黄金分割数（1+V5）/2=1.618…，因此，由ak，bk组成的矩形近似为黄金矩形，由于2/（1+V5）=（V5-1）/2，可以先求出j=[a（V5-1）/2]，若a=[（1+V5）/2]，那么a=aj，bj=aj+j，若不等于，那么a=aj+1，bj+1=aj+1+j+1，若都不是，那么就不是奇异局势。然后再按照上述法则进行，一定会遇到奇异局势。===&gt; 如果(b-a)*(sqrt(5.0)+1)/2 == a的话就是奇异局势</p><h3 id="例题poj-1067裸题"><a class="markdownIt-Anchor" href="#例题poj-1067裸题"></a> 例题poj 1067，裸题</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b, c;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b)&#123;</span><br><span class="line">        <span class="keyword">if</span> (a&gt;b) swap(a,b);</span><br><span class="line">        <span class="keyword">int</span> c = <span class="built_in">floor</span>((b-a)*(<span class="built_in">sqrt</span>(<span class="number">5.0</span>)+<span class="number">1</span>)/<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span> (a==c) <span class="built_in">cout</span> &lt;&lt; <span class="number">0</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span>    <span class="built_in">cout</span> &lt;&lt; <span class="number">1</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="尼姆博弈nim"><a class="markdownIt-Anchor" href="#尼姆博弈nim"></a> 尼姆博弈（Nim）</h2><blockquote><p>有n堆各若干个物品，两个人轮流从某一堆取任意多的物品，规定每次至少取一个，多者不限，最后取光者得胜。</p></blockquote><p>以n=3为例子，这种情况最有意思，它与二进制有密切关系，我们用（a，b，c）表示某种局势，首先（0，0，0）显然是奇异局势，无论谁面对奇异局势，都必然失败。第二种奇异局势是（0，n，n），只要与对手拿走一样多的物品，最后都将导致（0，0，0）。仔细分析一下，（1，2，3）也是奇异局势，无论对手如何拿，接下来都可以变为（0，n，n）的情形。</p><p>然而这并不是博弈的重点，博弈之王道乃是SG值，当sg值为0的时候，就是输，不为0就是赢；</p><p>SG值：一个点的SG值就是一个不等于它的后继点SG值的且大于等于零的最小整数。</p><ul><li>不属于它后继点SG值集的值</li></ul><p>大概的意思就是：在步骤允许的情况下，与前面一个必败点的差（也就是说这个差是规定的、能走的、其中一个步数）！<br>后继点：也就是按照题目要求的走法（比如取石子可以取的数量，方法）能够走一步达到的那个点。（sg值的理解很抽象。需要多画画）</p><p>举个栗子：比如一堆石子，我们可以取任意个，那么x个石子的石子的sg值是多少呢？可以知道，0个石子sg为0，1的时候我们可以取一个，剩下0，0的sg是0(SG(0)=0)，那么mex(0)就是1，所以1的sg为1(SG(1)=1)。即SG(1) = mex{SG(0)}=mex{0}=1</p><p>例题<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1847" target="_blank" rel="noopener">hdoj 1847</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> arr[<span class="number">15</span>],sg[<span class="number">1005</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mex</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(sg[x] != <span class="number">-1</span>) <span class="keyword">return</span> sg[x];</span><br><span class="line">    <span class="comment">// 记忆化搜索,如果存在直接返回</span></span><br><span class="line">    <span class="keyword">bool</span> vis[<span class="number">1005</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">1005</span>;i++) vis[i] = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;=<span class="number">10</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> temp = x - arr[i];</span><br><span class="line">        <span class="keyword">if</span> (temp&lt;<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">// SG值为非负整数</span></span><br><span class="line">        sg[temp] = mex(temp);</span><br><span class="line">        <span class="comment">// 需要递归调用，分治求出小的部分的结果</span></span><br><span class="line">        vis[sg[temp]] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i =<span class="number">0</span>;;i++)</span><br><span class="line">        <span class="keyword">if</span>(!vis[i]) &#123;</span><br><span class="line">            <span class="comment">// 找到最小的数，mex&#123;0,1,2&#125;=3，mex&#123;1,2,3&#125;=0，mex&#123;0,1,3&#125;=2；</span></span><br><span class="line">            sg[x]=i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> sg[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    arr[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=<span class="number">10</span>; i++)</span><br><span class="line">        arr[i] = arr[i<span class="number">-1</span>]*<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(sg,<span class="number">-1</span>,<span class="keyword">sizeof</span>(sg));</span><br><span class="line">        <span class="keyword">if</span> (mex(n)) <span class="built_in">cout</span> &lt;&lt; <span class="string">"Kiki"</span> &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"Cici"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="组合博弈博弈的精华"><a class="markdownIt-Anchor" href="#组合博弈博弈的精华"></a> 组合博弈：（博弈的精华）</h2><blockquote><p>组合博弈无疑是对sg值的熟练操作例如：有n堆石子，每次可以从第1堆石子里取1颗、2颗或3颗，可以从第2堆石子里取奇数颗，可以从第3堆及以后石子里取任意颗.……我们可以把它看作3个子游戏，第1个子游戏只有一堆石子，每次可以取1、2、3颗，很容易看出x颗石子的局面的SG值是×%4。第2个子游戏也是只有一堆石子，每次可以取奇数颗，经过简单的画图可以知道这个游戏有x颗石子时的SG值是×%2。第3个游戏有n-2堆石子，就是一个Nim游戏。对于原游戏的每个局面，把三个子游戏的SG值异或一下就得到了整个游戏的SG值，然后就可以根据这个SG值判断是否有必胜策略以及做出决策了。其实看作3个子游戏还是保守了些，干脆看作n个子游戏，其中第1、2个子游戏如上所述，第3个及以后的子游戏都是“1堆石子，每次取几颗都可以”，称为“任取石子游戏”，这个超简单的游戏有x颗石子的SG值显然就是x。</p></blockquote><p><a href="https://www.bilibili.com/video/av9114486?from=search&amp;seid=16453184189041006847" target="_blank" rel="noopener">SWPU-ACM每周算法讲堂-博弈论入门</a></p><h1 id="计算机博弈大赛"><a class="markdownIt-Anchor" href="#计算机博弈大赛"></a> 计算机博弈大赛</h1><h2 id="蒙特卡洛方法"><a class="markdownIt-Anchor" href="#蒙特卡洛方法"></a> 蒙特卡洛方法</h2><blockquote><p>由冯·诺依曼、乌拉姆等人发明，因蒙特卡洛赌场而闻名，一种基于概率的方法的统称。</p><p>一种让人感觉“我去，这也行”的方法——根据大概率逼近真实结果的方法</p></blockquote><p>拉斯维加斯（Las Vegas）方法——找老婆（必须要精确找到那一个答案，其他都不行。采样越多，越有机会找到最优解）</p><ul><li>找1W人才能准确确定</li></ul><p>蒙特卡罗（Monte Carlo）方法——民意调查（一直在找，找的是逐渐贴近于最优解的结果。当样越多，越近似最优解）</p><ul><li>找了2K人大致能确定了</li></ul><p>相关方法：</p><ul><li>蒙特卡罗算法、蒙特卡罗模拟、蒙特卡罗过程</li><li>蒙特卡罗搜索树一—AlphaGo</li></ul><p>工作原理：</p><ul><li>不断抽样（中心极限定理，n-&gt;∞）</li><li>逐渐逼近（依概率逼近）</li></ul><h2 id="蒙特卡洛树搜索-mctsmonte-carlo-tree-search"><a class="markdownIt-Anchor" href="#蒙特卡洛树搜索-mctsmonte-carlo-tree-search"></a> 蒙特卡洛树搜索 （MCTS，Monte Carlo tree search）</h2><blockquote><p>一种用于某些决策过程的启发式搜索算法，最引人注目的是在游戏中的使用</p></blockquote><h3 id="双人有限零和顺序游戏"><a class="markdownIt-Anchor" href="#双人有限零和顺序游戏"></a> 双人有限零和顺序游戏</h3><p>MCTS运行所在的框架/环境是一个游戏，它本身是一个非常抽象和宽泛的概念，因此这里我们只关注一种游戏类型：双人有限零和顺序游戏。这个名词一开始听起来会有些复杂，但是实际上非常简单，现在来让我们将它分解一下：</p><ul><li>游戏：意味着我们在一种需要交互的情境中，交互通常会涉及一个或多个角色</li><li>有限：表明在任意时间点，角色之间存在的交互方式都是有限的</li><li>双人：游戏中只有两个角色</li><li>顺序：玩家依次交替进行他们的动作</li><li>零和：参与游戏的两方有完全相反的目标，换句话说就是，游戏的任意结束状态双方的收益之和等于零</li></ul><p>我们可以很轻松的验证，围棋、国际象棋和井字棋都是双人有限零和顺序游戏：有两位玩家参与，玩家能进行的动作总是有限的，双方的游戏目标是完全相反的（所有游戏的结果之和等于0）。</p><h3 id="如何表示一个游戏"><a class="markdownIt-Anchor" href="#如何表示一个游戏"></a> 如何表示一个游戏</h3><p>从程序员的角度来看，可以用一种常见的数据结构以来表示游戏——游戏树。</p><p><img src="https://img-blog.csdnimg.cn/20181030191603540.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE2MTM3NTY5,size_16,color_FFFFFF,t_70" alt=""></p><p>游戏树是一个数，其中每一个节点代表游戏的一个确定状态。从一个节点到该节点的一个子节点（如果存在）是一个移动。节点的子节点数目称为分支因子。游戏树的根节点代表游戏的初始状态。游戏树的终端节点是没有子节点的节点，至此游戏结束，无法再进行移动。终端节点的状态也就是游戏的结果（输/赢/平局）。</p><p>游戏树是一种递归的数据结构，每次选择完最佳的下一步时，会移动到下一个子节点，而这个子节点又是它子树的根节点。因此我们可以把一局游戏视为“最佳下一步”的一个问题序列，每一次都可以由一个不同根节点的游戏树表示。通常在实际应用中，我们不需要记住到当前状态的路径，因为这不是当前游戏状态的关注点。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;acm-博弈论gambling&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#acm-博弈论gambling&quot;&gt;&lt;/a&gt; ACM-博弈论（gambling）&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;博弈论：是二人或多人在平等的对局中各
      
    
    </summary>
    
    
      <category term="ACM" scheme="https://nymrli.top/tags/ACM/"/>
    
  </entry>
  
</feed>
