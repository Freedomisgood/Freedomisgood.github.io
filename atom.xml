<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mrli&#39;s Blog</title>
  
  <subtitle>别装作很努力，结局不会陪你演戏。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://nymrli.top/"/>
  <updated>2020-11-26T10:04:44.497Z</updated>
  <id>https://nymrli.top/</id>
  
  <author>
    <name>Mrli</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://nymrli.top/2020/11/26/%E3%80%8A%E6%BC%AB%E7%94%BB%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8%E3%80%8B%E5%A4%A7%E5%85%B3%E7%9C%9F%E4%B9%8B%E2%80%94%E2%80%94%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>https://nymrli.top/2020/11/26/《漫画机器学习入门》大关真之——读书笔记/</id>
    <published>2020-11-26T09:41:39.623Z</published>
    <updated>2020-11-26T10:04:44.497Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漫画机器学习入门总结"><a class="markdownIt-Anchor" href="#漫画机器学习入门总结"></a> 《漫画机器学习入门》总结</h1><p>机器学习是指计算机通过不断地处理数据并修正算法和参数来学习各种规则， 从而不断改进模型而得到更优化的算法。书中主要讲解了玻尔兹曼机的机器学习</p><h3 id="谁是世界上最美丽的人"><a class="markdownIt-Anchor" href="#谁是世界上最美丽的人"></a> <a href="https://blog.csdn.net/weixin_41513917/article/details/102646458#%E7%9F%A5%E8%AF%86%E7%82%B9" target="_blank" rel="noopener">谁是世界上最美丽的人？</a></h3><ol><li><p>****特征量****就是如每一个人的年龄，眼睛大小； 特征向量就是每个人的特征量放到一起，特征向量是表达特征的一个数组</p></li><li><p>误差函数： 在美丽程度这个问题上， 误差函数就是—— 计算“美丽程度”的实际输出与给定的理想输出之间的差值</p></li><li><p>最优化问题：  最小化误差函数，其实是一个求解最优化问题：我们的任务就是要找到没有误差或者误差小到满足要求的最适合的模型。这就要通过调节模型中的参数，使误差函数值尽量小，这就是求解（参数）最优化问题。</p><ol><li>微分：稍微拉动一点摇杆，确认误差是否变小。这种操作叫做<strong>微分</strong>。</li><li>梯度下降法： 一直拉到误差不再减少，直到误差值保持不变或者反而有所上升时为止。希望不停地调整权重，使得误差一直在朝着减小的方向前进。这种调整误差的方法叫<strong>梯度下降法</strong>。</li><li><img src="https://img-blog.csdnimg.cn/20191021100811994.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTUxMzkxNw==,size_16,color_FFFFFF,t_70" alt=""></li></ol></li><li><p>回归就是：建立模型—拟合—微调</p></li><li><p>机器学习是寻找输入数据与输出数据之间关系(model-&gt;function map)的一门学问。</p></li><li><p>每一个特征量都很重要，但是不同特征量的重要程度是不同的，所以需要寻找特征的权重矩阵</p></li><li><p>训练数据和测试数据： 学习和测试是机器学习的两项基本任务。 (1)好的算法很重要； (2)要将获得的数据分为训练用数据和测试用数据；(3)仅仅匹配训练用数据是不行的——仅仅满足训练用数据叫overfit过拟合，如果连训练数据都不符合叫underfit欠拟合</p></li><li><p>验证的方法：交叉验证：将所有的数据分成4组， 每组中1份数据用于测试，3份用于训练</p></li><li><p>复杂化模型——寻找新的特征值：sigmoid 函数：当发现检测的结果不太好，王后想把模型变得更复杂一些。王后尝试将原始的特征量组合起来获得新的特征量，再加权求输出，却发现因为只有乘法和加法的情况这种<strong>线性特性</strong>，与之前并没有本质区别。因此，引入了sigmoid函数，这个非线性函数。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>−</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">sig(x) = \frac{1}{1-e^{-x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p><img src="https://img-blog.csdnimg.cn/2019102111070935.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTUxMzkxNw==,size_16,color_FFFFFF,t_70" alt=""></p><p>加权组合，构成新的特征值： 如果我们把将特征量组合，新增加5个特征量的话（如图），摇杆的数量就变成了原来的5倍。</p><p>多层神经网络：在单层神经网络的基础上，增加一层非线性变换，结构上也就多了一个中间的曾，就是多层神经网络。</p></li><li><p>只由输入到输出方向进行信息的传递，被称为正向型神经网络； 而双方向都能够进行信息交换的结构被称为双向型神经网络。双向型神经网络典型代表是Hopfield一处的，玻尔兹曼机也是基于这种神经网络。 双向信息处理模式不同于淡出的正向信息处理， 它可以有多个输出结果， 而且从这些输出结果中它可以回忆起以前记忆过的信息，因此也被叫做联想记忆。</p></li><li><p>模型越复杂，网络就越纠缠，拉动一根线就会对整个网络产生较大的影响。反过来，网络中任何一根线又会连接很多其他的线，拉它的时候也会受到很大限制，甚至拉不动。 距离输出层越近的摇杆越容易搬动，这是有梯度的结果。因为搬动一下离输出很近的摇杆，它的效果能够很方便地传递给输出。离输出越远，梯度越难计算，越难调整。===&gt;BP算法， 以及最好不要使用Sigmod函数， 因为容易梯度消失， 可以换用tanh或者reLU（观察函数的微分结果）</p></li><li><p><strong>dropout</strong>：为了防止过度学习， 需要掌握平衡， 做出取舍：  适当地选取一定比例的特征量，剩下的全部舍弃不用。</p></li><li><p>批量学习与在线学习：</p><p><strong>批量学习（batch learning）</strong>：将全部数据收集齐了之后一起作为训练用数据使用，这叫做批量学习（batch learning）</p><p><strong>在线学习（online learning）</strong>:与此相对的，随着数据不断地获取而逐步进行的学习则称为在线学习（online learning）</p><p>现在批量学习也在改进，有些地方与在线学习差不多， 如使用概率梯度下降法：</p><p><img src="https://img-blog.csdnimg.cn/20191021170700902.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTUxMzkxNw==,size_16,color_FFFFFF,t_70" alt=""></p><p>（采用概率的方式去分组，也叫随机选择，就是不能利用某种故意的特定意图去分组）</p><p>当利用概率分组后，对每一组数据进行训练，动一下摇杆看误差如何变化，然后再向误差变小的方向搬动摇杆，这就是概率梯度下降法。（通过适当地概率计算，让参数或左或右地跳动着变化）</p><p>这种算法考虑的是，与其冲着预先规定好的方向一直走下去，倒不如是不是地左看看，右看看。这样反倒更容易找到隐藏的近路。</p><p>在线学习和随机梯度下降法的优势在于， 可以捕捉灵光霎现的机会， 增加了跳脱鞍点的可能性。</p></li></ol><h3 id="粮食问题"><a class="markdownIt-Anchor" href="#粮食问题"></a> 粮食问题</h3><ol><li><p>感知机perceptron(弗兰克·罗森布拉特)和支持向量机SVM(Vladmir N.Vapnik)</p><p>感知机：移动分割超平面进行数据分类。感知机的缺点：非线性模型处理不好</p><p>支持向量机：使分割超平面处于一种非常“好”的状态，即所有数据点尽量都远离分割超平面，因此能够更好的识别并且<strong>使得安全裕量最大</strong></p></li><li><p><strong>矩阵的秩</strong>：= 模式的种类， 一个模式以一行向量表示。<u>矩阵中两行的规律相似，应该属于同一种模式</u>。假设数据中存在某些模式，那么在矩阵中一定会存在某一行的数值代表该模式，其他的某一行代表另一种模式。</p><p>如果模式能够从可见数据中推演出来，通过对可见数据做有效处理，就能够推测出不可见的那部分数据，这其实是一种无监督学习：希望能够完美地补充矩阵中空白的数据，并能够预测出新的模式。（计算机从大量数据中通过自己的分析来找出规律，叫做无监督学习）</p></li><li><h3 id="预测方面有监督无监督的不同"><a class="markdownIt-Anchor" href="#预测方面有监督无监督的不同"></a> 预测方面有监督/无监督的不同 ：</h3><p>从数据中学到东西，这一点是一致的。之后，在是否进行预测这一点上是不同的。<br>有监督学习是希望计算机越来越聪明并逐渐能够代替人的某些工作。<br>无监督学习，是希望计算机从特征量中选择出我们容易理解的某种模式，将模式分成若干或者某种形式的分类。</p></li><li><p><strong>稀疏化</strong>：有些算法会将不重要的特征量的权重直接设定为0，舍弃一些不重要的东西， 导致矩阵中产生很多0， 这种矩阵将稀疏矩阵。</p></li><li><p><strong>非负矩阵分解（ Nonnegative Matrix Factor ）</strong>： 非负，指在计算的时候不使用负值，也就是只做加法运算。就像用钢笔描绘人脸，先有眼睛，鼻子，再加上嘴等等。这些都是一个一个添加的。（非负好比用钢笔作画不能删除， 而普通作画是用铅笔， 所以可以有负值）</p><p>如果也用减法，就像用铅笔，还可以用橡皮擦去一些地方。</p></li></ol><h3 id="基于玻尔兹曼机器学习的图像处理方法"><a class="markdownIt-Anchor" href="#基于玻尔兹曼机器学习的图像处理方法"></a> 基于玻尔兹曼机器学习的图像处理方法</h3><blockquote><p>首先要明确的一点是， 图片是由像素组成的。每一个像素到底是呈现数模颜色，这是由数据来决定的。</p></blockquote><ol><li><p><strong>玻尔兹曼机器学习</strong>:将图像的颜色数据输入到玻尔兹曼机中，计算机通过分析这些数据，就可以得到实际图像的特征，各像素点显示某种颜色的概率，以及<strong>相邻像素间的关系</strong>。这种过程叫做玻尔兹曼机器学习。</p></li><li><p><strong>似然度</strong>： 相似的程度。 机器学习的目的要么是让误差值最小，要么是让似然度最大</p></li><li><p><strong>采样</strong>：将实际提供的数据输入到玻尔兹曼机后， 模型会输出伪数据（重构数据）， 这个自身不断<strong>产生数据</strong>的过程就叫做采样 sampling</p><p>玻尔兹曼机器学习在进行时，采用马尔科夫蒙特卡罗方法，来逐一考虑相邻像素之间的关系，来完成双向型神经网络的信息流动。这是一种在整个网络结构中的循环，<u>在这一过程中还要不断地采集大量的重构数据。很费时间</u>。==&gt; 替代算法是，单纯考虑由相邻像素传送过来的信息，<strong>平均场近似法</strong></p><p><img src="/2020/11/26/《漫画机器学习入门》大关真之——读书笔记/1.jpg" alt="平均近场法"></p></li><li><p>中间结果包含每一个像素颜色的变化过程，也能够构成中间过程的许多图像。这些中间产生的图像数据就是重构数据， 也可以叫做伪数据。其实核心就是“依据临近像素的数据， 在现有的参数值情况下， 预测中心像素的颜色值”</p></li><li><p>机器学习与统计力学： 我们在研究原子和分子的时候， 位置、运动扽信息是分析研究的对象， 但是统计力学有趣的地方是利用统计学理论去获取事物整体的特征。类比机器学习， 就像我们并不去计较每一个颗粒的位置和速度， 对于机器学习我们也是希望得到大量数据间的整体组合信息， 这种整体组合信息在最优化问题求解时就是推到出函数模型</p></li><li><p>可见变量、隐含变量：在图像中， 每一个像素颜色的数值时可以直接读取的， 这一部分就叫做可见变量。由可见变量之间关联关系构成的新变量称为隐含变量， 从而可以建立出眼睛、鼻子等部件， 从而将利用各个部件就可以将图像分成各个部分了。 利用上述方式就可以以“开关”的形式来操作了，通过像素和开关之间的关系就可以决定在可见变量一侧表示出什么， 这种方法认为可见变量之间没有任何关系， 各个开关之间也没有关联。只考虑开关与像素之间的关系， 叫做受限玻尔兹曼机（RBM）， 有较好的特性， 如一定条件下的独立性</p></li><li><p><strong>变分原理</strong>：物理学中， 指自然界中静止实物的一个普遍适用的数学定律，也称最小作用原理。比如在确定了物体的起点和终点后， 通过动能和势能之差就能计算出最短路径。</p></li><li><p><strong>对比散度算法</strong>：将实际的颜色数据与建立的模型采集到的伪数据进行比较， 我们希望能够从中找到某些有用的东西。</p></li><li><p><img src="https://img-blog.csdnimg.cn/20191022114125126.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTUxMzkxNw==,size_16,color_FFFFFF,t_70" alt=""></p><p>深度玻尔兹曼机将图像数据作为输入， 内部作为隐含变量的各种开关来决定到底输出什么图像， 因此为了能够对应不同的图像， 建立数量巨大的复杂的隐含变量时非常必要的——深度玻尔兹曼机的目的时<strong>学习图像中隐含的特征</strong>， 知道了图像中拥有的特征可以就可以返回来看可见变量中是否有猫和狗了——传统机器学习和深度学习的区别也在于此， 传统机器学习需要自己手动提取特征（特征工程）， 而神经网络可以自己提取特征。</p></li><li><p>受限玻尔兹曼机是两层神经网络。包含输入层，隐藏层，输出层</p></li><li><p>预训练： ①运用在无监督学习中， 不告诉model特征有哪些 ②用预训练网络做微调：一般图片分类的神经网络每一类别的图片量级至少在5000-10000左右，如果没有这么多图片，（使用数据增强的方法后也不够），此时就需要用预训练网络了（在几十万张图片训练集上获得较好效果的图片多分类器）。然后用我们现有的图片在这个预训练网络的基础上继续训练， 利用现有的图片继续训练就是为了让网络重新适应现有的图片训练集， 这种适应过程往往比从头训练一个网络更快更好， 这种方法跟迁移学习的思想很像。</p></li><li><p>自我符号化（在无监督学习中具有代表性）：吧收到的输入信号原原本本地返回来。</p></li></ol><p><img src="/2020/11/26/《漫画机器学习入门》大关真之——读书笔记/%E8%87%AA%E6%88%91%E7%AC%A6%E5%8F%B7%E5%8C%96.jpg" alt="自我符号化"></p><p>注意， 左右知识结构上的复制，权值是不一样的。这些权值是需要进行调整后才能满足右边的“输入”等于左边输入的。在这个调整权值的过程中，输入数据所隐含的特征就可以被挖掘出来了。<mark>&gt;从而使得中间层具有能够反映输入数据中特征的能力。</mark>&gt; 中间层的自我符号化训练其实也是提取特征的过程</p><ol start="13"><li><p>卷积神经网络：</p><blockquote><p>在处理图像时已有已知的神经网络可以利用了——卷积神经网络。</p></blockquote><p><strong>卷积</strong>：卷积是利用了，人在看见图像识别图像时并不需要将所有的细小像素全部看清的特征而设计的。卷积就是在某种程度上将临近的像素组合起来形成新的特征量，然后利用卷积结果进行分析</p><p><strong>池化</strong>：在图片中即使模糊我们也能通过模糊的影像大致判断出—&gt;数据即使有些差异也能够得出同样的结果。因此可以利用卷积将特征进行排序，将相近的特征进行比较并选用其中的最大值或平均值，叫做池化</p><p>▲通过卷积和池化操作，神经网络从而可以将图像中的特征量自动地提取出来了。</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;漫画机器学习入门总结&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#漫画机器学习入门总结&quot;&gt;&lt;/a&gt; 《漫画机器学习入门》总结&lt;/h1&gt;
&lt;p&gt;机器学习是指计算机通过不断地处理数据并修正算法和参数来学习各种规则， 从而不断改进模型而得到
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux服务器同步时钟</title>
    <link href="https://nymrli.top/2020/11/22/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%90%8C%E6%AD%A5%E6%97%B6%E9%92%9F/"/>
    <id>https://nymrli.top/2020/11/22/Linux服务器同步时钟/</id>
    <published>2020-11-22T04:49:35.000Z</published>
    <updated>2020-11-22T04:50:08.208Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a class="markdownIt-Anchor" href="#"></a> </h2><blockquote><p>因为今天在集群193跑程序的时候发现时间不同步, 因此想想把集群的时间全部同步一下</p></blockquote><ol><li><p>在Linux中设置系统时间，可以用date命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看时间</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> date</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改时间</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> date -s <span class="string">"20140225 20:16:00"</span>  <span class="comment">#yyyymmdd hh:mm:ss</span></span></span><br></pre></td></tr></table></figure></li><li><p>Linux硬件时间的设置</p></li></ol><p>硬件时间的设置，可以用hwclock或者clock命令。两者基本相同，只用一个就行，只不过clock命令除了支持x86硬件体系外，还支持Alpha硬件体系。</p><ol start="3"><li>系统时间和硬件时间的同步</li></ol><p>同步系统时间和硬件时间，可以使用hwclock命令。</p><p><strong>4. 不同机器之间的时间同步</strong></p><p>为了避免主机时间因为长期运行下所导致的时间偏差，进行时间同步（synchronize）的工作是非常必要的。Linux系统下，一般使用ntp服务器来同步不同机器的时间。一台机器，可以同时是ntp服务端和ntp客户端。在生产系统中，推荐使用像DNS服务器一样分层的时间服务器来同步时间。</p><p>不同机器间同步时间，可以使用ntpdate命令，也可以使用ntpd服务。==&gt;▲. 注意两个不能同时使用: 如果使用了ntpd后还是用ntpdate会报错<code>ntpdate[39462]: the NTP socket is in use, exiting</code>, 要查询ntp的状态，用ntpq命令，比如看目前是否和ntp server同步，用<code>ntpq -p</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">     remote           refid      st t when poll reach   delay   offset  jitter</span><br><span class="line">==============================================================================</span><br><span class="line"> 0.ubuntu.pool.n .POOL.          16 p    -   64    0    0.000    0.000   0.000</span><br><span class="line"> 1.ubuntu.pool.n .POOL.          16 p    -   64    0    0.000    0.000   0.000</span><br><span class="line"> 2.ubuntu.pool.n .POOL.          16 p    -   64    0    0.000    0.000   0.000</span><br><span class="line"> 3.ubuntu.pool.n .POOL.          16 p    -   64    0    0.000    0.000   0.000</span><br><span class="line"> ntp.ubuntu.com  .POOL.          16 p    -   64    0    0.000    0.000   0.000</span><br><span class="line"> ntp1.ams1.nl.le 130.133.1.10     2 u    1   64    1  305.632  -43.387   0.146</span><br><span class="line">*120.25.115.20   10.137.53.7      2 u    1   64    1   29.425   -1.059   0.410</span><br><span class="line"> 203.107.6.88    100.107.25.114   2 u    1   64    1   32.056   -2.093   0.257</span><br><span class="line"> ntp.xtom.nl     84.199.11.211    2 u    1   64    1  175.286   -6.179   0.210</span><br><span class="line"> 94.130.49.186 ( 195.13.23.5      3 u    2   64    1  212.348  -17.943   0.561</span><br><span class="line"> tock.ntp.infoma .GPS.            1 u    2   64    1  239.693  -11.135   0.175</span><br><span class="line"> 119.28.206.193  100.122.36.196   2 u    -   64    1   41.525   -4.034   0.002</span><br></pre></td></tr></table></figure><p>可以看到*号标出的就是集群正在同步的时钟服务器: 120.25.115.20是阿里云</p><p>由于不能同时使用， 而ntpdate的稳定性不好， 因此ntpdate用来一次性同步时间（或者ntpdate+cron组合）、或者用ntpdate同步一次时间后，持续用ntpd服务器来同步。</p><p>下面使用ntpdate来同步时间：使用ntpdate前, 先将ntpd关闭: <code>service ntpd stop</code>或<code>sudo systemctl stop ntp</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">  /usr/sbin/ntpdate  time.stdtime.gov.tw</span></span><br><span class="line">Error : Temporary failure in name resolution</span><br><span class="line">29 Oct 14:18:59 ntpdate[25327]: can't find host time.stdtime.gov.tw</span><br><span class="line">29 Oct 14:18:59 ntpdate[25327]: no servers can be used, exiting</span><br></pre></td></tr></table></figure><p>确认防火墙没有问题后，执行域名解析，发现失败</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> nslookup  time.stdtime.gov.tw</span></span><br><span class="line">;; connection timed out; no servers could be reached</span><br></pre></td></tr></table></figure><p>尝试ping外网，以确认能正常连到外网，连网正常</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ping 8.8.8.8</span></span><br><span class="line">PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.</span><br><span class="line">64 bytes from 8.8.8.8: icmp_seq=1 ttl=53 time=1.48 ms</span><br><span class="line">64 bytes from 8.8.8.8: icmp_seq=2 ttl=53 time=1.40 ms</span><br><span class="line">--- 8.8.8.8 ping statistics ---</span><br><span class="line">2 packets transmitted, 2 received, 0% packet loss, time 1000ms</span><br><span class="line">rtt min/avg/max/mdev = 1.404/1.445/1.487/0.056 ms</span><br></pre></td></tr></table></figure><p>于是修改DNS文件, /etc/resolv.conf, 虽然这边提示不要手动修改, 但是临时改掉是没问题的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Dynamic resolv.conf(5) file <span class="keyword">for</span> glibc resolver(3) generated by resolvconf(8)</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN</span></span><br><span class="line"><span class="meta">#</span><span class="bash">nameserver 127.0.1.1</span></span><br><span class="line">nameserver 8.8.8.8</span><br></pre></td></tr></table></figure><p>修改后，再次执行时间同步，ok鸟！</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apollo3d@apollo15:~/cl/Python_project/cplm/Min38$ sudo ntpdate ntp1.aliyun.com</span><br><span class="line">21 Nov 23:04:25 ntpdate[40285]: adjust time server 120.25.115.20 offset 0.002194 se</span><br></pre></td></tr></table></figure><p>除了阿里云的还有pool.ntp.org可以用来同步。</p><p>▲但是同步之后时间还是不太对， 于是观察时区， 发现集群两台电脑上其实只是时区是不同的， 同步的服务器都是一样的阿里云的。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apollo3d@apollo2:~$ date</span><br><span class="line">2020年 11月 22日 星期日 12:14:11 CST</span><br><span class="line"></span><br><span class="line">apollo3d@apollo15:~/cl/Python_project/cplm/Min38$ date</span><br><span class="line">Sat Nov 21 23:14:01 EST 2020</span><br></pre></td></tr></table></figure><p>发现一个是EST和CST。网上查询得知 EST代表英国时间, CST代表北京时间, EDT：指美国东部夏令时间</p><p>那么现在只要改成北京时间的时区CST就可以了，修改如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# mv /etc/localtime /etc/localtime.bak</span><br><span class="line">[root@localhost ~]# ln -s /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime</span><br><span class="line">[root@localhost ~]# date</span><br></pre></td></tr></table></figure><p>但是发现两台语言不一样, 一个是中文, 一个是英文, 猜测是操作系统中英版导致的: 输出环境变量:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">apollo3d@apollo2:~$ date</span><br><span class="line">2020年 11月 22日 星期日 12:14:11 CST</span><br><span class="line"><span class="meta">$</span><span class="bash"> env</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 可以看到时区是中国</span></span><br><span class="line">HOME=/home/apollo3d</span><br><span class="line">LOGNAME=apollo3d</span><br><span class="line">LESSCLOSE=/usr/bin/lesspipe %s %s</span><br><span class="line">LC_TIME=zh_CN.UTF-8</span><br><span class="line">LC_NAME=zh_CN.UTF-8</span><br><span class="line">_=/usr/bin/env</span><br><span class="line"></span><br><span class="line">apollo3d@apollo15:~/cl/Python_project/cplm/Min38$ date</span><br><span class="line">Sat Nov 21 23:14:01 EST 2020</span><br><span class="line"><span class="meta">$</span><span class="bash"> env</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 可以看到语言是en_US, 但是没设置时区</span></span><br><span class="line">MAIL=/var/mail/apollo3d</span><br><span class="line">PWD=/home/apollo3d/cl/Python_project/cplm/Min38</span><br><span class="line">JAVA_HOME=/home/apollo3d/Apollo_Rescue/jdk1.8.0_161</span><br><span class="line">LANG=en_US.UTF-8</span><br><span class="line">HOME=/home/apollo3d</span><br><span class="line">SUDO_COMMAND=/bin/su</span><br></pre></td></tr></table></figure><p>因此可以修改LANG:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/sysconfig/i18n</span></span><br><span class="line">LANG="en_US.UTF-8"改为LANG="zh_CN.GB2312"</span><br></pre></td></tr></table></figure><p>再运行我的Python脚本的时候发现竟然报错了: ValueError: Timezone offset does not match system offset: -18000 != 28800. Please, check your config files.</p><p>因为系统时区和代码运行时区不一样导致。解决办法：在创建BlockingScheduler对象时指定上海的时区<code>scheduler = BlockingScheduler(timezone=&quot;Asia/Shanghai&quot;)</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#&quot;&gt;&lt;/a&gt; &lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;因为今天在集群193跑程序的时候发现时间不同步, 因此想想把集群的时间全部同步一下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;

      
    
    </summary>
    
    
      <category term="Linux" scheme="https://nymrli.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>李宏毅机器学习_摘要</title>
    <link href="https://nymrli.top/2020/11/17/%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E6%91%98%E8%A6%81/"/>
    <id>https://nymrli.top/2020/11/17/李宏毅机器学习-摘要/</id>
    <published>2020-11-17T12:36:05.000Z</published>
    <updated>2020-11-26T10:03:41.472Z</updated>
    
    <content type="html"><![CDATA[<h2 id="p3regression-case-study"><a class="markdownIt-Anchor" href="#p3regression-case-study"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=3" target="_blank" rel="noopener">P3Regression - Case Study</a></h2><h3 id="regularization解决overfittingl2正则化解决过拟合问题"><a class="markdownIt-Anchor" href="#regularization解决overfittingl2正则化解决过拟合问题"></a> regularization解决overfitting(L2正则化解决过拟合问题)</h3><p><img src="/2020/11/17/李宏毅机器学习-摘要/2_%E6%AD%A3%E5%88%99%E5%8C%96.jpg" alt="2_正则化"></p><blockquote><p>regularization可以使曲线变得更加smooth，training data上的error变大，但是 testing data上的error变小。有关regularization的具体原理说明详见下一部分</p></blockquote><p>原来的loss function只考虑了prediction的error，即$$\sum_{i}<sup>{n}\left(\hat{y}</sup>{i}-\left(b+\sum_{j} w_{j} x_{j}\right)\right)^{2}$$；而regularization则是在原来的loss function的基础上加上了一项$$\lambda \sum\left(w_{i}\right)^{2}$$，就是把这个model里面所有的Wi的平方和用λ加权(其中i代表遍历n个training data，j代表遍历model的每一项)</p><p>也就是说，*<em>我们期待参数w i w_i*w*<em>i*越小甚至接近于0的function，为什么呢？</em></em></p><p>因为参数值接近0的function，是比较平滑的；所谓的平滑的意思是，当今天的输入有变化的时候，output对输入的变化是比较不敏感的。举例来说，对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mi>b</mi><mo>+</mo><mo>∑</mo><msub><mi>w</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y=b+\sum w_{i} x_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>这个model，当input变化Δ x，output的变化就是，$$w_{i} \Delta x_{i}$$也就是说，如果w越i小越接近0的话，<u>输出对输入就越不sensitive敏感</u>，我们的function就是一个越平滑的function；说到这里你会发现，我们之前没有把bias——b这个参数考虑进去的原因是<strong>bias的大小跟function的平滑程度是没有关系的</strong>，bias值的大小只是把function上下移动而已</p><p><strong>那为什么我们喜欢比较平滑的function呢？</strong></p><p>如果我们有一个比较平滑的function，由于输出对输入是不敏感的，测试的时候，一些noises噪声对这个平滑的function的影响就会比较小，而给我们一个比较好的结果</p><p><strong>注：这里的λ需要我们手动去调整以取得最好的值</strong></p><p>λ值越大代表考虑smooth的那个regularization那一项的影响力越大，我们找到的function就越平滑</p><p>观察下图可知，当我们的λ越大的时候，在training data上得到的error其实是越大的，但是这件事情是非常合理的，因为当λ越大的时候，我们就越倾向于考虑w的值而越少考虑error的大小；但是有趣的是，虽然在training data上得到的error越大，但是在testing data上得到的error可能会是比较小的</p><p>我们喜欢比较平滑的function，因为它对noise不那么sensitive；但是我们又不喜欢太平滑的function，因为它就失去了对data拟合的能力；而function的平滑程度，就需要通过调整λ来决定，就像下图中，当λ=100时，在testing data上的error最小，因此我们选择λ=100</p><h2 id="p4basic-concept"><a class="markdownIt-Anchor" href="#p4basic-concept"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=4" target="_blank" rel="noopener">P4Basic Concept</a></h2><h3 id="bias和variance"><a class="markdownIt-Anchor" href="#bias和variance"></a> bias和variance</h3><p><img src="/2020/11/17/李宏毅机器学习-摘要/bias%E5%92%8Cvariance.jpg" alt="bias和variance"></p><p>bias表示离靶心的距离, 而variance表示散布情况</p><p><img src="/2020/11/17/李宏毅机器学习-摘要/%E5%87%BD%E6%95%B0%E6%90%9C%E7%B4%A2%E7%A9%BA%E9%97%B41.jpg" alt="函数搜索空间1"></p><p><img src="/2020/11/17/李宏毅机器学习-摘要/%E5%87%BD%E6%95%B0%E6%90%9C%E7%B4%A2%E7%A9%BA%E9%97%B4.jpg" alt="函数搜索空间"></p><p>图中所示，只有足够大的函数搜索空间，才能找到正确的“靶心”，因此就需要吧模型设计得足够复杂。而复杂模型需要大数据来降低方差， 因此需要大量的数据防止过拟合</p><p><img src="/2020/11/17/李宏毅机器学习-摘要/%E6%8B%9F%E5%90%88%E6%83%85%E5%86%B5.jpg" alt="拟合情况"></p><p>如果来自variance的误差很大， 那么就是过拟合； 如果来自bias的误差很大，那么就是欠拟合（underfitting）</p><p><img src="/2020/11/17/李宏毅机器学习-摘要/%E6%8B%9F%E5%90%88%E5%A4%84%E7%90%86.jpg" alt="拟合处理"></p><p>bias大： 如果无法fit训练数据, 证明是欠拟合;如果能fit训练数据，但是在测试数据上有较大的误差，那么就是过拟合——做法：增大特征or增大次项</p><p>variance大： 更多的数据（数据增强）or 正则化</p><p><img src="/2020/11/17/李宏毅机器学习-摘要/variance%E6%8B%9F%E5%90%88%E5%A4%84%E7%90%86.jpg" alt="variance拟合处理"></p><h3 id="交叉验证"><a class="markdownIt-Anchor" href="#交叉验证"></a> 交叉验证：</h3><p><img src="/2020/11/17/李宏毅机器学习-摘要/P4%5C%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81.jpg" alt="交叉验证"></p><p>在trainingset训练后,虽然在公开的测试集上表示良好,但是private testing set不好的话, 则还是比较糟糕的模型。因此在判断一个模型的好坏的时候， 可以将trainingSet进行交叉验证</p><p><img src="/2020/11/17/李宏毅机器学习-摘要/P4%5CcrossValidation.jpg" alt="crossValidation"></p><p>非常不建议因为在public testing set上表现不好而反过来重新选择trainingSet的模型， 因为这相当于在训练的时候吧testing也考虑在内了， 违背了设计的初衷，并且这样的结果在private testing set上也会表现不好。</p><h4 id="n-fold-cross-validation-十折交叉验证"><a class="markdownIt-Anchor" href="#n-fold-cross-validation-十折交叉验证"></a> N-fold cross validation （十折交叉验证）</h4><p>如果不相信某一个trainset的结果的话， 那就分很多trainset</p><p><img src="/2020/11/17/李宏毅机器学习-摘要/P4%5CcrossValidation.jpg" alt="crossValidation"></p><h2 id="5-p5gradient-descent"><a class="markdownIt-Anchor" href="#5-p5gradient-descent"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=5" target="_blank" rel="noopener">5. P5Gradient Descent</a></h2><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>θ</mi><mo>∗</mo></msup><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><mi>θ</mi></munder><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\theta^{*}=\arg \min _{\theta} L(\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.738696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.5021079999999998em;vertical-align:-0.7521079999999999em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.047892em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7521079999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span></span></p><p>L: loss function<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span> : parameters(上标表示第几组参数, 下标表示这组参数中的第几个参数)</p><p><img src="/2020/11/17/李宏毅机器学习-摘要/P5%5ClossRate.jpg" alt="lossRate"></p><p>当参数有很多个的时候(&gt;3)，其实我们很难做到将<u>loss随每个参数的变化可视化出来(因为最多只能可视化出三维的图像，也就只能可视化三维参数</u>)，但是我们可以把update的次数作为唯一的一个参数，将loss随着update的增加而变化的趋势给可视化出来(上图右半部分)</p><p>所以做gradient descent一个很重要的事情是，要把不同的learning rate下，loss随update次数的变化曲线给可视化出来，它可以提醒你该如何调整当前的learning rate的大小，直到出现稳定下降的曲线</p><p><strong>总结：梯度下降法指的是函数值loss随梯度下降的方向减小</strong></p><h3 id="adaptive-learning-rates"><a class="markdownIt-Anchor" href="#adaptive-learning-rates"></a> Adaptive Learning rates</h3><p>显然这样手动地去调整learning rates很麻烦，因此我们需要有一些自动调整learning rates的方法</p><h5 id="最基本-最简单的大原则是learning-rate通常是随着参数的update越来越小的"><a class="markdownIt-Anchor" href="#最基本-最简单的大原则是learning-rate通常是随着参数的update越来越小的"></a> 最基本、最简单的大原则是：learning rate通常是随着参数的update越来越小的</h5><p>因为在起始点的时候，通常是离最低点是比较远的，这时候步伐就要跨大一点；而经过几次update以后，会比较靠近目标，这时候就应该减小learning rate，让它能够收敛在最低点的地方</p><h5 id="adagrad"><a class="markdownIt-Anchor" href="#adagrad"></a> Adagrad</h5><blockquote><p>Divide the learning rate of each parameter by the root mean square(方均根) of its previous derivatives</p></blockquote><p>Adagrad就是将不同参数的learning rate分开考虑的一种算法(adagrad算法update到后面速度会越来越慢，当然这只是adaptive算法中最简单的一种)</p><h3 id="stochastic-gradicent-descent"><a class="markdownIt-Anchor" href="#stochastic-gradicent-descent"></a> Stochastic Gradicent Descent</h3><p>随机梯度下降的方法可以让训练更快速，传统的gradient descent的思路是<u>看完所有的样本点</u>之后再构建loss function，然后去update参数；而stochastic gradient descent的做法是，<u>看到一个样本点就update一次</u>，因此它的loss function不是所有样本点的error平方和，而是这个随机样本点的error平方</p><h3 id="feature-scaling"><a class="markdownIt-Anchor" href="#feature-scaling"></a> Feature Scaling</h3><h5 id="概念介绍"><a class="markdownIt-Anchor" href="#概念介绍"></a> 概念介绍</h5><p>特征缩放，当多个特征的分布范围很不一样时，最好将这些不同feature的范围缩放成一样</p><p><img src="/2020/11/17/李宏毅机器学习-摘要/P5%5Cscaling.jpg" alt="scaling"></p><h5 id="对gradient-decent的帮助"><a class="markdownIt-Anchor" href="#对gradient-decent的帮助"></a> 对gradient decent的帮助</h5><p>之前我们做的demo已经表明了，对于这种长椭圆形的error surface，如果不使用Adagrad之类的方法，是很难搞定它的，因为在像w1和w2这样不同的参数方向上，会需要不同的learning rate，用相同的lr很难达到最低点</p><p>如果有scale的话，loss在参数w1、w2平面上的投影就是一个正圆形，update参数会比较容易</p><p>而且gradient descent的每次update并不都是向着最低点走的，每次update的方向是顺着等高线的方向(梯度gradient下降的方向)，而不是径直走向最低点；但是当经过对input的scale使loss的投影是一个正圆的话，不管在这个区域的哪一个点，它都会向着圆心走。因此feature scaling对参数update的效率是有帮助的</p><h5 id="scaling-method"><a class="markdownIt-Anchor" href="#scaling-method"></a> scaling method:</h5><p>z-score:</p><p>归一化</p><h3 id="gradient-descent数学理论"><a class="markdownIt-Anchor" href="#gradient-descent数学理论"></a> gradient descent数学理论</h3><p><img src="/2020/11/17/李宏毅机器学习-摘要/P5%5CGS%E6%95%B0%E5%AD%A6%E7%90%86%E8%AE%BA1.jpg" alt="GS数学理论1"></p><p><img src="/2020/11/17/李宏毅机器学习-摘要/P5%5CGS%E6%95%B0%E5%AD%A6%E7%90%86%E8%AE%BA2.jpg" alt="GS数学理论2"></p><p>注意 learning rate需要设置好, 否则Δθ不为0, 则泰勒近似不成立。</p><h4 id="gradient-descent的限制"><a class="markdownIt-Anchor" href="#gradient-descent的限制"></a> gradient descent的限制</h4><p>▲gradient descent的限制是，它在gradient即微分值接近于0的地方就会停下来，而这个地方不一定是global minima，它可能是local minima，可能是saddle point<strong>鞍点</strong>，甚至可能是一个loss很高的plateau平缓高原</p><h2 id="6-p10classification_1"><a class="markdownIt-Anchor" href="#6-p10classification_1"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=10" target="_blank" rel="noopener">6. P10Classification_1</a></h2><p>特征、特征向量是什么？</p><blockquote><p><strong>要想把一个东西当做计算机能理解的function的input，就需要把它数值化</strong></p></blockquote><p>特性数值化：用一组数字来描述一只宝可梦的特性， 比如用一组数字表示它有多强(total strong)、它的生命值(HP)、它的攻击力(Attack)、它的防御力(Defense)、它的特殊攻击力(Special Attack)、它的特殊攻击的防御力(Special defend)、它的速度(Speed)，以皮卡丘为例，我们可以用以上七种特性的数值就是特征量， 而多个特征量所组成的vector就是特征向量</p><hr><p>我们希望蓝色的这些属于class 1的宝可梦，input到Regression的model，output越接近1越好；红色的属于class 2的宝可梦，input到Regression的model，output越接近-1越好。如果使用回归来硬解分类问题的话， 异常值影响比较大。 异常值则远远大于1， 跟目标不一致</p><p>Regression的output是连续性质的数值，而classification要求的output是离散性质的点，我们很难找到一个Regression的function使大部分样本点的output都集中在某几个离散的点附近</p><p>因此，<strong>Regression定义model好坏的定义方式对classification来说是不适用的</strong></p><h4 id="solutiongenerative-model朴素贝叶斯分类器"><a class="markdownIt-Anchor" href="#solutiongenerative-model朴素贝叶斯分类器"></a> Solution：Generative model——朴素贝叶斯分类器</h4><p>![function](李宏毅机器学习-摘要/P6 classification\function.jpg)</p><p>我们可以把loss function定义成<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>L</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∑</mo><mi>n</mi></msub><mi>δ</mi><mrow><mo fence="true">(</mo><mi>f</mi><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mi mathvariant="normal">≠</mi><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\hat{L}(f)=\sum_{n} \delta\left(f\left(x^{n}\right) \neq \hat{y}^{n}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.19677em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">L</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;">^</span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>，即这个model在所有的training data上predict预测错误的次数，也就是说分类错误的次数越少，这个function表现得就越好</p><p><strong>贝叶斯公式=单条路径概率/所有路径概率和</strong></p><p>![beyas](李宏毅机器学习-摘要/P6 classification\beyas.jpg)</p><p>这一整套想法叫做<strong>Generative model</strong>(生成模型)，为什么叫它Generative model呢？因为有这个model的话，就可以拿它来generate生成x(如果你可以计算出每一个x出现的概率，就可以用这个distribution分布来生成x、sample x出来)</p><p>现在的问题是，怎么得到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mrow><mo fence="true">(</mo><mi>x</mi><mo>∣</mo><msub><mi>C</mi><mn>1</mn></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">P\left(x \mid C_{1}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mrow><mo fence="true">(</mo><mi>x</mi><mo>∣</mo><msub><mi>C</mi><mn>2</mn></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">P\left(x \mid C_{2}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 的值==&gt; 认为数据服从 高斯分布</p><h4 id="高斯分布"><a class="markdownIt-Anchor" href="#高斯分布"></a> 高斯分布</h4><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>μ</mi><mo separator="true">,</mo><mi mathvariant="normal">Σ</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mo stretchy="false">(</mo><mn>2</mn><mi>π</mi><msup><mo stretchy="false">)</mo><mrow><mi>D</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup></mrow></mfrac><mfrac><mn>1</mn><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">Σ</mi><msup><mi mathvariant="normal">∣</mi><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup></mrow></mfrac><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">{</mo><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>μ</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup><msup><mi mathvariant="normal">Σ</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>μ</mi><mo stretchy="false">)</mo><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">f_{\mu, \Sigma}(x)=\frac{1}{(2 \pi)^{D / 2}} \frac{1}{|\Sigma|^{1 / 2}} \exp \left\{-\frac{1}{2}(x-\mu)^{T} \Sigma^{-1}(x-\mu)\right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">μ</span><span class="mpunct mtight">,</span><span class="mord mtight">Σ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.410425em;vertical-align:-0.560425em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.614575em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8220357142857143em;"><span style="top:-2.8220357142857138em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.560425em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.614575em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mtight">Σ</span><span class="mord mtight"><span class="mord mtight">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8220357142857143em;"><span style="top:-2.8220357142857138em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.560425em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">{</span></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">μ</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">}</span></span></span></span></span></span></p><p>假设海龟的vector是[103 45]，虽然这个点在已有的数据里并没有出现过，但是不可以认为它出现的概率为0，我们需要用已有的数据去估测海龟出现的可能性</p><p>你可以想象说这已有的79只水系宝可梦的data其实只是冰山一角，假定水系神奇宝贝的Defense和SP Defense是从一个Gaussian的distribution里面sample出来的，下图只是采样了79个点之后得到的分布，但是从高斯分布里采样出海龟这个点的几率并不是0，那从这79个已有的点，怎么找到那个Gaussian distribution函数呢？</p><h4 id="最大似然估计_参数估计"><a class="markdownIt-Anchor" href="#最大似然估计_参数估计"></a> 最大似然估计_参数估计</h4><p>那接下来的问题就是怎么去找出这个Gaussian，<strong>只需要去估测出这个Gaussian的均值和协方差即可</strong></p><p>估测和的方法就是极大似然估计法(Maximum Likelihood)，极大似然估计的思想是，找出最特殊的那对u和covariance，从它们<u>共同决定的高斯函数</u>中再次采样出79个点，使”得到的分布情况与当前已知79点的分布情况相同“这件事情发生的可能性最大===&gt;最大似然估计</p><blockquote><p>根据sample样本, 求得使出现<strong>该样本组合可能性最大</strong>(所以是每一个点产生的概率相乘)的那组<strong>参数</strong></p></blockquote><p>![最大似然估计](李宏毅机器学习-摘要/P6 classification\最大似然估计.jpg)</p><p>![估计出参数](李宏毅机器学习-摘要/P6 classification\估计出参数.jpg)</p><p>预测：</p><p>![预测](李宏毅机器学习-摘要/P6 classification\预测.jpg)</p><p>===&gt; 训练结束：再把testing data上得到的结果可视化出来，即右下角的图，发现分的不是太好，正确率才是47%我们之前用的只是Defense和SP Defense这两个参数，在二维空间上得到的效果不太好，但实际上一开始就提到了宝可梦总共是有6个features的，也许在二维空间上它们是重叠在一起的，但是在六维空间上看它们也许会分得很好，每一个宝可梦都是六维空间中的一个点，于是我们的是一个6-dim的vector，则是一个6*6的matrix，发现得到的准确率也才64%，这个分类器表现得很糟糕，是否有办法将它改进的更好？</p><h4 id="modifying-model"><a class="markdownIt-Anchor" href="#modifying-model"></a> Modifying Model</h4><p>其实之前使用的model是不常见的，你是不会经常看到给每一个Gaussian都有自己的mean和covariance，比如我们的class 1用的是u1和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Σ</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\Sigma_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，class 2用的是u2和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Σ</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\Sigma_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，比较常见的做法是，<strong>不同的class可以share同一个cocovariance matrix</strong></p><p>其实variance是跟input的feature size的平方成正比的，所以当feature的数量很大的时候，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Σ</mi></mrow><annotation encoding="application/x-tex">\Sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Σ</span></span></span></span>大小的增长是可以非常快的，在这种情况下，给不同的Gaussian以不同的covariance matrix，会造成model的参数太多，而参数多会导致该model的variance过大，出现overfitting的现象，因此对不同的class使用同一个covariance matrix，可以有效减少参数</p><h3 id="案例总结"><a class="markdownIt-Anchor" href="#案例总结"></a> 案例总结</h3><blockquote><p>回顾几率模型</p></blockquote><p>machine learning可以概况为以下三个step</p><p>![threeSteps](李宏毅机器学习-摘要/P6 classification\threeSteps.jpg)</p><p>![threeSteps笔记](李宏毅机器学习-摘要/P6 classification\threeSteps笔记.jpg)</p><hr><p>![概率分布](李宏毅机器学习-摘要/P6 classification\概率分布.jpg)</p><p>选择的概率分布为经验之谈： 可以选择任意你喜欢的， 但是最后还是得看效果： 如果你选择的是简单的分布函数(参数比较少)，那你的bias就大，variance就小；如果你选择复杂的分布函数，那你的bias就小，variance就大，那你就可以用data set来判断一下，用什么样的Probability distribution作为model是比较好的</p><p>朴素贝叶斯：</p><p>这里每一个dimension的分布函数都是一维的Gaussian distribution，如果这样假设的话，等于是说，原来那多维度的Gaussian，它的covariance matrix变成是diagonal(对角的)，在不是对角线的地方，值都是0，这样就可以更加减少需要的参数量，就可以得到一个更简单的model</p><p>我们把上述这种方法叫做<strong>Naive Bayes Classifier(朴素贝叶斯分类法)</strong>，如果<u>真的明确了所有的feature之间是相互独立的，是不相关的，使用朴素贝叶斯分类法的performance是会很好的</u>，如果这个假设是不成立的，那么Naive bayes classfier的bias就会很大，它就不是一个好的classifier(朴素贝叶斯分类法本质就是减少参数)</p><p>当然这个例子里如果使用这样的model，得到的结果也不理想，因为各种feature之间的covariance还是必要的，比如战斗力和防御力它们之间是正相关的，covariance不能等于0</p><p>总之，寻找model总的原则是，尽量减少不必要的参数，但是必然的参数绝对不能少</p><p>那怎么去<strong>选择分布函数</strong>呢？有很多时候凭直觉就可以看出来，比如宝可梦有某个feature是binary的，它代表的是：是或不是，这个时候就不太可能是高斯分布了，而很有可能是伯努利分布(两点分布)</p><h4 id="analysis-posterior-probability分析后置概率的表达式"><a class="markdownIt-Anchor" href="#analysis-posterior-probability分析后置概率的表达式"></a> Analysis Posterior Probability分析后置概率的表达式</h4><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/posterior-probability.png" alt="img"></p><p><a href="https://sakura-gh.github.io/ML-notes/ML-notes-html/6_Classification.html" target="_blank" rel="noopener">上面的推导过程</a>可能比较复杂，但是得到的最终结果还是比较好的：(当和共用一个时，经过化简相消z就变成了一个linear的function，x的系数是一个vector w，后面的一大串数字其实就是一个常数项b)</p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/z-final.png" alt="img"></p><p><strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mrow><mo fence="true">(</mo><msub><mi>C</mi><mn>1</mn></msub><mo>∣</mo><mi>x</mi><mo fence="true">)</mo></mrow><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P\left(C_{1} \mid x\right)=\sigma(w \cdot x+b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">x</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span>这个式子就解释了，当class 1和class 2共用的时候，它们之间的boundary会是linear的</strong></p><h2 id="7-p11logistic-regression"><a class="markdownIt-Anchor" href="#7-p11logistic-regression"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=11" target="_blank" rel="noopener">7. P11Logistic Regression</a></h2><h3 id="three-steps-of-machine-learning"><a class="markdownIt-Anchor" href="#three-steps-of-machine-learning"></a> Three Steps of machine learning</h3><h4 id="step-1function-set"><a class="markdownIt-Anchor" href="#step-1function-set"></a> Step 1：function set</h4><p>这里的function set就是Logistic Regression——逻辑回归</p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/activation-function.png" alt="img"></p><h4 id="step-2goodness-of-a-function"><a class="markdownIt-Anchor" href="#step-2goodness-of-a-function"></a> Step 2：Goodness of a function</h4><p>现在我们有N笔Training data，每一笔data都要标注它是属于哪一个class</p><p>假设这些Training data是从我们定义的posterior Probability中产生的(后置概率，某种意义上就是概率密度函数)，而w和b就决定了这个posterior Probability，那我们就可以去计算某一组w和b去产生这N笔Training data的概率，利用<u>极大似然估计</u>的思想，最好的那组参数就是有最大可能性产生当前N笔Training data分布的和</p><p>似然函数只需要将每一个点产生的概率相乘即可，注意，这里假定是二元分类，class 2的概率为1减去class 1的概率. <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_{w, b}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>为x为C1种类的概率, 则在二元分类中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">( 1 - f_{w, b}(x) )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/likelihood.png" alt="img"></p><p>由于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(w, b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span> 是乘积项的形式, 为了方便计算, 我们将上式做个变换: (注意这边的L(w,b) 是最大似然函数, 而不是Loss function)</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="2em"><msup><mi>w</mi><mo>∗</mo></msup><mo separator="true">,</mo><msup><mi>b</mi><mo>∗</mo></msup><mo>=</mo><mi>arg</mi><mo>⁡</mo><msub><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>arg</mi><mo>⁡</mo><msub><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><mo>−</mo><mi>ln</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>ln</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mi>ln</mi><mo>⁡</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mn>1</mn></msup><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"><mo>−</mo><mi>ln</mi><mo>⁡</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo fence="true">)</mo></mrow></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"><mo>−</mo><mi>ln</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mn>3</mn></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"><mo>−</mo><mo>…</mo></mspace></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}\qquad w^{*}, b^{*}=\arg \max _{w, b} L(w, b)=\arg \min _{w, b}(-\ln L(w, b)) \\-\ln L(w, b)=-\ln f_{w, b}\left(x^{1}\right) \\\quad-\ln f_{w, b}\left(x^{2}\right) \\\quad-\ln \left(1-f_{w, b}\left(x^{3}\right)\right) \\\quad-\ldots\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.029999999999999em;vertical-align:-2.7649999999999997em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.265em;"><span style="top:-5.425em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:2em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">max</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">min</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mclose">)</span></span></span><span style="top:-4.215em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span><span style="top:-3.005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span><span style="top:-1.7950000000000006em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span><span style="top:-0.5950000000000004em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7649999999999997em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p>由于class 1和class 2的概率表达式不统一，上面的式子无法写成统一的形式, 为了统一格式, 这里将Logistic Regression里的所有Training data都打上0和1的标签, 即output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\hat{y}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 代表class <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">1,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span></span></span></span> output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\hat{y}=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 代表class <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">2,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mpunct">,</span></span></span></span> 于是上式进一步改写成:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo>−</mo><mi>ln</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>−</mo><mrow><mo fence="true">[</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mn>1</mn></msup><mi>ln</mi><mo>⁡</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mn>1</mn></msup><mo fence="true">)</mo></mrow><mo>+</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mn>1</mn></msup><mo fence="true">)</mo></mrow><mi>ln</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mn>1</mn></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>−</mo><mrow><mo fence="true">[</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mn>2</mn></msup><mi>ln</mi><mo>⁡</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo fence="true">)</mo></mrow><mo>+</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mn>2</mn></msup><mo fence="true">)</mo></mrow><mi>ln</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>−</mo><mrow><mo fence="true">[</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mn>3</mn></msup><mi>ln</mi><mo>⁡</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mn>3</mn></msup><mo fence="true">)</mo></mrow><mo>+</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mn>3</mn></msup><mo fence="true">)</mo></mrow><mi>ln</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mn>3</mn></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>−</mo><mo>…</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}-\ln L(w, b)=&amp;-\left[\hat{y}^{1} \ln f_{w, b}\left(x^{1}\right)+\left(1-\hat{y}^{1}\right) \ln \left(1-f_{w, b}\left(x^{1}\right)\right)\right] \\&amp;-\left[\hat{y}^{2} \ln f_{w, b}\left(x^{2}\right)+\left(1-\hat{y}^{2}\right) \ln \left(1-f_{w, b}\left(x^{2}\right)\right)\right] \\&amp;-\left[\hat{y}^{3} \ln f_{w, b}\left(x^{3}\right)+\left(1-\hat{y}^{3}\right) \ln \left(1-f_{w, b}\left(x^{3}\right)\right)\right] \\&amp;-\ldots\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.072324em;vertical-align:-2.786162em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.286162em;"><span style="top:-5.422054em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span><span style="top:-3.897946em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-2.373838em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-0.8738380000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.786162em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.286162em;"><span style="top:-5.422054em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span><span style="top:-3.897946em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span><span style="top:-2.373838em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span><span style="top:-0.8738380000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner">…</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.786162em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>现在已经有了统一的格式, 我们就可以把要minimize的对象写成一个summation的形式:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mi>ln</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mi>n</mi></munder><mo>−</mo><mrow><mo fence="true">[</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mi>ln</mi><mo>⁡</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo>+</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mo fence="true">)</mo></mrow><mi>ln</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">-\ln L(w, b)=\sum_{n}-\left[\hat{y}^{n} \ln f_{w, b}\left(x^{n}\right)+\left(1-\hat{y}^{n}\right) \ln \left(1-f_{w, b}\left(x^{n}\right)\right)\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.3000100000000003em;vertical-align:-1.250005em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.250005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span></span></p><p>这里表示第n个样本点，表示第n个样本点的class标签(1表示class 1,0表示class 2)，最终这个summation的形式，里面其实是两个<strong>Bernouli distribution(两点分布)的cross entropy(交叉熵)</strong></p><h5 id="交叉熵"><a class="markdownIt-Anchor" href="#交叉熵"></a> 交叉熵</h5><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/cross-entropy.png" alt="img"></p><p>假设有如上图所示的两个distribution p和q，它们的交叉商就是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><mi>q</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><msub><mo>∑</mo><mi>x</mi></msub><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>ln</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">H(p, q)=-\sum_{x} p(x) \ln (q(x)),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> 这也就是之前的 推导中在 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mi>ln</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">-\ln L(w, b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span> 前加一个负号的原因</p><p><u>cross entropy交叉嫡的含义是表达这两个distribution有多接近, 如果p和q这两个distribution一模一样的话, 那 它们算出来的cross entropy就是0(详细解释在“信息论&quot;中)</u>, 而这里 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">f\left(x^{n}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 表示function的output, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\hat{y}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> 表示预期 的 target, 因此交叉嫡实际上表达的是希望这个function的output和它的target越接近越好<br>总之, 我们要找的参数实际上就是:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>w</mi><mo>∗</mo></msup><mo separator="true">,</mo><msup><mi>b</mi><mo>∗</mo></msup><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></munder><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></munder><mrow><mo fence="true">(</mo><mo>−</mo><mi>ln</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mi>n</mi></munder><mo>−</mo><mrow><mo fence="true">[</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mi>ln</mi><mo>⁡</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo>+</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mo fence="true">)</mo></mrow><mi>ln</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow></mrow><annotation encoding="application/x-tex">w^{*}, b^{*}=\arg \max _{w, b} L(w, b)=\arg \min _{w, b}\left(-\ln L(w, b)=\sum_{n}-\left[\hat{y}^{n} \ln f_{w, b}\left(x^{n}\right)+\left(1-\hat{y}^{n}\right) \ln \left(1-f_{w, b}\left(x^{n}\right)\right)\right]\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.933136em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.638216em;vertical-align:-0.8882159999999999em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43055999999999994em;"><span style="top:-2.0478920000000005em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8882159999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.0478920000000005em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8882159999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.250005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h4 id="step-3find-the-best-function"><a class="markdownIt-Anchor" href="#step-3find-the-best-function"></a> step 3：Find the best function</h4><p>实际上就是去找到使loss function即交叉嫡之和最小的那组参数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>w</mi><mo>∗</mo></msup><mo separator="true">,</mo><msup><mi>b</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">w^{*}, b^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span></span></span></span> 就行了， 这里用gradient descent的方法进 行运算就Ok<br>这里sigmoid function的微分可以直接作为公式记下来: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>σ</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\frac{\partial \sigma(z)}{\partial z}=\sigma(z)(1-\sigma(z)),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> sigmoid和它的微分的图像如 下:</p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/sigmoid.png" alt="img"></p><p>先计算 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mi>ln</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∑</mo><mi>n</mi></msub><mo>−</mo><mrow><mo fence="true">[</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mi>ln</mi><mo>⁡</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo>+</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mo fence="true">)</mo></mrow><mi>ln</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">-\ln L(w, b)=\sum_{n}-\left[\hat{y}^{n} \ln f_{w, b}\left(x^{n}\right)+\left(1-\hat{y}^{n}\right) \ln \left(1-f_{w, b}\left(x^{n}\right)\right)\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span> 对 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的偏微分 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3em;vertical-align:-0.19444em;"></span><span class="mpunct">,</span></span></span></span> 这里 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\hat{y}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>−</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1-\hat{y}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> 是常数先不用管它，只需要分别求出 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>n</mi><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">lnf_{w, b}\left(x^{n}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ln</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\ln \left(1-f_{w, b}\left(x^{n}\right)\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 对 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的偏微分即可，整体推导过程如下：</p><p><img src="/2020/11/17/李宏毅机器学习-摘要/P11%5C%E4%BA%A4%E5%8F%89%E7%86%B5.jpg" alt="交叉熵"></p><p>将得到的式子进行进一步化简，可得：</p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/logistic-simple.png" alt="img"></p><p>梯度:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>θ</mi><mo>∗</mo></msup><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><mi>θ</mi></munder><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\theta^{*}=\arg \min _{\theta} L(\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.738696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.5021079999999998em;vertical-align:-0.7521079999999999em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.047892em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7521079999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span></span></p><p>L: loss function<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span> : parameters(上标表示第几组参数, 下标表示这组参数中的第几个参数)</p><p>正好跟gradient descent的目标一致, 因此可以直接用gradient descent来找到最好的参数θ</p><p>梯度更新公式: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">Δ</mi><msub><mi>θ</mi><mn>1</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">Δ</mi><msub><mi>θ</mi><mn>2</mn></msub></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mo>−</mo><mi>η</mi><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>u</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>v</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mo>&gt;</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>θ</mi><mn>1</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>θ</mi><mn>2</mn></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>−</mo><mi>η</mi><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>u</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>v</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>−</mo><mi>η</mi><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>θ</mi><mn>1</mn></msub></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>θ</mi><mi>z</mi></msub></mrow></mfrac></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\left[\begin{array}{l}\Delta \theta_{1} \\ \Delta \theta_{2}\end{array}\right]=-\eta\left[\begin{array}{l}u \\ v\end{array}\right]=&gt;\left[\begin{array}{l}\theta_{1} \\ \theta_{2}\end{array}\right]=\left[\begin{array}{l}a \\ b\end{array}\right]-\eta\left[\begin{array}{l}u \\ v\end{array}\right]=\left[\begin{array}{l}a \\ b\end{array}\right]-\eta\left[\begin{array}{l}\frac{\partial L(a, b)}{\partial \theta_{1}} \\ \frac{\partial L(a, b)}{\partial \theta_{z}}\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">u</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">u</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7050999999999998em;"><span style="top:-3.7051em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">L</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">a</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">L</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">a</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2050999999999998em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span></span></span></span> or <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>θ</mi><mi>i</mi></msup><mo>=</mo><msup><mi>θ</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mi>η</mi><mi mathvariant="normal">∇</mi><mi>L</mi><mrow><mo fence="true">(</mo><msup><mi>θ</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\theta^{i}=\theta^{i-1}-\eta \nabla L\left(\theta^{i-1}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.907994em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mord">∇</span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></p><p>我们发现最终的结果竟然异常的简洁，gradient descent每次update只需要做：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub><mo>=</mo><msub><mi>w</mi><mi>i</mi></msub><mo>−</mo><mi>η</mi><mo stretchy="false">(</mo><msub><mo>∑</mo><mi>n</mi></msub><mo>−</mo><mrow><mo fence="true">(</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mo>−</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><msubsup><mi>x</mi><mi>i</mi><mi>n</mi></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">w_{i}=w_{i}-\eta (\sum_{n}-\left(\hat{y}^{n}-f_{w, b}\left(x^{n}\right)\right) x_{i}^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mopen">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>那这个式子到底代表着什么意思呢? 现在你的update取决于三件事:</p><ul><li>learning rate, 是你自己设定的</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋅</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\cdot x_{i},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.63889em;vertical-align:-0.19444em;"></span><span class="mord">⋅</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 来自于data</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mo>−</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\hat{y}^{n}-f_{w, b}\left(x^{n}\right),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span></span></span></span> 代表function的output跟理想target的差距有多大, 如果离目标越远, update的步伐就要越 大</li></ul><h3 id="logistic-regression-vs-linear-regression"><a class="markdownIt-Anchor" href="#logistic-regression-vs-linear-regression"></a> Logistic Regression V.s. Linear Regression</h3><h5 id=""><a class="markdownIt-Anchor" href="#"></a> </h5><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/logistic-linear-regression.png" alt="img"></p><p>compare in step1</p><ul><li>Logistic Regression是把每一个feature <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 加权求和, 加上bias, 再通过sigmoid function, 当做function的 output</li><li>因为Logistic Regression的output是通过sigmoid function产生的, 因此一定是介于0 1之间; 而linear Regression的output并没有通过sigmoid function, 所以它可以是任何值</li></ul><h5 id="compare-in-step2"><a class="markdownIt-Anchor" href="#compare-in-step2"></a> compare in step2</h5><p>在Logistic Regression中，我们定义的loss function, 即要去minimize的对象, 是所有example(样本点)的 output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">(</mo><mi>f</mi><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\left(f\left(x^{n}\right)\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> )和实际target <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">(</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\left(\hat{y}^{n}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 在Bernoulli distribution(两点分布)下的<strong>cross entropy(交叉嫡)总和</strong></p><p>交叉嫡的描述：这里把 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">f\left(x^{n}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\hat{y}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> 各自看做是一个Bernoulli distribution(两点分布)，那它们的cross entropy <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mrow><mo fence="true">(</mo><mi>f</mi><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo separator="true">,</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo>=</mo><mo>−</mo><mrow><mo fence="true">[</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mi>ln</mi><mo>⁡</mo><mi>f</mi><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo>+</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mo fence="true">)</mo></mrow><mi>ln</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><mi>f</mi><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">l\left(f\left(x^{n}\right), \hat{y}^{n}\right)=-\left[\hat{y}^{n} \ln f\left(x^{n}\right)+\left(1-\hat{y}^{n}\right) \ln \left(1-f\left(x^{n}\right)\right)\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span> 之和, 就是我们要去minimize的对象, 直观来讲, 就<br>是希望function的output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">f\left(x^{n}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 和它的target <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\hat{y}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> 越接近越好</p><p>注：这里的“看做&quot;只是为了方便理解和计算，并不是真的做出它们是两点分布的假设<br>而在linear Regression中, loss function的定义相对比较简单, 就是单纯的function的output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">(</mo><mi>f</mi><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\left(f\left(x^{n}\right)\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 和实际 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">target</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\operatorname{target}\left(\hat{y}^{n}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">t</span><span class="mord mathrm">a</span><span class="mord mathrm">r</span><span class="mord mathrm" style="margin-right:0.01389em;">g</span><span class="mord mathrm">e</span><span class="mord mathrm">t</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 在<strong>数值上的平方和的均值</strong><br>这里可能会有一个疑惑, 为什么Logistic Regression的loss function不能像linear Regression一样用square error 来表示呢? 后面会有进一步的解释</p><h5 id="compare-in-step3"><a class="markdownIt-Anchor" href="#compare-in-step3"></a> compare in step3</h5><p>神奇的是，<u>Logistic Regression和linear Regression的update的方式是一模一样的</u>，唯一不一样的是，Logistic Regression的target 和output 都必须是在0和1之间的，而linear Regression的target和output的范围可以是任意值</p><h3 id="logistic-regression-square-error"><a class="markdownIt-Anchor" href="#logistic-regression-square-error"></a> Logistic Regression + Square error？</h3><blockquote><p>先说结论, 在分类问题中Square error不合适, cross entropy适合于分类问题</p></blockquote><p>Square error求微分情况:</p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/logistic-square.png" alt="img"></p><p>现在会遇到一个问题：如果第n个点的目标target是class <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">1,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span></span></span></span> 则 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mo>=</mo><mn>1</mn><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\hat{y}^{n}=1,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span></span></span></span> 此时如果function的output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">f_{w, b}\left(x^{n}\right)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 的话, 说明现在离target很接近了, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi mathvariant="normal">丶</mi><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">f_{w, b}(x)-\hat{y} 丶 \bar{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mord cjk_fallback">丶</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;">ˉ</span></span></span></span></span></span></span></span></span> 一项是0, 于是得到的微分 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mi>i</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial L}{\partial w_{i}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.325208em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 会变成0，这件事情是很合理的; 但是当function的output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">f_{w, b}\left(x^{n}\right)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 的时候, 说明离target还很遥远, 但是由于在step3中求出来的update表达 式中有一个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">f_{w, b}\left(x^{n}\right),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span></span></span></span> 因此这个时候也会导致得到的微分 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mi>i</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial L}{\partial w_{i}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.325208em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 变成0==&gt;简而言之, 微分的结果不便于下一步的gradient descent<br>如果举class 2的例子，得到的结果与class 1是一样的<br>如果我们把参数的变化对total loss作图的话, loss function选择cross entropy或square error, 参数的变化跟 loss的变化情况可视化出来如下所示：(黑色的是cross entropy, 红色的是square error)</p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/cross-entropy-vs-square-error.png" alt="img"></p><p>假设中心点就是距离目标很近的地方，<u>如果是cross entropy的话，距离目标越远，微分值就越大，参数update的时候变化量就越大，迈出去的步伐也就越大</u></p><p>但当你选择square error的时候，过程就会很卡，<u>因为距离目标远的时候，微分也是非常小的，移动的速度是非常慢的</u>，我们之前提到过，实际操作的时候，当gradient接近于0的时候，其实就很有可能会停下来，因此使用square error很有可能在一开始的时候就卡住不动了，而且这里也不能随意地增大learning rate，因为在做gradient descent的时候，你的gradient接近于0，有可能离target很近也有可能很远，因此不知道learning rate应该设大还是设小</p><p>综上，尽管square error可以使用，但是会出现update十分缓慢的现象，而使用cross entropy可以让你的Training更顺利</p><h3 id="discriminative-vs-generative"><a class="markdownIt-Anchor" href="#discriminative-vs-generative"></a> Discriminative v.s. Generative</h3><h4 id="same-model-but-different-currency"><a class="markdownIt-Anchor" href="#same-model-but-different-currency"></a> same model but different currency</h4><p>Logistic Regression的方法，我们把它称之为discriminative的方法；而我们用Gaussian来描述posterior Probability这件事，我们称之为Generative的方法,</p><p>实际上它们用的model(function set)是一模一样的, 都是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mrow><mo fence="true">(</mo><msub><mi>C</mi><mn>1</mn></msub><mo>∣</mo><mi>x</mi><mo fence="true">)</mo></mrow><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">P\left(C_{1} \mid x\right)=\sigma(w \cdot x+b),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">x</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> 如果是用Logistic Regression 的话, 可以用gradient descent的方法直接去把b和W找出来; 如果是用Generative model的话，我们要先去算 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>u</mi><mn>2</mn></msub><mo separator="true">,</mo><msup><mi mathvariant="normal">Σ</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mspace width="1em"></mspace></mrow><annotation encoding="application/x-tex">u_{1}, u_{2}, \Sigma^{-1} \quad</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span></span></span></span> 然后算出b和w</p><p>区别在于: 是否有假设?</p><p>你会发现用这两种方法得到的b和w是不同的，尽管我们的function set是同一个，但是由于做了不同的假设，最终从同样的Training data里找出来的参数会是不一样的</p><p>在Logistic Regression里面，我们<strong>没有做任何实质性的假设</strong>，没有对Probability distribution有任何的描述，我们就是单纯地去找b和w(推导过程中的假设只是便于理解和计算，对实际结果没有影响)</p><p>而在Generative model里面，我们对Probability distribution是<strong>有实质性的假设</strong>的，之前我们假设的是Gaussian(高斯分布)，甚至假设在相互独立的前提下是否可以是naive bayes(朴素贝叶斯)，根据这些假设我们才找到最终的b和w</p><p>例子: <a href="https://sakura-gh.github.io/ML-notes/ML-notes-html/7_Logistic-Regression.html" target="_blank" rel="noopener">https://sakura-gh.github.io/ML-notes/ML-notes-html/7_Logistic-Regression.html</a></p><p>所以，<strong>Generative model和discriminative model的差别就在于，Generative的model它有做了某些假设，假设你的data来自于某个概率模型；而Discriminative的model是完全不作任何假设的, 完全根据数据说话</strong></p><blockquote><p>Generative model做的事情就是脑补，它会自己去想象一些事情，于是会做出一个和我们人类直觉想法不太一样的判断结果，就像toy example里，我们做了naive bayes这样一个假设(事实上我们并不知道这两个feature是否相互独立)，于是Naive bayes会在class 2里并没有出现过两个feature都是1的样本点的前提下，自己去脑补有这样的点</p><p>通常脑补不是一件好的事情，因为你给你的data强加了一些它并没有告诉你的属性，但是在data很少的情况下，脑补也是有用的，discriminative model并不是在所有的情况下都可以赢过Generative model，discriminative model是十分依赖于data的，当data数量不足或是data本身的label就有一些问题，那Generative model做一些脑补和假设，反而可以把data的不足或是有问题部分的影响给降到最低</p></blockquote><hr><h3 id="conclusion"><a class="markdownIt-Anchor" href="#conclusion"></a> Conclusion</h3><p>对于分类的问题(主要是二元分类)，我们一般有两种方法去处理问题，一种是Generative的方法，另一种是Discriminative的方法，注意到分类问题的model都是从贝叶斯方程出发的，即</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>P</mi><mrow><mo fence="true">(</mo><msub><mi>C</mi><mi>i</mi></msub><mo>∣</mo><mi>x</mi><mo fence="true">)</mo></mrow><mo>=</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mfrac><mrow><mi>P</mi><mrow><mo fence="true">(</mo><msub><mi>C</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mi>P</mi><mrow><mo fence="true">(</mo><mi>x</mi><mo>∣</mo><msub><mi>C</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow></mrow><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>P</mi><mrow><mo fence="true">(</mo><msub><mi>C</mi><mi>j</mi></msub><mo fence="true">)</mo></mrow><mi>P</mi><mrow><mo fence="true">(</mo><mi>x</mi><mo>∣</mo><msub><mi>C</mi><mi>j</mi></msub><mo fence="true">)</mo></mrow></mrow></mfrac><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mrow><mo fence="true">(</mo><mi>b</mi><mo>+</mo><munder><mo>∑</mo><mi>k</mi></munder><msub><mi>w</mi><mi>k</mi></msub><msub><mi>x</mi><mi>k</mi></msub><mo fence="true">)</mo></mrow></mrow></msup></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} P\left(C_{i} \mid x\right)=&amp; \frac{P\left(C_{i}\right) P\left(x \mid C_{i}\right)}{\sum_{j=1}^{n} P\left(C_{j}\right) P\left(x \mid C_{j}\right)}(1) \\ &amp;=\sigma(z)=\frac{1}{1+e^{-z}}=\frac{1}{1+e^{-\left(b+\sum_{k} w_{k} x_{k}\right)}} \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.55963em;vertical-align:-2.529815em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.029815em;"><span style="top:-5.029815em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">x</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span><span style="top:-2.278265em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.529815em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.029815em;"><span style="top:-5.029815em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.305708em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1301100000000002em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span><span style="top:-2.278265em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.697331em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.1100000000000003em;"><span class="pstrut" style="height:3.1077500000000002em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.10775em;"><span style="top:-3.4102500000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight delimcenter" style="top:0.07500000000000001em;"><span class="mtight">(</span></span><span class="mord mathdefault mtight">b</span><span class="mbin mtight">+</span><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1745899999999999em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32143857142857146em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span><span class="mclose sizing reset-size3 size6 mtight delimcenter" style="top:0.07500000000000001em;"><span class="mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.33775em;"><span class="pstrut" style="height:3.1077500000000002em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7847500000000003em;"><span class="pstrut" style="height:3.1077500000000002em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.08108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.529815em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>Generative model的好处是，它对data的依赖并没有像discriminative model那么严重，在data数量少或者data本身就存在noise的情况下受到的影响会更小，而它还可以做到Prior部分与class-dependent部分分开处理，如果可以借助其他方式提高Prior model的准确率，对整一个model是有所帮助的(比如前面提到的语音辨识)</p><p>而Discriminative model的好处是，在data充足的情况下，它训练出来的model的准确率一般是比Generative model要来的高的</p><h3 id="multi-class-classification"><a class="markdownIt-Anchor" href="#multi-class-classification"></a> Multi-class Classification</h3><h4 id="softmax"><a class="markdownIt-Anchor" href="#softmax"></a> softmax</h4><blockquote><p>softmax的意思是对最大值做强化，因为在做第一步的时候，对取exponential会使大的值和小的值之间的差距被拉得更开，也就是强化大的值</p></blockquote><h5 id="limitation-of-logistic-regression"><a class="markdownIt-Anchor" href="#limitation-of-logistic-regression"></a> Limitation of Logistic Regression</h5><p>Logistic Regression其实有很强的限制，给出下图的例子中的Training data，想要用Logistic Regression对它进行分类，其实是做不到的, 如<strong>异或</strong></p><h5 id="feature-transformation"><a class="markdownIt-Anchor" href="#feature-transformation"></a> Feature Transformation</h5><p>如果坚持要用Logistic Regression的话，有一招叫做<strong>Feature Transformation</strong>，原来的feature分布不好划分，那我们可以将之转化以后，找一个比较好的feature space，让Logistic Regression能够处理</p><p>但麻烦的是，我们并不知道怎么做feature Transformation，如果在这上面花费太多的时间就得不偿失了，于是我们会希望这个Transformation是机器自己产生的，怎么让机器自己产生呢？<strong>我们可以让很多Logistic Regression cascade(连接)起来</strong></p><p>我们让一个input x的两个feature <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">x_{1}, x_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 经过两个Logistic Regression的transform, 得到<strong>新的feature</strong> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>x</mi><mn>1</mn><mo mathvariant="normal">′</mo></msubsup><mo separator="true">,</mo><msubsup><mi>x</mi><mn>2</mn><mo mathvariant="normal">′</mo></msubsup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">x_{1}^{\prime}, x_{2}^{\prime},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 在 这个新的feature space上, class 1和class 2是可以用一条直线分开的, 那么最后只要再接另外一个Logistic Regression的model(对它来说, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>x</mi><mn>1</mn><mo mathvariant="normal">′</mo></msubsup><mo separator="true">,</mo><msubsup><mi>x</mi><mn>2</mn><mo mathvariant="normal">′</mo></msubsup></mrow><annotation encoding="application/x-tex">x_{1}^{\prime}, x_{2}^{\prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span> 才是每一个样本点的&quot;feature&quot;, 而不是原先的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo fence="true">)</mo></mrow><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\left.x_{1}, x_{2}\right),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span></span></span></span> 它根据新的 feature, 就可以把class 1和class 2分开</p><h3 id="powerful-cascading-logistic-regression"><a class="markdownIt-Anchor" href="#powerful-cascading-logistic-regression"></a> Powerful Cascading Logistic Regression</h3><p>通过上面的例子，我们发现，多个Logistic Regression连接起来会产生powerful的效果，<strong>我们把每一个Logistic Regression叫做一个neuron(神经元)，把这些Logistic Regression串起来所形成的network，就叫做Neural Network，就是类神经网路，这个东西就是Deep Learning！</strong></p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/powerful-network.png" alt="img"></p><h2 id="8-p12-brief-introduction-of-deep-learning"><a class="markdownIt-Anchor" href="#8-p12-brief-introduction-of-deep-learning"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=12" target="_blank" rel="noopener">8. P12 Brief Introduction of Deep Learning</a></h2><h3 id="ups-and-downs-of-deep-learning"><a class="markdownIt-Anchor" href="#ups-and-downs-of-deep-learning"></a> Ups and downs of Deep Learning</h3><ul><li>1958：Perceptron(linear model)，感知机的提出<ul><li>和Logistic Regression类似，只是少了sigmoid的部分</li></ul></li><li>1969：Perceptron has limitation，from MIT</li><li>1980s：Multi-layer Perceptron，多层感知机<ul><li>和今天的DNN很像</li></ul></li><li>1986：Backpropagation，反向传播<ul><li>Hinton propose的Backpropagation</li><li>存在problem：通常超过3个layer的neural network，就train不出好的结果</li></ul></li><li>、1989: 1 hidden layer is “good enough”，why deep？<ul><li>有人提出一个理论：只要neural network有一个hidden layer，它就可以model出任何的function，所以根本没有必要叠加很多个hidden layer，所以Multi-layer Perceptron的方法又坏掉了，这段时间Multi-layer Perceptron这个东西是受到抵制的</li></ul></li><li>2006：RBM initialization(breakthrough)：Restricted Boltzmann Machine，受限玻尔兹曼机<ul><li>Deep learning -&gt; another Multi-layer Perceptron ？在当时看来，它们的不同之处在于在做gradient descent的时候选取初始值的方法如果是用RBM，那就是Deep learning；如果没有用RBM，就是传统的Multi-layer Perceptron</li><li>那实际上呢，RBM用的不是neural network base的方法，而是graphical model，后来大家试验得多了发现RBM并没有什么太大的帮助，因此现在基本上没有人使用RBM做initialization了</li><li>RBM最大的贡献是，它让大家重新对Deep learning这个model有了兴趣(石头汤的故事)</li></ul></li><li>2009：GPU加速的发现</li><li>2011：start to be popular in speech recognition，语音识别领域</li><li>2012：win ILSVRC image competition，Deep learning开始在图像领域流行开来</li></ul><p>实际上，<u>Deep learning跟machine learning一样，也是“大象放进冰箱”的三个步骤</u>：</p><p>在Deep learning的step1里define的那个function，就是neural network</p><p><img src="/2020/11/17/李宏毅机器学习-摘要/P12%5CDLhistory.jpg" alt="DLhistory"></p><h3 id="neural-network"><a class="markdownIt-Anchor" href="#neural-network"></a> Neural Network</h3><h4 id="concept"><a class="markdownIt-Anchor" href="#concept"></a> concept</h4><p>把多个Logistic Regression前后connect在一起，然后把一个Logistic Regression称之为neuron，整个称之为neural network</p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/neural-network.png" alt="img"></p><p>我们可以用不同的方法连接这些neuron，就可以得到不同的structure，neural network里的每一个Logistic Regression都有自己的weight和bias，这些weight和bias集合起来，就是这个network的parameter，我们用来描述</p><h3 id="network-structure"><a class="markdownIt-Anchor" href="#network-structure"></a> Network Structure</h3><p>如果一个<strong>neural network</strong>的参数weight和bias已知的话，它就是一个<strong>function</strong>，它的<strong>input</strong>是一个vector，<strong>output</strong>是另一个vector，这个vector里面放的是<strong>样本点的feature</strong>，vector的dimension就是feature的个数</p><ul><li>input的地方，叫做<strong>input layer</strong>，输入层(严格来说input layer其实不是一个layer，它跟其他layer不一样，不是由neuron所组成的)</li><li>output的地方，叫做<strong>output layer</strong>，输出层</li><li>其余的地方，叫做<strong>hidden layer</strong>，隐藏层</li><li>激活函数: 每一个neuron里面的sigmoid function，在Deep Learning中被称为<strong>activation function</strong>(激励函数)，事实上它不见得一定是sigmoid function，还可以是其他function(sigmoid function是从Logistic Regression迁移过来的，现在已经较少在Deep learning里使用了)</li></ul><p>★.network structure+neuron该如何连接在一起的含义: 其实是define了一个function set(model)</p><h3 id="feedforward-network"><a class="markdownIt-Anchor" href="#feedforward-network"></a> <strong>Feedforward network</strong></h3><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/layers.png" alt="img"></p><p>▲.全连接: 因为layer和layer之间，<strong>所有的neuron都是两两连接</strong>，所以它叫Fully connected的network；因为现在传递的方向是从layer 1-&gt;2-&gt;3，由后往前传，所以它叫做Feedforward network</p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/output-layer.png" alt="img"></p><h4 id="output-layer"><a class="markdownIt-Anchor" href="#output-layer"></a> Output Layer</h4><p>我们可以把hidden layers这部分，看做是一个<strong>feature extractor(特征提取器)</strong>，这个feature extractor就replace了我们之前手动做feature engineering，feature transformation这些事情，经过这个feature extractor得到的就可以被当作一组新的feature</p><p>output layer做的事情，其实就是把它当做一个<strong>Multi-class classifier</strong>，它是拿经过feature extractor转换后的那一组比较好的feature(能够被很好地separate)进行分类的，由于我们把output layer看做是一个Multi-class classifier，所以我们会在最后一个layer加上<strong>softmax</strong></p><h3 id="整个手写体识别分析"><a class="markdownIt-Anchor" href="#整个手写体识别分析"></a> 整个手写体识别分析:</h3><p>我们唯一需要的就是一个<strong>function</strong>，这个function的input是一个256的vector，<strong>output是一个10维的vector</strong>，这个function就是neural network(这里我们用简单的Feedforward network)</p><p>input固定为256维(图片)，output固定为10维的feedforward neural network，实际上这个network structure就已经确定了一个function set(model)的形状，在这个function set里的每一个function都可以拿来做手写数字识别，接下来我们要做的事情是用gradient descent去计算出一组参数，挑一个最适合拿来做手写数字识别的function</p><p><strong>注：input、output的dimension，加上network structure，就可以确定一个model的形状，前两个是容易知道的，而决定这个network的structure则是整个Deep Learning中最为关键的步骤</strong></p><p>所以这里很重要的一件事情是，我们要对network structure进行design，之前在做Logistic Regression或者是linear Regression的时候，我们对model的structure是没有什么好设计的，但是对neural network来说，我们现在已知的constraint只有input是256维，output是10维，而中间要有几个hidden layer，每个layer要有几个neuron，都是需要我们自己去设计的，它们近乎是决定了function set长什么样子</p><p>如果你的network structure设计的很差，这个function set里面根本就没有好的function，那就会像大海捞针一样，结果针并不在海里(滑稽</p><h4 id="step-1neural-network"><a class="markdownIt-Anchor" href="#step-1neural-network"></a> Step 1：Neural Network</h4><p><img src="/2020/11/17/李宏毅机器学习-摘要/P12%5C%E6%89%8B%E5%86%99%E4%BD%93-network.jpg" alt="手写体-network"></p><p>intput输入为16*16的图片(256维) --&gt;经过神经网络(函数) --&gt; 输出10维的vector --&gt; 经过softmax函数选出可能性最大的结果输出-output</p><h4 id="step-2goodness-of-function"><a class="markdownIt-Anchor" href="#step-2goodness-of-function"></a> Step 2：Goodness of function</h4><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/loss-for-example.png" alt="img"></p><p>input这张image的256个pixel，通过这个neural network之后，会得到一个output，称之为y；而从这张image的label中转化而来的target，称之为，有了output 和target 之后，要做的事情是计算它们之间的<strong>cross entropy(交叉熵)</strong>，这个做法跟我们之前做Multi-class classification的时候是一模一样的—&gt; 分类问题多使用交叉熵</p><p>Cross Entropy <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>:</mo><mi>l</mi><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mn>10</mn></msubsup><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">: l(y, \hat{y})=-\sum_{i=1}^{10} \hat{y}_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.253718em;vertical-align:-0.29971000000000003em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>lny<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mrow></mrow><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46166399999999996em;vertical-align:-0.15em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><h4 id="step-3pick-the-best-function"><a class="markdownIt-Anchor" href="#step-3pick-the-best-function"></a> Step 3：Pick the best function</h4><p>接下来就去调整参数，让这个cross entropy越小越好，当然整个training data里面不会只有一笔data，你需要把所有data的cross entropy都sum起来, 得到一个total loss <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><msup><mi>l</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">L=\sum_{n=1}^{N} l^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> （所有case的Cross Entropy  ）, 得到loss function之后你要做的事情是找一组network的parameters：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>θ</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">\theta^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span></span></span></span>。它可以minimize这个total loss，这组parameter对应的function就是我们最终训练好的model</p><p>老规矩：我们使用<strong>Gradient Descent</strong>来优化total loss来获得model。实际上在deep learning里面用gradient descent，跟在linear regression里面使用完全没有什么差别，只是function和parameter变得更复杂了而已，其他事情都是一模一样的。</p><p>但是相比在liner model中求导还是比较轻松的， 在network中的function式子到底是长什么样子呢？==&gt; 需要用到反向传播—&gt;但是人工计算是比较复杂的, 因此有了pytorch, tensorflow等微分toolkit可以来计算Backpropagation</p><h3 id="design-network-structure-vs-feature-engineering网络结构设计-vs-特征工程"><a class="markdownIt-Anchor" href="#design-network-structure-vs-feature-engineering网络结构设计-vs-特征工程"></a> Design network structure V.s. Feature Engineering(网络结构设计 vs 特征工程)</h3><blockquote><p>deep learning: 通过network 找到一组合适的param来训练, 让机器自动学会如何提取特征==&gt;获得model<br>传统方法: 通过古圣先贤的先验知识对信息进行特征提取和分析==&gt;获得model</p></blockquote><p>其实network structure的design是一件蛮难的事情，我们到底要怎么决定layer的数目和每一个layer的neuron的数目呢？其实这个只能够凭着经验和直觉、多方面的尝试，有时候甚至会需要一些domain knowledge(专业领域的知识)，<u>从非deep learning的方法到deep learning的方法，并不是说machine learning比较简单，而是我们把一个问题转化成了另一个问题</u></p><p>原先非deep learning的model，要得到一个好的结果，往往需要做<strong>feature engineering(特征工程)</strong>，也就是做feature transform，然后找一组好的feature；一开始学习deep learning的时候，好像会觉得deep learning的layers之间也是在做feature transform，但实际上在做deep learning的时候，往往不需要一个好的feature ，比如说在做影像辨识的时候，你可以把所有的pixel直接丢进去，但是在过去做图像识别，你是需要对图像抽取出一些人定的feature出来的，这件事情就是feature transform，但是有了deep learning之后，你完全可以直接丢pixel进去硬做</p><p>但是，今天deep learning制造了一个新的问题，它所制造的问题就是，你需要去design network的structure，所以<strong>你的问题从本来的如何抽取feature==&gt;(转化成)怎么design network structure</strong>，所以deep learning是不是真的好用，取决于你觉得解决哪一个问题比较容易(如，以前做音频识别需要知道DFT些信号处理知识和方法，现在完全可以交给机器，让其自己学会DFT)</p><p>如果是影响辨识或者是语音辨识的话，design network structure可能比feature engineering要来的容易，因为，虽然我们人都会看、会听，但是这件事情，它太过潜意识了，它离我们意识的层次太远，我们无法意识到，我们到底是怎么做语音辨识这件事情，所以对人来说，你要抽一组好的feature，让机器可以很方便地用linear的方法做语音辨识，其实是很难的，<u>因为人根本就不知道好的feature到底长什么样子；所以还不如design一个network structure，或者是尝试各种network structure，让machine自己去找出好的feature，这件事情反而变得比较容易，对影像来说也是一样的</u></p><p>有这么一个说法：deep learning在NLP上面的performance并没有那么好。语音辨识和影像辨识这两个领域是最早开始用deep learning的，一用下去进步量就非常地惊人，比如错误率一下子就降低了20%这样，但是在NLP上，它的进步量似乎并没有那么惊人，甚至有很多做NLP的人，现在认为说deep learning不见得那么work，这个原因可能是，人在做NLP这件事情的时候，由于人在文字处理上是比较强的，比如叫你设计一个rule去detect一篇document是正面的情绪还是负面的情绪，你完全可以列表，列出一些正面情绪和负面情绪的词汇，然后看这个document里面正面情绪的词汇出现的百分比是多少，你可能就可以得到一个不错的结果。<u>所以NLP这个task，对人来说是比较容易设计rule的，你设计的那些ad-hoc(特别的)的rule，往往可以得到一个还不错的结果，这就是为什么deep learning相较于NLP传统的方法，觉得没有像其他领域一样进步得那么显著(但还是有一些进步的)</u>===&gt;简言之, 这个语言问题较为容易研究, 以及前人传统方法研究已经非常深入, 效果也较好, 因此机器学习并没有太多的提升</p><p>长久而言，可能文字处理中会有一些隐藏的资讯是人自己也不知道的，所以让机器自己去学这件事情，还是可以占到一些优势，只是眼下它跟传统方法的差异看起来并没有那么的惊人，但还是有进步的</p><h3 id="p15why-deep-"><a class="markdownIt-Anchor" href="#p15why-deep-"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=15" target="_blank" rel="noopener">P15Why Deep-</a></h3><p><img src="/2020/11/17/李宏毅机器学习-摘要/P12%5C%E6%B7%B1%E5%BA%A6%E8%BF%98%E6%98%AF%E5%AE%BD%E5%BA%A6.jpg" alt="深度还是宽度"></p><p>Q:参数变多,是变宽还是变深呢? 是不是暴力的方法呢?</p><p>A:</p><ul><li>论文比较相同参数, 深度效果好于宽度;</li><li>DNN结构一个很大的优势是，Modularization(模块化)，它用的是结构化的架构</li></ul><h4 id="modularization"><a class="markdownIt-Anchor" href="#modularization"></a> Modularization</h4><blockquote><p>就像写程序一样，shallow network实际上就是把所有的程序都写在了同一个main函数中，所以它去检测不同的class使用的方法是相互独立的；而deep network则是把整个任务分为了一个个小任务，每个小任务又可以不断细分下去，以形成modularization，就像下图一样</p><p>在DNN的架构中，实际上每一层layer里的neuron都像是在解决同一个级别的任务，它们的output作为下一层layer处理更高级别任务的数据来源，低层layer里的neuron做的是对不同小特征的检测，高层layer里的neuron则根据需要挑选低层neuron所抽取出来的不同小特征，去检测一个范围更大的特征；neuron就像是一个个classifier ，后面的classifier共享前面classifier的参数</p><p>这样做的好处是，低层的neuron输出的信息可以被高层不同的neuron重复使用，而并不需要像shallow network一样，每次在用到的时候都要重新去检测一遍，因此大大降低了程序的复杂度</p></blockquote><ul><li><p>理解效果：模组化： 如分类长发的女孩、长头发的男孩、短发的女孩、短发男孩。</p><p>​如果按照shallow network的想法，我们分别独立地train四个classifier(其实就相当于训练四个独立的model)，然后就可以解决这个分类的问题。但是显而易见的是长头发的男生样本会非常少，没有太多的training data，所以，你train出来的classifier就比较weak，去detect长头发男生的performance就比较差</p><p>![模组化](李宏毅机器学习-摘要/P12\模组化.jpg<img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/modularization3.png" alt="img"></p></li></ul><p>但其实我们的input并不是没有关联的，长头发的男生和长头发的女生都有一个共同的特征，就是长头发，因此如果我们分别<strong>独立地训练四个model作为分类器</strong>，实际上就是忽视了这个共同特征，也就是没有高效地用到data提供的全部信息，这恰恰是shallow network的弊端</p><p>而利用modularization的思想，使用deep network的架构，我们可以<strong>训练一个model作为分类器就可以完成所有的任务</strong>，我们可以把整个任务分为<strong>两个子任务</strong>：</p><ul><li>Classifier1：检测是男生或女生</li><li>Classifier2：检测是长头发或短头发</li></ul><p>虽然长头发的男生data很少，但长头发的人的data就很多，经过前面几层layer的特征抽取，就可以头发的data全部都丢给Classifier2，把男生或女生的data全部都丢给Classifier1，这样就真正做到了<strong>充分、高效地利用数据</strong>，最终的Classifier再根据Classifier1和Classifier2提供的信息给出四类人的分类结果</p><p>你会发现，经过层层layer的任务分解，其实每一个Classifier要做的事情都是比较简单的，又因为这种分层的、模组化的方式充分利用了data，并提高了信息利用的效率，所以只要用比较少的training data就可以把结果train好</p><p><img src="/2020/11/17/李宏毅机器学习-摘要/P12%5C%E6%A8%A1%E7%BB%84%E5%8C%961.jpg" alt="模组化1"></p><h4 id="deep-modularization"><a class="markdownIt-Anchor" href="#deep-modularization"></a> deep -&gt; modularization</h4><p>做modularization的好处是<strong>把原来比较复杂的问题变得简单</strong>，比如原来的任务是检测一个长头发的女生，但现在你的任务是检测长头发和检测性别，而当检测对象变简单的时候，就算training data没有那么多，我们也可以把这个task做好，并且<strong>所有的classifier都用同一组参数检测子特征</strong>，提高了参数使用效率，这就是modularization、这就是模块化的精神</p><p><strong>由于deep learning的deep就是在做modularization这件事，所以它需要的training data反而是比较少的</strong>，这可能会跟你的认知相反，AI=big data+deep learning，但deep learning其实是为了解决less data的问题才提出的</p><p>每一个neuron其实就是一个basic的classifier：</p><ul><li>第一层neuron，它是一个最basic的classifier，检测的是颜色、线条这样的小特征</li><li>第二层neuron是比较复杂的classifier，它用第一层basic的classifier的output当作input，也就是把第一层的classifier当作module，利用第一层得到的小特征分类出不同样式的花纹</li><li>而第三层的neuron又把第二层的neuron当作它module，利用第二层得到的特征分类出蜂窝、轮胎、人</li><li>以此类推</li></ul><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/modularization4.png" alt="img"></p><p>这边要强调的是，在做deep learning的时候，怎么做模块化这件事情是machine自动学到的，也就是说，第一层要检测什么特征、第二层要检测什么特征…这些都不是人为指定的，人只有定好有几层layer、每层layer有几个neuron，剩下的事情都是machine自己学到的</p><p>传统的机器学习算法，是人为地根据domain knowledge指定特征来进行提取，这种指定的提取方式，甚至是提取到的特征，也许并不是实际最优的，所以它的识别成功率并没有那么高；但是如果提取什么特征、怎么提取这件事让机器自己去学，它所提取的就会是那个最优解，因此识别成功率普遍会比人为指定要来的高</p><h4 id="conclusion-2"><a class="markdownIt-Anchor" href="#conclusion-2"></a> Conclusion</h4><p>Deep总结：</p><ul><li>考虑input之间的内在关联，所有的class用同一个model来做分类</li><li>modularization思想，复杂问题简单化，把检测复杂特征的<u>大任务</u>分割成检测简单特征的<u>小任务</u></li><li>所有的classifier使用同一组参数的子特征检测器，<u>共享检测到的子特征</u></li><li>不同的classifier会share部分的参数和data，效率高</li><li>联系logic circuit和剪纸画的例子</li><li>多层hidden layer对complex问题的处理上比较有优势</li></ul><h2 id="9-p13backpropagation"><a class="markdownIt-Anchor" href="#9-p13backpropagation"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=13" target="_blank" rel="noopener">9. P13Backpropagation</a></h2><p>Backpropagation是神经网络中用来做gradient descent的方法， 目的是使优化函数尽可能得变成我们想要的， 假设我们现在要处理的是分类任务，loss function为交叉熵， total loss为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><msup><mi>l</mi><mi>n</mi></msup><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(\theta)=\sum_{n=1}^{N} l^{n}(\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span></p><p>我们把training data里任意一个样本点 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">x^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> 代到neural network里面, 它会output一个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>y</mi><mi>n</mi></msup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">y^{n},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 我们把这个output跟样 本点本身的label标注的target <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\hat{y}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> 作cross entropy, 这个交叉嫡定义了output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>y</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">y^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> 与target <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\hat{y}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> 之间的距离 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>l</mi><mi>n</mi></msup><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">l^{n}(\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span>。 如果cross entropy比较大的话, 说明output和target之间距离很远, 这个network的parameter的loss是比较大 的, 反之则说明这组parameter是比较好的， 然后总和所有training data的cross entropy <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>l</mi><mi>n</mi></msup><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">l^{n}(\theta),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> 得到total loss <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">L(\theta),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> 这就是我们的loss function, 用这个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span> 对某一个参数w做偏微分, 表达式如下:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>l</mi><mi>n</mi></msup><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial L(\theta)}{\partial w}=\sum_{n=1}^{N} \frac{\partial l^{n}(\theta)}{\partial w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.113em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0954490000000003em;vertical-align:-1.267113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>这个表达式告诉我们, 只需要考虑如何计算对某一笔data的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>l</mi><mi>n</mi></msup><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\frac{\partial l^{n}(\theta)}{\partial w},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span></span> 再将所有training data的cross entropy对参数 w的偏微分累计求和, 就可以把total loss对某一个参数w的偏微分给计算出来。</p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/bp-loss.png" alt="img"></p><p>我们逐一分析，我们先考虑某一个neuron, 先拿出上图中被红色三角形圈住的neuron, 假设只有两个input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">x_{1}, x_{2},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 通过这个 neuron, 我们先得到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi><mo>=</mo><mi>b</mi><mo>+</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">z=b+w_{1} x_{1}+w_{2} x_{2},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 然后经过activation function从这个neuron中output出来, 作为后 续neuron的input, 再经过了非常非常多的事情以后, 会得到最终的output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">y_{1}, y_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br>现在的问题是这样： <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 该怎么算? 按照chain rule, 可以把它拆分成两项, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial w}=\frac{\partial z}{\partial w} \frac{\partial l}{\partial z},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span></span> 这两项分别去把它计算<br>出来。前面这一项是比较简单的, 后面这一项是比较复杂的<br>计算前面这一项 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial z}{\partial w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 的这个process, 我们称之为Forward pass; 而计算后面这项 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 的process, 我们称之为 Backward pass</p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/bp-forward-backward.png" alt="img"></p><h3 id="forward-pass"><a class="markdownIt-Anchor" href="#forward-pass"></a> Forward pass</h3><p>先考虑 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial z}{\partial w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 这一项, 完全可以秒算出来, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mn>1</mn></msub></mrow></mfrac><mo>=</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mn>2</mn></msub></mrow></mfrac><mo>=</mo><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\frac{\partial z}{\partial w_{1}}=x_{1}, \frac{\partial z}{\partial w_{2}}=x_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.325208em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.325208em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br>它的规律是这样的：<strong>求 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\frac{\partial z}{\partial w},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span></span> 就是看w前面连接的input是什么, 那微分后的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial z}{\partial w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 值就是什么</strong>，因此只要计算出 neural network里面每一个neuron的output就可以知道任意的z对W的偏微分</p><ul><li>比如input layer作为neuron的输入时，前面连接的是，所以微分值就是；前面连接的是，所以微分值就是</li><li>比如hidden layer作为neuron的输入时，那该neuron的input就是前一层neuron的output，于是的值就是前一层的z经过activation function之后输出的值(下图中的数据是假定activation function为sigmoid function得到的)</li></ul><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/forward-pass.png" alt="img"></p><h3 id="backward-pass"><a class="markdownIt-Anchor" href="#backward-pass"></a> Backward pass</h3><p>再考虑 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 这一项, 它是比较复杂的, 这里我们依旧假设activation function是sigmoid function</p><p><strong>公式推导</strong></p><p>我们的<u>z通过activation function得到a</u>, 这个neuron的output是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">a=\sigma(z),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> 接下来这个a会乘上某一个weight <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">w_{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 再加上其它一大堆的value得到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">z^{\prime},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 它是下一个neuron activation function的input, 然后a又会乘上另一个 weight <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mn>4</mn></msub><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">w_{4},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 再加上其它一雄value得到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">z^{\prime \prime},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 后面还会发生很多很多其他事情, 不过这里我们就只先考虑下一步会 发生什公事情:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z}=\frac{\partial a}{\partial z} \frac{\partial l}{\partial a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>这里的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial a}{\partial z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 实际上就是<u>1. activation function的微分(在这里就是sigmoid function的微分)</u>，接下来的问题是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 应该长 什么样子呢? a会影响 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">z^{\prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">z^{\prime \prime},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 而 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">z^{\prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow><annotation encoding="application/x-tex">z^{\prime \prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 会影响 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">l,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span></span></span></span> 所以通过chain rule可以得到</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow></mfrac><mo>+</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial a}=\frac{\partial z^{\prime}}{\partial a} \frac{\partial l}{\partial z^{\prime}}+\frac{\partial z^{\prime \prime}}{\partial a} \frac{\partial l}{\partial z^{\prime \prime}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.114892em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.428892em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6778919999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.114892em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.428892em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6778919999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>这里的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow></mfrac><mo>=</mo><msub><mi>w</mi><mn>3</mn></msub><mo separator="true">,</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow></mfrac><mo>=</mo><msub><mi>w</mi><mn>4</mn></msub><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\frac{\partial z^{\prime}}{\partial a}=w_{3}, \frac{\partial z^{\prime \prime}}{\partial a}=w_{4},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.31848em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.97348em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.31848em;vertical-align:-0.345em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.97348em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 那 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z^{\prime}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z^{\prime \prime}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 又该怎么算呢? 这里先假设我们已经通过某种方法把 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z^{\prime}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z^{\prime \prime}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 这两项给算出来了，然后回过头去就可以把 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 给轻易地算出来 ==&gt; 上面是个递归的过程，因此需要从output计算 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow></mfrac><mo>=</mo><msup><mi>σ</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mrow><mo fence="true">[</mo><msub><mi>w</mi><mn>3</mn></msub><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow></mfrac><mo>+</mo><msub><mi>w</mi><mn>4</mn></msub><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow></mfrac><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z}=\frac{\partial a}{\partial z} \frac{\partial l}{\partial a}=\sigma^{\prime}(z)\left[w_{3} \frac{\partial l}{\partial z^{\prime}}+w_{4} \frac{\partial l}{\partial z^{\prime \prime}}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6778919999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6778919999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/backward-pass.png" alt="img"></p><p>case 1: Output Layer<br>假设蓝色的这个neuron已经是hidden layer的最后一层了, 也就是说连接在 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">z^{\prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow><annotation encoding="application/x-tex">z^{\prime \prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 后的这两个红色的neuron已经 是output layer, 它的output就已经是整个network的output了, 这个时候计算就比较简单</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z^{\prime}}=\frac{\partial y_{1}}{\partial z^{\prime}} \frac{\partial l}{\partial y_{1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6778919999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25188em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6778919999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial y_{1}}{\partial z^{\prime}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.277216em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 就是output layer的<u>activation function (softmax) 对 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">z^{\prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 的偏微分</u><br>而 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial y_{1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3612159999999998em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 就是<u>loss function对 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">y_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的偏微分</u>, 它取决于你的loss function是怎么定义的, 也就是你的output和target之间是怎么 evaluate的, 你可以用cross entropy, 也可以用mean square error, 用不同的定义, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial y_{1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3612159999999998em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 的值就不一样<br>这个时候, 你就已经可以把l对 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">w_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">w_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的偏微分 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mn>1</mn></msub></mrow></mfrac><mo separator="true">,</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>u</mi><mn>2</mn></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial w_{1}}, \frac{\partial l}{\partial u_{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.325208em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 算出来了</p><p>另一个观点——反向计算的一句</p><p>这个式子还是蛮简单的, 然后, 我们可以从另外一个观点来看待这个式子<br>你可以想象说, 现在有另外一个neuron, 它不在我们原来的network里面, 在下图中它被画成三角形, 这个 neuron的input就是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z^{\prime}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mi>n</mi></msup></mrow></mfrac><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z^{n}},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5935428571428571em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span></span> 那input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z^{\prime}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 就乘上 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mn>3</mn></msub><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">w_{3},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z^{\prime \prime}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 就乘上 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mn>4</mn></msub><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">w_{4},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 它们两个相加再乘上activation<br>function的微分 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>σ</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\sigma^{\prime}(z),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> 就可以得到output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/backward-neuron.png" alt="img"></p><p>这张图描述了一个新的“neuron&quot;，它的含义跟图下方的表达式是一模一样的, 作这张图的目的是为了方便理解<br>值得注意的是, 这里的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>σ</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma^{\prime}(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span> 是一个constant常数, 它并不是一个function, 因为z其实在计算forward pass的时候 就已经被决定好了, z是一个固定的值<br>所以这个neuron其实跟我们之前看到的sigmoid function是不一样的, 它并不是把input通过一个non-linear进行 转换, 而是直接把input乘上一个constant <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>σ</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\sigma^{\prime}(z),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> 就得到了output, 因此这个neuron被画成三角形, 代表它跟我 们之前看到的圆形的neuron的运作方式是不一样的, 它是直接乘上一个constant(这里的三角形有点像电路里的运 算放大器op-amp, 它也是乘上一个constant)</p><p>知道 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">z^{\prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow><annotation encoding="application/x-tex">z^{\prime \prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 就可以知道 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">z,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mpunct">,</span></span></span></span> 知道 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">z_{a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">z_{b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 就可以知道 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><mo>…</mo><mo>…</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">z^{\prime}, \ldots \ldots,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span></span></span></span> 现在这个过程就可以反复进行下去, 直到找到output layer, 我们可以算出确切的值, 然后再一层一层反推回去<br>你可能会想说, 这个方法听起来挺让人崩溃的, 每次要算一个微分的值, 都要一路往后走, 一直走到network的 output, 如果写成表达式的话, 一层一层往后展开, 感觉会是一个很可怕的式子, 但是! 实际上并不是这个样子 做的<br>你只要换一个方向, 从output layer的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 开始算, 你就会发现它的运算量跟原来的network的Feedforward path 其实是一样的</p><p>▲注: 如果是正向做Backward pass的话, 实际上每次计算一个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span></span> 就需要把该neuron后面所有的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 都给计算一 遍, 会造成很多不必要的里复运算, 如果写成code的形式, 就<u>相当于调用了很多次里复的函数;</u> 而如果是反向做 Backward pass，实际上就是把这些调用函数的过程都变成调用“值&quot;的过程, 因此可以直接计算出结果, 而不需要 占用过多的堆栈空间</p><h3 id="summary"><a class="markdownIt-Anchor" href="#summary"></a> Summary</h3><p>最后，我们来总结一下Backpropagation是怎么做的</p><p><strong>Forward pass</strong>，每个neuron的activation function的output，就是它所连接的weight的</p><p><strong>Backward pass</strong>，建一个与原来方向相反的neural network，它的三角形neuron的output就是</p><p>把通过forward pass得到的和通过backward pass得到的乘起来就可以得到对的偏微分</p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/bp-summary.png" alt="img"></p><h2 id="11-p17convolutional-neural-network"><a class="markdownIt-Anchor" href="#11-p17convolutional-neural-network"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=17" target="_blank" rel="noopener">11. P17Convolutional Neural Network</a></h2><p><a href="https://sakura-gh.github.io/ML-notes/ML-notes-html/11_Convolutional-Neural-Network-part1.html" target="_blank" rel="noopener">11_Convolutional Neural Network part1</a><br><a href="https://sakura-gh.github.io/ML-notes/ML-notes-html/12_Convolutional-Neural-Network-part2.html" target="_blank" rel="noopener">12_Convolutional Neural Network part2</a></p><h2 id="12-p14tips-for-training-dnn"><a class="markdownIt-Anchor" href="#12-p14tips-for-training-dnn"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=14" target="_blank" rel="noopener">12. P14Tips for Training DNN</a></h2><h1 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h1><h2 id="机器学习系列10-手写数字识别keras20"><a class="markdownIt-Anchor" href="#机器学习系列10-手写数字识别keras20"></a> <a href="https://blog.csdn.net/weixin_44406200/article/details/104328947" target="_blank" rel="noopener">机器学习系列10-手写数字识别(Keras2.0)</a> ——<a href="https://sakura-gh.github.io/ML-notes/ML-notes-html/10_Keras.html" target="_blank" rel="noopener">10_Keras</a></h2><h2 id="机器学习系列6-分类问题概率生成模型"><a class="markdownIt-Anchor" href="#机器学习系列6-分类问题概率生成模型"></a> <a href="https://blog.csdn.net/weixin_44406200/article/details/104272160" target="_blank" rel="noopener">机器学习系列6-分类问题(概率生成模型)</a></h2><h2 id="p16pytorch-tutorial"><a class="markdownIt-Anchor" href="#p16pytorch-tutorial"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=16" target="_blank" rel="noopener">P16PyTorch Tutorial</a></h2><h2 id="p8optimization-for-deep-learning-1_2-选学"><a class="markdownIt-Anchor" href="#p8optimization-for-deep-learning-1_2-选学"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=8" target="_blank" rel="noopener">P8Optimization for Deep Learning (1_2) (选学)</a></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;p3regression-case-study&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#p3regression-case-study&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.bilibili.com/video/B
      
    
    </summary>
    
    
      <category term="机器学习" scheme="https://nymrli.top/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>JupyterHub搭建</title>
    <link href="https://nymrli.top/2020/11/15/JupyterHub%E6%90%AD%E5%BB%BA/"/>
    <id>https://nymrli.top/2020/11/15/JupyterHub搭建/</id>
    <published>2020-11-15T14:08:52.000Z</published>
    <updated>2020-11-20T05:59:09.392Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>之前搭建的JupyterLab逐渐被使用起来了, 单用户的模式还是不太方便, 因此准备用JupyterHub来做下用户隔离</p></blockquote><h2 id="1-安装nodejs和npm"><a class="markdownIt-Anchor" href="#1-安装nodejs和npm"></a> 1. 安装nodejs和npm</h2><p>按照<a href="https://gitee.com/mirrors/JupyterHub#installation" target="_blank" rel="noopener">JupyterLab官方教程</a>, 先是安装最新的nodejs和npm, 但是由于16.04的apt源安装的nodejs版本比较久, 因此在后面的安装中会有坑, 这边根据网上的教程手动安装最新的nodejs</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install -y nodejs</span></span><br></pre></td></tr></table></figure><p>安装成功后输入<code>node --version</code>看到有版本返回输出证明安装成功, 同时这种方式会同时安装npm, 同样<code>npm --version</code>测试npm安装成功</p><h2 id="2-安装"><a class="markdownIt-Anchor" href="#2-安装"></a> 2. 安装</h2><h3 id="21-安装虚拟环境"><a class="markdownIt-Anchor" href="#21-安装虚拟环境"></a> 2.1 安装虚拟环境</h3><p>由于我个人喜欢自己配置虚拟环境, 因此, 我先安装虚拟环境。但阿里云上的virtualenv太久不用，版本太老了， 出现了<code>使用virtualenv创建虚拟环境报错 error code 2</code>现象，因此通过</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install setuptools #安装setuptools</span><br><span class="line">sudo pip install --upgrade setuptools #更新setuptools到最新版本</span><br><span class="line">sudo pip install virtualenv #安装virtualenv</span><br><span class="line">sudo pip install --upgrade virtualenv   #更新virtualenv到最新版本</span><br></pre></td></tr></table></figure><p>来更新setuptools和virtualenv到最新的版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> virtualenv mlEnv</span></span><br></pre></td></tr></table></figure><h3 id="22-安装jupyterhub"><a class="markdownIt-Anchor" href="#22-安装jupyterhub"></a> 2.2 安装jupyterhub</h3><p>根据官方教程，有两种方式安装：pip 安装 ; conda安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> pip安装</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> python3 -m pip install jupyterhub</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo npm install -g configurable-http-proxy</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> python3 -m pip install notebook  <span class="comment"># needed if running the notebook servers locally</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> conda安装</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> conda install -c conda-forge jupyterhub  <span class="comment"># installs jupyterhub and proxy</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> conda install notebook  <span class="comment"># needed if running the notebook servers locally</span></span></span><br></pre></td></tr></table></figure><h4 id="221-问题1_虚拟环境"><a class="markdownIt-Anchor" href="#221-问题1_虚拟环境"></a> 2.2.1 问题1_虚拟环境</h4><p>但在安装过程中出现了以下报错</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ERROR: Could not install packages due to an EnvironmentError: [Errno 13] Permission denied: '/home/mrli/MLproject/mlEnv/lib/python3.5/site-packages/idna'</span><br><span class="line">Consider using the `--user` option or check the permissions.</span><br></pre></td></tr></table></figure><p>通过<code>which pip</code>可以看到我使用的pip正是虚拟环境下的pip, 同时提示中的site-packages文件夹也是存在的。便按照提示加上了–user， 但是出现了如下新报错<code>ERROR: Can not perform a '--user' install. User site-packages are not visible in this virtualenv.</code> (注意, 不用加sudo来保证权限, 应为加上sudo pip吧库安装到的路径是在root下的)</p><p>经过查询发现, 是因为整个虚拟环境下的权限不够, 因此需要加权<code>sudo chmod 777 -R mlEnv</code>=&gt;遂问题解决</p><p><a href="https://www.cnblogs.com/duaimili/p/10279067.html" target="_blank" rel="noopener">永久更改pip源和创建虚拟环境</a></p><h4 id="222-问题2_npm安装报错"><a class="markdownIt-Anchor" href="#222-问题2_npm安装报错"></a> 2.2.2 问题2_npm安装报错</h4><p>执行<code>sudo npm install -g configurable-http-proxy</code>时有如下报错<code>Error: EACCES: permission denied, access '/usr/lib/node_modules'</code>已经加上了sudo也无济于事。</p><p>==&gt; 通过node的npm无法安装（无法过墙），也可以用阿里的自己的cnpm进行安装<code>sudo npm install -g cnpm --registry=https://registry.npm.taobao.org</code>,然后再输入<code>sudo cnpm install -g configurable-http-proxy</code>–&gt;解决!</p><h2 id="3-测试安装成功"><a class="markdownIt-Anchor" href="#3-测试安装成功"></a> 3. 测试安装成功</h2><ol><li><code>jupyterhub -h</code>、 <code>configurable-http-proxy -h</code>查看是否有输出,</li><li><code>jupyterhub</code>然后在https://localhost:8000中查看</li></ol><h2 id="4-配置"><a class="markdownIt-Anchor" href="#4-配置"></a> 4. 配置</h2><h4 id="生成配置文件"><a class="markdownIt-Anchor" href="#生成配置文件"></a> 生成配置文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> jupyterhub --generate-config -f /etc/jupyterhub/jupyterhub_config.py</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> jupyterhub --generate-config <span class="comment"># 会在你的当前目录下生成一个jupyterhub_config.py文件, 我们在其中配置我们的网络和用户管理</span></span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">c.JupyterHub.ip = <span class="string">'192.168.2.4'</span><span class="comment"># 本机局域网的ip，记得是局域网</span></span><br><span class="line">c.JupyterHub.port = <span class="number">12443</span><span class="comment"># 指定服务端口</span></span><br><span class="line">c.Spawner.ip = <span class="string">'127.0.0.1'</span></span><br><span class="line">c.PAMAuthenticator.encoding = <span class="string">'utf8'</span></span><br><span class="line">c.Authenticator.whitelist = &#123;<span class="string">'root'</span>,<span class="string">'admin'</span>, <span class="string">'tv'</span>, <span class="string">'aiker'</span>&#125;  <span class="comment">#默认不能使用root登录，需要修改配置. 这里面需要将linux的用户名添加进入，这样该用户就可以通过浏览器利用linux的用户名和密码登录自己的账户，jupyterhub采用和linux系统相同的认证方式，所以我们不需要另外建立用户，只需要登录linux的用户和密码即可 ==&gt; 用户白名单的用户会自动添加，但无密. 需要修改密需要创建linux用户才能登录；</span></span><br><span class="line">c.LocalAuthenticator.create_system_users = <span class="keyword">True</span></span><br><span class="line">c.Authenticator.admin_users = &#123;<span class="string">'root'</span>, <span class="string">'admin'</span>&#125;<span class="comment"># 指定admin用户</span></span><br><span class="line">c.JupyterHub.authenticator_class = <span class="string">'dummyauthenticator.DummyAuthenticator'</span></span><br><span class="line">c.JupyterHub.statsd_prefix = <span class="string">'jupyterhub</span></span><br><span class="line"><span class="string">c.Spawner.notebook_dir = '</span>/volume1/study/<span class="string">' #jupyterhub自定义目录</span></span><br><span class="line"><span class="string">c.JupyterHub.statsd_prefix = '</span>jupyterhu<span class="string">b'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">c.JupyterHub.ssl_cert = '</span>/usr/syno/etc/certificate/_archive/xYa1nX/fullchain.pem<span class="string">'</span></span><br><span class="line"><span class="string">c.JupyterHub.ssl_key = '</span>/usr/syno/etc/certificate/_archive/xYa1nX/privkey.pem<span class="string">'</span></span><br></pre></td></tr></table></figure><p>默认情况下，要真正的实现分配用户账号，需要满足以下两点要求：</p><ol><li>c.Authenticator.whitelist 指定了用户名</li><li>在系统中创建了该用户（adduser / useradd）</li></ol><p>tips: 默认情况下，密码为系统中该用户对应的密码</p><p>用户管理<br>用户白名单的用户会自动添加，但无密码，需要修改密码才能登录；<br>新添加用户：useradd crxis -d /home/user/crxis -m<br>用户添加组：adduser crxis group1<br>修改用户密码：echo crxis:crxis|chpasswd</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">c.JupyterHub.admin_users = &#123;&apos;root&apos;, &apos;admin&apos;&#125;</span><br><span class="line">c.JupyterHub.bind_url = &apos;http://127.0.0.1:22223&apos;</span><br><span class="line">c.JupyterHub.hub_bind_url = &apos;http://127.0.0.1:22224&apos;</span><br><span class="line">c.JupyterHub.hub_port = 22225</span><br><span class="line">c.Authenticator.whitelist = &#123;&apos;root&apos;, &apos;mrli&apos;&#125;</span><br><span class="line">c.JupyterHub.hub_port = 22226</span><br></pre></td></tr></table></figure><h2 id="5-运行"><a class="markdownIt-Anchor" href="#5-运行"></a> 5. 运行</h2><p>在存放<code>jupyterhub_config.py</code>的文件夹下执行<code>jupyterhub</code>启动服务</p><p>配置查看: <a href="https://blog.51cto.com/m51cto/2370679%E2%80%94%E2%80%94GPU%E5%9D%91" target="_blank" rel="noopener">https://blog.51cto.com/m51cto/2370679——GPU坑</a>, 配置github登入</p><h2 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录:</h2><h3 id="修改pip默认源"><a class="markdownIt-Anchor" href="#修改pip默认源"></a> 修改pip默认源:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim ~/.pip/pip.conf <span class="comment"># 如果当前用户没有.pip文件夹, 则创建一个</span></span></span><br></pre></td></tr></table></figure><p>添加下列内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = http://pypi.douban.com/simple</span><br><span class="line">[install]</span><br><span class="line">use-mirrors =true</span><br><span class="line">mirrors =http://pypi.douban.com/simple/</span><br><span class="line">trusted-host =pypi.douban.com</span><br></pre></td></tr></table></figure><h3 id="linux上安装最新版的python"><a class="markdownIt-Anchor" href="#linux上安装最新版的python"></a> Linux上安装最新版的Python</h3><ol><li><p>查看 Python 的版本号：<code>python2 -V</code>, <code>python3 -V</code></p></li><li><p>下载3.x新版本</p><p>可以访问python的官方网站查看最新的python版本以及下载链接：<a href="https://www.python.org/downloads/%EF%BC%8C%E5%B0%86%E9%BC%A0%E6%A0%87%E7%A7%BB%E5%88%B0%E6%83%B3%E8%A6%81%E5%AE%98%E7%BD%91%E4%B8%8A%E6%83%B3%E8%A6%81%E4%B8%8B%E8%BD%BD%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7%E4%B8%8A%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80%EF%BC%8C%E4%BE%8B%E5%A6%82%E6%88%91%E9%9C%80%E8%A6%81%E5%9C%A8Linux%E4%B8%8B%E5%AE%89%E8%A3%85%EF%BC%8C%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E8%BF%99%E4%B8%AA%E9%93%BE%E6%8E%A5%EF%BC%9Ahttps://www.python.org/ftp/python/3.8.5/Python-3.8.5.tgz%EF%BC%88%E5%A6%82%E6%9E%9C%E6%83%B3%E8%A6%81%E4%B8%8B%E8%BD%BD%E5%85%B6%E4%BB%96%E7%89%88%E6%9C%AC%EF%BC%8C%E7%9B%B4%E6%8E%A5%E4%BF%AE%E6%94%B9%E7%89%88%E6%9C%AC%E5%8F%B7%E5%8D%B3%E5%8F%AF%EF%BC%89%E3%80%82%E6%89%BE%E5%88%B0%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80%E5%90%8E%EF%BC%8C%E5%9C%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%BE%93%E5%85%A5%EF%BC%9A" target="_blank" rel="noopener">https://www.python.org/downloads/，将鼠标移到想要官网上想要下载的版本号上就可以看到下载地址，例如我需要在Linux下安装，可以使用这个链接：https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tgz（如果想要下载其他版本，直接修改版本号即可）。找到下载地址后，在命令行输入：</a><code>wget https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tgz</code></p></li><li><p>下载完成后解压缩<code>tar -zxvf Python-3.8.5.tgz</code></p></li><li><p>下载完成后解压缩<code>cd Python-3.8.5/; ./configure</code>,</p></li></ol><p>由于使用3.8出现了virtualenv无法使用的情况, 因此需要对配置文件进行修改: 修改<code>Python-3.8.5/Modules</code>路径的<code>Setup</code>文件: <code>sudo vim Setup</code>:</p><p><img src="https://img-blog.csdnimg.cn/20190916154900762.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzIzODg5MDA5,size_16,color_FFFFFF,t_70" alt=""></p><ol start="5"><li>编译<code>sudo make; sudo make install</code></li></ol><p>但是发现修改后报错缺少xxssl.h的头文件,</p><ul><li><code>wget https://www.openssl.org/source/openssl-1.0.2h.tar.gz</code></li><li><code>tar zxf openssl-1.0.2h.tar.gz; cd openssl-1.0.2h</code></li><li><code>./config shared zlib; make depend</code></li><li><code>sudo make; sudo make install</code></li><li>检测是否安装成功: <code>openssl version -a</code></li></ul><p>▲.再次到python中make install, 报错: subprocess.CalledProcessError: Command ‘(‘lsb_release’, ‘-a’)’ returned non-zero exit status 1.</p><p>解决方法<br>find /usr/bin -name lsb_release<br>sudo rm -rf /usr/bin/lsb_release</p><p>此时再到Python/中make install即可</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;之前搭建的JupyterLab逐渐被使用起来了, 单用户的模式还是不太方便, 因此准备用JupyterHub来做下用户隔离&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-安装nodejs和npm&quot;&gt;&lt;a class=&quot;markdownIt
      
    
    </summary>
    
    
      <category term="环境配置" scheme="https://nymrli.top/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>GithubActions</title>
    <link href="https://nymrli.top/2020/11/12/GithubAction/"/>
    <id>https://nymrli.top/2020/11/12/GithubAction/</id>
    <published>2020-11-12T08:20:54.000Z</published>
    <updated>2020-11-12T09:35:54.644Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/features/actions" target="_blank" rel="noopener">GitHub Actions</a> 是 GitHub 的<a href="http://www.ruanyifeng.com/blog/2015/09/continuous-integration.html" target="_blank" rel="noopener">持续集成服务</a>，于2018年10月<a href="https://github.blog/changelog/2018-10-16-github-actions-limited-beta/" target="_blank" rel="noopener">推出</a>。</p></blockquote><h2 id="github-actions-是什么"><a class="markdownIt-Anchor" href="#github-actions-是什么"></a> GitHub Actions 是什么？</h2><p>大家知道，持续集成由很多操作组成，比如抓取代码、运行测试、登录远程服务器，发布到第三方服务等等。GitHub 把这些操作就称为 actions。</p><p>很多操作在不同项目里面是类似的，完全可以共享。GitHub 注意到了这一点，想出了一个很妙的点子，允许开发者把每个操作写成独立的脚本文件，存放到代码仓库，使得其他开发者可以引用。</p><p>如果你需要某个 action，不必自己写复杂的脚本，直接引用他人写好的 action 即可，整个持续集成过程，就变成了一个 actions 的组合。这就是 GitHub Actions 最特别的地方。</p><p>GitHub 做了一个<a href="https://github.com/marketplace?type=actions" target="_blank" rel="noopener">官方市场</a>，可以搜索到他人提交的 actions。另外，还有一个 <a href="https://github.com/sdras/awesome-actions" target="_blank" rel="noopener">awesome actions</a> 的仓库，也可以找到不少 action。</p><h2 id="基础名词概念"><a class="markdownIt-Anchor" href="#基础名词概念"></a> 基础名词概念</h2><p>GitHub Actions 有一些自己的术语。<br>（1）<strong>workflow</strong> （工作流程）：持续集成一次运行的过程，就是一个 workflow。<br>（2）<strong>job</strong> （任务）：一个 workflow 由一个或多个 jobs 构成，含义是一次持续集成的运行，可以完成多个任务。<br>（3）<strong>step</strong>（步骤）：每个 job 由多个 step 构成，一步步完成。<br>（4）<strong>action</strong> （动作）：每个 step 可以依次执行一个或多个命令（action）。</p><p><a href="http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html" target="_blank" rel="noopener">GitHub Actions阮一峰</a></p><p>具体内容说明:</p><ul><li>name自动构建的名字</li><li>on触发条件<ul><li>watch监视<ul><li>type:started 类型：点击了星标</li></ul></li><li>可以是数组： [push, pull_request]</li></ul></li><li>env环境变量</li><li>jobs任务</li><li>build工作的id</li><li>run-on工作运行的环境平台</li><li>if工作运行的判断</li><li>steps 包含一系列任务步骤<ul><li>name子任务名</li><li>uses 使用官方的一些action库完成一些操作</li><li>run 运行脚本</li><li>id运行id</li></ul></li></ul><h2 id="workflow-文件"><a class="markdownIt-Anchor" href="#workflow-文件"></a> workflow 文件</h2><p>GitHub Actions 的配置文件叫做 workflow 文件，存放在代码仓库的<code>.github/workflows</code>目录。</p><p>workflow 文件采用 <a href="http://www.ruanyifeng.com/blog/2016/07/yaml.html" target="_blank" rel="noopener">YAML 格式</a>，文件名可以任意取，但是后缀名统一为<code>.yml</code>，比如<code>foo.yml</code>。一个库可以有多个 workflow 文件。GitHub 只要发现<code>.github/workflows</code>目录里面有<code>.yml</code>文件，就会自动运行该文件。</p><hr><p>综上, Github actions配合GithubPages会非常方便</p><p><strong>什么是 GitHub Pages?</strong></p><p>打开 GitHub Pages 的首页我们会看到如下图所示：<br>他可以当做你或者你的项目的 Websites，那么我们可以知道 GitHub Pages 有两种最基本的用法：</p><ol><li>作为你自己（或者组织）的网站（访问地址示例：<a href="https://link.zhihu.com/?target=http%3A//username.github.io/" target="_blank" rel="noopener">http://username.github.io</a>）</li><li>作为你某一个项目的网站（访问地址示例：<a href="https://link.zhihu.com/?target=http%3A//username.github.io/projectname" target="_blank" rel="noopener">http://username.github.io/projectname</a>）</li><li>由于性能不太好, 因此最主要的用途是作为部署静态网页, 给demo展示: 做 demo 展示不同于做项目开发, 我们需要的是快速轻便的开发和部署, 而不是完备的一整套开发流程.</li></ol><p>Github pages 的好处</p><ol><li><strong>使用零成本:</strong> github pages 集成在 github 中, 直接和代码管理绑定在一起, 随着代码更新自动重新部署, 使用非常方便.</li><li><strong>免费:</strong> 免费提供 <a href="http://username.github.io" target="_blank" rel="noopener">username.github.io</a> 的域名, 免费的静态网站服务器.</li><li><strong>无数量限制:</strong> github pages 没有使用的数量限制, 每一个 github repository 都可以部署为一个静态网站.</li></ol><hr><h2 id="workflowdemo"><a class="markdownIt-Anchor" href="#workflowdemo"></a> workflowDemo</h2><h3 id="官方demo"><a class="markdownIt-Anchor" href="#官方demo"></a> 官方demo</h3><p>默认的生成模板: 会在仓库的<code>./github/workflows</code>目录下创建一个<code>.yml</code>的文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This is a basic workflow to help you get started with Actions</span></span><br><span class="line"></span><br><span class="line"><span class="attr">name:</span> <span class="string">CI</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Controls when the action will run. Triggers the workflow on push or pull request</span></span><br><span class="line"><span class="comment"># events but only for the main branch</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line"><span class="attr">  push:</span></span><br><span class="line"><span class="attr">    branches:</span> <span class="string">[</span> <span class="string">main</span> <span class="string">]</span></span><br><span class="line"><span class="attr">  pull_request:</span></span><br><span class="line"><span class="attr">    branches:</span> <span class="string">[</span> <span class="string">main</span> <span class="string">]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A workflow run is made up of one or more jobs that can run sequentially or in parallel</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="comment"># This workflow contains a single job called "build"——任务名</span></span><br><span class="line"><span class="attr">  build:</span></span><br><span class="line">    <span class="comment"># The type of runner that the job will run on</span></span><br><span class="line">    <span class="comment"># To set the operating system for your job, specify the operating system using runs-on: ubuntu-latest, ubuntu-18.04, or ubuntu-16.04、windows-latest or windows-2019、macos-latest or macos-10.15</span></span><br><span class="line"><span class="attr">    runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Steps represent a sequence of tasks that will be executed as part of the job</span></span><br><span class="line"><span class="attr">    steps:</span></span><br><span class="line">      <span class="comment"># Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it</span></span><br><span class="line">      <span class="comment"># 检出， 将代码从代码库中拉下来， 然后复制到本地的虚拟机上</span></span><br><span class="line"><span class="attr">      - uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># Runs a single command using the runners shell</span></span><br><span class="line">      <span class="comment"># 给操作——run, 起个操作名——name</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">Run</span> <span class="string">a</span> <span class="string">one-line</span> <span class="string">script</span></span><br><span class="line"><span class="attr">        run:</span> <span class="string">echo</span> <span class="string">Hello,</span> <span class="string">world!</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># Runs a set of commands using the runners shell</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">Run</span> <span class="string">a</span> <span class="string">multi-line</span> <span class="string">script</span></span><br><span class="line"><span class="attr">        run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          echo Add other actions to build,</span></span><br><span class="line"><span class="string">          echo test, and deploy your project.</span></span><br></pre></td></tr></table></figure><h3 id="bilibilitool的workflow"><a class="markdownIt-Anchor" href="#bilibilitool的workflow"></a> <strong><a href="https://github.com/RayWangQvQ/BiliBiliTool" target="_blank" rel="noopener">BiliBiliTool的workflow</a></strong></h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">bilibili-daily-task</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">  push:</span> <span class="comment"># push触发</span></span><br><span class="line"><span class="attr">    branches:</span> <span class="string">[</span> <span class="string">main</span> <span class="string">]</span></span><br><span class="line"><span class="attr">  workflow_dispatch:</span> <span class="comment"># 手动触发</span></span><br><span class="line"><span class="attr">  schedule:</span> <span class="comment"># 计划任务触发</span></span><br><span class="line"><span class="attr">    - cron:</span> <span class="string">'10 6 * * *'</span> <span class="comment"># cron表达式，Actions时区是UTC时间，所以要往前推8个小时,如上表示每天14点10分</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line"><span class="attr">  run-bilibili-tool:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    steps:</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 检出</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">Checkout</span></span><br><span class="line"><span class="attr">      uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      </span><br><span class="line">    <span class="comment"># 设置服务器时区为东八区 </span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">Set</span> <span class="string">time</span> <span class="string">zone</span></span><br><span class="line"><span class="attr">      run:</span> <span class="string">sudo</span> <span class="string">timedatectl</span> <span class="string">set-timezone</span> <span class="string">'Asia/Shanghai'</span></span><br><span class="line">      </span><br><span class="line">    <span class="comment"># .Net Core 环境</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">Setup</span> <span class="string">.NET</span> <span class="string">Core</span></span><br><span class="line"><span class="attr">      uses:</span> <span class="string">actions/setup-dotnet@v1</span></span><br><span class="line"><span class="attr">      with:</span></span><br><span class="line"><span class="attr">        dotnet-version:</span> <span class="number">3.1</span><span class="number">.301</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 安装依赖</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">Install</span> <span class="string">dependencies</span></span><br><span class="line"><span class="attr">      run:</span> <span class="string">dotnet</span> <span class="string">restore</span></span><br><span class="line">      </span><br><span class="line">    <span class="comment"># 构建应用</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">Build</span></span><br><span class="line"><span class="attr">      run:</span> <span class="string">dotnet</span> <span class="string">build</span> <span class="bullet">--configuration</span> <span class="string">Release</span> <span class="bullet">--no-restore</span></span><br><span class="line">       </span><br><span class="line">    <span class="comment"># 运行</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">Run</span></span><br><span class="line">      <span class="comment"># env是从仓库settings的secrets中取值</span></span><br><span class="line"><span class="attr">      env:</span></span><br><span class="line"><span class="attr">        userId:</span> <span class="string">$&#123;&#123;secrets.USERID&#125;&#125;</span></span><br><span class="line"><span class="attr">        sessData:</span> <span class="string">$&#123;&#123;secrets.SESSDATA&#125;&#125;</span></span><br><span class="line"><span class="attr">        biliJct:</span> <span class="string">$&#123;&#123;secrets.BILIJCT&#125;&#125;</span></span><br><span class="line"><span class="attr">        otherConfigs:</span> <span class="string">$&#123;&#123;secrets.OTHERCONFIGS&#125;&#125;</span></span><br><span class="line"><span class="attr">      run:</span> <span class="string">dotnet</span> <span class="string">run</span> <span class="bullet">-p</span> <span class="string">./src/Ray.BiliBiliTool.Console</span> <span class="bullet">-userId=$&#123;userId&#125;</span> <span class="bullet">-sessData=$&#123;sessData&#125;</span> <span class="bullet">-biliJct=$&#123;biliJct&#125;</span> <span class="bullet">-closeConsoleWhenEnd=1</span> <span class="string">$&#123;otherConfigs&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/features/actions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub Actions&lt;/a&gt; 是 GitHub 的&lt;a href=&quot;http://ww
      
    
    </summary>
    
    
      <category term="小白文" scheme="https://nymrli.top/tags/%E5%B0%8F%E7%99%BD%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>南邮校园网CSDN等部分网站图片无法加载解决方案</title>
    <link href="https://nymrli.top/2020/11/10/%E5%8D%97%E9%82%AE%E6%A0%A1%E5%9B%AD%E7%BD%91CSDN%E7%AD%89%E9%83%A8%E5%88%86%E7%BD%91%E7%AB%99%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://nymrli.top/2020/11/10/南邮校园网CSDN等部分网站图片无法加载解决方案/</id>
    <published>2020-11-10T10:14:56.000Z</published>
    <updated>2020-11-10T10:28:28.033Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题定位"><a class="markdownIt-Anchor" href="#问题定位"></a> 问题定位</h2><p>转自： <a href="https://blog.csdn.net/pamzerbhu/article/details/108549279" target="_blank" rel="noopener">https://blog.csdn.net/pamzerbhu/article/details/108549279</a></p><ul><li>用语言描述如下：<br>打开页面后页面加载正常，但是图片完全没有加载。但是挂全局代理是可以看到图片的。挂代理后如下所示：</li></ul><p><img src="/2020/11/10/南邮校园网CSDN等部分网站图片无法加载解决方案/%E5%9B%BE%E7%89%87.jpg" alt="图片"></p><ul><li>开始定位问题：</li><li>点击审查元素，接着找到我这张图的链接，直接用浏览器打开，报错<code>**NET::ERR_CERT_COMMON_NAME_INVALID**</code></li></ul><p><img src="https://img-blog.csdnimg.cn/20200912143542354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3BhbXplcmJodQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><ul><li>然后点击 高级–继续访问 <a href="http://img-blog.csdn.net" target="_blank" rel="noopener">img-blog.csdn.net</a> (不安全)</li><li>图片成功加载：<br><img src="https://img-blog.csdnimg.cn/20200912144157460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3BhbXplcmJodQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li></ul><p>好了，找到了问题。接下来就是面向搜索引擎的找方法时间。</p><p>经过查询发现是DNS的问题（或者可以打开cmd，然后输入ipconfig/all看DNS地址）：</p><p><img src="/2020/11/10/南邮校园网CSDN等部分网站图片无法加载解决方案/%E6%9F%A5%E7%9C%8B%E7%BD%91%E7%BB%9C%E5%B1%9E%E6%80%A7.jpg" alt="查看网络属性"></p><h2 id="解决方案"><a class="markdownIt-Anchor" href="#解决方案"></a> 解决方案</h2><p>我们尝试修改dns，并刷新。 <a href="https://jingyan.baidu.com/article/b87fe19e4e1faf5218356839.html" target="_blank" rel="noopener">修改教程点我</a>.</p><p><img src="/2020/11/10/南邮校园网CSDN等部分网站图片无法加载解决方案/%E4%BF%AE%E6%94%B9DNS.jpg" alt="修改DNS"></p><p>再次查看确认已经不再是坑爹的南邮DNS了。访问csdn发现一切正常。OK结束。</p><h2 id="err_cert_common_name_invalid"><a class="markdownIt-Anchor" href="#err_cert_common_name_invalid"></a> ERR_CERT_COMMON_NAME_INVALID</h2><p>实际上，可以认为，ERR_CERT_COMMON_NAME_INVALID就是用一个错误的域名访问了某个节点的https资源。导致这个错误的原因，基本是</p><ol><li>dns污染</li><li>host设置错误</li><li>官方更新了dns，但是dns缓存没有被更新，导致错误解析。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题定位&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#问题定位&quot;&gt;&lt;/a&gt; 问题定位&lt;/h2&gt;
&lt;p&gt;转自： &lt;a href=&quot;https://blog.csdn.net/pamzerbhu/article/details/10854
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>scrcpy+AutoJS</title>
    <link href="https://nymrli.top/2020/11/09/scrcpy-AutoJS/"/>
    <id>https://nymrli.top/2020/11/09/scrcpy-AutoJS/</id>
    <published>2020-11-09T03:26:19.000Z</published>
    <updated>2020-11-14T07:17:12.129Z</updated>
    
    <content type="html"><![CDATA[<h2 id="scrcpy简介"><a class="markdownIt-Anchor" href="#scrcpy简介"></a> scrcpy简介</h2><blockquote><p><strong>特点:</strong><br>利用电脑的键盘和鼠标可以控制手机。把 APK 文件拖拽到电脑窗口即可安装应用到手机，把普通文件拖拽到窗口即可复制到手机。<br>不需要在手机上安装任何应用。</p></blockquote><p>简单地来说，scrcpy就是通过adb调试的方式来将手机屏幕投到电脑上，并可以通过电脑控制您的Android设备。它可以通过USB连接，也可以通过Wifi连接（类似于隔空投屏），而且不需要任何root权限，不需要在手机里安装任何程序。scrcpy同时适用于GNU / Linux，Windows和macOS。</p><p>它的一些特性：</p><ul><li>亮度（原生，仅显示设备屏幕）</li><li>性能（30~60fps）</li><li>质量（1920×1080或以上）</li><li>低延迟（35~70ms）</li><li>启动时间短（显示第一张图像约1秒）</li><li>非侵入性（设备上没有安装任何东西）</li></ul><p>此项目为开源项目，Github地址：<a href="https://github.com/Genymobile/scrcpy" target="_blank" rel="noopener">Genymobile/scrcpy: Display and control your Android device</a></p><h3 id="使用scrcpy的要求"><a class="markdownIt-Anchor" href="#使用scrcpy的要求"></a> 使用scrcpy的要求</h3><ol><li>Android设备至少需要API 21（Android 5.0以上版本）;</li><li>确保在您的设备上启用了<a href="https://developer.android.com/studio/command-line/adb.html#Enabling" target="_blank" rel="noopener">adb调试</a>;</li><li>在某些设备上，您还需要启用<a href="https://github.com/Genymobile/scrcpy/issues/70#issuecomment-373286323" target="_blank" rel="noopener">其他选项</a>以使用键盘和鼠标控制它。</li></ol><p>adb调试的开启一般是多次点击手机系统版本，如我用的是MIUI10，开启方法是 “设置”-&gt;“我的设备”-&gt;“全部参数”-&gt;点击7下MIUI版本，开启“开发者选项”。然后在 “设置”-&gt;“更多设置”-&gt;“开发者选项” 中同时开启 <code>USB调试</code> 和 <code>USB调试(安全设置)</code>。</p><h3 id="使用说明"><a class="markdownIt-Anchor" href="#使用说明"></a> 使用说明</h3><blockquote><p>程序使用了Java语言，我们需要在电脑中搭建Java运行环境，参考：<a href="https://blog.csdn.net/sigmarising/article/details/80139287" target="_blank" rel="noopener">Windows10 配置 Java 开发环境</a></p></blockquote><h4 id="使用usb进行连接"><a class="markdownIt-Anchor" href="#使用usb进行连接"></a> 使用USB进行连接</h4><p>此方式推荐使用，相对更加流畅。</p><ol><li>手机通过USB连接到PC上，首次连接会弹出是否信任该电脑，点击始终信任即可。</li><li>运行<code>adb usb</code>查看是否连接成功</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\Github_Run\scrcpy-win64-v1.10&gt;adb usb</span><br><span class="line">restarting in USB mode</span><br></pre></td></tr></table></figure><ol start="3"><li>运行<code>scrcpy</code>即可。</li></ol><h4 id="使用无线连接"><a class="markdownIt-Anchor" href="#使用无线连接"></a> 使用无线连接</h4><blockquote><p>可参考官方文档：<a href="https://www.genymotion.com/blog/open-source-project-scrcpy-now-works-wirelessly/" target="_blank" rel="noopener">Open Source Project - Scrcpy now works wirelessly</a></p></blockquote><p>此连接方式更加方便快捷，若宽带速率高，使用效果更佳，使用方法也非常简单。</p><ol><li>确保PC和手机在同一Wifi中</li><li>手机先通过USB与PC相连</li><li>在PC上运行 adb tcpip 服务端口，如端口为5555</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\Github_Run\scrcpy-win64-v1.10&gt;adb tcpip 5555</span><br><span class="line">restarting in TCP mode port: 5555</span><br></pre></td></tr></table></figure><ol><li>拔下你的设备，断开USB连接</li><li>在PC上运行 adb connect 手机IP:服务端口（手机IP可通过手机的<code>状态信息</code>查看，或者登录路由器查看，一般以192.168开头）</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\Github_Run\scrcpy-win64-v1.10&gt;adb connect 192.168.0.4:5555</span><br><span class="line">connected to 192.168.0.4:5555</span><br></pre></td></tr></table></figure><ol start="3"><li>运行scrcpy，在cmd中输入<code>scrcpy.exe</code>即可</li></ol><p>注: 若要切换回USB模式：<code>adb usb</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 附调节比特率和分辨率</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> scrcpy --bit-rate 2M --max-size 800</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者简写</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> scrcpy -b2M -m800</span></span><br></pre></td></tr></table></figure><h2 id="autojs"><a class="markdownIt-Anchor" href="#autojs"></a> AutoJS</h2><blockquote><p>一个支持无障碍服务的Android平台上的JavaScript IDE，其发展目标是JsBox和Workflow。<br>Auto.js使用<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript" target="_blank" rel="noopener">JavaScript</a>作为脚本语言，目前使用<a href="https://developer.mozilla.org/zh-CN/docs/Mozilla/Projects/Rhino" target="_blank" rel="noopener">Rhino 1.7.7.2</a>作为脚本引擎，支持ES5与部分ES6特性。</p><p>官方教程: <a href="https://hyb1996.github.io/AutoJs-Docs/#/?id=autojs" target="_blank" rel="noopener">https://hyb1996.github.io/AutoJs-Docs/#/?id=autojs</a><br>使用教程视频: <a href="https://space.bilibili.com/21486893/video" target="_blank" rel="noopener"><strong>笔青居</strong></a></p></blockquote><h3 id="如何连接"><a class="markdownIt-Anchor" href="#如何连接"></a> 如何连接?</h3><p><strong>手机安装使用步骤：</strong></p><p>① 开启无障碍服务<br>② 音量上键停止脚本：当脚本处于无法停止的状态时，使用音量上键强制停止脚本。<br>③ 开启悬浮窗：<br>④ 连接手机(如果不习惯在手机上coding, 可以安装作者提供的VsCode插件, 在Vscode上编码: <a href="https://github.com/hyb1996/Auto.js-VSCode-Extension" target="_blank" rel="noopener">Auto.js-VSCodeExt</a>——插件的使用教程也非常简洁易懂， 在此就不重复了。</p><p><img src="/2020/11/09/scrcpy-AutoJS/%E8%BF%9E%E6%8E%A5Autojs.jpg" alt="连接Autojs"></p><p><img src="/2020/11/09/scrcpy-AutoJS/%E5%81%9C%E6%AD%A2%E8%84%9A%E6%9C%AC.jpg" alt="停止脚本"></p><h3 id="微信朋友圈点赞demo"><a class="markdownIt-Anchor" href="#微信朋友圈点赞demo"></a> 微信朋友圈点赞demo</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">comment = desc(<span class="string">"评论"</span>).findOne();</span><br><span class="line">log(comment);</span><br><span class="line">comment.click();</span><br><span class="line">sleep(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 由于"赞"控件的Clickable是false, 所以点击它的父控件</span></span><br><span class="line">praise = text(<span class="string">"赞"</span>).findOne();</span><br><span class="line">praiseParent = praise.parent();</span><br><span class="line">praiseParent.click();</span><br></pre></td></tr></table></figure><h2 id="js知识补充"><a class="markdownIt-Anchor" href="#js知识补充"></a> Js知识补充</h2><p><strong>作用域:</strong></p><blockquote><p>JS只有函数作用域和全局作用域</p></blockquote><ul><li><p>全局作用域: 如果是显性的写在全局的, 则变量的作用域为全局</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&gt; /*</span><br><span class="line">&gt; * 作用域</span><br><span class="line">&gt; *     - 作用域指一个变量的作用的范围</span><br><span class="line">&gt; *     - 在JS中一共有两种作用域：</span><br><span class="line">&gt; *         1.全局作用域</span><br><span class="line">&gt; *             - 直接编写在script标签中的JS代码，都在全局作用域</span><br><span class="line">&gt; *             - 全局作用域在页面打开时创建，在页面关闭时销毁</span><br><span class="line">&gt; *             - 在全局作用域中有一个全局对象window，</span><br><span class="line">&gt; *                 它代表的是一个浏览器的窗口，它由浏览器创建我们可以直接使用</span><br><span class="line">&gt; *             - 在全局作用域中：</span><br><span class="line">&gt; *                 创建的变量都会作为window对象的属性保存</span><br><span class="line">&gt; *                 创建的函数都会作为window对象的方法保存</span><br><span class="line">&gt; * 一切皆对象</span><br><span class="line">&gt; *             - 全局作用域中的变量都是全局变量，</span><br><span class="line">&gt; *                 在页面的任意的部分都可以访问的到</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote></li><li><p>块级作用域: {}为块, {}内即为块级作用域。但是注意<strong>JS没有块级作用域</strong>， 即块里声明的变量, 作用域实际为全局。—&gt;ES6 新增了<code>let</code>命令，用来声明局部变量。它的用法类似于<code>var</code>，但是所声明的变量，只在<code>let</code>命令所在的代码块内有效，而且有暂时性死区的约束。==&gt;ES6用新增的<code>let</code>，来声明块级作用域的变量。(let另一个特性: let变量不能重复声明–var可以, 以最后的为准, 效果跟python声明变量类似)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)&#123;&#125;</span><br><span class="line">log(i);<span class="comment">// 输出为10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)&#123;&#125;</span><br><span class="line">log(i);<span class="comment">// ReferenceError: "i" is not defined. ([remote]test.js#14)ReferenceError: "i" is not defined.</span></span><br></pre></td></tr></table></figure></li><li><p>函数作用域: 在函数内即为函数作用域， 如果不用var表明， 则声明的是全局变量。用var表明是局部变量</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; /*</span><br><span class="line">&gt; * 函数作用域</span><br><span class="line">&gt; *     - 调用函数时创建函数作用域，函数执行完毕以后，函数作用域销毁</span><br><span class="line">&gt; *     - 每调用一次函数就会创建一个新的函数作用域，他们之间是互相独立的</span><br><span class="line">&gt; *     - 在函数作用域中可以访问到全局作用域的变量</span><br><span class="line">&gt; *         在全局作用域中无法访问到函数作用域的变量</span><br><span class="line">&gt; *     - 当在函数作用域操作一个变量时，它会先在自身作用域中寻找，如果有就直接使用</span><br><span class="line">&gt; *         如果没有则向上一级作用域中寻找，直到找到全局作用域，</span><br><span class="line">&gt; *         如果全局作用域中依然没有找到，则会报错ReferenceError</span><br><span class="line">&gt; *     - 在函数中要访问全局变量可以使用window对象</span><br><span class="line">&gt; */</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    a = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> b = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test();</span><br><span class="line">log(a);<span class="comment">// 输出1</span></span><br><span class="line">log(b);<span class="comment">// ReferenceError: "b" is not defined. ([remote]test.js#19)ReferenceError: "b" is not defined.</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>数组</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]<span class="comment">// 第一种声明数组的方式</span></span><br><span class="line">a.push(<span class="number">4</span>)<span class="comment">// 往数组最后添加元素</span></span><br><span class="line">log(a);</span><br><span class="line">log(a.indexOf(<span class="number">2</span>));<span class="comment">// 找出某元素在数组中的索引</span></span><br><span class="line">a.pop();<span class="comment">// 弹出最后一个元素</span></span><br><span class="line">log(a);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">b = <span class="built_in">Array</span>();<span class="comment">// 第二种声明数组的方式</span></span><br><span class="line">log(b);</span><br></pre></td></tr></table></figure><p><strong>数据类型:</strong></p><ul><li>string、number、boolean、nullundefined</li><li>Object：Function、Array、Date</li></ul><p>可以使用typeof来查看对象的类型</p><p><strong>变量函数提前声明</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">* 变量的声明提前</span><br><span class="line">*     - 使用var关键字声明的变量，会在所有的代码执行之前被声明（但是不会赋值），</span><br><span class="line">*         但是如果声明变量时不使用var关键字，则变量不会被声明提前</span><br><span class="line">*</span><br><span class="line">* 函数的声明提前</span><br><span class="line">*     - 使用函数声明形式创建的函数 function 函数()&#123;&#125;</span><br><span class="line">*         它会在所有的代码执行之前就被创建，所以我们可以在函数声明前来调用函数</span><br><span class="line">*        使用函数表达式创建的函数，不会被声明提前，所以不能在声明前调用</span><br><span class="line">*/</span><br><span class="line">/*console.log(&quot;a = &quot;+a);</span><br><span class="line">情况1：使用 var a = 123; a是undefined，声明变量在此句之后，但var a 会使变量提前声明，</span><br><span class="line">情况2： 使用  a = 123;  a未找到，会报错，因为a未提前声明</span><br><span class="line">a = 123； 等价于  window.a = 123;</span><br><span class="line">var a = 123;*/   到了此句才赋值，等价于在所有代码之前 声明a  var a;  执行到此句再赋值 a=123;</span><br><span class="line"></span><br><span class="line">//fun();</span><br><span class="line">//函数声明，会被提前创建</span><br><span class="line">function fun()&#123;</span><br><span class="line">console.log(&quot;我是一个fun函数&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//函数表达式，不会被提前创建，此句只是提前声明了fun2，不知道是不是函数，可能是变量， undefined而在此次才开始赋值一个函数表达式</span><br><span class="line">var fun2 = function()&#123;</span><br><span class="line">console.log(&quot;我是fun2函数&quot;);</span><br><span class="line">&#125;;</span><br><span class="line">fun2();</span><br></pre></td></tr></table></figure><p><strong>Andriod开发知识：</strong></p><ul><li>packageName： 应用包名</li><li>applicationName: 应用名</li><li>currenetActivity: 当前页面</li></ul><hr><p>Js是单线程的, 在任务调度上，同步任务优先级最高， 微任务其次(new Promise)， 宏任务最后(setInterval, setTimeOut): <a href="https://www.bilibili.com/video/BV1NJ411W7wh?p=336" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1NJ411W7wh?p=336</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>( <span class="function">(<span class="params">resolve, reject</span>) =&gt;</span>&#123;</span><br><span class="line">    resolve();<span class="comment">// 调用resolve表示成功, 调用reject表示失败</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"yes"</span>)<span class="comment">// 第一个大括号里的都是同步任务, 优先级很高</span></span><br><span class="line">&#125;).then(<span class="function"><span class="params">value</span> =&gt;</span>&#123;<span class="comment">// 成功执行这个. 这个是微任务</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"成功"</span>)</span><br><span class="line">&#125;, reason =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"失败"</span>)<span class="comment">// 失败执行这个. 这个是微任务</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 输出结果: yes =&gt; 成功</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;scrcpy简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#scrcpy简介&quot;&gt;&lt;/a&gt; scrcpy简介&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;特点:&lt;/strong&gt;&lt;br&gt;
利用电脑的键盘和鼠标可以控制手机
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>粒子滤波Matlab代码解读</title>
    <link href="https://nymrli.top/2020/10/27/%E7%B2%92%E5%AD%90%E6%BB%A4%E6%B3%A2Matlab%E4%BB%A3%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    <id>https://nymrli.top/2020/10/27/粒子滤波Matlab代码解读/</id>
    <published>2020-10-27T09:39:23.000Z</published>
    <updated>2020-10-31T02:12:39.559Z</updated>
    
    <content type="html"><![CDATA[<h2 id="粒子滤波概念"><a class="markdownIt-Anchor" href="#粒子滤波概念"></a> 粒子滤波概念</h2><p><a href="https://blog.csdn.net/KYJL888/article/details/105360005/" target="_blank" rel="noopener">理解粒子滤波(particle filter)</a></p><p><a href="http://blog.sina.com.cn/s/blog_400d94220101bkc1.html" target="_blank" rel="noopener">粒子滤波的Matlab仿真算法实现</a></p><h3 id="11-机器人定位问题"><a class="markdownIt-Anchor" href="#11-机器人定位问题"></a> 1.1 机器人定位问题</h3><p>关于机器人定位，有三大问题，它们分别是：</p><p>(1)“全局定位”：指初始位置未知，机器人靠自身运动确定自己在地图中的位姿。</p><p>(2)“位姿跟踪”：指已知自身位姿或者已经通过“全局定位”得到了一个较好的位姿估计，在后续运动时补偿精度较差的运动控制误差；</p><p>(3)“绑架劫持”：指机器人在已知自身位姿的情况下，得到了一个错误的位姿信息或者外界将其放到另外一个位姿，而里程计信息给出了错误的信息甚至没有给出控制信息。</p><h3 id="12-粒子滤波步骤可结合2中例题"><a class="markdownIt-Anchor" href="#12-粒子滤波步骤可结合2中例题"></a> 1.2 粒子滤波步骤(可结合2中例题)</h3><p>(1)初始状态：用大量粒子模拟运动状态，使粒子在空间内均匀分布；</p><p>(2)预测阶段：根据状态转移方程，将每一个粒子带入，得到一个预测粒子；</p><p>(3)校正阶段：对预测粒子进行评价（计算权重），越接近于真实状态的粒子，其权重越大；</p><p>(4)重采样：根据粒子权重对粒子进行筛选，筛选过程中，既要大量保留权重大的粒子，又要有一小部分权重小的粒子；</p><p>(5)滤波：将重采样后的粒子带入状态转移方程得到新的预测粒子，即步骤(2)。</p><h2 id="代码分析"><a class="markdownIt-Anchor" href="#代码分析"></a> 代码分析</h2><blockquote><p>虽然选修课选修了Matlab， 但是自己Matlab工程代码到底写了太少， 特别是涉及维度转换以及数学相关的玩的都不是很好， 因此这次看这份代码学到了很多基础入门的写法， 记录一下：</p></blockquote><ul><li>变量关系：<ul><li>X为对象的真实位置， Z是观测到对象的观测位置（在真实的坐标上加上了噪声），P是粒子群，Pcenter是所有粒子的几何中心</li></ul></li><li>变量维度的确定： 行为一维，列为二维。其中X(1, :)表示X坐标， X(2, :)表示Y坐标。其中列的T表示多少测量数量，测量时间。</li><li>err大小也是(2, T)， 但是(第一行为粒子与真实路径误差  第二行为测量与真实路径误差)</li><li>权重更新方式： 权重 (权重与距离的关系 为 均值是0,方差是sqrt®的高斯分布曲线)</li><li>代码组成部分：<ol><li>参数设置</li><li>初始化粒子群</li><li>开始运动</li><li>绘制轨迹</li><li>绘制误差图</li></ol></li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%粒子滤波(定位运动轨迹)</span></span><br><span class="line"><span class="comment">%在二维空间,假设运动物体的一组(非线性)运动位置、速度、加速度数据,用粒子滤波方法进行处理</span></span><br><span class="line">clc,clear,close all</span><br><span class="line"></span><br><span class="line"><span class="comment">%% 参数设置</span></span><br><span class="line">N = <span class="number">200</span>; <span class="comment">%粒子总数</span></span><br><span class="line">Q = <span class="number">5</span>; <span class="comment">%过程噪声(控制误差)  状态转移方程中使用</span></span><br><span class="line">R = <span class="number">5</span>; <span class="comment">%测量噪声  由真实位置叠加测量噪声得到测量位置</span></span><br><span class="line">T = <span class="number">10</span>; <span class="comment">%测量时间(总步数)</span></span><br><span class="line">theta = <span class="built_in">pi</span>/T; <span class="comment">%旋转角度</span></span><br><span class="line">distance = <span class="number">80</span>/T; <span class="comment">%每次走的距离(步长)</span></span><br><span class="line">WorldSize = <span class="number">100</span>; <span class="comment">%世界大小</span></span><br><span class="line"><span class="comment">% 设定变量维度</span></span><br><span class="line">X = <span class="built_in">zeros</span>(<span class="number">2</span>, T); <span class="comment">%存储系统状态(每列存储二维位置坐标(x,y),共T个位置)</span></span><br><span class="line">Z = <span class="built_in">zeros</span>(<span class="number">2</span>, T); <span class="comment">%存储系统的观测状态(每列存储二维位置坐标(x,y),共T次测量)</span></span><br><span class="line">P = <span class="built_in">zeros</span>(<span class="number">2</span>, N); <span class="comment">%建立粒子群(每列存储当前粒子的二维位置坐标,共N个粒子)</span></span><br><span class="line">PCenter = <span class="built_in">zeros</span>(<span class="number">2</span>, T); <span class="comment">%所有粒子的中心位置</span></span><br><span class="line">w = <span class="built_in">zeros</span>(N, <span class="number">1</span>); <span class="comment">%每个粒子的权重</span></span><br><span class="line">err = <span class="built_in">zeros</span>(<span class="number">2</span>,T); <span class="comment">%误差(第一行为粒子与真实路径误差  第二行为测量与真实路径误差)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">X(:, <span class="number">1</span>) = [<span class="number">50</span>; <span class="number">20</span>]; <span class="comment">%初始系统状态 即初始位置在坐标(50,20)</span></span><br><span class="line">Z(:, <span class="number">1</span>) = X(:,<span class="number">1</span>) + wgn(<span class="number">2</span>,<span class="number">1</span>,<span class="number">10</span>*<span class="built_in">log10</span>(R)); <span class="comment">%初始系统的观测状态(为真实位姿叠加高斯噪声)</span></span><br><span class="line">                                         <span class="comment">%y = wgn(m,n,p) 产生一个m行n列的高斯白噪声的矩阵，p以dBW为单位指定输出噪声的强度</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%% 初始化粒子群</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : N</span><br><span class="line">    P(:, <span class="built_in">i</span>) = [WorldSize*rand; WorldSize*rand];  <span class="comment">%随机产生第i个粒子的坐标(rand为产生[0,1]之间均匀分布)</span></span><br><span class="line">    dist = norm(P(:, <span class="built_in">i</span>)-Z(:, <span class="number">1</span>)); <span class="comment">%与测量位置相差的距离</span></span><br><span class="line">    <span class="comment">%求权重 (权重与距离的关系 为 均值是0,方差是sqrt(R)的高斯分布曲线)  </span></span><br><span class="line">    <span class="comment">%   因为均值为0且距离大于0 因此权重随着距离增加沿高斯曲线右侧递减</span></span><br><span class="line">    w(<span class="built_in">i</span>) = (<span class="number">1</span> / <span class="built_in">sqrt</span>(R) / <span class="built_in">sqrt</span>(<span class="number">2</span> * <span class="built_in">pi</span>)) * <span class="built_in">exp</span>(-(dist)^<span class="number">2</span> / <span class="number">2</span> / R); </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">PCenter(:, <span class="number">1</span>) = sum(P, <span class="number">2</span>) / N;<span class="comment">%t=1时刻(初始时刻)所有粒子的几何中心位置</span></span><br><span class="line"><span class="comment">% 初始状态(t=1)画图</span></span><br><span class="line">err(<span class="number">1</span>,<span class="number">1</span>) = norm(X(:, <span class="number">1</span>) - PCenter(:, <span class="number">1</span>));<span class="comment">%粒子群几何中心与系统真实状态的误差</span></span><br><span class="line">err(<span class="number">2</span>,<span class="number">1</span>) = wgn(<span class="number">1</span>, <span class="number">1</span>, <span class="number">10</span>*<span class="built_in">log10</span>(R));</span><br><span class="line">figure(<span class="number">1</span>);</span><br><span class="line">hold on</span><br><span class="line">set(<span class="number">0</span>,<span class="string">'defaultfigurecolor'</span>,<span class="string">'w'</span>)</span><br><span class="line">plot(X(<span class="number">1</span>, <span class="number">1</span>), X(<span class="number">2</span>, <span class="number">1</span>), <span class="string">'r.'</span>, <span class="string">'markersize'</span>,<span class="number">30</span>) <span class="comment">%真实的初始状态位置(红点表示)</span></span><br><span class="line"><span class="comment">%grid on</span></span><br><span class="line">axis([<span class="number">0</span> <span class="number">100</span> <span class="number">0</span> <span class="number">100</span>]);</span><br><span class="line">set(gca,<span class="string">'XTick'</span>,<span class="number">0</span>:<span class="number">10</span>:<span class="number">100</span>) <span class="comment">%改变x轴坐标间隔显示 这里间隔为10</span></span><br><span class="line">set(gca,<span class="string">'YTick'</span>,<span class="number">0</span>:<span class="number">10</span>:<span class="number">100</span>) <span class="comment">%改变y轴坐标间隔显示 这里间隔为10</span></span><br><span class="line">plot(P(<span class="number">1</span>, :), P(<span class="number">2</span>, :), <span class="string">'k.'</span>, <span class="string">'markersize'</span>,<span class="number">5</span>); <span class="comment">%各个粒子位置(N个黑点)</span></span><br><span class="line">plot(PCenter(<span class="number">1</span>, <span class="number">1</span>), PCenter(<span class="number">2</span>, <span class="number">1</span>), <span class="string">'b.'</span>, <span class="string">'markersize'</span>,<span class="number">25</span>); <span class="comment">%所有粒子的中心位置(蓝点表示)</span></span><br><span class="line">legend(<span class="string">'真实位置'</span>, <span class="string">'粒子群'</span>, <span class="string">'粒子群的几何中心'</span>);</span><br><span class="line">title(<span class="string">'初始状态'</span>);</span><br><span class="line">hold off</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%% 开始运动</span></span><br><span class="line"><span class="keyword">for</span> k = <span class="number">2</span> : T <span class="comment">%从t=2到T</span></span><br><span class="line">    <span class="comment">%模拟一个弧线运动的状态</span></span><br><span class="line">    X(:, k) = X(:, k<span class="number">-1</span>) + distance * [(-cos(k * theta)); sin(k * theta)] + wgn(<span class="number">2</span>, <span class="number">1</span>, <span class="number">10</span>*<span class="built_in">log10</span>(Q)); <span class="comment">%状态方程</span></span><br><span class="line">    Z(:, k) = X(:, k) + wgn(<span class="number">2</span>, <span class="number">1</span>, <span class="number">10</span>*<span class="built_in">log10</span>(R)); <span class="comment">%观测方程(状态上叠加测量的高斯噪声) </span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">%粒子滤波</span></span><br><span class="line">    <span class="comment">% 1.预测</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : N</span><br><span class="line">        P(:, <span class="built_in">i</span>) = P(:, <span class="built_in">i</span>) + distance * [-cos(k * theta); sin(k * theta)] + wgn(<span class="number">2</span>, <span class="number">1</span>, <span class="number">10</span>*<span class="built_in">log10</span>(Q));<span class="comment">%粒子群带入状态方程</span></span><br><span class="line">        dist = norm(P(:, <span class="built_in">i</span>)-Z(:, k)); <span class="comment">%粒子群中各粒子 与 测量位置 的距离</span></span><br><span class="line">        w(<span class="built_in">i</span>) = (<span class="number">1</span> / <span class="built_in">sqrt</span>(R) / <span class="built_in">sqrt</span>(<span class="number">2</span> * <span class="built_in">pi</span>)) * <span class="built_in">exp</span>(-(dist)^<span class="number">2</span> / <span class="number">2</span> / R); <span class="comment">%求权重(距离近权重大)</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">% 2.归一化权重</span></span><br><span class="line">    wsum = sum(w);</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : N</span><br><span class="line">        w(<span class="built_in">i</span>) = w(<span class="built_in">i</span>) / wsum;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">% 3.重采样（更新）——可以理解为转转盘</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : N</span><br><span class="line">        wmax = <span class="number">2</span> * max(w) * <span class="built_in">rand</span>; <span class="comment">%另一种重采样规则</span></span><br><span class="line">        index = randi(N, <span class="number">1</span>);<span class="comment">%生成一个在[1(默认值),N]之间均匀分布的伪随机整数</span></span><br><span class="line">        <span class="keyword">while</span>(wmax &gt; w(index))<span class="comment">% 找到具体落在哪个区间上</span></span><br><span class="line">            wmax = wmax - w(index);</span><br><span class="line">            index = index + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> index &gt; N</span><br><span class="line">                index = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">end</span> </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        Pnext(:, <span class="built_in">i</span>) = P(:, index); <span class="comment">%得到新粒子放入临时集Pnext</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    P=Pnext;<span class="comment">%用临时集Pnext更新粒子集P</span></span><br><span class="line">    PCenter(:, k) = sum(P, <span class="number">2</span>) / N; <span class="comment">%重采样后所有粒子的中心位置</span></span><br><span class="line">    <span class="comment">%计算误差</span></span><br><span class="line">    err(<span class="number">1</span>,k) = norm(X(:, k) - PCenter(:, k)); <span class="comment">%粒子几何中心与系统真实状态的误差</span></span><br><span class="line">    err(<span class="number">2</span>,k) = norm(X(:, k) - Z(:, k));</span><br><span class="line">    <span class="comment">%画图</span></span><br><span class="line">    figure(<span class="number">2</span>);</span><br><span class="line">    set(<span class="number">0</span>,<span class="string">'defaultfigurecolor'</span>,<span class="string">'w'</span>)</span><br><span class="line">    clf;<span class="comment">%清空figure(2)中的图像 以便循环重新画</span></span><br><span class="line">    hold on</span><br><span class="line">    plot(X(<span class="number">1</span>, k), X(<span class="number">2</span>, k), <span class="string">'r.'</span>, <span class="string">'markersize'</span>,<span class="number">30</span>); <span class="comment">%系统状态位置</span></span><br><span class="line">    plot(P(<span class="number">1</span>, :), P(<span class="number">2</span>, :), <span class="string">'k.'</span>, <span class="string">'markersize'</span>,<span class="number">5</span>); <span class="comment">%各个粒子位置</span></span><br><span class="line">    plot(PCenter(<span class="number">1</span>, k), PCenter(<span class="number">2</span>, k), <span class="string">'b.'</span>, <span class="string">'markersize'</span>,<span class="number">25</span>); <span class="comment">%所有粒子的中心位置</span></span><br><span class="line">    axis([<span class="number">0</span> <span class="number">100</span> <span class="number">0</span> <span class="number">100</span>]);</span><br><span class="line">    title(<span class="string">'运动过程'</span>);</span><br><span class="line">    legend(<span class="string">'真实状态'</span>, <span class="string">'粒子群'</span>, <span class="string">'粒子群的几何中心'</span>);</span><br><span class="line">    hold off</span><br><span class="line">    pause(<span class="number">0.1</span>);<span class="comment">%停0.1s开始下次迭代</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%% 绘制轨迹</span></span><br><span class="line">figure(<span class="number">3</span>);</span><br><span class="line">set(<span class="number">0</span>,<span class="string">'defaultfigurecolor'</span>,<span class="string">'w'</span>)</span><br><span class="line">plot(X(<span class="number">1</span>,:), X(<span class="number">2</span>,:), <span class="string">'r.-'</span>, Z(<span class="number">1</span>,:), Z(<span class="number">2</span>,:), <span class="string">'g.-'</span>, PCenter(<span class="number">1</span>,:), PCenter(<span class="number">2</span>,:), <span class="string">'b.-'</span>);</span><br><span class="line">axis([<span class="number">0</span> <span class="number">100</span> <span class="number">0</span> <span class="number">100</span>]);</span><br><span class="line">set(gca,<span class="string">'XTick'</span>,<span class="number">0</span>:<span class="number">10</span>:<span class="number">100</span>) <span class="comment">%改变x轴坐标间隔显示 这里间隔为10</span></span><br><span class="line">set(gca,<span class="string">'YTick'</span>,<span class="number">0</span>:<span class="number">10</span>:<span class="number">100</span>) <span class="comment">%改变y轴坐标间隔显示 这里间隔为10</span></span><br><span class="line">legend(<span class="string">'真实轨迹'</span>, <span class="string">'测量轨迹'</span>, <span class="string">'粒子群几何中心轨迹'</span>);</span><br><span class="line">xlabel(<span class="string">'横坐标 x'</span>); ylabel(<span class="string">'纵坐标 y'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">%% 绘制误差</span></span><br><span class="line">figure(<span class="number">4</span>);</span><br><span class="line">set(<span class="number">0</span>,<span class="string">'defaultfigurecolor'</span>,<span class="string">'w'</span>)</span><br><span class="line"><span class="comment">%set(gca,'FontSize',12);%设置图标字体大小</span></span><br><span class="line">plot(err(<span class="number">1</span>,:),<span class="string">'b.-'</span>);<span class="comment">%err1为各时刻 真实位置与粒子群中心的几何距离</span></span><br><span class="line">hold on</span><br><span class="line">plot(err(<span class="number">2</span>,:),<span class="string">'r.-'</span>);<span class="comment">%err2为各时刻 真实位置与测量位置的几何距离</span></span><br><span class="line">hold off</span><br><span class="line">xlabel(<span class="string">'步数 t'</span>);</span><br><span class="line">legend(<span class="string">'粒子群误差'</span>, <span class="string">'测量误差'</span>);</span><br><span class="line">title(<span class="string">'真实位置与粒子群中心的集合距离'</span>);</span><br></pre></td></tr></table></figure><h2 id="用到的函数记录"><a class="markdownIt-Anchor" href="#用到的函数记录"></a> 用到的函数记录</h2><h3 id="matlab中的norm"><a class="markdownIt-Anchor" href="#matlab中的norm"></a> Matlab中的norm</h3><p>demo代码中有关norm的运用如下,</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%% 初始化粒子群</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : N</span><br><span class="line">    P(:, <span class="built_in">i</span>) = [WorldSize*rand; WorldSize*rand];  <span class="comment">%随机产生第i个粒子的坐标(rand为产生[0,1]之间均匀分布)</span></span><br><span class="line">    dist = norm(P(:, <span class="built_in">i</span>)-Z(:, <span class="number">1</span>)); <span class="comment">%与测量位置相差的距离</span></span><br><span class="line">    <span class="comment">%求权重 (权重与距离的关系 为 均值是0,方差是sqrt(R)的高斯分布曲线)  </span></span><br><span class="line">    <span class="comment">%   因为均值为0且距离大于0 因此权重随着距离增加沿高斯曲线右侧递减</span></span><br><span class="line">    w(<span class="built_in">i</span>) = (<span class="number">1</span> / <span class="built_in">sqrt</span>(R) / <span class="built_in">sqrt</span>(<span class="number">2</span> * <span class="built_in">pi</span>)) * <span class="built_in">exp</span>(-(dist)^<span class="number">2</span> / <span class="number">2</span> / R); </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>其中没有特别指出是啥范数, 因此可以通过<code>help norm</code>来查看一下关于norm的使用介绍.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; help norm</span><br><span class="line"> norm   Matrix or vector norm.</span><br><span class="line">      norm(X,2) returns the 2-norm of X.</span><br><span class="line"> </span><br><span class="line">      norm(X) is the same as norm(X,2).</span><br><span class="line"> </span><br><span class="line">      norm(X,1) returns the 1-norm of X.</span><br></pre></td></tr></table></figure><p>可以得到, norm(X)的效果默认是取2-范数的。</p><p>同时， norm函数既可以取向量范数又可以取矩阵范数：</p><h4 id="1-如果a为矩阵"><a class="markdownIt-Anchor" href="#1-如果a为矩阵"></a> 1、如果A为矩阵</h4><ul><li><p>n=norm(A) 《Simulink与信号处理》</p><p>返回A的最大奇异值，即max(svd(A))</p></li><li><p>n=norm(A,p)</p><p>根据p的不同，返回不同的值</p></li></ul><table><thead><tr><th>p</th><th>返回值</th></tr></thead><tbody><tr><td>1</td><td>返回A中最大<strong>一列和</strong>，即max(sum(abs(A)))</td></tr><tr><td>2</td><td>返回A的最大奇异值，和n=norm(A)用法一样</td></tr><tr><td>inf</td><td>返回A中最大<strong>一行和</strong>，即max(sum(abs(A’)))</td></tr><tr><td>‘fro’</td><td>A和A‘的积的对角线和的平方根，即sqrt(sum(diag(A’*A)))</td></tr></tbody></table><h4 id="2-如果a为向量"><a class="markdownIt-Anchor" href="#2-如果a为向量"></a> 2、如果A为向量</h4><ul><li><p>norm(A,p)</p><p>返回向量A的p范数。即返回 sum(abs(A).<sup>p)</sup>(1/p),对任意 1&lt;p&lt;+∞.</p></li><li><p>norm(A)</p><p>返回向量A的2范数，即等价于norm(A,2)。</p></li><li><p>norm(A,inf)</p><p>返回max(abs(A))</p></li><li><p>norm(A,-inf)</p><p>返回min(abs(A))</p></li></ul><h3 id="matlab中的sum"><a class="markdownIt-Anchor" href="#matlab中的sum"></a> Matlab中的sum</h3><ul><li><code>sum(A, 1)</code>： 对一维求和， 如果A为二维数组， 则按列求和</li><li><code>sum(A, 2)</code>: 对二维求和， 如果A为二维数组， 则按行求和</li></ul><h3 id="matlab中的wgn"><a class="markdownIt-Anchor" href="#matlab中的wgn"></a> Matlab中的wgn</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; help wgn</span><br><span class="line"> wgn Generate white Gaussian noise.</span><br><span class="line">    Y = wgn(M,N,P) generates an M-by-N matrix of white Gaussian noise. P</span><br><span class="line">    specifies the power of the output noise in dBW. The unit of measure for</span><br><span class="line">    the output of the wgn function is Volts. For power calculations, it is</span><br><span class="line">    assumed that there is a load of 1 Ohm. </span><br><span class="line"> </span><br><span class="line">    Y = wgn(M,N,P,IMP) specifies the load impedance in Ohms.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;粒子滤波概念&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#粒子滤波概念&quot;&gt;&lt;/a&gt; 粒子滤波概念&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/KYJL888/article/details/10536
      
    
    </summary>
    
    
      <category term="Matlab" scheme="https://nymrli.top/tags/Matlab/"/>
    
  </entry>
  
  <entry>
    <title>范数的概念_MATLAB使用</title>
    <link href="https://nymrli.top/2020/10/27/%E8%8C%83%E6%95%B0%E7%9A%84%E6%A6%82%E5%BF%B5-MATLAB%E4%BD%BF%E7%94%A8/"/>
    <id>https://nymrli.top/2020/10/27/范数的概念-MATLAB使用/</id>
    <published>2020-10-27T08:13:30.000Z</published>
    <updated>2020-10-27T10:26:44.365Z</updated>
    
    <content type="html"><![CDATA[<h1 id="范数"><a class="markdownIt-Anchor" href="#范数"></a> 范数</h1><blockquote><p>之前大二在看机器学习的时候一直看到&quot;范数&quot;这个名词, 但是一直没有去详细了解过, 就只知道2-范数相当于两个点在二维平面的距离。这次在看粒子滤波matlab实现代码的时候看到了<code>norm</code>函数, 正好补一下关于范数的概念。</p></blockquote><h2 id="向量的范数"><a class="markdownIt-Anchor" href="#向量的范数"></a> 向量的范数</h2><h3 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h3><p><img src="/2020/10/27/范数的概念-MATLAB使用/%E5%90%91%E9%87%8F%E8%8C%83%E6%95%B0.jpg" alt="向量范数"></p><p>注: 简言之: ①向量的范数是定义在线性空间上的非负实数.②实内积空间和酉空间中向量的长度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mo>=</mo><msqrt><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></msqrt></mrow><annotation encoding="application/x-tex">|x|=\sqrt{(x,x)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.30499999999999994em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width="400em" height="1.28em" viewbox="0 0 400000 1296" preserveaspectratio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span></span></span></span>都是向量的范数③酉空间向量范数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">||x||</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mord">∣</span></span></span></span>用向量长度|x|来定义时,记作<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mn>2</mn></msub><mo>=</mo><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mo>=</mo><msqrt><mrow><mi>x</mi><msup><mi>x</mi><mi>H</mi></msup></mrow></msqrt><mo>=</mo><msqrt><mrow><mi>s</mi><mi>u</mi><msubsup><mi>m</mi><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mrow><mi>ξ</mi><mover accent="true"><mi>ξ</mi><mo>ˉ</mo></mover></mrow></mrow></msqrt></mrow><annotation encoding="application/x-tex">||x||_2 = |x| = \sqrt{xx^H} = \sqrt{sum^{n}_{i=1}{ξ\bar{ξ}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.07133449999999997em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9686655000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathdefault">x</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.767331em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span></span></span><span style="top:-2.9286655em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.07133449999999997em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.277822em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.962178em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6461920000000001em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04601em;">ξ</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8312199999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04601em;">ξ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.13889em;">ˉ</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.922178em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width="400em" height="1.28em" viewbox="0 0 400000 1296" preserveaspectratio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.277822em;"><span></span></span></span></span></span></span></span></span></p><p><img src="/2020/10/27/范数的概念-MATLAB使用/%E5%90%91%E9%87%8F%E8%8C%83%E6%95%B0.jpg" alt="向量范数"></p><p>通式——P-范数</p><p><img src="/2020/10/27/范数的概念-MATLAB使用/p%E8%8C%83%E6%95%B0.jpg" alt="p范数"></p><p>注: 当P-&gt;∞时<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mi>ξ</mi></mrow><annotation encoding="application/x-tex">||X|| = max{\xi}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord">∣</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04601em;">ξ</span></span></span></span></span></p><p><img src="/2020/10/27/范数的概念-MATLAB使用/%E8%8C%83%E6%95%B0%E7%9A%84%E6%84%8F%E4%B9%89.jpg" alt="范数的意义"></p><h2 id="矩阵的范数"><a class="markdownIt-Anchor" href="#矩阵的范数"></a> 矩阵的范数</h2><p><img src="/2020/10/27/范数的概念-MATLAB使用/E:%5Chexo%5Csource_posts%5C%E8%8C%83%E6%95%B0%E7%9A%84%E6%A6%82%E5%BF%B5-MATLAB%E4%BD%BF%E7%94%A8%5C%E7%9F%A9%E9%98%B5%E8%8C%83%E6%95%B0.jpg" alt="矩阵范数"></p><p><img src="/2020/10/27/范数的概念-MATLAB使用/E:%5Chexo%5Csource_posts%5C%E8%8C%83%E6%95%B0%E7%9A%84%E6%A6%82%E5%BF%B5-MATLAB%E4%BD%BF%E7%94%A8%5C%E7%9F%A9%E9%98%B5%E8%8C%83%E6%95%B0%E7%9A%84%E6%80%A7%E8%B4%A8.jpg" alt="矩阵范数的性质"></p><p>▲以上概念来自于B站视频: <a href="https://www.bilibili.com/video/BV1hT4y1g7Rp?from=search&amp;seid=11751236706633684482" target="_blank" rel="noopener">向量范数矩阵范数</a></p><h3 id="matlab中的norm"><a class="markdownIt-Anchor" href="#matlab中的norm"></a> Matlab中的norm</h3><p>demo代码中有关norm的运用如下,</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%% 初始化粒子群</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : N</span><br><span class="line">    P(:, <span class="built_in">i</span>) = [WorldSize*rand; WorldSize*rand];  <span class="comment">%随机产生第i个粒子的坐标(rand为产生[0,1]之间均匀分布)</span></span><br><span class="line">    dist = norm(P(:, <span class="built_in">i</span>)-Z(:, <span class="number">1</span>)); <span class="comment">%与测量位置相差的距离</span></span><br><span class="line">    <span class="comment">%求权重 (权重与距离的关系 为 均值是0,方差是sqrt(R)的高斯分布曲线)  </span></span><br><span class="line">    <span class="comment">%   因为均值为0且距离大于0 因此权重随着距离增加沿高斯曲线右侧递减</span></span><br><span class="line">    w(<span class="built_in">i</span>) = (<span class="number">1</span> / <span class="built_in">sqrt</span>(R) / <span class="built_in">sqrt</span>(<span class="number">2</span> * <span class="built_in">pi</span>)) * <span class="built_in">exp</span>(-(dist)^<span class="number">2</span> / <span class="number">2</span> / R); </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>其中没有特别指出是啥范数, 因此可以通过<code>help norm</code>来查看一下关于norm的使用介绍.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; help norm</span><br><span class="line"> norm   Matrix or vector norm.</span><br><span class="line">      norm(X,2) returns the 2-norm of X.</span><br><span class="line"> </span><br><span class="line">      norm(X) is the same as norm(X,2).</span><br><span class="line"> </span><br><span class="line">      norm(X,1) returns the 1-norm of X.</span><br></pre></td></tr></table></figure><p>可以得到, norm(X)的效果默认是取2-范数的。</p><p>同时， norm函数既可以取向量范数又可以取矩阵范数：</p><h4 id="1-如果a为矩阵"><a class="markdownIt-Anchor" href="#1-如果a为矩阵"></a> 1、如果A为矩阵</h4><ul><li><p>n=norm(A) 《Simulink与信号处理》</p><p>返回A的最大奇异值，即max(svd(A))</p></li><li><p>n=norm(A,p)</p><p>根据p的不同，返回不同的值</p></li></ul><table><thead><tr><th>p</th><th>返回值</th></tr></thead><tbody><tr><td>1</td><td>返回A中最大<strong>一列和</strong>，即max(sum(abs(A)))</td></tr><tr><td>2</td><td>返回A的最大奇异值，和n=norm(A)用法一样</td></tr><tr><td>inf</td><td>返回A中最大<strong>一行和</strong>，即max(sum(abs(A’)))</td></tr><tr><td>‘fro’</td><td>A和A‘的积的对角线和的平方根，即sqrt(sum(diag(A’*A)))</td></tr></tbody></table><h4 id="2-如果a为向量"><a class="markdownIt-Anchor" href="#2-如果a为向量"></a> 2、如果A为向量</h4><ul><li><p>norm(A,p)</p><p>返回向量A的p范数。即返回 sum(abs(A).<sup>p)</sup>(1/p),对任意 1&lt;p&lt;+∞.</p></li><li><p>norm(A)</p><p>返回向量A的2范数，即等价于norm(A,2)。</p></li><li><p>norm(A,inf)</p><p>返回max(abs(A))</p></li><li><p>norm(A,-inf)</p><p>返回min(abs(A))</p></li></ul><h3 id="matlab中的sum"><a class="markdownIt-Anchor" href="#matlab中的sum"></a> Matlab中的sum</h3><ul><li><code>sum(A, 1)</code>： 对一维求和， 如果A为二维数组， 则按列求和</li><li><code>sum(A, 2)</code>: 对二维求和， 如果A为二维数组， 则按行求和</li></ul><h3 id="matlab中的wgn"><a class="markdownIt-Anchor" href="#matlab中的wgn"></a> Matlab中的wgn</h3><blockquote><p>white Gaussian noise</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; help wgn</span><br><span class="line"> wgn Generate white Gaussian noise.</span><br><span class="line">    Y = wgn(M,N,P) generates an M-by-N matrix of white Gaussian noise. P</span><br><span class="line">    specifies the power of the output noise in dBW. The unit of measure for</span><br><span class="line">    the output of the wgn function is Volts. For power calculations, it is</span><br><span class="line">    assumed that there is a load of 1 Ohm. </span><br><span class="line"> </span><br><span class="line">    Y = wgn(M,N,P,IMP) specifies the load impedance in Ohms.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;范数&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#范数&quot;&gt;&lt;/a&gt; 范数&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;之前大二在看机器学习的时候一直看到&amp;quot;范数&amp;quot;这个名词, 但是一直没有去详细了解过, 就只知道2-范数
      
    
    </summary>
    
    
      <category term="Math" scheme="https://nymrli.top/tags/Math/"/>
    
      <category term="MATLAB" scheme="https://nymrli.top/tags/MATLAB/"/>
    
  </entry>
  
  <entry>
    <title>Python中import的细节</title>
    <link href="https://nymrli.top/2020/10/23/Python%E4%B8%ADimport%E7%9A%84%E7%BB%86%E8%8A%82/"/>
    <id>https://nymrli.top/2020/10/23/Python中import的细节/</id>
    <published>2020-10-23T13:01:21.000Z</published>
    <updated>2020-11-12T07:04:11.635Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>防忘系列…</p></blockquote><p>Pycharm并没有IDEA一样可以设置<strong>对import进行排序</strong>以及<strong>自动消除没用到的库</strong>（要用快捷键Ctrl + Alt + O）， 并且如果导入方式不正确会 1.找不到自定义包 2.Pycharm对指定内容报错（下划线或红线）</p><h2 id="python中模块包库概念"><a class="markdownIt-Anchor" href="#python中模块包库概念"></a> <a href="https://www.cnblogs.com/mlgjb/p/7875494.html" target="_blank" rel="noopener">Python中模块，包，库概念</a></h2><p><strong>模块</strong>：就是<u>.py文件</u>，里面定义了一些函数和变量，需要的时候就可以导入这些模块。</p><p><strong>包</strong>：在模块之上的概念，为了方便管理而将文件进行打包。包目录下第一个文件便是<code>__init__.py</code>，然后是一些模块文件和子目录，假如子目录中也有<code>__init__.py</code>，那么它就是这个包的<strong>子包</strong>了。</p><p><strong>库</strong>：具有相关功能模块、包的集合。这也是Python的一大特色之一，即具有强大的标准库、第三方库以及自定义模块。</p><p><strong>标准库</strong>：就是下载安装的python里那些自带的模块，要注意的是，里面有一些模块是看不到的比如像sys模块，这与linux下的cd命令看不到是一样的情况。</p><p><strong>第三方库</strong>：就是由其他的第三方机构，发布的具有特定功能的模块。</p><p><strong>自定义模块</strong>：用户自己可以自行编写模块，然后使用。</p><p>总结: 我们<code>pip install &lt;package&gt;</code>安装的是库，库下有很多包，我们在自己的项目文件中import有以下几种用法:</p><ul><li>import numpy as np</li><li>import urllib.parse import urlencode</li><li>from lxml import HTML</li></ul><p>之前大家应该碰到过，命名自己<code>pip install xx</code>安装的是叫xx的库，但是在用的时候写的却是<code>from yy import zz</code>，明显不对应嘛。因此，其实库和包的区别还可以通过<code>setup.py</code>打包成库来看。——<a href="https://blog.csdn.net/zyf_2014/article/details/83059874" target="_blank" rel="noopener">使用setup.py打包python文件</a>； <a href="https://www.jb51.net/article/190659.htm" target="_blank" rel="noopener">Python实现打包成库供别的模块调用</a></p><p>其中比较重要的就是<strong>5.编写:setup.py</strong>，</p><blockquote><p>注意：setup.py与要打包的test_package包同在bricewulib根目录下。</p></blockquote><p>其中比较重要的几项是:name,version,packages</p><ul><li>name:描述的是你打包的文件夹名。</li><li>version描述的是文件的版本号。</li><li>packages是所有要打包的包（package），这里需要打包的是test_package包以及test_package包下的test_package。输入<code>python setup.py sdist</code>然后就能创建bricewulib库，使用test_package包</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">setup(</span><br><span class="line">name = &quot;bricewulib&quot;,</span><br><span class="line">version = &quot;1.0&quot;,</span><br><span class="line">packages=[&quot;test_package&quot;,&quot;test_package.test_package2&quot;]</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="import推荐顺序"><a class="markdownIt-Anchor" href="#import推荐顺序"></a> import推荐顺序</h2><p>我们推荐所有的模块在 Python 模块的开头部分导入。 而且最好按照这样的顺序:</p><ol><li>Python 标准库模块</li><li>Python 第三方模块</li><li>应用程序自定义模块</li></ol><p>通过空行来分割——<a href="https://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/background/" target="_blank" rel="noopener">(Python’s Style Guide)</a>, PEP8 。</p><h2 id="python的import机制"><a class="markdownIt-Anchor" href="#python的import机制"></a> Python的import机制</h2><p>运行、编写Python代码时，一定要注意的是脚本路径和脚本执行路径，以及相对路径和绝对路径</p><p><strong>如果在项目中运用了相对路径,则一定要注意脚本执行路径</strong></p><p>假设A是B的父目录, 如我们想在A目录调用B中模块, 而B中模板是又import了A下模板, 如login: <code>from login import ftSession</code>。<strong>命令行</strong>在A路径下输入<code>python B/main.py</code>时, 会报错。因为import其实就是在搜索目录下按相对路径找的。</p><p><strong>Pycharm的坑:</strong></p><p>借鉴: <a href="https://zhuanlan.zhihu.com/p/109036573" target="_blank" rel="noopener">Python的import机制坑在哪？</a></p><blockquote><p><strong>pycharm里打出来的路径是更多的，它把项目根目录加进去了。</strong>(也可以设置: 进入设置，找到Console下的Python Console，勾选选项**“Add source roots to PYTHONPAT”** )</p></blockquote><p>查看搜索路径:<code>print(sys.path)</code></p><p><img src="/2020/10/23/Python中import的细节/Python%E4%B8%ADimport%E7%9A%84%E7%BB%86%E8%8A%82%5Csettings.jpg" alt="settings"></p><p>What’s resource root?</p><p><img src="https://pic4.zhimg.com/80/v2-99d4cf12cb731bf457b3ee503dfd5d42_720w.jpg?source=1940ef5c" alt="img"></p><p>以上导致的问题就是:</p><p><strong>pycharm中，project folder是默认的source root</strong>，当你使用import语句导入模块时，Pycharm默认在project folder中寻找；所以当你在project folder下的某个subfolder导入某个同样定义在这个subfolder中的模块时，会出现导入错误。</p><blockquote><p><strong>pycharm中的第一个文件夹，即代表项目</strong>, 当在其中再次建立文件夹时，<strong>是按package处理的</strong></p><p>如果要在这些文件夹内<strong>import其他文件，需要将完整路径导入进来</strong></p></blockquote><p>所以最终在Pycharm中导入的方式有两种: <a href="https://www.zhihu.com/question/63028700" target="_blank" rel="noopener">burning回答</a></p><ul><li>从project folder开始相对导入</li><li>将module文件夹直接定义为source root</li></ul><p><strong>pycharm在同目录下import划红线但实际可以运行</strong></p><blockquote><p>解决方法: 右键将model所在的文件夹设置为source root</p></blockquote><h2 id="__init__文件作用"><a class="markdownIt-Anchor" href="#__init__文件作用"></a> <code>__init__</code>文件作用</h2><p>在Python工程里，当python检测到一个目录下存在<code>__init__.py</code>文件时，python就会把这个目录当成一个包(package)。Module跟C＋＋的命名空间和Java的Package的概念很像，都是为了科学地组织化工程，管理命名空间。</p><h3 id="__init__py的设计原则"><a class="markdownIt-Anchor" href="#__init__py的设计原则"></a> <strong><code>__init__.py</code>的设计原则</strong></h3><p><code>__init__.py</code>的原始使命是声明一个模块，所以它可以是一个空文件。</p><p>A、不要污染现有的<strong>命名空间</strong>。模块一个目的，是为了避免命名冲突，如果你在种用__init__.py时违背这个原则，是反其道而为之，就没有必要使用模块了。</p><p>B、利用<code>__init__.py</code>对<strong>外提供类型、变量和接口，对用户隐藏各个子模块的实现</strong>。一个模块的实现可能非常复杂，你需要用很多个文件，甚至很多子模块来实现，但用户可能只需要知道一个类型和接口。就像我们的arithmetic例子中，用户只需要知道四则运算有add、sub、mul、dev四个接口，却并不需要知道它们是怎么实现的，也不想去了解arithmetic中是如何组织各个子模块的。由于各个子模块的实现有可能非常复杂，而对外提供的类型和接口有可能非常的简单，我们就可以通过这个方式来对用户隐藏实现，同时提供非常方便的使用。</p><p>C、只在__init__.py中导入有必要的内容，不要做没必要的运算。像我们的例子，<strong>import</strong> arithmetic语句会<strong>执行</strong><code>__ini__.py</code>中的所有<strong>代码</strong>。如果我们在<code>__init__.py</code>中做太多事情，每次import都会有额外的运算，会造成没有必要的开销。一句话，<strong>init</strong>.py只是为了达到B中所表述的目的，其它事情就不要做啦。</p><p>上述来自: <a href="https://zhuanlan.zhihu.com/p/115350758" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/115350758</a></p><h3 id="__all__变量"><a class="markdownIt-Anchor" href="#__all__变量"></a> <code>__all__</code>变量</h3><p><code>__all__</code>是一个字符串list；</p><p>约束作用：用来定义模块中对于<code>from XXX import *</code>时要对外导出的符号，即要暴露的借口，但它只对<code>import *</code>起作用(即如果在使用脚本中对当前包使用import *，那么可以管理当前包下模块的导入情况)，对<code>from XXX import XXX</code>不起作用。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;防忘系列…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Pycharm并没有IDEA一样可以设置&lt;strong&gt;对import进行排序&lt;/strong&gt;以及&lt;strong&gt;自动消除没用到的库&lt;/strong&gt;（要用快捷键Ctrl + Alt + O）
      
    
    </summary>
    
    
      <category term="防忘系列" scheme="https://nymrli.top/tags/%E9%98%B2%E5%BF%98%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>emplace_back与push_back</title>
    <link href="https://nymrli.top/2020/10/18/emplace-back%E4%B8%8Epush-back/"/>
    <id>https://nymrli.top/2020/10/18/emplace-back与push-back/</id>
    <published>2020-10-18T15:14:49.000Z</published>
    <updated>2020-10-25T07:08:58.265Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>之前看<a href="https://leetcode-cn.com/problems/find-common-characters/" target="_blank" rel="noopener">1002. 查找常用字符</a>题解的时候，发现有人用了emplace_back，将char转型成了string塞进了<code>vector&lt;string&gt;</code>，感觉是个骚操作。<br>之前也看过emplace_back和push_back的区别， 只不过又忘记了， 因此本次也算个防忘系列把…</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; ans;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++) &#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; minFreq[i]; j++) &#123;</span><br><span class="line">       <span class="comment">// emplace_back 骚操作</span></span><br><span class="line">      ans.emplace_back(<span class="number">1</span>, <span class="string">'a'</span> + i);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p>在STL中，进行插入元素的时候，有insert和push两种选择方式，而在有了<u>右值引用</u>和移动语义的时候，在C++11中就提出了更高效的插入方法：emplace_back</p><p>目前的趋势是希望：使用emplace_back()取代push_back()</p><p>据统计，emplace_back()函数要比push_back()函数要快一倍。</p></blockquote><p><img src="/2020/10/18/emplace-back与push-back/emplace_back.jpg" alt="emplace_back"></p><h2 id="empalce与push的区别"><a class="markdownIt-Anchor" href="#empalce与push的区别"></a> empalce与push的区别：</h2><ul><li>push_back()函数向容器中加入一个临时对象（右值元素）时， 首先会<u>调用构造函数</u>生成这个对象，然后调用<u>拷贝构造函数</u>将这个<strong>对象的拷贝</strong>放入容器中， 最后释放临时对象，这样造成的问题是临时变量申请的资源就浪费。但是emplace_back()函数向容器中中加入<strong>临时对象</strong>， 临时对象原地构造，只有转移的过程，没有赋值或拷贝的操作（不需要触发拷贝构造）。</li></ul><h2 id="emplace_back中调用构造函数"><a class="markdownIt-Anchor" href="#emplace_back中调用构造函数"></a> emplace_back中调用构造函数</h2><p><a href="https://en.cppreference.com/w/cpp/container/vector/emplace_back" target="_blank" rel="noopener">官网demo Code</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">President</span>&#123;</span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> name;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> country;</span><br><span class="line">    <span class="keyword">int</span> year;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 构造函数</span></span><br><span class="line">    President(<span class="built_in">std</span>::<span class="built_in">string</span> p_name, <span class="built_in">std</span>::<span class="built_in">string</span> p_country, <span class="keyword">int</span> p_year)</span><br><span class="line">        : name(<span class="built_in">std</span>::move(p_name)), country(<span class="built_in">std</span>::move(p_country)), year(p_year)&#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"I am being constructed.\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 转移构造函数</span></span><br><span class="line">    President(President&amp;&amp; other)</span><br><span class="line">        : name(<span class="built_in">std</span>::move(other.name)), country(<span class="built_in">std</span>::move(other.country)), year(other.year)&#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"I am being moved.\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 拷贝赋值操作符</span></span><br><span class="line">    President&amp; <span class="keyword">operator</span>=(<span class="keyword">const</span> President&amp; other) = <span class="keyword">default</span>;</span><br><span class="line">    <span class="comment">// 拷贝构造函数</span></span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;President&gt; elections;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"emplace_back:\n"</span>;</span><br><span class="line">    <span class="comment">// noted: 这边并没有写成President("Nelson Mandela", "South Africa", 1994)</span></span><br><span class="line">    elections.emplace_back(<span class="string">"Nelson Mandela"</span>, <span class="string">"South Africa"</span>, <span class="number">1994</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;President&gt; reElections;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"\npush_back:\n"</span>;</span><br><span class="line">    reElections.push_back(President(<span class="string">"Franklin Delano Roosevelt"</span>, <span class="string">"the USA"</span>, <span class="number">1936</span>));</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"\nContents:\n"</span>;</span><br><span class="line">    <span class="keyword">for</span> (President <span class="keyword">const</span>&amp; president: elections) &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; president.name &lt;&lt; <span class="string">" was elected president of "</span></span><br><span class="line">                  &lt;&lt; president.country &lt;&lt; <span class="string">" in "</span> &lt;&lt; president.year &lt;&lt; <span class="string">".\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (President <span class="keyword">const</span>&amp; president: reElections) &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; president.name &lt;&lt; <span class="string">" was re-elected president of "</span></span><br><span class="line">                  &lt;&lt; president.country &lt;&lt; <span class="string">" in "</span> &lt;&lt; president.year &lt;&lt; <span class="string">".\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>▲看到noted标出来的地方后, 就能知道Leetcode题解中的骚操作其实就是根据T类型判断出了调用构造函数。按如下代码得证</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">a</span><span class="params">(<span class="number">1</span>, <span class="string">'a'</span>+ <span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">// &gt;&gt;&gt; b</span></span><br></pre></td></tr></table></figure><hr><h3 id="引申什么是stdmove"><a class="markdownIt-Anchor" href="#引申什么是stdmove"></a> 引申：什么是std::move?</h3><p>借鉴:</p><p><a href="https://blog.csdn.net/p942005405/article/details/84644069/" target="_blank" rel="noopener">c++ 之 std::move 原理实现与用法总结</a></p><blockquote><p>在C++11中，标准库在<code>&lt;utility&gt;</code>中提供了一个有用的函数std::move，std::move并不能移动任何东西，它唯一的功能是将一个<u>左值强制转化为右值引用</u>，继而可以通过右值引用使用该值，以用于移动语义。从实现上讲，std::move基本等同于一个类型转换：static_cast&lt;T&amp;&amp;&gt;(lvalue);</p></blockquote><p><a href="https://blog.csdn.net/p942005405/article/details/84644101" target="_blank" rel="noopener">左值、左值引用、右值、右值引用概念</a></p><ul><li>左值的声明符号为”&amp;”， 为了和左值区分，右值的声明符号为”&amp;&amp;”。</li><li>临时对象是作为右值处理的</li></ul><h3 id="右值引用的意义"><a class="markdownIt-Anchor" href="#右值引用的意义"></a> 右值引用的意义</h3><p>直观意义：为临时变量续命，也就是为右值续命，<u>因为右值在表达式结束后就消亡了</u>，如果想继续使用右值，那就会动用昂贵的拷贝构造函数。（关于这部分，推荐一本书《深入理解C<ins>11》）<br>右值引用是用来支持转移语义的。<u>转移语义可以将资源 ( 堆，系统对象等 ) 从一个对象转移到另一个对象，这样能够减少不必要的临时对象的创建、拷贝以及销毁，能够大幅度提高 C</u></ins> 应用程序的性能。临时对象的维护 ( 创建和销毁 ) 对性能有严重影响。<br>转移语义是和拷贝语义相对的，可以类比文件的剪切与拷贝，当我们将文件从一个目录拷贝到另一个目录时，速度比剪切慢很多。<br>通过转移语义，临时对象中的资源能够转移其它的对象里。<br>在现有的 C++ 机制中，我们可以定义拷贝构造函数和赋值函数。要实现转移语义，需要定义转移构造函数，还可以定义转移赋值操作符。对于右值的拷贝和赋值会调用转移构造函数和转移赋值操作符。如果转移构造函数和转移拷贝操作符没有定义，那么就遵循现有的机制，拷贝构造函数和赋值操作符会被调用。<br>普通的函数和操作符也可以利用右值引用操作符实现转移语义。</p><p><strong>extra：</strong></p><ol><li>std::move执行一个无条件的转化到右值。它本身并不移动任何东西；</li><li>std::forward把其参数转换为右值，仅仅在那个参数被绑定到一个右值时；</li><li>std::move和std::forward在运行时（runtime）都不做任何事。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;之前看&lt;a href=&quot;https://leetcode-cn.com/problems/find-common-characters/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;1002. 查找常用字符&lt;/a&gt;题解的时候，发
      
    
    </summary>
    
    
      <category term="C++" scheme="https://nymrli.top/tags/C/"/>
    
      <category term="防忘系列" scheme="https://nymrli.top/tags/%E9%98%B2%E5%BF%98%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>AutoLianliankan笔记</title>
    <link href="https://nymrli.top/2020/10/13/AutoLianliankan%E7%AC%94%E8%AE%B0/"/>
    <id>https://nymrli.top/2020/10/13/AutoLianliankan笔记/</id>
    <published>2020-10-13T10:58:47.000Z</published>
    <updated>2020-10-14T04:35:38.806Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>近来无事，又研究其了之前看到过的<a href="https://github.com/TheThreeDog/Auto-Lianliankan" target="_blank" rel="noopener">自动连连看的代码</a>，碰到了一些问题， 因此做下笔记</p></blockquote><p><strong>pywin32</strong></p><ul><li>win32gui：定位窗体，操作窗体</li><li>win32api：提供API，操作鼠标、键盘</li><li>win32con：具体API事件</li></ul><p>==&gt;对于窗体的操作使用win32gui；而对键盘、鼠标操作可以用更高级封装的库pymouse、pykeyboard；剪切板使用win32clipboard</p><h2 id="程序的设计"><a class="markdownIt-Anchor" href="#程序的设计"></a> 程序的设计：</h2><ol><li><code>getWindowPosition</code>=&gt;先确定游戏窗口位置pos，并置顶</li><li><code>getScreenImage()</code>==&gt;在窗口置顶后再截图</li><li><code>getAllSquare()</code>=&gt;找到游戏边界，<code>pos[0]+100</code>, <code>pos[1]+100</code>,即中间所有图块部分。切割出所有图案；<code>getAllSquareTypes()</code>将所有图案进行比较分类，归纳出所有不同的种类</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ndarray的切片方法，[纵坐标起始位置：纵坐标结束为止，横坐标起始位置：横坐标结束位置]</span></span><br><span class="line">square = screen_image[game_y + y * SQUARE_HEIGHT :game_y + (y+<span class="number">1</span>) * SQUARE_HEIGHT,</span><br><span class="line">                      game_x + x * SQUARE_WIDTH:game_x + (x+<span class="number">1</span>) * SQUARE_WIDTH]</span><br><span class="line"><span class="comment"># np.shape(square) == (65, 65, 3)</span></span><br><span class="line"><span class="comment"># 因为有些图片的边缘不一致造成干扰（主要是空白区域的切图），所以把每张小方块向内缩小一部分再</span></span><br><span class="line"><span class="comment"># 对所有的方块进行处理屏蔽掉外边缘 然后返回</span></span><br><span class="line"><span class="keyword">return</span> [square[SUB_LT_Y:SUB_RB_Y, SUB_LT_X:SUB_RB_X] <span class="keyword">for</span> square <span class="keyword">in</span> all_square]</span><br></pre></td></tr></table></figure><ol start="4"><li><code>getAllSquareRecord()</code>==&gt;将不同种类的图案做映射，转换成相对应的数字矩阵。</li><li><code>autoRemove(result, board_pos)</code>==&gt;执行自动消除</li><li><code>Matcher类</code>==&gt;实现游戏规则: 横消，纵消， 单拐点消除，双拐点消除。需要注意跟QQ连连看不同的是没有实现更高阶的拐点消除。</li></ol><h2 id="附录-遇到的问题"><a class="markdownIt-Anchor" href="#附录-遇到的问题"></a> 附录: 遇到的问题</h2><h3 id="列表的清空"><a class="markdownIt-Anchor" href="#列表的清空"></a> <a href="https://www.cnblogs.com/BackingStar/p/10986775.html" target="_blank" rel="noopener">列表的清空</a></h3><p>代码中有一段，在line满了后，会将line清空，再添加</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> len(line) == V_NUM:</span><br><span class="line">    result.append(line)</span><br><span class="line">    line = []</span><br></pre></td></tr></table></figure><p>注意： 这边的写法<code>line = []</code>是可行的。而<code>line.clear()</code>是不行的。原因是涉及<strong>内存空间引用问题</strong></p><p>原因在于: <code>list.clear()</code>会清除当前变量指向的内存地址内容，而<code>line = []</code>其实是指向了另一块地址。因此导致了最终的结果是<code>line = []</code>的result为<code>[[1,2,3...], [2, 3, 4...]]</code>；而<code>list.clear()</code>的result全为空<code>[[],[],[]]]</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a= [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">print(id(a))</span><br><span class="line"><span class="comment"># 1785191184200</span></span><br><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">print(id(a))</span><br><span class="line"><span class="comment"># 1785191276296</span></span><br><span class="line">a.clear()</span><br><span class="line">print(id(a))</span><br><span class="line"><span class="comment"># 1785191276296</span></span><br></pre></td></tr></table></figure><h3 id="图片的维度问题"><a class="markdownIt-Anchor" href="#图片的维度问题"></a> 图片的维度问题:</h3><p>开源代码提供的empty.png图片规格为: 25*21像素。而25对应的为y， 21对应的为x。而需要注意的是在代码中，表达为<code>img[0: 25, 0: 21]</code></p><h3 id="getwindowrect窗口大小有误"><a class="markdownIt-Anchor" href="#getwindowrect窗口大小有误"></a> GetWindowRect窗口大小有误</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取窗体坐标位置(左上)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getGameWindowPosition</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># FindWindow(lpClassName=None, lpWindowName=None)  窗口类名 窗口标题名</span></span><br><span class="line">    window = win32gui.FindWindow(<span class="keyword">None</span>,WINDOW_TITLE)</span><br><span class="line">    <span class="comment"># 没有定位到游戏窗体</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> window:</span><br><span class="line">        print(<span class="string">'定位游戏窗体失败，5秒后重试...'</span>)</span><br><span class="line">        time.sleep(<span class="number">5</span>)</span><br><span class="line">        window = win32gui.FindWindow(<span class="keyword">None</span>,WINDOW_TITLE)</span><br><span class="line">    <span class="comment"># 定位到游戏窗体</span></span><br><span class="line">    win32gui.SetForegroundWindow(window) <span class="comment"># 将窗体顶置</span></span><br><span class="line">    pos = win32gui.GetWindowRect(window)</span><br><span class="line">    print(<span class="string">"定位到游戏窗体："</span> + str(pos))</span><br><span class="line">    <span class="keyword">return</span> (pos[<span class="number">0</span>],pos[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>如图操作下来, 发现返回的pos为(408, 172)，但用spy++抓到的窗口左上角坐标为(510, 215)，研究发现横、纵都是1.25倍， 以为是分辨率的问题，所以打开了“显示设置”，结果正好看到了缩放布局是125%，因此问题可能出现在这个设置上，果然修改为100%后，程序能够正常运行。</p><p>额外，百度也找到了这个问题——<a href="https://blog.csdn.net/snfdess/article/details/104169771?utm_medium=distribute.pc_relevant.none-task-blog-title-2&amp;spm=1001.2101.3001.4242" target="_blank" rel="noopener">win32gui.GetWindowRect在win10上获取窗口宽高不正确的另一种可能</a>; <a href="https://blog.csdn.net/See_Star/article/details/103940462" target="_blank" rel="noopener">win32gui.GetWindowRect() 取值不准的解决方案</a>——亲测这个无效</p><h2 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录:</h2><p>config.py中需要注意的设置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方块宽度(算上了边界)</span></span><br><span class="line">SQUARE_WIDTH = <span class="number">65</span></span><br><span class="line"><span class="comment"># 方块高度(算上了边界)</span></span><br><span class="line">SQUARE_HEIGHT = <span class="number">65</span></span><br><span class="line"><span class="comment"># ==&gt; 所以每块的大小为(65, 65, 3)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 切片处理时候的左上、右下坐标：</span></span><br><span class="line"><span class="comment"># 注意  这里要么保证是21*25(因为开源代码里的empty.png提供的是21*25像素的)。如果不是（比如四个数据是10,10,50,50；也就是40*40像素），那么就把empty.png图片替换成对应大小的一张图片（比如40*40）。图片可以没用，但程序中不能</span></span><br><span class="line">SUB_LT_X = <span class="number">5</span></span><br><span class="line">SUB_LT_Y = <span class="number">5</span></span><br><span class="line"><span class="comment"># 下面两个值得小于60, 因此还有5是边界</span></span><br><span class="line">SUB_RB_X = <span class="number">26</span></span><br><span class="line">SUB_RB_Y = <span class="number">30</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;近来无事，又研究其了之前看到过的&lt;a href=&quot;https://github.com/TheThreeDog/Auto-Lianliankan&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;自动连连看的代码&lt;/a&gt;，碰到了一些问
      
    
    </summary>
    
    
      <category term="GitCode" scheme="https://nymrli.top/tags/GitCode/"/>
    
  </entry>
  
  <entry>
    <title>手撕操作系统中的页面置换算法</title>
    <link href="https://nymrli.top/2020/09/21/%E6%89%8B%E6%92%95%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E9%A1%B5%E9%9D%A2%E7%BD%AE%E6%8D%A2%E7%AE%97%E6%B3%95/"/>
    <id>https://nymrli.top/2020/09/21/手撕操作系统中的页面置换算法/</id>
    <published>2020-09-21T11:14:25.000Z</published>
    <updated>2020-10-31T02:39:14.652Z</updated>
    
    <content type="html"><![CDATA[<h1 id="操作系统基础-内存换页算法"><a class="markdownIt-Anchor" href="#操作系统基础-内存换页算法"></a> 操作系统基础 内存换页算法</h1><p><strong>公平算法：</strong></p><ul><li>随机算法、先来先出（FIFO）算法、第二次机会算法、时钟算法</li></ul><p><strong>非公平算法：</strong></p><ul><li>最优OPT算法、NRU算法、LRU算法、工作集算法、工作集时钟算法</li></ul><p>其中LRU算法会被面试的时候要求手撕， 因此本篇就稍微介绍一下LRU和LFU两个算法， 这两个算法除了在内存换页上会被使用到，</p><h2 id="简单介绍一些算法"><a class="markdownIt-Anchor" href="#简单介绍一些算法"></a> 简单介绍一些算法：</h2><h3 id="随机更换算法"><a class="markdownIt-Anchor" href="#随机更换算法"></a> 随机更换算法</h3><p>需要替换页面的时候，产生一个随机页面号，替换与该页面对应的物理页面。</p><h3 id="先来先出fifo算法"><a class="markdownIt-Anchor" href="#先来先出fifo算法"></a> 先来先出（FIFO）算法</h3><p>更换最早进入内存的页面。其中有Belady异常现象: 缺页率随内存块数增加而增加</p><h3 id="最优opt算法"><a class="markdownIt-Anchor" href="#最优opt算法"></a> 最优OPT算法：</h3><p>最佳置换算法是由Belady于1966年提出的一种理论上的算法。其所选择的被淘汰页面将是以后永不使用的，或许是在最长（未来）时间内不再被访问的页面。<br>采用最佳置换算法通常可保证获得<u>最低的缺页率</u>。</p><p>▲由于人们目前还无法预知，一个进程在内存的若干个页面中，哪一个页面是未来最长时间内不再被访问的，因而该算法是无法实现的。</p><p>Q： 既然无法实现， 那么他的价值是什么呢？</p><p>A： 他被作为评价一个内存换页算法效率的标榜</p><h3 id="nru算法"><a class="markdownIt-Anchor" href="#nru算法"></a> NRU算法</h3><p>最近未使用算法（Not Recently Used，NRU），就是选择一个最近没有被访问的页面来替换，在所有的最近没有使用的页面里，按照各个页面的修改位和访问位的组合来进行划分。相比LRU需要较多硬件支持， NRU算法在页表项设置两个状态位：引用位R和修改位M</p><h2 id="lru"><a class="markdownIt-Anchor" href="#lru"></a> LRU</h2><h3 id="q-什么是-lru-算法"><a class="markdownIt-Anchor" href="#q-什么是-lru-算法"></a> Q、什么是 LRU 算法?</h3><p>A: Least Recently Used最近最久未使用算法，本质一种缓存淘汰策略。</p><p>计算机的缓存容量有限，如果缓存满了就要删除一些内容，给新内容腾位置。但问题是，删除哪些内容呢？我们肯定希望删掉哪些没什么用的缓存，而把有用的数据继续留在缓存里，方便之后继续使用。那么，什么样的数据，我们判定为「有用的」的数据呢？</p><p>LRU 缓存淘汰算法就是一种常用策略。LRU 的全称是 Least Recently Used，也就是说我们认为最近使用过的数据应该是是「有用的」，很久都没用过的数据应该是无用的，内存满了就优先删那些很久没用过的数据。</p><p>▲同时它也是一种换页算法， 在内存换页上需要较多的硬件支持（计数器or栈）</p><h4 id="常见的缓存算法"><a class="markdownIt-Anchor" href="#常见的缓存算法"></a> 常见的缓存算法</h4><ul><li>LRU (Least recently used) 最近最少使用，如果数据最近被访问过，那么将来被访问的几率也更高。</li><li>LFU (Least frequently used) 最不经常使用，如果一个数据在最近一段时间内使用次数很少，那么在将来一段时间内被使用的可能性也很小。<ul><li>LFU由于涉及频率, 因此在代码实现上有个计数器来统计出现次数T，在需要换页（缓存更新的时候）将替换掉最低T的key</li></ul></li><li>FIFO (Fist in first out) 先进先出， 如果一个数据最先进入缓存中，则应该最早淘汰掉。</li></ul><h3 id="lru算法与opt算法比较"><a class="markdownIt-Anchor" href="#lru算法与opt算法比较"></a> LRU算法与OPT算法比较</h3><p>OPT是从“向后看”的观点出发的，即它是依据以后各页的使用情况进行判断，是理想状况；而LRU算法则是“向前看”的，即根据各页以前的使用情况来判断，而页面过去和未来的走向之间虽无必然的联系，但也有一定的预测关系。<br>总的来说，LRU算法是一种比较好的算法。</p><h3 id="q-算法要求"><a class="markdownIt-Anchor" href="#q-算法要求"></a> Q: 算法要求</h3><p>LRU 算法实际上是让你设计数据结构：首先要接收一个 capacity 参数作为缓存的最大容量，然后实现<strong>两个 API</strong>，一个是 put(key, val) 方法存入键值对，另一个是 get(key) 方法获取 key 对应的 val，如果 key 不存在则返回 -1。其中， get(key)的时候会把这个新查询的key放到最前端</p><p>由于性能要求，get 和 put 方法必须都是 O(1) 的时间复杂度。</p><ul><li>get需要O(1) --&gt; hash or 线性表</li><li>put需要O(1) --&gt;链表</li></ul><h3 id="coding实现"><a class="markdownIt-Anchor" href="#coding实现"></a> Coding实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lru;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LRUCache</span> </span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span><br><span class="line">        Integer key;</span><br><span class="line">        Integer val;</span><br><span class="line">        <span class="comment">// 双向列表: 前后向节点</span></span><br><span class="line">        Node nxt, prev;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Node(<span class="keyword">int</span> k, <span class="keyword">int</span> v) &#123;</span><br><span class="line">            <span class="keyword">this</span>.key = k;</span><br><span class="line">            <span class="keyword">this</span>.val = v;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"Node&#123;"</span> +</span><br><span class="line">                    <span class="string">"key="</span> + key +</span><br><span class="line">                    <span class="string">", val="</span> + val +</span><br><span class="line">                    <span class="string">'&#125;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DoubleList</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> size;</span><br><span class="line">        <span class="comment">// 头尾空指针</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> Node head;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> Node tail;</span><br><span class="line"></span><br><span class="line">        DoubleList() &#123;</span><br><span class="line">            <span class="comment">// 初始化</span></span><br><span class="line">            <span class="keyword">this</span>.size = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">this</span>.head = <span class="keyword">new</span> Node();</span><br><span class="line">            <span class="keyword">this</span>.tail = <span class="keyword">new</span> Node();</span><br><span class="line">            <span class="keyword">this</span>.head.nxt = tail;</span><br><span class="line">            <span class="keyword">this</span>.tail.prev = head;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 将节点到头部, head-&gt;nxt = node;</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> node 待插入节点</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addFirst</span><span class="params">(Node node)</span></span>&#123;</span><br><span class="line">            <span class="comment">// 4个指针关系</span></span><br><span class="line">            node.nxt = head.nxt;</span><br><span class="line">            node.prev = head;</span><br><span class="line">            head.nxt.prev = node;</span><br><span class="line">            head.nxt = node;</span><br><span class="line">            <span class="comment">// 记得增加当前容器Size</span></span><br><span class="line">            <span class="keyword">this</span>.size ++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(Node node)</span></span>&#123;</span><br><span class="line">            <span class="comment">// 略过当前节点, 调整前后指针</span></span><br><span class="line">            node.nxt.prev = node.prev;</span><br><span class="line">            node.prev.nxt = node.nxt;</span><br><span class="line">            <span class="comment">// 调整容器Size</span></span><br><span class="line">            <span class="keyword">this</span>.size--;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Node <span class="title">removeLast</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="comment">// 删除尾节点, 为tail.prev</span></span><br><span class="line">            Node node = tail.prev;</span><br><span class="line">            <span class="comment">// ▲笔误写错, 查了半小时</span></span><br><span class="line">            node.nxt= tail;</span><br><span class="line">            remove(node);</span><br><span class="line">            <span class="comment">// 删除的时候还要在mp中删除索引, 因此要返回值</span></span><br><span class="line">            <span class="keyword">return</span> node;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.size;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"DoubleList&#123;"</span> +</span><br><span class="line">                    <span class="string">"size="</span> + size +</span><br><span class="line">                    <span class="string">'&#125;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> capacity;</span><br><span class="line">    Map&lt;Integer, Node&gt; mp;</span><br><span class="line">    DoubleList list;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LRUCache</span><span class="params">(<span class="keyword">int</span> capacity)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.capacity = capacity;</span><br><span class="line">        list = <span class="keyword">new</span> DoubleList();</span><br><span class="line">        mp = <span class="keyword">new</span> HashMap&lt;Integer, Node&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 访问过的key对应的Node需要放到队首部(最近查询)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 有相应的key则返回对应Node的val, 无则返回-1</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ( mp.containsKey( key) )&#123;</span><br><span class="line">            <span class="keyword">int</span> res = mp.get(key).val;</span><br><span class="line">            <span class="comment">// ★ 把当前访问的放到队首</span></span><br><span class="line">            put(key, res);</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 1. 如果已有key, 则删除容器中原有的Node, 将其放到队首</span></span><br><span class="line"><span class="comment">     * 2. 如果没有key,</span></span><br><span class="line"><span class="comment">     *      2.1 如果容器已满, 则将队尾的排出, 再将新Node加在队首</span></span><br><span class="line"><span class="comment">     *      2.2 如果容器未满, 则直接将新Node加在队首</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(<span class="keyword">int</span> key, <span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line">        Node node = <span class="keyword">new</span> Node(key, value);</span><br><span class="line">        <span class="keyword">if</span> (mp.containsKey(key))&#123;</span><br><span class="line">            list.remove(mp.get(key));</span><br><span class="line">            list.addFirst(node);</span><br><span class="line">            mp.put(key, node);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> ( list.getSize() == capacity )&#123;</span><br><span class="line">                Node last = list.removeLast();</span><br><span class="line">                mp.remove(last.key);</span><br><span class="line">            &#125;</span><br><span class="line">            list.addFirst(node);</span><br><span class="line">            mp.put(key, node);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"LRUCache&#123;"</span> +</span><br><span class="line">                <span class="string">"capacity="</span> + capacity +</span><br><span class="line">                <span class="string">", mp="</span> + mp.toString() +</span><br><span class="line">                <span class="string">", list="</span> + list.toString() +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>LeetCode代码检验 : <a href="https://leetcode-cn.com/problems/lru-cache/" target="_blank" rel="noopener">146. LRU缓存机制</a></p><p>算法实现参考： <a href="https://www.bilibili.com/video/BV18A411i7ui?from=search&amp;seid=15979179417437329877" target="_blank" rel="noopener">LRU算法：手把手带你实现一个干啥都快的快乐算法</a>， 思路挺清晰的， 只不过只有LRUCache的代码， 需要自己实现双向链表</p><h2 id="lfu"><a class="markdownIt-Anchor" href="#lfu"></a> LFU</h2><p>LFU (Least frequently used) 最不经常使用，如果一个数据在最近一段时间内使用次数很少，那么在将来一段时间内被使用的可能性也很小。</p><ul><li>LFU由于涉及频率, 因此在代码实现上有个计数器来统计出现次数T，在需要换页（缓存更新的时候）将替换掉最低T的ke</li></ul><blockquote><p>算法实现思路：</p><ul><li>O(1)查询： hash+</li><li>O(1)修改+频率排序：set</li></ul></blockquote><h1 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h1><p>参考链接:</p><ul><li><a href="https://www.bilibili.com/video/BV1k54y1D7RB?from=search&amp;seid=6126947713407811317" target="_blank" rel="noopener">【1】简单易懂，包你学会！ | 操作系统 | 页面置换</a> ——  认知性了解</li><li><a href="https://www.bilibili.com/video/BV1xt4y1173x?from=search&amp;seid=6126947713407811317" target="_blank" rel="noopener">操作系统-页面置换<em>算法</em>（OPT、FIFO、LRU、</a>——换页过程</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;操作系统基础-内存换页算法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#操作系统基础-内存换页算法&quot;&gt;&lt;/a&gt; 操作系统基础 内存换页算法&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;公平算法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;随机算
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>docsify使用记录</title>
    <link href="https://nymrli.top/2020/09/15/docsify%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
    <id>https://nymrli.top/2020/09/15/docsify使用记录/</id>
    <published>2020-09-15T02:30:43.000Z</published>
    <updated>2020-09-15T07:45:46.873Z</updated>
    
    <content type="html"><![CDATA[<h2 id="docsify-是什么"><a class="markdownIt-Anchor" href="#docsify-是什么"></a> <em>Docsify</em> 是什么？</h2><p><em>Docsify</em> 一个神奇的<strong>动态生成文档网站的工具</strong>。<br>不同于 GitBook、Hexo 的地方是它不会生成将 <code>.md</code> 转成 <code>.html</code> 文件，所有转换工作都是<u>在运行时进行</u>。</p><p>较多使用的场景是GitHub中对某一开源程序的文档介绍，由于docsify的主题较为好看， 且轻量、易使用，因此使用也较为广泛。同时它也支持很多插件来丰富功能。但跟Hexo相比，个人感官上Hexo更适合做个人博客， 而docsify更适合专门来写程序的介绍文档</p><hr><blockquote><p>春招的时候背了很多的面经， 只不过秋招回头来看基本上又都记不太清了，于是想自己整理些面经笔记啥的。 之前也试过在个人博客上发表， 只不过感觉还是不适合阅读，因此正好想起来之前了解过Docsify，因此这次打算在写面经的时候顺便也练习、熟练下Docsify。</p></blockquote><p><a href="https://docsify.js.org/#/zh-cn/quickstart" target="_blank" rel="noopener">官方文档快速使用</a>介绍的很全了，先贴个官方文档。</p><h2 id="start-to-run-it"><a class="markdownIt-Anchor" href="#start-to-run-it"></a> Start to Run it</h2><p>1.安装docsify工具:<code>npm i docsify-cli -g</code><br>2.初始化项目: <code>docsify init [./docs]</code> , []中内容为指定生成目录, 不填默认为当前目录<br>初始化成功后，可以看到生成 目录下创建的几个文件</p><ul><li><code>index.html</code> 入口文件、插件等配置都写在这</li><li><code>README.md</code> 会做为<u>主页内容</u>渲染，编辑即可更新文档内容</li><li><code>.nojekyll</code> 用于阻止 GitHub Pages 忽略掉下划线开头的文件</li></ul><p>3.预览效果： <code>docsify serve [docs]</code>， 通过运行 <code>docsify serve</code> 启动一个本地服务器，可以方便地实时预览效果。默认访问地址 <a href="http://localhost:3000/" target="_blank" rel="noopener">http://localhost:3000</a> 。</p><hr><h2 id="多页文档"><a class="markdownIt-Anchor" href="#多页文档"></a> <a href="https://docsify.js.org/#/zh-cn/more-pages?id=%E5%A4%9A%E9%A1%B5%E6%96%87%E6%A1%A3" target="_blank" rel="noopener">多页文档</a></h2><h2 id="定制化"><a class="markdownIt-Anchor" href="#定制化"></a> <a href="https://docsify.js.org/#/zh-cn/configuration" target="_blank" rel="noopener">定制化</a></h2><ul><li><p>自定义导航栏: 设置为 <code>true</code> 后会加载 <code>_navbar.md</code> 文件，也可以自定义文件名。</p></li><li><p>自定义侧边栏: 设置为 <code>true</code> 后会加载 <code>_sidebar.md</code> 文件，也可以自定义文件名。</p></li><li><p>启用<a href="https://docsify.js.org/#/zh-cn/cover" target="_blank" rel="noopener">封面页</a>: 开启后是加载 <code>_coverpage.md</code> 文件，也可以自定义文件名。</p></li><li><h3 id="markdown"><a class="markdownIt-Anchor" href="#markdown"></a> <a href="https://docsify.js.org/#/zh-cn/configuration?id=markdown" target="_blank" rel="noopener">markdown</a>配置</h3></li></ul><h2 id="插件"><a class="markdownIt-Anchor" href="#插件"></a> 插件</h2><p>index.html</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="built_in">window</span>.$docsify = &#123;</span><br><span class="line">        name: <span class="string">'Java工程师成神之路'</span>,</span><br><span class="line">        repo: <span class="string">'https://github.com/hollischuang/toBeTopJavaer'</span>,</span><br><span class="line">          loadSidebar: <span class="literal">true</span>,</span><br><span class="line">        subMaxLevel: <span class="number">3</span>,</span><br><span class="line">        autoHeader: <span class="literal">true</span>,</span><br><span class="line">        search: &#123;</span><br><span class="line">            paths: <span class="string">'auto'</span>,</span><br><span class="line">            placeholder: <span class="string">'🔍 搜索 '</span>,</span><br><span class="line">            noData: <span class="string">'哎呀，没有找到呀！ '</span>,</span><br><span class="line">            <span class="comment">// Headline depth, 1 - 6</span></span><br><span class="line">            depth: <span class="number">3</span></span><br><span class="line">        &#125;,</span><br><span class="line">        copyCode: &#123;</span><br><span class="line">            buttonText : <span class="string">'复制'</span>,</span><br><span class="line">            errorText  : <span class="string">'Error'</span>,</span><br><span class="line">            successText: <span class="string">'OK!'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        pagination: &#123;</span><br><span class="line">            previousText: <span class="string">'上一章'</span>,</span><br><span class="line">            nextText: <span class="string">'下一章'</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        coverpage: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script src="/</span><span class="regexp">/unpkg.com/</span>docsify/lib/docsify.min.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;!--代码块复制插件--&gt;</span></span><br><span class="line"><span class="string">&lt;script src="</span><span class="comment">//unpkg.com/docsify-copy-code"&gt;&lt;/script&gt;</span></span><br><span class="line">&lt;!-- 图片缩放插件 --&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://cyc-1256109796.cos.ap-guangzhou.myqcloud.com/zoom-image.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;!--搜索插件--&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://cdn.bootcss.com/docsify/4.5.9/plugins/search.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;!--语法高亮插件--&gt;</span><br><span class="line">&lt;script src=<span class="string">"//unpkg.com/prismjs/components/prism-java.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&lt;script src=<span class="string">"//unpkg.com/prismjs/components/prism-bash.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;!--分页插件--&gt;</span><br><span class="line">&lt;script src=<span class="string">"//unpkg.com/docsify-pagination/dist/docsify-pagination.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;!--统计访问量插件--&gt;</span><br><span class="line">&lt;script <span class="keyword">async</span> src=<span class="string">"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录：</h2><p><a href="https://github.com/hollischuang/toBeTopJavaer" target="_blank" rel="noopener">To Be Top Javaer - Java工程师成神之路</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;docsify-是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#docsify-是什么&quot;&gt;&lt;/a&gt; &lt;em&gt;Docsify&lt;/em&gt; 是什么？&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Docsify&lt;/em&gt; 一个神奇的&lt;strong&gt;动态生成文
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>数据结构——单调栈</title>
    <link href="https://nymrli.top/2020/09/08/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E2%80%94%E2%80%94%E5%8D%95%E8%B0%83%E6%A0%88/"/>
    <id>https://nymrli.top/2020/09/08/数据结构——单调栈/</id>
    <published>2020-09-08T11:25:38.000Z</published>
    <updated>2020-09-23T01:08:12.742Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>秋季PAT的第一题就是单调栈，之前没怎么学过， 因此这次专门学习做下笔记。</p></blockquote><h1 id="单调栈monotone-stack"><a class="markdownIt-Anchor" href="#单调栈monotone-stack"></a> 单调栈Monotone Stack</h1><h2 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念:</h2><p>从行为上看，它不仅仅是用存储与访问受限的栈，而是一种<strong>辅助工具</strong>，用于检测数据的单调性变化并<strong>作出反应</strong>（表现: 当入栈元素会影响栈总体单调性时，要出栈一些元素以维持单调性）</p><h2 id="场景"><a class="markdownIt-Anchor" href="#场景"></a> 场景：</h2><ul><li>向左or向右找到第一个稍大（小）的元素、其索引下标；</li><li>确定某条件（单调）下的<strong>最长区间</strong>；</li><li>确定<strong>区间</strong>构成的<strong>极值</strong>，如max f（la，b]）；</li></ul><h2 id="point"><a class="markdownIt-Anchor" href="#point"></a> Point：</h2><p>单调递增栈: 指栈内元素的<strong>出栈序列</strong><u>递增</u>（或递减），而<strong>栈内元素</strong>是递减（或递增），即当元素比栈顶小的时候入栈。因此需要输出下一个最大的元素。</p><p>当然也有人是直接根据栈内元素大小关系来区别， 比如栈内元素递减就叫做递减栈。</p><p>此外没有双向栈的存在。</p><h2 id="核心思想"><a class="markdownIt-Anchor" href="#核心思想"></a> 核心思想</h2><p>在元素Y入栈的时候会跟栈顶元素X<strong>比较</strong>， 如果Y比栈内所有元素Xs都大的话，就可以拿到栈里所有的元素即区间。关键是这个比较， 就可以找到第一个满足要求的数据。</p><p>e.g.有列表[1, 3, 2, 0, 7]，从左向右遍历，当遍历为7时栈里有[3, 2, 0]，此时入栈元素为7， 能得到==&gt;那么对于0来说，右边最大的就是当前入栈元素7， 左边最小的就是栈内下一个元素2。而对3来说，此时3上边的元素就都是比3小的元素们。</p><h2 id="code模板"><a class="markdownIt-Anchor" href="#code模板"></a> Code模板：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getFirstMax</span><span class="params">(nums: List[int])</span>:</span></span><br><span class="line">    <span class="comment"># 站内元素递减栈， 输出序列递增</span></span><br><span class="line">    stack = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums) - <span class="number">1</span>, <span class="number">-1</span>, <span class="number">-1</span>):</span><br><span class="line">        val = nums[i]</span><br><span class="line">        <span class="keyword">if</span> stack <span class="keyword">and</span> val &gt; stack[<span class="number">-1</span>]:</span><br><span class="line">            stack.pop()</span><br><span class="line">        <span class="comment"># 入栈操作在之前逻辑都执行完之哦吼，最后再入栈</span></span><br><span class="line">        stack.append(val)</span><br></pre></td></tr></table></figure><p>这种写法， 主要是运用的stack.pop元素</p><h2 id="例题"><a class="markdownIt-Anchor" href="#例题"></a> 例题</h2><h3 id="leetcode496"><a class="markdownIt-Anchor" href="#leetcode496"></a> Leetcode#496：</h3><blockquote><p>单调栈</p></blockquote><h3 id="leetcode-496-下一个更大元素-i"><a class="markdownIt-Anchor" href="#leetcode-496-下一个更大元素-i"></a> <a href="https://leetcode-cn.com/problems/next-greater-element-i/" target="_blank" rel="noopener">Leetcode #496. 下一个更大元素 I</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">nextGreaterElement</span><span class="params">(self, nums1: List[int], nums2: List[int])</span> -&gt; List[int]:</span></span><br><span class="line">        hash_dict = dict()</span><br><span class="line">        stack = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums2:</span><br><span class="line">            <span class="keyword">while</span> stack <span class="keyword">and</span> i &gt; stack[<span class="number">-1</span>]:</span><br><span class="line">                <span class="comment"># 在原有序列中比栈顶元素大的就是当前入栈元素i</span></span><br><span class="line">                hash_dict[stack.pop()] = i</span><br><span class="line">            stack.append(i)</span><br><span class="line">        <span class="keyword">return</span> [hash_dict.get(i,<span class="number">-1</span>) <span class="keyword">for</span> i <span class="keyword">in</span> nums1]</span><br></pre></td></tr></table></figure><h3 id="leetcode962-最大宽度坡"><a class="markdownIt-Anchor" href="#leetcode962-最大宽度坡"></a> Leetcode<a href="https://leetcode-cn.com/problems/maximum-width-ramp/" target="_blank" rel="noopener">#962. 最大宽度坡</a>：</h3><blockquote><p>单调栈</p><p>Q： 为什么想到了单调栈？</p><p>A：参看题解：首先把A数组中的以A[0]开头的递减序列抽取出来，我们最后要求的最大的宽度坡一定是以这个序列中的某一个i为坡底的，我们反证一下</p><p>假设存在某个元素位置k不存在于上面的递减序列中，且有最大宽度j-k，这也就说明k位置的元素一定是小于k前面所有的元素的，否则就会有更长的宽度，但是既然k小于前面所有的元素，那么k就一定会被加入到序列中，与假设矛盾，所以不存在k，解一定存在递减序列中</p><p>这样的话我们可以逆向遍历数组，每次遇到元素大于栈顶的就可以计算宽度，然后将栈顶弹出，因为是逆序遍历的，所以这个宽度一定是栈顶这个坡底i能形成的最大宽度了， 逆序遍历再往前的话即使大于这个栈顶，形成的宽度也只会减小，所以这个栈顶是可以直接pop出去的，我们遍历所有的坡底求最大值就行了，时间复杂度O(N)</p><p>作者：resolmi  <a href="https://leetcode-cn.com/problems/maximum-width-ramp/solution/java-dan-diao-zhan-er-fen-jie-fa-chang-shi-jie-shi/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/maximum-width-ramp/solution/java-dan-diao-zhan-er-fen-jie-fa-chang-shi-jie-shi/</a></p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: Mrli</span></span><br><span class="line"><span class="comment"> * @Date: 2020-09-14 10:16:57</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2020-09-14 11:03:29</span></span><br><span class="line"><span class="comment"> * @Description: </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxWidthRamp</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; A)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt; <span class="keyword">int</span> &gt; st;</span><br><span class="line">    <span class="keyword">int</span> len = A.size();</span><br><span class="line">    <span class="comment">// 维护一个递减栈</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (st.empty() || A[i] &lt;= A[st.top()]) st.push(i);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> i = len - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>( i &gt; ans)&#123;</span><br><span class="line">        <span class="comment">// 根据单调栈的含义， 此时入栈A[i]， 可以得到 st.top() 右边比其大的为A[i]， 同时栈里也都是比A[i]小的元素</span></span><br><span class="line">        <span class="keyword">while</span>( !st.empty() &amp;&amp; A[st.top()] &lt;= A[i] )&#123;</span><br><span class="line">            <span class="comment">// printf("A[%d]:%d A[%d]:%d\n", st.top(), A[st.top()], i, A[i] );</span></span><br><span class="line">            ans = max(ans, i - st.top());</span><br><span class="line">            st.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        i --;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; A = &#123;<span class="number">6</span>,<span class="number">0</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> ans = maxWidthRamp(A);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt;ans &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="leetcode1124"><a class="markdownIt-Anchor" href="#leetcode1124"></a> Leetcode#1124：</h3><blockquote><p>前缀和+单调栈</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">longestWPI</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; hours)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = hours.size();</span><br><span class="line">    <span class="comment">// hash</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i ++ )&#123;</span><br><span class="line">        <span class="keyword">if</span> ( hours[i] &gt; <span class="number">8</span>) hours[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> hours[i] = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 1, 1, -1, -1, -1, -1, 1</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; sum(len + <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= len; i++ )&#123;</span><br><span class="line">        sum[i] = sum[i - <span class="number">1</span>] + hours[i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; st;</span><br><span class="line">    <span class="comment">//  顺序生成单调栈，栈中元素从第一个元素开始严格单调递减，最后一个元素肯定是数组中的最小元素所在位置</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= len; i++ )&#123;</span><br><span class="line">        <span class="keyword">if</span> ( st.empty() || sum[i] &lt; sum[st.top()]) </span><br><span class="line">            st.push(i);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/** 常规写法： */</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = len; i &gt;= <span class="number">0</span> ; i--) &#123;</span><br><span class="line">        <span class="keyword">while</span>( !st.empty() &amp;&amp; sum[st.top()] &lt; sum[i])&#123;</span><br><span class="line">            ans = max(ans, i - st.top());</span><br><span class="line">            st.pop();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** 写法二: */</span></span><br><span class="line">    <span class="keyword">int</span> i = len;</span><br><span class="line">    <span class="comment">//  倒序扫描数组，求最大长度坡</span></span><br><span class="line">    <span class="keyword">while</span>( i &gt; ans)&#123;</span><br><span class="line">        <span class="comment">// sum[st.top()] &lt; sum[i]实际就是找到 sum &gt; 0, 即后面索引j的sum - 前面索引i的sum &gt; 0</span></span><br><span class="line">        <span class="keyword">while</span>( !st.empty() &amp;&amp; sum[st.top()] &lt; sum[i])&#123;</span><br><span class="line">            ans = max(ans, i - st.top());</span><br><span class="line">            st.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        i -= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; A = &#123;<span class="number">9</span>,<span class="number">9</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">9</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> ans = longestWPI(A);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt;ans &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 此题单调栈具体怎么来的可以看题解： https://leetcode-cn.com/problems/longest-well-performing-interval/solution/can-kao-liao-ji-ge-da-shen-de-ti-jie-zhi-hou-zong-/</span></span><br></pre></td></tr></table></figure><p>参看：<a href="https://www.bilibili.com/video/BV1Pp4y1e7o5" target="_blank" rel="noopener">Bilibili【带写03】python前缀和与单调栈.mp4</a></p><h3 id="单调队列"><a class="markdownIt-Anchor" href="#单调队列"></a> 单调队列</h3><h4 id="p1886-滑动窗口-模板单调队列"><a class="markdownIt-Anchor" href="#p1886-滑动窗口-模板单调队列"></a> <a href="https://www.luogu.com.cn/problem/P1886" target="_blank" rel="noopener">P1886 滑动窗口 /【模板】单调队列</a></h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这个写法可以借鉴一下</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    <span class="keyword">int</span> id;        <span class="comment">// 下标</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v1; <span class="comment">// 最小</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v2; <span class="comment">// 最大</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="built_in">deque</span>&lt;node&gt; q1;</span><br><span class="line"><span class="built_in">deque</span>&lt;node&gt; q2;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        node nd;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; nd.val;</span><br><span class="line">        nd.id = i;</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 如果当前元素小于栈顶元素， 则栈顶元素出栈</span></span><br><span class="line">        <span class="comment">// --&gt;获得栈顶小于当前预算</span></span><br><span class="line">        <span class="keyword">while</span>( !q1.empty() &amp;&amp; nd.val &lt;= q1.back().val)&#123;</span><br><span class="line">             q1.pop_back();      </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>( !q2.empty() &amp;&amp; nd.val &gt;= q2.back().val) q2.pop_back();</span><br><span class="line">        q1.push_back(nd);</span><br><span class="line">        q2.push_back(nd);</span><br><span class="line">        <span class="keyword">if</span> ( i - q1.front().id + <span class="number">1</span> &gt; k) q1.pop_front();                 <span class="comment">// 如果栈底元素已经超出边界则出栈</span></span><br><span class="line">        <span class="keyword">if</span> ( i - q2.front().id + <span class="number">1</span> &gt; k) q2.pop_front();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (i &gt;= k)&#123;        <span class="comment">// 当索引满足窗口大小的时候才进行操作</span></span><br><span class="line">            v1.push_back(q1.front().val);                  <span class="comment">// 栈底元素为当前k窗口中最小的</span></span><br><span class="line">            v2.push_back(q2.front().val);                  <span class="comment">// 栈底元素为当前k窗口中最大的</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> len = v1.size();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">       <span class="built_in">cout</span> &lt;&lt; v1[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    len = v2.size();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">       <span class="built_in">cout</span> &lt;&lt; v2[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="holiday"><a class="markdownIt-Anchor" href="#holiday"></a> holiday</h4><p>题目描述</p><p>经过几个月辛勤的工作，FJ决定让奶牛放假。</p><p>假期可以在1…N天内任意选择一段（需要连续），每一天都有一个享受指数W。但是奶牛的要求非常苛刻，假期不能短于P天，否则奶牛不能得到足够的休息；假期也不能超过Q天，否则奶牛会玩的腻烦。</p><p>FJ想知道奶牛们能获得的最大享受指数。</p><p><strong>输入格式</strong></p><p>第一行：N,P,Q.</p><p>第二行：N个数字，中间用一个空格隔开。</p><p><strong>输出格式</strong></p><p>一个整数，奶牛们能获得的最大享受指数。</p><p>样例数据</p><p><em>input</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5 2 4</span><br><span class="line">-9 -4 -3 8 -6</span><br></pre></td></tr></table></figure><p><em>output</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><p>Hint 选择第3-4天，享受指数为-3+8=5。</p><p><strong>数据规模与约定</strong></p><p>50% 1≤N≤10000，100% 1≤N≤100000</p><p>时间限制：1s， 空间限制：256MB</p><p>思路：</p><blockquote><p>用前缀和处理前i天的指数和<br>其实就是从P的位置开始枚举，每次把i-P压入队列，如果<strong>i-Q大于队首元素的位置</strong>，弹出队首<br>每次取出队首让ans=max（sum[i]-sum[Day.front()]）<br>最后输出ans</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 9999999999</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> sum[<span class="number">100300</span>];</span><br><span class="line"><span class="keyword">int</span> n,p,q;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=-INF;</span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span>&gt; Day;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">freopen(<span class="string">"holiday.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line"><span class="comment">// freopen("holiday.out","w",stdout);</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;p,&amp;q);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> x;</span><br><span class="line">    <span class="comment">// 前缀和</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;x);</span><br><span class="line">sum[i]=sum[i<span class="number">-1</span>]+x;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=p;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> nowIndex = i - p;</span><br><span class="line">        <span class="comment">// 指数和小的放前面</span></span><br><span class="line"><span class="keyword">while</span>(!Day.empty() &amp;&amp; sum[nowIndex] &lt; sum[Day.back()] ) Day.pop_back();</span><br><span class="line">Day.push_back(nowIndex);</span><br><span class="line">        <span class="comment">// 实际上应该理解为 当前日期i - 队首的日期 &gt; Q天, 则让pop_front </span></span><br><span class="line"><span class="keyword">while</span>(!Day.empty() &amp;&amp; i - q &gt; Day.front())  Day.pop_front();</span><br><span class="line">        <span class="comment">// sum[i] - sum[Day.front()]  为索引i~Day.front()这几天的指数和</span></span><br><span class="line">ans=max(ans, sum[i]-sum[Day.front()]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结: <strong>单调队列</strong>对于处理线性<strong>滑动区间最值</strong>可谓游刃有余</p><p>借鉴: <a href="https://blog.csdn.net/jwg2732/article/details/107879262?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~first_rank_v2~rank_v25-1-107879262.nonecase&amp;utm_term=%E4%BB%80%E4%B9%88%E5%8F%AB%E5%81%9A%E5%8D%95%E8%B0%83%E6%A0%88#1.%E5%8D%95%E8%B0%83%E6%A0%88%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E4%B8%8E%E5%AE%9E%E7%8E%B0" target="_blank" rel="noopener">数据结构之单调队列与单调栈</a></p><h3 id="单调栈"><a class="markdownIt-Anchor" href="#单调栈"></a> 单调栈</h3><h4 id="p2866-usaco06novbad-hair-day-s"><a class="markdownIt-Anchor" href="#p2866-usaco06novbad-hair-day-s"></a> <a href="https://www.luogu.com.cn/problem/P2866" target="_blank" rel="noopener">P2866 [USACO06NOV]Bad Hair Day S</a></h4><p>根据题目细品: 第N头牛站最前面, 第1头站最后面, 然后如果Hi &gt; Hn, 则能看到。要求累加第i头牛能看到前面牛的头发数， 即可以理解为第i头牛往前看， 找到比它大的Hi或者边界（边界可以看做为Hi=0的）。===&gt; 输入样例从左往右找比当前元素大的第一个元素，单调递减栈–&gt;正常for i = 0</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cow</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">int</span> height;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">stack</span>&lt;cow&gt; st;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="comment">// C_i的高度</span></span><br><span class="line">       <span class="built_in">cin</span> &gt;&gt; tmp;</span><br><span class="line">       <span class="comment">// 找到比当前元素大的一个元素， 期间小的都累计</span></span><br><span class="line">       <span class="keyword">while</span>( !st.empty() &amp;&amp; tmp &gt;= st.top().height ) &#123;</span><br><span class="line">           ans += ( i - st.top().id - <span class="number">1</span>);</span><br><span class="line">           st.pop();</span><br><span class="line">       &#125;</span><br><span class="line">       st.push(&#123;i, tmp&#125;);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 到最后的时候， 剩下的递减的都是前面没有比自己高的牛了， 如样例最后剩5&lt;-6， 那么6(2)前面没数字了， 所以为0， 5前面(12)只有6了，且6的2高&lt;5的12高， 因此6-5=1有1头牛</span></span><br><span class="line">    <span class="keyword">while</span>(!st.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> now = st.top().id;</span><br><span class="line">        st.pop();</span><br><span class="line">        ans += (n - now);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>思路2：</p><ol><li>每次输入一头牛的身高，找比这头牛矮的，出栈</li><li><strong>剩下的牛皆可以看到这只牛</strong></li><li>ans值加等于栈中牛的个数</li><li>这头牛入栈</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,t;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans; <span class="comment">//注意要开long long </span></span><br><span class="line"><span class="built_in">stack</span> &lt;<span class="keyword">int</span>&gt; a;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">        <span class="comment">// 将栈内删到全都是比t的高的</span></span><br><span class="line"><span class="keyword">while</span> (!a.empty() &amp;&amp; t &gt;= a.top() )  </span><br><span class="line">a.pop();</span><br><span class="line"><span class="comment">// 那么栈里的元素都能看到i</span></span><br><span class="line">ans+=a.size();</span><br><span class="line">        <span class="comment">// 注意： 先size后push</span></span><br><span class="line">a.push(t);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="气温-列表"><a class="markdownIt-Anchor" href="#气温-列表"></a> <a href="https://blog.csdn.net/fyydhsw/article/details/102830770" target="_blank" rel="noopener">气温 列表</a> <a href="https://leetcode-cn.com/problems/daily-temperatures/" target="_blank" rel="noopener">#739 每日温度</a></h4><p>从左往右找比当前元素大的–&gt;如果当前元素比栈顶元素大，那么栈顶元素右边比其第一个大的元素就是当前入栈元素—&gt;单调递减栈（从栈底到栈顶递减）–&gt;<code>val &gt; st.top()</code>，正常for i = 0</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> ans[maxn];  <span class="comment">// 答案</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">temperature</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">int</span> tmp;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">input:</span></span><br><span class="line"><span class="comment">8</span></span><br><span class="line"><span class="comment">73 74 75 71 69 72 76 73</span></span><br><span class="line"><span class="comment">output:</span></span><br><span class="line"><span class="comment">1 1 4 2 1 1 0 0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;temperature&gt; st;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">       <span class="built_in">cin</span> &gt;&gt; val ;</span><br><span class="line">       <span class="keyword">while</span> ( !st.empty() &amp;&amp; val &gt; st.top().tmp )&#123;</span><br><span class="line">           ans[st.top().id] = i - st.top().id ; </span><br><span class="line">           st.pop();</span><br><span class="line">       &#125;</span><br><span class="line">       st.push(&#123;i, val&#125;);      <span class="comment">// 塞进去的是索引</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">       <span class="built_in">cout</span> &lt;&lt;ans[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>逆序写：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> ans[maxn];  <span class="comment">// 答案</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">temperature</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">int</span> tmp;</span><br><span class="line">    temperature()&#123;&#125;</span><br><span class="line">    temperature(<span class="keyword">int</span> _id, <span class="keyword">int</span> _tmp): id(_id), tmp(_tmp)&#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">input:</span></span><br><span class="line"><span class="comment">8</span></span><br><span class="line"><span class="comment">73 74 75 71 69 72 76 73</span></span><br><span class="line"><span class="comment">output:</span></span><br><span class="line"><span class="comment">1 1 4 2 1 1 0 0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;temperature&gt; st;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v(n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">       <span class="built_in">cin</span> &gt;&gt; v[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">int</span> val = v[i];</span><br><span class="line">       <span class="keyword">while</span>( !st.empty() &amp;&amp; val &gt;= st.top().tmp) st.pop();</span><br><span class="line">        ans[i] = st.empty()? <span class="number">0</span> : st.top().id - i;</span><br><span class="line">        st.push(temperature(i, val));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">       <span class="built_in">cout</span> &lt;&lt;ans[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="p5788-模板单调栈"><a class="markdownIt-Anchor" href="#p5788-模板单调栈"></a> <a href="https://www.luogu.com.cn/problem/P5788" target="_blank" rel="noopener">P5788 【模板】单调栈</a></h4><blockquote><p>模板写法</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ▲不知道为啥必须点开洛谷的O2优化才不会被卡后面4个点</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">    v.resize(n+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">stack</span>&lt; pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt; st;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ans(n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;v[i]);</span><br><span class="line">       <span class="keyword">while</span>( !st.empty() &amp;&amp; v[i] &gt; v[st.top().first])&#123;</span><br><span class="line">           ans[ st.top().first ] = i;</span><br><span class="line">           st.pop();</span><br><span class="line">       &#125;</span><br><span class="line">       st.push(&#123;i, v[i]&#125;);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 遍历完的时候栈里其实还有元素</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; "size: "&lt;&lt;st.size() &lt;&lt; endl;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> ( i == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"%d"</span>, ans[i]);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">" %d"</span>, ans[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>for遍历倒着写</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//my</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span> ; i--) &#123;</span><br><span class="line">    <span class="keyword">while</span>( !st.empty() &amp;&amp; v[i] &gt;= v[st.top().first])&#123;</span><br><span class="line">        st.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    ans[ i ] = st.empty() ? <span class="number">0</span>: st.top().first;</span><br><span class="line">    st.push(&#123;i, v[i]&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>// 找的题解</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,a[<span class="number">3000001</span>],b[<span class="number">3000001</span>];</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; q;<span class="comment">//开一个STL的栈 栈里面存的是数的下标即位置</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)   <span class="built_in">cin</span>&gt;&gt;a[i];<span class="comment">//输入</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">while</span>(!q.empty() <span class="keyword">and</span> a[q.top()]&lt;=a[i])<span class="comment">//查找第一个大于a[i]的数 </span></span><br><span class="line">q.pop();         <span class="comment">//否则就直接出栈</span></span><br><span class="line"><span class="keyword">if</span>(q.empty())        <span class="comment">//如果最后没有比a[i]大的数</span></span><br><span class="line">   b[i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        b[i]=q.top();        <span class="comment">//否则就记录下来</span></span><br><span class="line">        q.push(i);           <span class="comment">//将i入栈</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">cout</span>&lt;&lt;b[i]&lt;&lt;<span class="string">" "</span>;<span class="comment">//输出答案 结束</span></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>区别在于： 站内元素是栈顶元素的右边； 而顺着写， 那么栈内元素是栈顶元素的左边， 即栈顶元素为站内元素的右边；同时还有一个区别是： 顺着先能边读边写， 而倒着写必须读完再写</p><p>不用v[]的写法, 其实直接可以用<code>stack&lt; pair&lt;int, int&gt; &gt;st</code>来写，可能会更直观一些</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="built_in">stack</span>&lt; pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt; st;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ans(n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;val);</span><br><span class="line">       <span class="keyword">while</span>( !st.empty() &amp;&amp; val &gt; st.top().second )&#123;</span><br><span class="line">           ans[ st.top().first ] = i;</span><br><span class="line">           st.pop();</span><br><span class="line">       &#125;</span><br><span class="line">       st.push(&#123;i, val&#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> ( i == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"%d"</span>, ans[i]);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">" %d"</span>, ans[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>单调栈可利用的点:</p><ul><li>剩下的元素 跟 当前元素的关系；弹出元素的个数；剩余元素的个数</li><li>栈顶 和 当前元素的关系==&gt; 找到第一个比数大、小的</li></ul><p>递减栈的while中条件写 val &gt; st.top()的时候pop，正着写和反着写都一样， 但是要注意等于号的区别；顺着写判断条件完全满足题意（利用pop的动作做处理），而逆着则要考虑先后，如气温题，找第一个反而要加等号， 要pop掉直到左边第一个出现。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;秋季PAT的第一题就是单调栈，之前没怎么学过， 因此这次专门学习做下笔记。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;单调栈monotone-stack&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#单调栈mo
      
    
    </summary>
    
    
      <category term="数据结构" scheme="https://nymrli.top/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>扇区、块/簇</title>
    <link href="https://nymrli.top/2020/09/06/%E6%89%87%E5%8C%BA%E3%80%81%E5%9D%97-%E7%B0%87/"/>
    <id>https://nymrli.top/2020/09/06/扇区、块-簇/</id>
    <published>2020-09-06T06:29:31.000Z</published>
    <updated>2020-09-06T07:04:38.846Z</updated>
    
    <content type="html"><![CDATA[<h2 id="扇区"><a class="markdownIt-Anchor" href="#扇区"></a> 扇区</h2><p><strong>概念：</strong> 扇区，顾名思义，每个磁盘有多条同心圆似的磁道，磁道被分割成多个部分。每部分的弧长加上到圆心的两个半径，恰好形成一个扇形，所以叫做扇区。<strong>扇区是磁盘中最小的物理存储单位。</strong></p><h3 id="扇区大小-512b-4kb"><a class="markdownIt-Anchor" href="#扇区大小-512b-4kb"></a> 扇区大小: 512B -&gt; 4KB</h3><p>扇区(Sector)大小是固定的，默认情况下，每个扇区（Sector）为512字节，2009年后，硬盘厂商开始发布4KB字节扇区的硬盘了，4KB扇区硬盘已经在消费级市场广泛应用。但是<strong>同一块硬盘上的扇区大小一定是一致的</strong>。不可能存在多种不同大小的扇区。</p><h3 id="逻辑扇区-物理扇区"><a class="markdownIt-Anchor" href="#逻辑扇区-物理扇区"></a> 逻辑扇区、物理扇区</h3><p>物理扇区是磁盘上真实存在对应的扇区；</p><p>逻辑扇区是由于扇区大小由512B变成4KB后， 为了与老系统兼容，操作系统层面上提出来的一个概念，是为了方便操作系统读取写入硬盘数据而设置的， 给系统进行识别后，可以通过一定的公式与物理地址对应再找到到指定的物理扇区上去。</p><h4 id="由来"><a class="markdownIt-Anchor" href="#由来"></a> 由来</h4><p>关于物理扇区（physical setctor）与逻辑扇区，这个还得扯上<strong>扇区大小</strong>，由于近年来，随着对硬盘容量的要求不断增加，为了提高数据记录密度，硬盘厂商往往采用增大扇区大小的方法，于是出现了扇区大小为4096字节的硬盘。我们将这样的扇区称之为“物理扇区”。但是这样的<strong>大扇区会有兼容性问题</strong>，有的系统或软件无法适应。为了解决这个问题，硬盘内部将物理扇区在逻辑上划分为多个扇区片段并将其作为普通的扇区（一般为512字节大小）报告给操作系统及应用软件。这样的扇区片段我们称之为“逻辑扇区”。实际读写时由硬盘内的程序（固件）负责在逻辑扇区与物理扇区之间进行转换，<strong>上层程序“感觉”不到物理扇区的存在</strong>。</p><p><u>逻辑扇区是硬盘可以接受读写指令的最小操作单元，是操作系统及应用程序可以访问的扇区</u>，多数情况下其大小为512字节。<u>我们通常所说的扇区一般就是指的逻辑扇区。物理扇区是硬盘底层硬件意义上的扇区</u>，是实际执行读写操作的最小单元。是只能由硬盘直接访问的扇区，操作系统及应用程序一般无法直接访问物理扇区。一个物理扇区可以包含一个或多个逻辑扇区（比如多数硬盘的物理扇区包含了8个逻辑扇区）。当要读写某个逻辑扇区时，硬盘底层在实际操作时都会读写逻辑扇区所在的整个物理扇区。</p><p>参考： <a href="https://www.cnblogs.com/kerrycode/p/12701772.html" target="_blank" rel="noopener">存储基础知识：扇区与块/簇</a>——带物理结构图</p><h2 id="块簇"><a class="markdownIt-Anchor" href="#块簇"></a> 块/簇</h2><p>**概念：**块（Block）/簇（Cluster）是逻辑上的概念，或者说是虚拟出来的概念（逻辑概念）。 分别对应Linux与Windows操作系统中的概念。</p><p>通俗的来讲，在Windows下如NTFS等文件系统中叫做簇；在Linux下如Ext4等文件系统中叫做块（block）。每个簇或者块可以包括2、4、8、16、32、64…2048、4096等2的n次方个扇区。</p><h3 id="为什么要用磁盘块簇"><a class="markdownIt-Anchor" href="#为什么要用磁盘块簇"></a> <strong>为什么要用磁盘块/簇？</strong></h3><p>A：</p><ul><li>读取方便：由于扇区的Size比较小，数目众多时寻址时比较困难，所以操作系统就将相邻的扇区组合在一起，形成一个块，再对块进行整体的操作。(操作系统通过操作块， 来间接操作底层磁盘对扇区的读取，先找街道再找门户)</li><li>分离对底层的依赖：操作系统忽略对底层物理存储结构的设计。通过虚拟出来磁盘块的概念，在系统中认为块是最小的单位。</li></ul><h2 id="扇区与块簇的区别"><a class="markdownIt-Anchor" href="#扇区与块簇的区别"></a> 扇区与块/簇的区别</h2><p><strong>磁盘的读写基本单位</strong>是扇区。</p><ul><li><strong>磁盘</strong>的原理，物理实现，磁盘控制器是<strong>按照扇区这个单位读取等操作数据</strong>的。</li></ul><p>文件系统就是操作系统的一部分，所以**文件系统读写(操作文件)**的最小单位是块。</p><ul><li><strong>操作系统</strong>是通过<strong>块/簇来做为单位读取等操作数据</strong>的。</li></ul><p>and</p><p>从磁盘的物理结构来看存取信息的最小单位是扇区，一个扇区是512字节；</p><p>从操作系统对硬盘的存取管理来看，存取信息的最小单位是簇，簇是一个<strong>逻辑概念</strong>，一个簇可以是2、4、8、16、32或64个连续的扇区。</p><p><strong>一个簇只能被一个文件占用</strong>，哪怕是只有1个字节的文件，在磁盘上存储时也要占用一个簇，这个簇里剩下的扇区是无用的。例如用NTFS文件系统格式化的时候默认是<strong>8个扇区组成一个簇</strong>，即4096字节。所以你如果保存了一个只有1字节的文件（例如字母N），它在磁盘上实际也要占用4096字节（4K），所以“簇”也可以理解为操作系统存取信息的最小单位。</p><h3 id="qa"><a class="markdownIt-Anchor" href="#qa"></a> QA:</h3><h4 id="q-为什么磁盘块大小必须是扇区大小的整数倍呢"><a class="markdownIt-Anchor" href="#q-为什么磁盘块大小必须是扇区大小的整数倍呢"></a> <strong>Q、为什么磁盘块大小必须是扇区大小的整数倍呢？</strong></h4><p>A: 磁盘读取数据的基本单位就是一个扇区的大小，一个块的大小对于磁盘来说就是一次获取数据读取的扇区数*扇区大小，如果是整数倍的扇区数对于磁盘的IO更好，速度更快，也会更合理的利用资源。否则会对扇区进行分割。</p><h4 id="q-那么分成大簇和小簇有什么区别呢"><a class="markdownIt-Anchor" href="#q-那么分成大簇和小簇有什么区别呢"></a> Q、那么分成“大簇”和“小簇”有什么区别呢？</h4><p>A：我如果硬盘下很多小文件，那么每一个小文件，都会占用一个“簇”。虽然这些小文件都小于一个“簇”。<br>“大簇”和“小簇”当然有很多区别，但是最大的区别是：“小簇”会节省空间，而“大簇”则反之。“大簇”的优势在于有益于文件的读取存取，简单而不严谨的说就是提升硬盘性能。<br>“大簇”——读取存取速度快，占用空间大<br>“小簇”——读取存取速度慢，占用空间小<br>而现在TB时代，即便是“大簇”大家完全也HOLD住，即便你全部是几KB、几字节的小文件。“大簇”盘也不会“小簇”盘多占出太多空间，但是性能的提升确是最少几倍的，特别是面对大型程序或者游戏的时候。</p><h2 id="4k"><a class="markdownIt-Anchor" href="#4k"></a> 4K</h2><blockquote><p><strong>4K对齐</strong>的意思是对齐到磁盘开头的4K这个数值。和<strong>按4K来格式化</strong>不是一回事。</p></blockquote><p>Ans1: 4K对齐</p><p>随着时代发展，硬盘容量不断扩展，使得之前定义的每个扇区512字节不再是那么的合理，于是将每个扇区512字节改为每个扇区4096 个字节，也就是现在常说的“4K扇区”。随着<strong>NTFS</strong>成为了标准的硬盘文件系统，其文件系统的默认分配单元大小（簇）也是<strong>4096字节</strong>，为了使簇与扇区相对应，即使物理硬盘分区与计算机使用的逻辑分区对齐，保证硬盘读写效率，所以就有了“4K对齐”的概念。</p><p>新标准的”4K扇区”的硬盘在厂商为了保证与操作系统兼容的前提下，也将<strong>扇区模拟成512B</strong>（逻辑扇区），会<u>默认</u>定义为4096字节大小为一个簇，但因为其引导区占用了一个磁道共63个扇区，真正的文件系统在63号扇区之后。<br>我们通过计算得出前63个扇区大小为：512Bx63=32256B。并按照默认簇大小得出63扇区为：32256B÷4096B=7.875簇<br>即<strong>从第63个扇区结束，往后的每一个簇都会跨越两个物理单元，占据前一个单元的一小部分和后一个单元的一大部分</strong>。</p><p>而“4K对齐”主要是将硬盘的模拟扇区(512B)对齐到8的整数倍个“实际”4K扇区，即4096B*8=32768B，其正好跨过了63扇区的特性，从第64个扇区对齐。</p><p>Ans2: 4K格式化</p><p>4k对齐是硬盘分区中的一个专业术语，4K对齐就是符合<strong>4K扇区定义格式化</strong>过的硬盘，并且按照<strong>4K扇区的规则写入数据</strong>。一般来说，在给固态硬盘进行分区的时候，一定要勾选上4K对齐，否则会影响到SSD固态硬盘的性能与寿命。通俗的说，<u>如果SSD不进行4K对齐，写入数据的写入点正好会介于两个4K扇区的之间</u>，也就是说即使是写入最小量的数据，也会使用到两个4K扇区，这样会造成跨区读写，读写次数放大，从而影响磁盘性能。</p><p>SSD中的4K对齐的4K指4096字节，其中<strong>1个扇区为512字节</strong>。固态硬盘4K对齐中的<strong>2048是指2048个扇区</strong>，即<br>512B*2048=1048576B=1024KB，即<strong>1M对齐</strong>（4096就是2MB对齐），并满足4K对齐，该值只要是<strong>4096B的倍数</strong>就是4K对齐，理论上4K对齐只要是4096整数倍就可以，不过标准的一般都是选择4096。从实测来看，固态硬盘4K对齐选2048还是4096，性能区别并不大，小容量固态硬盘4K对齐，选择2048扇区对齐是可以的。而在<u>Win10</u>或者<u>大容量SSD</u>场景下，建议还是选默认的4096扇区对齐。</p><h2 id="分区操作"><a class="markdownIt-Anchor" href="#分区操作"></a> 分区操作</h2><p><img src="/2020/09/06/扇区、块-簇/1.png" alt="1"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;扇区&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#扇区&quot;&gt;&lt;/a&gt; 扇区&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;概念：&lt;/strong&gt; 扇区，顾名思义，每个磁盘有多条同心圆似的磁道，磁道被分割成多个部分。每部分的弧长加上到圆心的两个半径，
      
    
    </summary>
    
    
      <category term="计算机基础知识" scheme="https://nymrli.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>SQL练习</title>
    <link href="https://nymrli.top/2020/09/04/SQL%E7%BB%83%E4%B9%A0/"/>
    <id>https://nymrli.top/2020/09/04/SQL练习/</id>
    <published>2020-09-04T07:54:57.000Z</published>
    <updated>2020-11-08T05:12:45.626Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sql练习"><a class="markdownIt-Anchor" href="#sql练习"></a> SQL练习</h1><blockquote><p>鉴于同学被字节狂问SQL题，因此也激发了我的危机感。 作为非科班的， 写SQL还是比较慌的， 因此做下专题训练。</p></blockquote><h2 id="理论知识"><a class="markdownIt-Anchor" href="#理论知识"></a> 理论知识:</h2><p>SQL语句执行顺序</p><h3 id="1sql执行顺序"><a class="markdownIt-Anchor" href="#1sql执行顺序"></a> 1.<a href="https://www.cnblogs.com/yyjie/p/7788428.html" target="_blank" rel="noopener">sql执行顺序 </a></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(1) from </span><br><span class="line">(3) join </span><br><span class="line">(2) on </span><br><span class="line">(4) where </span><br><span class="line">(5) group by(开始使用<span class="keyword">select</span>中的别名，后面的语句中都可以使用)</span><br><span class="line">(<span class="number">6</span>) <span class="keyword">avg</span>,sum.... </span><br><span class="line">(<span class="number">7</span>) <span class="keyword">having</span> </span><br><span class="line">(<span class="number">8</span>) <span class="keyword">select</span> </span><br><span class="line">(<span class="number">9</span>) <span class="keyword">distinct</span> </span><br><span class="line">(<span class="number">10</span>) <span class="keyword">order</span> <span class="keyword">by</span></span><br></pre></td></tr></table></figure><p>2.<a href="https://blog.csdn.net/u013887008/article/details/93377939" target="_blank" rel="noopener">sql语句执行顺序</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(8) <span class="keyword">SELECT</span> (<span class="number">9</span>)<span class="keyword">DISTINCT</span>&lt;select_list&gt;</span><br><span class="line">(<span class="number">1</span>) <span class="keyword">FROM</span> &lt;left_table&gt;</span><br><span class="line">(<span class="number">3</span>) &lt;join_type&gt; <span class="keyword">JOIN</span> &lt;right_table&gt;</span><br><span class="line">(<span class="number">2</span>)         <span class="keyword">ON</span> &lt;join_condition&gt;</span><br><span class="line">(<span class="number">4</span>) <span class="keyword">WHERE</span> &lt;where_condition&gt;</span><br><span class="line">(<span class="number">5</span>) <span class="keyword">GROUP</span> <span class="keyword">BY</span> &lt;group_by_list&gt;</span><br><span class="line">(<span class="number">6</span>) <span class="keyword">WITH</span> &#123;<span class="keyword">CUBE</span>|<span class="keyword">ROLLUP</span>&#125;</span><br><span class="line">(<span class="number">7</span>) <span class="keyword">HAVING</span> &lt;having_condition&gt;</span><br><span class="line">(<span class="number">10</span>) <span class="keyword">ORDER</span> <span class="keyword">BY</span> &lt;order_by_list&gt;</span><br><span class="line">(<span class="number">11</span>) <span class="keyword">LIMIT</span> &lt;limit_number&gt;</span><br></pre></td></tr></table></figure><h3 id="用group-by需要注意的"><a class="markdownIt-Anchor" href="#用group-by需要注意的"></a> 用<code>group by</code>需要注意的:</h3><ul><li>在select<strong>指定的字段</strong><ul><li>要么就是<strong>包含在Group By语句</strong>的后面，为作为分组的依据的字段；</li><li>要么就要<strong>被包含在聚合函数</strong>中, e…g: <code>sum, avg, count</code>。</li></ul></li></ul><h3 id="sql查询语句中的-limit-与-offset-的区别"><a class="markdownIt-Anchor" href="#sql查询语句中的-limit-与-offset-的区别"></a> SQL查询语句中的 limit 与 offset 的区别：</h3><ul><li><code>limit y</code> 分句表示: 读取 y 条数据</li><li><code>limit x, y</code> 分句表示: 跳过 x 条数据，读取 y 条数据</li><li><code>limit y offset x</code> 分句表示: 跳过 x 条数据，读取 y 条数据</li></ul><h4 id="分页操作"><a class="markdownIt-Anchor" href="#分页操作"></a> 分页操作</h4><p>语法：limit开始索引，每页查询的记录数<br>注：索引从0开始<br><code>公式：开始索引=（当前页码-1）*每页查询的记录数</code>即 <code>index = (nowPageNum - 1) * pageSize</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">table</span> </span><br><span class="line"><span class="keyword">WHERE</span> 查询条件 </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 排序条件 </span><br><span class="line"><span class="keyword">LIMIT</span> ((页码<span class="number">-1</span>)*页大小),页大小;</span><br><span class="line"><span class="comment">-- LIMIT (pageNum-1)*pageSize, pageSize</span></span><br><span class="line"><span class="comment">-- 第一个参数是偏移量， 第二个是所取数据数</span></span><br></pre></td></tr></table></figure><h3 id="引号区别"><a class="markdownIt-Anchor" href="#引号区别"></a> 引号区别</h3><blockquote><p>在标准 SQL 中，字符串使用的是<strong>单引号</strong>。<br>如果字符串本身也包括单引号，则使用两个单引号（注意，不是双引号，字符串中的双引号不需要另外转义）。<br>但在其它的数据库中可能存在对 SQL 的扩展，比如在 MySQL 中允许使用单引号和双引号两种。</p></blockquote><p>MySQL 参考手册：</p><blockquote><p>字符串指用单引号<code>'</code>或双引号<code>&quot;</code>引起来的字符序列。例如：<br>‘a string’<br>“another string”<br>如果SQL服务器模式启用了NSI_QUOTES，可以只用单引号引用字符串。用双引号引用的字符串被解释为一个识别符。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">使用双字符:</span><br><span class="line">插入时          库中</span><br><span class="line">'aa''b''cc'     aa'b'cc</span><br><span class="line">"aa"b""cc"      aa"b"cc</span><br><span class="line"></span><br><span class="line">使用转义字符(\):</span><br><span class="line">插入时          库中</span><br><span class="line">'aa\'b\'cc'     aa'b'cc</span><br><span class="line">"aa\"b\"cc"     aa"b"cc</span><br><span class="line"></span><br><span class="line">在单引号包裹的字符串中使用双引号、在双引号包裹的字符串中使用单引号 不需要使用双引号或转义字符。</span><br><span class="line">插入时          库中</span><br><span class="line">"aa'b'cc"       aa'b'cc</span><br><span class="line">'aa"b"cc'       aa"b"cc</span><br></pre></td></tr></table></figure><p>反引号（`）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">保留字不能用于表名，比如desc，此时需要加入反引号来区别，但使用表名时可忽略反引号。</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">desc</span>报错</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="string">`desc`</span>成功</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="string">`test`</span>成功</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">test</span>成功</span><br><span class="line"> </span><br><span class="line">保留字不能用于字段名，比如<span class="keyword">desc</span>，此时也需要加入反引号，并且<span class="keyword">insert</span>等使用时也要加上反引号。</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="string">`test`</span>（<span class="string">`desc`</span> <span class="built_in">varchar</span>(<span class="number">255</span>)）成功</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">test</span>(<span class="keyword">desc</span>) <span class="keyword">values</span>(<span class="string">'fxf'</span>)失败</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">test</span>(<span class="string">`desc`</span>) <span class="keyword">values</span>(<span class="string">'fxf'</span>)成功</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/ZHUYUEHE/article/details/50377636?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-9.pc_relevant_is_cache&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-9.pc_relevant_is_cache" target="_blank" rel="noopener">+号</a></p><p><u>字符串数据</u>是用单引号包在外面的，而<u>+号</u>只是用来连接这些字符串的. 数据库里的字段是整型的时候不要加单引号，是字符串的时候要加，其它类型根据实际情况来,双引号就是用来拼接字符串的，单引号是sql文的固有写法，因为你要动态的来拼接，涉及到变量，所以要用“+”来组合各个字符串片段。最终结果无非就是得出能在数据库查询分析器中执行的sql文。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String sql = "<span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span> ( <span class="string">" + student.getId() + "</span> ,<span class="string">' "</span></span><br><span class="line"><span class="string">        + student.getUsername() + " '</span>,  <span class="string">" + student.getAge() + "</span> ,<span class="string">' "</span></span><br><span class="line"><span class="string">        + student.getClassnumber()+" '</span>)<span class="string">";</span></span><br></pre></td></tr></table></figure><p>因为id和age是int型的所以不用加单引号，你的Username在数据库中定义的是一个varchar型的,而对字符型进行条件查询的时候是要加 ’ '号的：<code>select count(*) from student where username= 'aaa '</code><br>因此在后台写查询字符串的时候就必须这样写: <code>string sql = &quot;select count(*) from student where username= ' &quot;+userName+ &quot; ' &quot;</code>，这样映射成的查询语句就是: <code>select count(*) from student where student= 'aaa '</code> 了.</p><hr><p>题目</p><h2 id="1-查找最晚入职员工的所有信息入门题"><a class="markdownIt-Anchor" href="#1-查找最晚入职员工的所有信息入门题"></a> 1<a href="https://www.nowcoder.com/practice/218ae58dfdcd4af195fff264e062138f?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener"> 查找最晚入职员工的所有信息</a>(入门题)</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> employees <span class="keyword">order</span> <span class="keyword">by</span> hire_date <span class="keyword">limit</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h2 id="2查找入职员工时间排名倒数第三的员工所有信息"><a class="markdownIt-Anchor" href="#2查找入职员工时间排名倒数第三的员工所有信息"></a> 2<a href="https://www.nowcoder.com/practice/ec1ca44c62c14ceb990c3c40def1ec6c?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">查找入职员工时间排名倒数第三的员工所有信息</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> employees </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> hire_date <span class="keyword">desc</span> <span class="comment">-- 递减排序</span></span><br><span class="line"><span class="keyword">limit</span> <span class="number">2</span>,<span class="number">1</span> ;<span class="comment">-- offset 2， 取1</span></span><br></pre></td></tr></table></figure><h3 id="sql查询语句中的-limit-与-offset-的区别-2"><a class="markdownIt-Anchor" href="#sql查询语句中的-limit-与-offset-的区别-2"></a> SQL查询语句中的 limit 与 offset 的区别：</h3><ul><li><code>limit y</code> 分句表示: 读取 y 条数据</li><li><code>limit x, y</code> 分句表示: 跳过 x 条数据，读取 y 条数据</li><li><code>limit y offset x</code> 分句表示: 跳过 x 条数据，读取 y 条数据</li></ul><h2 id="3-查找各个部门当前领导当前薪水详情以及其对应部门编号dept_no"><a class="markdownIt-Anchor" href="#3-查找各个部门当前领导当前薪水详情以及其对应部门编号dept_no"></a> 3<a href="https://www.nowcoder.com/practice/c63c5b54d86e4c6d880e4834bfd70c3b?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener"> 查找各个部门当前领导当前薪水详情以及其对应部门编号dept_no</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.*, d.dept_no </span><br><span class="line"><span class="keyword">from</span> salaries <span class="keyword">as</span> s</span><br><span class="line">    <span class="keyword">join</span> dept_manager <span class="keyword">as</span> d</span><br><span class="line">    <span class="keyword">on</span> s.emp_no = d.emp_no</span><br><span class="line"><span class="keyword">where</span> d.to_date=<span class="string">'9999-01-01'</span> <span class="keyword">and</span> s.to_date=<span class="string">'9999-01-01'</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> s.emp_no;</span><br></pre></td></tr></table></figure><h2 id="4-查找所有已经分配部门的员工的last_name和first_name"><a class="markdownIt-Anchor" href="#4-查找所有已经分配部门的员工的last_name和first_name"></a> 4<a href="https://www.nowcoder.com/practice/6d35b1cd593545ab985a68cd86f28671?tpId=82&amp;rp=1&amp;ru=%2Fta%2Fsql&amp;qru=%2Fta%2Fsql%2Fquestion-ranking" target="_blank" rel="noopener"> 查找所有已经分配部门的员工的last_name和first_name</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> e.last_name, e.first_name, d.dept_no </span><br><span class="line"><span class="keyword">from</span> employees e </span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> dept_emp d </span><br><span class="line"><span class="keyword">on</span> e.emp_no = d.emp_no;</span><br></pre></td></tr></table></figure><h2 id="5查找所有员工的last_name和first_name以及对应部门编号dept_no"><a class="markdownIt-Anchor" href="#5查找所有员工的last_name和first_name以及对应部门编号dept_no"></a> 5<a href="https://www.nowcoder.com/practice/dbfafafb2ee2482aa390645abd4463bf?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">查找所有员工的last_name和first_name以及对应部门编号dept_no</a></h2><blockquote><p>暂时没有分配具体部门的员工==&gt; employees有信息, 而dept_emp表中可能还没有信息；两表联合查询时以employees为准， 匹配不到dept_emp的数据用null填充—&gt;所以用外部联结的左联结</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> e.last_name, e.first_name, d.dept_no </span><br><span class="line"><span class="keyword">from</span> employees e</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> dept_emp d</span><br><span class="line"><span class="keyword">on</span> e.emp_no = d.emp_no</span><br></pre></td></tr></table></figure><h3 id="join"><a class="markdownIt-Anchor" href="#join"></a> join</h3><h4 id="内联结inner-join"><a class="markdownIt-Anchor" href="#内联结inner-join"></a> 内联结(Inner join)</h4><p>联接仅返回<u>两个联接表中都具有匹配项的行</u>。例如，您可以将employees和<em>departments</em>表联接在一起，以创建一个显示每个雇员的部门名称的结果集。在内部联接中，<u>没有部门信息的雇员不包括在结果集中，没有雇员的部门也不会包括在结果集中</u>。</p><h4 id="外联结outer-join"><a class="markdownIt-Anchor" href="#外联结outer-join"></a> 外联结(Outer join)</h4><p>外联接是内部联接的扩展。 即使外联接在联接表中没有相关行，外联接也会返回这些行。 外联接共有三种类型：左联接（<a href="https://www.nhooo.com/sql/sql-left-join-operation.html" target="_blank" rel="noopener">left join</a>），右联接（<a href="https://www.nhooo.com/sql/sql-right-join-operation.html" target="_blank" rel="noopener">right join</a>）和完全联接（<a href="https://www.nhooo.com/sql/sql-full-join-operation.html" target="_blank" rel="noopener">full join</a>）。</p><p>left join(左联接) 返回包括<strong>左表中的所有记录</strong>和右表中<u>联结字段相等</u>（有匹配项）的记录 ，否则用NULL<br>right join(右联接) 返回包括<strong>右表中的所有记录</strong>和左表中<u>联结字段相等</u>的记录<br>inner join(等值连接) 只返回两个表中<u>联结字段相等</u>的行</p><p><img src="https://images0.cnblogs.com/i/407365/201405/241947220904425.jpg" alt=""></p><p>总结:</p><ul><li>inner join是两集合取交集</li><li><strong>FULL [OUTER] JOIN</strong>: 两集合取并集</li><li>left [outer] join: 产生表A的完全集, B中有匹配则有值, 没匹配则为null<ul><li>left join是以A表的记录为基础的,A可以看成左表,B可以看成右表,left join是以左表为准的.换句话说,左表(A)的记录将会全部表示出来,而右表(B)只会显示符合搜索条件的记录(例子中为: A.aID = B.bID).<br>B表记录不足的地方均为NULL填充.</li></ul></li></ul><p>Q: 最上层的两张图分别是全A和全B，那么left join和right join的作用是什么呢?</p><p>A: 联表查询, 拓展字段</p><h2 id="6-查找所有员工入职时候的薪水情况"><a class="markdownIt-Anchor" href="#6-查找所有员工入职时候的薪水情况"></a> 6<a href="https://www.nowcoder.com/practice/23142e7a23e4480781a3b978b5e0f33a?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener"> 查找所有员工入职时候的薪水情况</a></h2><blockquote><p>两表并列查找，题目重点在于: <em>有多条薪水信息中找出入职时候的薪水情况</em></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> e.emp_no, s.salary </span><br><span class="line"><span class="keyword">from</span> employees e, salaries s</span><br><span class="line"><span class="keyword">where</span> e.emp_no = s.emp_no <span class="keyword">and</span> e.hire_date = s.from_date</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> e.emp_no <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><blockquote><p>联表查询</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> e.emp_no,s.salary </span><br><span class="line"><span class="keyword">from</span> employees e</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> salaries s</span><br><span class="line"><span class="keyword">where</span> e.emp_no= s.emp_no <span class="keyword">and</span> e.hire_date = s.from_date </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> e.emp_no <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><h2 id="7查找薪水涨幅超过15次的员工号emp_no以及其对应的涨幅次数t"><a class="markdownIt-Anchor" href="#7查找薪水涨幅超过15次的员工号emp_no以及其对应的涨幅次数t"></a> 7<a href="https://www.nowcoder.com/practice/6d4a4cff1d58495182f536c548fee1ae?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">查找薪水涨幅超过15次的员工号emp_no以及其对应的涨幅次数t</a></h2><blockquote><ul><li>将select出来的数据重命名</li><li>having用法</li></ul></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.emp_no, <span class="keyword">count</span>(s.emp_no) <span class="keyword">as</span> t</span><br><span class="line"><span class="keyword">from</span> salaries s</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.emp_no</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(salary) &gt; <span class="number">15</span> </span><br><span class="line"><span class="comment">-- 由于吧count(s.emp_no)替换成t了, 因此这边可以写成 having t &gt; 15, 见执行顺序avg,count等聚合函数优先于having</span></span><br></pre></td></tr></table></figure><h3 id="question"><a class="markdownIt-Anchor" href="#question"></a> Question:</h3><p>Q: <code>select count(s.emp_no) as t</code>的执行顺序在<code>having t &gt; 15</code>之前吗?</p><p>A: No是聚合函数count优先于having</p><h3 id="sql-别名-as"><a class="markdownIt-Anchor" href="#sql-别名-as"></a> <strong>SQL 别名: AS</strong></h3><ul><li>SQL 别名用于为 表 或 表中的列 提供临时名称。</li><li>SQL 别名通常用于使 表名 或 列名 更具可读性。</li><li>SQL 一个别名只存在于查询期间。</li></ul><p>别名使用 AS 关键字赋予。</p><h4 id="什么情况下需要给表起别名"><a class="markdownIt-Anchor" href="#什么情况下需要给表起别名"></a> 什么情况下需要给表起别名？</h4><p>1.表名比较长<br>2.当需要在多个表中进行查询并把查询内容同时输出的时候<br>3.当需要进行表连接的时候（其实和2一个意思，一般情况下多个表进行连接主要目的就是为了从多个表中查询所需要的内容）</p><h3 id="having"><a class="markdownIt-Anchor" href="#having"></a> having</h3><p>在 SQL 中增加 HAVING 子句原因是，WHERE 关键字无法与<u>聚合函数</u>一起使用。</p><p>HAVING 子句可以让我们筛选分组后的各组数据。</p><h3 id="聚合函数"><a class="markdownIt-Anchor" href="#聚合函数"></a> 聚合函数</h3><blockquote><p>聚合函数对一组值执行计算并返回单一的值</p></blockquote><h4 id="聚合函数有什么特点"><a class="markdownIt-Anchor" href="#聚合函数有什么特点"></a> 聚合函数有什么特点？</h4><ol><li>除了 COUNT 以外，聚合函数忽略空值。</li><li>聚合函数经常与 SELECT 语句的 <strong>GROUP BY</strong> 子句一同使用。</li><li>所有聚合函数都具有确定性。任何时候用一组给定的输入值调用它们时，都返回相同的值。</li><li>标量函数：只能对单个的数字或值进行计算。主要包括字符函数、日期/时间函数、数值函数和转换函数这四类。</li></ol><h2 id="8-找出所有员工当前具体的薪水salary情况"><a class="markdownIt-Anchor" href="#8-找出所有员工当前具体的薪水salary情况"></a> 8<a href="https://www.nowcoder.com/practice/ae51e6d057c94f6d891735a48d1c2397?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener"> 找出所有员工当前具体的薪水salary情况</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> salary </span><br><span class="line"><span class="keyword">from</span> salaries</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">to_date</span> = <span class="string">'9999-01-01'</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> salary <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者使用group by</span></span><br><span class="line"><span class="keyword">select</span> salary </span><br><span class="line">    <span class="keyword">from</span> salaries </span><br><span class="line">    <span class="keyword">where</span> <span class="keyword">to_date</span> = <span class="string">'9999-01-01'</span></span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> salary</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> salary <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><p>说明：<br>对于distinct与group by的使用：<br>1.当对系统的性能高并且数据量大时使用group by<br>2.当对系统的性能不高时或者使用数据量少时两者借口<br>3.尽量使用group by</p><h2 id="9获取所有部门当前manager的当前薪水情况"><a class="markdownIt-Anchor" href="#9获取所有部门当前manager的当前薪水情况"></a> 9<a href="https://www.nowcoder.com/practice/4c8b4a10ca5b44189e411107e1d8bec1?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">获取所有部门当前manager的当前薪水情况</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 用where连接并列查询的两表</span></span><br><span class="line"><span class="keyword">select</span> d.dept_no, s.emp_no, s.salary </span><br><span class="line"><span class="keyword">from</span> dept_manager <span class="keyword">as</span> d, salaries <span class="keyword">as</span> s</span><br><span class="line"><span class="keyword">where</span> d.emp_no = s.emp_no <span class="keyword">and</span> d.to_date=<span class="string">'9999-01-01'</span> <span class="keyword">and</span> s.to_date=<span class="string">'9999-01-01'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 用inner join合并两表</span></span><br><span class="line"><span class="keyword">select</span> d.dept_no, s.emp_no, s.salary</span><br><span class="line"><span class="keyword">from</span> dept_manager <span class="keyword">as</span> d</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> salaries <span class="keyword">as</span> s</span><br><span class="line"><span class="keyword">on</span> d.to_date = <span class="string">'9999-01-01'</span> <span class="keyword">and</span> s.to_date = <span class="string">'9999-01-01'</span> <span class="keyword">and</span> d.emp_no = s.emp_no;</span><br></pre></td></tr></table></figure><h2 id="10-获取所有非manager的员工emp_no"><a class="markdownIt-Anchor" href="#10-获取所有非manager的员工emp_no"></a> 10<a href="https://www.nowcoder.com/practice/32c53d06443346f4a2f2ca733c19660c?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener"> 获取所有非manager的员工emp_no</a></h2><blockquote><p>把在dept_manager中的都筛选掉, 之前join的练习: A - A∩B</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- LEFT JOIN左连接 + IS NULL</span></span><br><span class="line"><span class="keyword">select</span> e.emp_no</span><br><span class="line"><span class="keyword">from</span> employees <span class="keyword">as</span> e</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> dept_manager d</span><br><span class="line"><span class="keyword">on</span> e.emp_no = d.emp_no </span><br><span class="line"><span class="keyword">where</span> d.emp_no <span class="keyword">is</span> <span class="literal">null</span></span><br><span class="line"><span class="comment">-- where d.emp_no isnull 中 isnull是个关键字, 正确用法是</span></span><br><span class="line"><span class="comment">-- ISNULL ( check_expression , replacement_value )将被检查是否为 NULL的表达式替换为replacement_value</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- NOT IN+子查询</span></span><br><span class="line"><span class="keyword">select</span> emp_no</span><br><span class="line"><span class="keyword">from</span> employees <span class="keyword">where</span> emp_no </span><br><span class="line"><span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> emp_no <span class="keyword">from</span> dept_manager)</span><br></pre></td></tr></table></figure><p>使用见: <a href="#join">#join</a></p><ul><li>只有left join的效果</li></ul><p><img src="/2020/09/04/SQL练习/left_join.jpg" alt="left_join"></p><ul><li>加上is null的效果 ==&gt; 找出B表中emp_no不匹配的(他们填充的数据都是null)</li></ul><p><img src="/2020/09/04/SQL练习/isnull.jpg" alt="isnull"></p><h2 id="11-获取所有员工当前的manager"><a class="markdownIt-Anchor" href="#11-获取所有员工当前的manager"></a> 11<a href="https://www.nowcoder.com/practice/e50d92b8673a440ebdf3a517b5b37d62?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener"> 获取所有员工当前的manager</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- my</span></span><br><span class="line"><span class="keyword">select</span> de.emp_no, dm.emp_no <span class="keyword">as</span> manager_no</span><br><span class="line"><span class="keyword">from</span> dept_emp <span class="keyword">as</span> de</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span>  dept_manager dm</span><br><span class="line"><span class="keyword">on</span> de.dept_no = dm.dept_no</span><br><span class="line"><span class="keyword">where</span> dm.to_date =<span class="string">'9999-01-01'</span> <span class="keyword">and</span> dm.emp_no != de.emp_no</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 题解: INNER JOIN+不等于; 不等于可以用&lt;&gt;或者!=表示</span></span><br><span class="line"><span class="keyword">SELECT</span> de.emp_no, dm.emp_no <span class="keyword">AS</span> manager_no </span><br><span class="line"><span class="keyword">FROM</span> dept_emp <span class="keyword">AS</span> de <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept_manager <span class="keyword">AS</span> dm</span><br><span class="line"><span class="keyword">ON</span> de.dept_no = dm.dept_no </span><br><span class="line"><span class="keyword">WHERE</span> dm.to_date = <span class="string">'9999-01-01'</span> <span class="keyword">AND</span> de.to_date = <span class="string">'9999-01-01'</span> <span class="keyword">AND</span> de.emp_no &lt;&gt; dm.emp_no</span><br></pre></td></tr></table></figure><h2 id="12-获取所有部门中当前员工薪水最高的相关信息"><a class="markdownIt-Anchor" href="#12-获取所有部门中当前员工薪水最高的相关信息"></a> 12<a href="https://www.nowcoder.com/practice/4a052e3e1df5435880d4353eb18a91c6?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener"> 获取所有部门中当前员工薪水最高的相关信息</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> de.dept_no, de.emp_no, <span class="keyword">max</span>(s.salary) </span><br><span class="line"><span class="keyword">from</span> dept_emp <span class="keyword">as</span> de </span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> salaries <span class="keyword">as</span> s</span><br><span class="line"><span class="keyword">on</span> s.emp_no = de.emp_no <span class="keyword">and</span> de.to_date = <span class="string">'9999-01-01'</span> <span class="keyword">and</span> s.to_date = <span class="string">'9999-01-01'</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> de.dept_no</span><br></pre></td></tr></table></figure><p>使用GROUP BY子句时，SELECT子句中只能有聚合键、聚合函数、常数。</p><h2 id="13-从titls表获取按照title进行分组"><a class="markdownIt-Anchor" href="#13-从titls表获取按照title进行分组"></a> 13<a href="https://www.nowcoder.com/practice/72ca694734294dc78f513e147da7821e?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener"> 从titls表获取按照title进行分组</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> title, <span class="keyword">count</span>(title) <span class="keyword">as</span> t</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> title</span><br><span class="line"><span class="keyword">having</span> t &gt;= <span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="14-从titles表获取按照title进行分组注意对于重复的emp_no进行忽略"><a class="markdownIt-Anchor" href="#14-从titles表获取按照title进行分组注意对于重复的emp_no进行忽略"></a> 14 <a href="https://www.nowcoder.com/practice/c59b452f420c47f48d9c86d69efdff20?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener"> 从titles表获取按照title进行分组，注意对于重复的emp_no进行忽略</a></h2><blockquote><p>忽略重复的emp_no， 上题的count(title) 其实可以写成count(emp_no) , 即有一条包含title的条目就++，而emp_no是其主键, 因此可以用emp_no的数目来代替title的数目。因此这题要求的不重复emp_no直接加个distinct即可</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> title, <span class="keyword">count</span>(<span class="keyword">distinct</span> emp_no) <span class="keyword">as</span> t</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> title</span><br><span class="line"><span class="keyword">having</span> t &gt;= <span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="15-查找employees表所有emp_no为奇数"><a class="markdownIt-Anchor" href="#15-查找employees表所有emp_no为奇数"></a> 15<a href="https://www.nowcoder.com/practice/a32669eb1d1740e785f105fa22741d5c?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener"> 查找employees表所有emp_no为奇数</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> emp_no, birth_date, first_name, last_name, gender, hire_date</span><br><span class="line"><span class="keyword">from</span> employees</span><br><span class="line"><span class="keyword">where</span> emp_no % <span class="number">2</span> == <span class="number">1</span> <span class="keyword">and</span> last_name != <span class="string">'Mary'</span> </span><br><span class="line"><span class="comment">-- 补充：emp_no % 2=1也可以改成MOD(emp_no, 2)=1，但是某些sql版本可能不支持后者(比如题库就不支持)</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> hire_date <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><h2 id="16-统计出当前各个title类型对应的员工当前薪水对应的平均工资"><a class="markdownIt-Anchor" href="#16-统计出当前各个title类型对应的员工当前薪水对应的平均工资"></a> 16<a href="https://www.nowcoder.com/practice/c8652e9e5a354b879e2a244200f1eaae?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener"> 统计出当前各个title类型对应的员工当前薪水对应的平均工资</a></h2><blockquote><p>通过t.title来进行分组</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> t.title, <span class="keyword">avg</span>(s.salary)</span><br><span class="line"><span class="keyword">from</span> titles <span class="keyword">as</span> t</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> salaries <span class="keyword">as</span> s</span><br><span class="line"><span class="keyword">on</span> t.emp_no = s.emp_no <span class="keyword">and</span> t.to_date =<span class="string">'9999-01-01'</span> <span class="keyword">and</span> s.to_date = <span class="string">'9999-01-01'</span></span><br><span class="line"><span class="comment">--  on t.emp_no=s.emp_no where t.to_date='9999-01-01' and s.to_date='9999-01-01' 也行, 表示在on执行后生成的虚拟表上再执行where</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> t.title</span><br></pre></td></tr></table></figure><p>注意：AVG(*)是自动命名为avg的，所以不用重命名</p><h2 id="17-获取当前薪水第二多的员工的emp_no以及其对应的薪水"><a class="markdownIt-Anchor" href="#17-获取当前薪水第二多的员工的emp_no以及其对应的薪水"></a> 17 <a href="https://www.nowcoder.com/practice/8d2c290cc4e24403b98ca82ce45d04db?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener"> 获取当前薪水第二多的员工的emp_no以及其对应的薪水</a></h2><blockquote><p>考验limit用法</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> emp_no, salary </span><br><span class="line"><span class="keyword">from</span> salaries</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> salary <span class="keyword">desc</span></span><br><span class="line"><span class="keyword">limit</span> <span class="number">1</span>, <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="18-查找当前薪水排名第二多的员工编号emp_no"><a class="markdownIt-Anchor" href="#18-查找当前薪水排名第二多的员工编号emp_no"></a> 18<a href="https://www.nowcoder.com/practice/c1472daba75d4635b7f8540b837cc719?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener"> 查找当前薪水排名第二多的员工编号emp_no</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 用MAX函数，先查出最大salary，再利用&lt;得到不含最大salary的子表，在子表上再求最大值</span></span><br><span class="line"><span class="keyword">select</span> e.emp_no, <span class="keyword">max</span>(s.salary), e.last_name, e.first_name</span><br><span class="line"><span class="keyword">from</span> employees <span class="keyword">as</span> e</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> salaries <span class="keyword">as</span> s</span><br><span class="line"><span class="keyword">on</span> e.emp_no = s.emp_no</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">to_date</span> = <span class="string">'9999-01-01'</span></span><br><span class="line"><span class="keyword">and</span> salary &lt; ( <span class="keyword">select</span> <span class="keyword">max</span>(salary) <span class="keyword">from</span> salaries <span class="keyword">as</span> s <span class="keyword">where</span> s.to_date = <span class="string">'9999-01-01'</span>)</span><br></pre></td></tr></table></figure><h2 id="19查找所有员工的last_name和first_name以及对应的dept_name"><a class="markdownIt-Anchor" href="#19查找所有员工的last_name和first_name以及对应的dept_name"></a> 19<a href="https://www.nowcoder.com/practice/5a7975fabe1146329cee4f670c27ad55?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">查找所有员工的last_name和first_name以及对应的dept_name</a></h2><blockquote><ol><li>列出<code>employees</code>表里所有员工last_name, first_name,</li><li>根据<code>employees</code>中emp_no对应<code>dept_emp</code>中的dept_no,没有分配的员工找不到对应–&gt;采用<code>LEFT JOIN</code></li><li>再根据dept_no对应<code>departments</code>表中的dept_name,没有分配的员工找不到对应–&gt;采用<code>LEFT JOIN</code></li></ol></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> e.last_name, e.first_name, dm.dept_name</span><br><span class="line"><span class="keyword">from</span> employees <span class="keyword">as</span> e</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> dept_emp <span class="keyword">as</span> de<span class="comment">-- 这边使用left join因为要针对没有分配部门的员工</span></span><br><span class="line"><span class="keyword">on</span> e.emp_no = de.emp_no</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> departments <span class="keyword">as</span> dm</span><br><span class="line"><span class="keyword">on</span> de.dept_no = dm.dept_no</span><br></pre></td></tr></table></figure><h2 id="20查找员工编号emp_now为10001其自入职以来的薪水salary涨幅值growth"><a class="markdownIt-Anchor" href="#20查找员工编号emp_now为10001其自入职以来的薪水salary涨幅值growth"></a> 20<a href="https://www.nowcoder.com/practice/c727647886004942a89848e2b5130dc2?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">查找员工编号emp_now为10001其自入职以来的薪水salary涨幅值growth</a></h2><blockquote><p>最大值-最小值</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 题解, sum的结果默认为growth</span></span><br><span class="line"><span class="keyword">select</span> (<span class="keyword">max</span>(salary)-<span class="keyword">min</span>(salary)) <span class="keyword">as</span> growth</span><br><span class="line"><span class="keyword">from</span> salaries</span><br><span class="line"><span class="keyword">where</span> emp_no=<span class="string">'10001'</span>;</span><br></pre></td></tr></table></figure><h2 id="21-查找所有员工自入职以来的薪水涨幅情况"><a class="markdownIt-Anchor" href="#21-查找所有员工自入职以来的薪水涨幅情况"></a> 21<a href="https://www.nowcoder.com/practice/fc7344ece7294b9e98401826b94c6ea5?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener"> 查找所有员工自入职以来的薪水涨幅情况</a></h2><blockquote><p>这题比较有难度</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> la.emp_no, (now.salary - la.salary) <span class="keyword">as</span> growth</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> e.emp_no, s.salary</span><br><span class="line">     <span class="keyword">from</span> employees <span class="keyword">as</span> e</span><br><span class="line">     <span class="keyword">left</span> <span class="keyword">join</span> salaries <span class="keyword">as</span> s</span><br><span class="line">     <span class="keyword">on</span> e.emp_no = s.emp_no <span class="keyword">and</span> e.hire_date = s.from_date ) <span class="keyword">as</span> la    <span class="comment">-- 入职时的工资表</span></span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span></span><br><span class="line">    (<span class="keyword">select</span> e.emp_no, s.salary</span><br><span class="line">    <span class="keyword">from</span> employees <span class="keyword">as</span> e</span><br><span class="line">    <span class="keyword">left</span> <span class="keyword">join</span> salaries <span class="keyword">as</span> s</span><br><span class="line">    <span class="keyword">on</span> e.emp_no = s.emp_no </span><br><span class="line">    <span class="keyword">where</span> s.to_date = <span class="string">'9999-01-01'</span>) <span class="keyword">as</span> <span class="keyword">now</span>      <span class="comment">-- 现在的工资表</span></span><br><span class="line"><span class="keyword">on</span> la.emp_no = now.emp_no</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> growth <span class="keyword">asc</span><span class="comment">-- order by 默认asc</span></span><br></pre></td></tr></table></figure><h2 id="22统计各个部门的工资记录数"><a class="markdownIt-Anchor" href="#22统计各个部门的工资记录数"></a> 22<a href="https://www.nowcoder.com/practice/6a62b6c0a7324350a6d9959fa7c21db3?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">统计各个部门的工资记录数</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- my</span></span><br><span class="line"><span class="keyword">select</span> d.dept_no, d.dept_name, <span class="keyword">count</span>(d.emp_no) <span class="keyword">as</span> <span class="string">`sum`</span></span><br><span class="line"><span class="keyword">from</span>  </span><br><span class="line">    (<span class="keyword">select</span> * <span class="keyword">from</span> dept_emp <span class="keyword">as</span> de</span><br><span class="line">    <span class="keyword">inner</span> <span class="keyword">join</span> departments <span class="keyword">as</span> dm</span><br><span class="line">    <span class="keyword">on</span> de.dept_no = dm.dept_no) <span class="keyword">as</span> d</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> salaries <span class="keyword">as</span> s</span><br><span class="line"><span class="keyword">on</span> d.emp_no = s.emp_no</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> d.dept_no<span class="comment">-- 根据题目要求（统计各个部门的工资记录数）确定group by对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 题解</span></span><br><span class="line"><span class="keyword">select</span> dm.dept_no, dm.dept_name, <span class="keyword">count</span>(*)</span><br><span class="line"><span class="keyword">from</span>  departments <span class="keyword">as</span> dm</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> </span><br><span class="line">    (<span class="keyword">select</span> * <span class="keyword">from</span> dept_emp <span class="keyword">as</span> de</span><br><span class="line">     <span class="comment">--    (dept_emp as de也可以</span></span><br><span class="line">    <span class="keyword">inner</span> <span class="keyword">join</span> salaries <span class="keyword">as</span> s</span><br><span class="line">    <span class="keyword">on</span> de.emp_no = s.emp_no) <span class="keyword">as</span> d</span><br><span class="line"><span class="keyword">on</span> dm.dept_no = d.dept_no</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> d.dept_no</span><br></pre></td></tr></table></figure><h2 id="23对所有员工的当前薪水按照salary进行按照1-n的排名"><a class="markdownIt-Anchor" href="#23对所有员工的当前薪水按照salary进行按照1-n的排名"></a> 23<a href="https://www.nowcoder.com/practice/b9068bfe5df74276bd015b9729eec4bf?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">对所有员工的当前薪水按照salary进行按照1-N的排名</a></h2><blockquote><p>SQL窗口函数（OLAP函数）中用于排序的专用窗口函数用法: RANK函数的使用 -&gt;mysql不支持</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> emp_no, salary, <span class="keyword">dense_rank</span>() <span class="keyword">over</span> (<span class="keyword">order</span> <span class="keyword">by</span> salary <span class="keyword">desc</span>) <span class="keyword">as</span> <span class="keyword">rank</span></span><br><span class="line"><span class="keyword">from</span> salaries</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">to_date</span> = <span class="string">'9999-01-01'</span></span><br></pre></td></tr></table></figure><p>下面介绍三种用于进行排序的专用窗口函数：</p><p>1、RANK()</p><p>在计算排序时，若存在相同位次，会跳过之后的位次。</p><p>例如，有3条排在第1位时，排序为：1，1，1，4······</p><p>2、DENSE_RANK()</p><p>这就是题目中所用到的函数，在计算排序时，若存在相同位次，不会跳过之后的位次。</p><p>例如，有3条排在第1位时，排序为：1，1，1，2······</p><p>3、ROW_NUMBER()</p><p>这个函数赋予唯一的连续位次。</p><p>例如，有3条排在第1位时，排序为：1，2，3，4······</p><p>窗口函数用法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;开窗函数&gt; over ([partition by &lt;列清单&gt;] order by &lt;排序用列清单&gt;)</span><br></pre></td></tr></table></figure><p><strong>开窗函数大体可以分为以下两种：</strong></p><p>1.能够作为开窗函数的聚合函数（sum，avg，count，max，min）<br>2.rank，dense_rank。row_number等专用开窗函数。</p><h3 id="14-开窗函数和聚合函数的区别"><a class="markdownIt-Anchor" href="#14-开窗函数和聚合函数的区别"></a> 1.4 开窗函数和聚合函数的区别</h3><p>（1）SQL 标准允许将所有聚合函数用作开窗函数，用OVER 关键字区分开窗函数和聚合函数。<br>（2）聚合函数每组只返回一个值，开窗函数每组可返回多个值。</p><h2 id="24-获取所有非manager员工当前的薪水情况"><a class="markdownIt-Anchor" href="#24-获取所有非manager员工当前的薪水情况"></a> 24<a href="https://www.nowcoder.com/practice/8fe212a6c71b42de9c15c56ce354bebe?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener"> 获取所有非manager员工当前的薪水情况</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 方法1：多表联查+NOT IN</span></span><br><span class="line"><span class="keyword">SELECT</span> de.dept_no, de.emp_no, s.salary</span><br><span class="line">    <span class="keyword">FROM</span> dept_emp <span class="keyword">AS</span> de, employees <span class="keyword">AS</span> e, salaries <span class="keyword">AS</span> s</span><br><span class="line"><span class="keyword">WHERE</span> de.emp_no=e.emp_no</span><br><span class="line">    <span class="keyword">AND</span> de.emp_no=s.emp_no</span><br><span class="line">    <span class="keyword">AND</span> s.to_date=<span class="string">'9999-01-01'</span></span><br><span class="line">    <span class="keyword">AND</span> e.emp_no <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="keyword">SELECT</span> emp_no</span><br><span class="line"><span class="keyword">FROM</span> dept_manager</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">to_date</span>=<span class="string">'9999-01-01'</span>)</span><br></pre></td></tr></table></figure><h2 id="25-获取员工其当前的薪水比其manager当前薪水还高的相"><a class="markdownIt-Anchor" href="#25-获取员工其当前的薪水比其manager当前薪水还高的相"></a> 25<a href="https://www.nowcoder.com/practice/f858d74a030e48da8e0f69e21be63bef?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener"> 获取员工其当前的薪水比其manager当前薪水还高的相</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> de.emp_no, dm.emp_no <span class="keyword">as</span> manager_no, s1.salary <span class="keyword">as</span> emp_salary, s2.salary <span class="keyword">as</span> manager_salary</span><br><span class="line"><span class="keyword">from</span> dept_emp <span class="keyword">as</span> de, dept_manager <span class="keyword">as</span> dm, salaries s1, salaries s2 </span><br><span class="line"><span class="keyword">where</span> </span><br><span class="line">    de.dept_no = dm.dept_no     <span class="comment">-- 找到部门的boss</span></span><br><span class="line"><span class="keyword">and</span> de.emp_no = s1.emp_no</span><br><span class="line"><span class="keyword">and</span> dm.emp_no = s2.emp_no</span><br><span class="line"><span class="keyword">and</span> s1.salary &gt; s2.salary</span><br><span class="line"><span class="keyword">and</span> s2.to_date=<span class="string">'9999-01-01'</span></span><br><span class="line"><span class="keyword">and</span> s1.to_date=<span class="string">'9999-01-01'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 依次构造两张表, 再链表查询</span></span><br><span class="line"><span class="keyword">SELECT</span> a.emp_no, b.manager_no, a.emp_salary, b.manager_salary</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> de.dept_no, de.emp_no, s.salary <span class="keyword">AS</span> emp_salary</span><br><span class="line">    <span class="keyword">FROM</span> dept_emp <span class="keyword">AS</span> de, salaries <span class="keyword">AS</span> s</span><br><span class="line">    <span class="keyword">WHERE</span> de.emp_no=s.emp_no</span><br><span class="line">    <span class="keyword">AND</span> de.to_date=<span class="string">'9999-01-01'</span></span><br><span class="line">    <span class="keyword">AND</span> s.to_date=<span class="string">'9999-01-01'</span>) <span class="keyword">AS</span> a,</span><br><span class="line">    (</span><br><span class="line">    <span class="keyword">SELECT</span> dm.dept_no, dm.emp_no <span class="keyword">AS</span> manager_no, s.salary <span class="keyword">AS</span> manager_salary</span><br><span class="line">    <span class="keyword">FROM</span> dept_manager <span class="keyword">AS</span> dm, salaries <span class="keyword">AS</span> s</span><br><span class="line">    <span class="keyword">WHERE</span> dm.emp_no=s.emp_no</span><br><span class="line">    <span class="keyword">AND</span> dm.to_date=<span class="string">'9999-01-01'</span></span><br><span class="line">    <span class="keyword">AND</span> s.to_date=<span class="string">'9999-01-01'</span>) <span class="keyword">AS</span> b</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">    a.dept_no=b.dept_no</span><br><span class="line">    <span class="keyword">AND</span> a.emp_salary&gt;b.manager_salary;</span><br></pre></td></tr></table></figure><h2 id="26-汇总各个部门当前员工的title类型的分配数目"><a class="markdownIt-Anchor" href="#26-汇总各个部门当前员工的title类型的分配数目"></a> 26<a href="https://www.nowcoder.com/practice/4bcb6a7d3e39423291d2f7bdbbff87f8?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener"> 汇总各个部门当前员工的title类型的分配数目</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> niuke;</span><br><span class="line"><span class="keyword">select</span> dp.dept_no, dp.dept_name, t.title, <span class="keyword">count</span>(t.title) </span><br><span class="line"><span class="keyword">from</span> departments  <span class="keyword">as</span> dp, dept_emp <span class="keyword">as</span> de, titles  <span class="keyword">as</span> t</span><br><span class="line"><span class="keyword">where</span> </span><br><span class="line">    dp.dept_no = de.dept_no</span><br><span class="line"><span class="keyword">and</span> de.emp_no = t.emp_no</span><br><span class="line"><span class="keyword">and</span> de.to_date = <span class="string">'9999-01-01'</span></span><br><span class="line"><span class="keyword">and</span> t.to_date = <span class="string">'9999-01-01'</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> dp.dept_no,t.title<span class="comment">-- 题目的难点在于理解group by的条件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 题解</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    de.dept_no <span class="keyword">AS</span> dept_no,</span><br><span class="line">    d.dept_name <span class="keyword">AS</span> dept_name,</span><br><span class="line">    t.title <span class="keyword">AS</span> title,</span><br><span class="line">    <span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> <span class="string">`count`</span><span class="comment">-- 分好组后计算每个组内有多少行</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    (<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> dept_emp <span class="keyword">AS</span> de1 <span class="keyword">WHERE</span> de1.to_date=<span class="string">'9999-01-01'</span>) <span class="keyword">AS</span> de,</span><br><span class="line">    (<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> titles <span class="keyword">AS</span> t1 <span class="keyword">WHERE</span> t1.to_date=<span class="string">'9999-01-01'</span>) <span class="keyword">AS</span> t,</span><br><span class="line">    departments <span class="keyword">AS</span> d</span><br><span class="line"><span class="keyword">WHERE</span> d.dept_no = de.dept_no</span><br><span class="line"><span class="keyword">AND</span> de.emp_no = t.emp_no</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> d.dept_no, t.title</span><br></pre></td></tr></table></figure><p>对于group by多个关键字的使用， 见<a href="https://www.bilibili.com/video/BV1r54y1e77F?from=search&amp;seid=16839861860769481900" target="_blank" rel="noopener">B站视频</a></p><ul><li>group by和distinct可以实现相同效果， 在redshift中group by快于distinct</li></ul><p><img src="/2020/09/04/SQL练习/groupby.jpg" alt="groupby"></p><h2 id="27-给出每个员工每年薪水涨幅超过5000的员工编号emp_no"><a class="markdownIt-Anchor" href="#27-给出每个员工每年薪水涨幅超过5000的员工编号emp_no"></a> <a href="https://www.nowcoder.com/practice/eb9b13e5257744db8265aa73de04fd44?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">27 给出每个员工每年薪水涨幅超过5000的员工编号emp_no</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 两个salary子查询相减: 表内根据某一列进行差值比较, 就需要分别获得两行数据, 因此可以获得两次表, on找到对应数据</span></span><br><span class="line"><span class="keyword">SELECT</span> s1.emp_no, s2.from_date, (s2.salary - s1.salary) <span class="keyword">AS</span> salary_growth</span><br><span class="line">    <span class="keyword">FROM</span> salaries <span class="keyword">AS</span> s1</span><br><span class="line">    <span class="keyword">JOIN</span> salaries <span class="keyword">AS</span> s2</span><br><span class="line"><span class="keyword">ON</span> s1.emp_no = s2.emp_no <span class="keyword">AND</span> s1.to_date = s2.from_date</span><br><span class="line">    <span class="keyword">WHERE</span> s2.salary - s1.salary &gt; <span class="number">5000</span></span><br><span class="line">    <span class="keyword">ORDER</span> <span class="keyword">BY</span> salary_growth <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><p>注意: 这边只能是(inner) JOIN, 如果LEFT JOIN, RIGHT JOIN会报错;  原数据7条, <code>join</code>以后变成49条(把s2的每一条都对应给了s1的每一条, 7*7)==&gt;和<code>SELECT * FROM salaries AS s1, salaries AS s2;</code>效果一样，但left join、right join效果不一样</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 其他题</span></span><br><span class="line"><span class="keyword">SELECT</span> s1.emp_no, s2.from_date, (s2.salary - s1.salary) <span class="keyword">AS</span> salary_growth</span><br><span class="line"><span class="keyword">FROM</span> salaries <span class="keyword">AS</span> s1, salaries <span class="keyword">AS</span> s2</span><br><span class="line"><span class="keyword">WHERE</span> s1.emp_no=s2.emp_no</span><br><span class="line"><span class="keyword">AND</span> (STRFTIME(<span class="string">'%Y'</span>, s2.from_date) - STRFTIME(<span class="string">'%Y'</span>, s1.from_date) = <span class="number">1</span></span><br><span class="line"><span class="keyword">OR</span> STRFTIME(<span class="string">'%Y'</span>, s2.to_date) - STRFTIME(<span class="string">'%Y'</span>, s1.to_date) = <span class="number">1</span>)</span><br><span class="line"><span class="keyword">AND</span> salary_growth&gt;<span class="number">5000</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> salary_growth <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><h2 id="28-查找描述信息中包括robot的电影对应的分类名称以及电影数目"><a class="markdownIt-Anchor" href="#28-查找描述信息中包括robot的电影对应的分类名称以及电影数目"></a> <a href="https://www.nowcoder.com/practice/3a303a39cc40489b99a7e1867e6507c5?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">28 查找描述信息中包括robot的电影对应的分类名称以及电影数目</a></h2><blockquote><p>这题题意其实是有一点绕的： 查找描述信息中<strong>包含robot的电影</strong>对应的<u>分类名称</u>以及<u>电影数目</u>，注意需要该分类包含电影总数量&gt;=5部</p></blockquote><p>包含robot的数据, 通过like选出: <code>select * from film where film.description like '%robot%';</code></p><p>记录:</p><ul><li>category: 16条</li><li>film: 10条</li><li>film_category: 10条</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> film f,<span class="keyword">category</span> c,film_category fc<span class="comment">-- 1600条数据</span></span><br><span class="line"><span class="keyword">where</span> f.description <span class="keyword">like</span> <span class="string">'%robot%'</span> <span class="comment">-- 160条数据</span></span><br><span class="line"><span class="keyword">and</span> f.film_id = fc.film_id<span class="comment">-- 16条数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 题解:</span></span><br><span class="line"><span class="keyword">select</span> c.name <span class="keyword">AS</span> <span class="string">`分类名称category.name`</span>, <span class="keyword">COUNT</span>(fc.film_id) <span class="keyword">AS</span> <span class="string">`电影数目count(film.film_id)`</span></span><br><span class="line"><span class="keyword">from</span> film f,<span class="keyword">category</span> c,film_category fc</span><br><span class="line"><span class="keyword">where</span> f.description <span class="keyword">like</span> <span class="string">'%robot%'</span></span><br><span class="line"><span class="keyword">and</span> f.film_id=fc.film_id</span><br><span class="line"><span class="keyword">and</span> fc.category_id=c.category_id</span><br><span class="line"><span class="keyword">and</span> c.category_id <span class="keyword">in</span> (<span class="keyword">select</span> category_id</span><br><span class="line">                      <span class="keyword">from</span> film_category</span><br><span class="line">                      <span class="keyword">group</span> <span class="keyword">by</span> category_id</span><br><span class="line">                       <span class="keyword">having</span> <span class="keyword">count</span>(film_id)&gt;=<span class="number">5</span>) <span class="comment">-- 需要该分类包含电影总数量(count(film_category.category_id))&gt;=5部</span></span><br></pre></td></tr></table></figure><p>▲注: 这题无论怎么写在本地的MYSQL上都跑不出来, 但是OJ上能过. 具体报错为: <code>In aggregated query without GROUP BY, expression #1 of SELECT list contains nonaggregated column 'niuke.c.name'; this is incompatible with sql_mode=only_full_group_by</code>, 这个是由于sql_mode设置不当引起的，修改下sql_mode即可. 做法为: <a href="https://cloud.tencent.com/developer/article/1404739" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1404739</a></p><h2 id="29-使用join查询方式找出没有分类的电影id以及名称"><a class="markdownIt-Anchor" href="#29-使用join查询方式找出没有分类的电影id以及名称"></a> <a href="https://www.nowcoder.com/practice/a158fa6e79274ac497832697b4b83658?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">29 使用join查询方式找出没有分类的电影id以及名称</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> f.film_id <span class="keyword">as</span> <span class="string">'电影id'</span>, f.title <span class="keyword">as</span> <span class="string">'名称'</span></span><br><span class="line"><span class="keyword">from</span> film f</span><br><span class="line">    <span class="keyword">left</span> <span class="keyword">join</span> film_category <span class="keyword">as</span> fc</span><br><span class="line">    <span class="keyword">on</span> f.film_id = fc.film_id</span><br><span class="line"><span class="keyword">where</span> fc.category_id <span class="keyword">is</span> <span class="literal">null</span><span class="comment">-- 注意什么时候用on 什么时候用where, 这边是固定用法</span></span><br></pre></td></tr></table></figure><h2 id="30-使用子查询的方式找出属于action分类的所有电影对应的titledescription"><a class="markdownIt-Anchor" href="#30-使用子查询的方式找出属于action分类的所有电影对应的titledescription"></a> <a href="https://www.nowcoder.com/practice/2f2e556d335d469f96b91b212c4c203e?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">30 使用子查询的方式找出属于Action分类的所有电影对应的title,description</a></h2><blockquote><p>要求子查询， 就需要先根据类别为Action将子表给筛选出来</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 联子表， 用inner join一样的</span></span><br><span class="line"><span class="keyword">select</span> f.title, f.description</span><br><span class="line">    <span class="keyword">from</span> film <span class="keyword">as</span> f, (<span class="keyword">SELECT</span> fc.film_id</span><br><span class="line">    <span class="keyword">from</span> film_category fc, <span class="keyword">category</span> c</span><br><span class="line"><span class="keyword">where</span> fc.category_id = c.category_id</span><br><span class="line"><span class="keyword">and</span> c.name = <span class="string">'Action'</span>) <span class="keyword">as</span> ff</span><br><span class="line"><span class="keyword">where</span> f.film_id = ff.film_id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 题解</span></span><br><span class="line"><span class="keyword">select</span> title,description</span><br><span class="line"><span class="keyword">from</span> film f</span><br><span class="line"><span class="keyword">where</span> f.film_id <span class="keyword">in</span> (<span class="keyword">select</span> fc.film_id</span><br><span class="line">                    <span class="keyword">from</span> <span class="keyword">category</span> c <span class="keyword">join</span> film_category fc <span class="keyword">on</span>                        c.category_id=fc.category_id</span><br><span class="line">                    <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">'Action'</span>)</span><br></pre></td></tr></table></figure><h3 id="inner-join-和-where比较实际上是cross-join笛卡尔积"><a class="markdownIt-Anchor" href="#inner-join-和-where比较实际上是cross-join笛卡尔积"></a> inner join 和 where比较(实际上是cross join<strong>笛卡尔积</strong>)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">A: <span class="keyword">select</span> a.x, b.x </span><br><span class="line">    <span class="keyword">from</span> table1 a,table2 b </span><br><span class="line">    <span class="keyword">where</span> a.id=b.id</span><br><span class="line">B: <span class="keyword">select</span> * <span class="keyword">from</span> table1 a </span><br><span class="line"><span class="keyword">cross</span> <span class="keyword">join</span> table2 b </span><br><span class="line"><span class="keyword">where</span> a.id=b.id (注：<span class="keyword">cross</span> <span class="keyword">join</span>后加条件只能用<span class="keyword">where</span>,不能用<span class="keyword">on</span>)</span><br><span class="line">C: <span class="keyword">select</span> * <span class="keyword">from</span> table1 a </span><br><span class="line">    <span class="keyword">inner</span> <span class="keyword">join</span> table2 b </span><br><span class="line">    <span class="keyword">on</span> a.id=b.id</span><br></pre></td></tr></table></figure><p>一般不建议使用方法A和B，因为如果有WHERE子句的话，往往会先生成两个表<u>行数乘积的行的数据表</u>然后才根据WHERE条件从中选择。因此，如果两个需要求交际的表太大，将会非常非常慢，不建议使用。</p><h3 id="连接查询与子查询"><a class="markdownIt-Anchor" href="#连接查询与子查询"></a> 连接查询与子查询</h3><p>初步实践证明：连接查询的性能优于子查询，所以能用连接查询的地方尽量少用子查询</p><p><strong>连接查询</strong></p><p>连接查询是将两个或多个的表按某个条件连接起来，从中选取需要的数据，连接查询是同时查询两个或两个以上的表的使用的。当不同的表中存在相同意义的字段时，可以通过该字段来连接这几个表。</p><h2 id="32-将employees表的所有员工的last_name和first_name拼接起来作为name中间以一个空格区分"><a class="markdownIt-Anchor" href="#32-将employees表的所有员工的last_name和first_name拼接起来作为name中间以一个空格区分"></a> <a href="https://www.nowcoder.com/practice/6744b90bbdde40209f8ecaac0b0516fe?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">32 将employees表的所有员工的last_name和first_name拼接起来作为Name，中间以一个空格区分</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- sqlite中无concat函数</span></span><br><span class="line"><span class="keyword">select</span> (last_name||<span class="string">' '</span>||first_name) <span class="keyword">as</span> <span class="keyword">Name</span> <span class="keyword">from</span> employees</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- mysql</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">if</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">`employees`</span>(</span><br><span class="line"><span class="string">`last_name`</span> <span class="built_in">VARCHAR</span>(<span class="number">60</span>),</span><br><span class="line"><span class="string">`first_name`</span> <span class="built_in">VARCHAR</span>(<span class="number">60</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`employees`</span> <span class="keyword">VALUES</span>(<span class="string">'mr'</span>, <span class="string">'li'</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">concat</span>(last_name, <span class="string">' '</span>, first_name) <span class="keyword">as</span> <span class="string">'Name'</span> <span class="keyword">from</span> employees<span class="comment">-- sqlite</span></span><br></pre></td></tr></table></figure><hr><h1 id="练习crud"><a class="markdownIt-Anchor" href="#练习crud"></a> 练习CRUD</h1><h2 id="33-创建一个actor表包含如下列信息"><a class="markdownIt-Anchor" href="#33-创建一个actor表包含如下列信息"></a> <a href="https://www.nowcoder.com/practice/ac233de508ef4849b0eeb4f38dcf09cf?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">33 创建一个actor表，包含如下列信息</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 发现图中有的含义列不需要用comment表示出</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> <span class="string">`actor`</span>(</span><br><span class="line">    <span class="string">`actor_id`</span> <span class="built_in">smallint</span>(<span class="number">5</span>) <span class="keyword">not</span> <span class="literal">null</span> ,</span><br><span class="line">    <span class="string">`first_name`</span> <span class="built_in">varchar</span>(<span class="number">45</span>) <span class="keyword">not</span> <span class="literal">null</span> ,</span><br><span class="line">    <span class="string">`last_name`</span> <span class="built_in">varchar</span>(<span class="number">45</span>) <span class="keyword">not</span> <span class="literal">null</span> ,</span><br><span class="line">    <span class="string">`last_update`</span> <span class="built_in">date</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">    primary <span class="keyword">key</span>(actor_id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 题解</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> actor (</span><br><span class="line">actor_id <span class="built_in">smallint</span>(<span class="number">5</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> PRIMARY <span class="keyword">KEY</span>, <span class="comment">-- 设置主键</span></span><br><span class="line">first_name <span class="built_in">varchar</span>(<span class="number">45</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">last_name <span class="built_in">varchar</span>(<span class="number">45</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">last_update <span class="keyword">timestamp</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> (datetime(<span class="string">'now'</span>,<span class="string">'localtime'</span>))) <span class="comment">-- 获取默认系统时间</span></span><br></pre></td></tr></table></figure><h2 id="34-批量插入数据"><a class="markdownIt-Anchor" href="#34-批量插入数据"></a> <a href="https://www.nowcoder.com/practice/51c12cea6a97468da149c04b7ecf362e?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">34 批量插入数据</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="string">`actor`</span><span class="keyword">values</span></span><br><span class="line">    (<span class="number">1</span>, <span class="string">'PENELOPE'</span>, <span class="string">'GUINESS'</span>, <span class="string">'2006-02-15 12:34:33'</span>),</span><br><span class="line">    (<span class="number">2</span>, <span class="string">'NICK'</span>, <span class="string">'WAHLBERG'</span>, <span class="string">'2006-02-15 12:34:33'</span>);</span><br></pre></td></tr></table></figure><h2 id="35-批量插入数据如果数据已经存在请忽略不使用replace操作"><a class="markdownIt-Anchor" href="#35-批量插入数据如果数据已经存在请忽略不使用replace操作"></a> <a href="https://www.nowcoder.com/practice/153c8a8e7805400ba8e384e03acc6b3e?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">35 批量插入数据,如果数据已经存在，请忽略，不使用replace操作</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- sqlite</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">or</span> <span class="keyword">ignore</span> <span class="keyword">into</span> actor</span><br><span class="line"><span class="keyword">values</span>(<span class="number">3</span>,<span class="string">'ED'</span>,<span class="string">'CHASE'</span>,<span class="string">'2006-02-15 12:34:33'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- mysql</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> actor</span><br><span class="line"><span class="keyword">values</span>(<span class="number">3</span>,<span class="string">'ED'</span>,<span class="string">'CHASE'</span>,<span class="string">'2006-02-15 12:34:33'</span>);</span><br></pre></td></tr></table></figure><h2 id="36-创建一个actor_name表将actor表中的所有first_name以及last_name导入改表"><a class="markdownIt-Anchor" href="#36-创建一个actor_name表将actor表中的所有first_name以及last_name导入改表"></a> <a href="https://www.nowcoder.com/practice/881385f388cf4fe98b2ed9f8897846df?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">36 创建一个actor_name表，将actor表中的所有first_name以及last_name导入改表</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">`actor_name`</span>(</span><br><span class="line"><span class="string">`first_name`</span> <span class="built_in">varchar</span>(<span class="number">45</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line"><span class="string">`last_name`</span> <span class="built_in">VARCHAR</span>(<span class="number">45</span>) <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`actor_name`</span> <span class="keyword">SELECT</span> first_name, last_name <span class="keyword">from</span> actor;</span><br></pre></td></tr></table></figure><h2 id="37-对first_name创建唯一索引uniq_idx_firstname对last_name创建普通索引idx_lastname"><a class="markdownIt-Anchor" href="#37-对first_name创建唯一索引uniq_idx_firstname对last_name创建普通索引idx_lastname"></a> <a href="https://www.nowcoder.com/practice/e1824daa0c49404aa602cf0cb34bdd75?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">37 对first_name创建唯一索引uniq_idx_firstname，对last_name创建普通索引idx_lastname</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- sqlite在已有表上创建索引方式</span></span><br><span class="line"><span class="comment">-- 1.创建单列普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> index_name <span class="keyword">ON</span> table_name (column_name);</span><br><span class="line"><span class="comment">-- 2.创建唯一索引</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> <span class="keyword">INDEX</span> index_name <span class="keyword">on</span></span><br><span class="line">table_name (column_name);</span><br><span class="line"><span class="comment">-- 注意, 这边索引是不能用``或者''框起来的</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> <span class="keyword">INDEX</span> uniq_idx_firstname <span class="keyword">on</span> actor (first_name);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> idx_lastname <span class="keyword">ON</span> actor (last_name);</span><br></pre></td></tr></table></figure><h2 id="38-针对actor表创建视图actor_name_view"><a class="markdownIt-Anchor" href="#38-针对actor表创建视图actor_name_view"></a> <a href="https://www.nowcoder.com/practice/b9db784b5e3d488cbd30bd78fdb2a862?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">38 针对actor表创建视图actor_name_view</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> actor_name_view <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> first_name first_name_v ,last_name last_name_v</span><br><span class="line"><span class="keyword">FROM</span>  actor;</span><br></pre></td></tr></table></figure><h2 id="39-针对上面的salaries表emp_no字段创建索引idx_emp_no查询emp_no为10005"><a class="markdownIt-Anchor" href="#39-针对上面的salaries表emp_no字段创建索引idx_emp_no查询emp_no为10005"></a> <a href="https://www.nowcoder.com/practice/f9fa9dc1a1fc4130b08e26c22c7a1e5f?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">39 针对上面的salaries表emp_no字段创建索引idx_emp_no，查询emp_no为10005,</a></h2><blockquote><p>针对salaries表emp_no字段创建了索引idx_emp_no。请强制使用索引查询emp_no为10005</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; -- sqlite使用索引查询的语法为</span><br><span class="line">&gt; SELECT|DELETE|UPDATE column1, column2...</span><br><span class="line">&gt; INDEXED BY (index_name)</span><br><span class="line">&gt; table_name</span><br><span class="line">&gt; WHERE (CONDITION);</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>它可以与 DELETE、UPDATE 或 SELECT 语句一起使用。<br>“INDEXED BY index-name” 子句规定必须用命名的索引来查找前面表中值，如果索引名 index-name 不存在或不能用于查询，SQLite 语句的查询失败。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> salaries INDEXED <span class="keyword">BY</span> idx_emp_no <span class="keyword">WHERE</span> emp_no = <span class="number">10005</span></span><br></pre></td></tr></table></figure><h2 id="40-在last_update后面新增加一列名字为create_date"><a class="markdownIt-Anchor" href="#40-在last_update后面新增加一列名字为create_date"></a> <a href="https://www.nowcoder.com/practice/119f04716d284cb7a19fba65dd876b03?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">40 在last_update后面新增加一列名字为create_date</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 向表中添加列 </span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name <span class="keyword">add</span> col_name <span class="built_in">char</span></span><br><span class="line"><span class="comment">-- 答案</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> actor <span class="keyword">ADD</span> create_date datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span>(<span class="string">'0000-00-00 00:00:00'</span>);</span><br></pre></td></tr></table></figure><h2 id="41-构造一个触发器audit_log在向employees表中插入一条数据的时候触发插入相关的数据到audit中"><a class="markdownIt-Anchor" href="#41-构造一个触发器audit_log在向employees表中插入一条数据的时候触发插入相关的数据到audit中"></a> <a href="https://www.nowcoder.com/practice/7e920bb2e1e74c4e83750f5c16033e2e?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">41 构造一个触发器audit_log，在向employees表中插入一条数据的时候，触发插入相关的数据到audit中</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 在MySQL中，创建触发器语法如下：</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> trigger_name</span><br><span class="line">trigger_time trigger_event <span class="keyword">ON</span> tbl_name</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="keyword">ROW</span></span><br><span class="line">trigger_stmt</span><br></pre></td></tr></table></figure><ul><li>trigger_name：标识触发器名称，用户自行指定；</li><li>trigger_time：标识触发时机，取值为 BEFORE 或 AFTER；</li><li>trigger_event：标识触发事件，取值为 INSERT、UPDATE 或 DELETE；</li><li>tbl_name：标识建立触发器的表名，即在哪张表上建立触发器；</li><li>trigger_stmt：触发器程序体，可以是一句SQL语句，或者用 BEGIN 和 END 包含的多条语句，每条语句结束要分号结尾。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> audit_log </span><br><span class="line"><span class="keyword">after</span> <span class="keyword">insert</span> <span class="keyword">on</span> employees_test</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">each</span> <span class="keyword">row</span></span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">audit</span> <span class="keyword">values</span>(new.id,new.name);</span><br><span class="line">    <span class="comment">-- new为插入到employees_test的数据</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><strong>【NEW 与 OLD 详解】</strong><br>MySQL 中定义了 NEW 和 OLD，用来表示触发器的所在表中，触发了触发器的那一行数据。<br>具体地：</p><ol><li>在 INSERT 型触发器中，NEW 用来表示将要（BEFORE）或已经（AFTER）插入的新数据；</li><li>在 UPDATE 型触发器中，OLD 用来表示将要或已经被修改的原数据，NEW 用来表示将要或已经修改为的新数据；</li><li>在 DELETE 型触发器中，OLD 用来表示将要或已经被删除的原数据；<br>使用方法： NEW.columnName （columnName 为相应数据表某一列名）</li></ol><h2 id="42-删除emp_no重复的记录只保留最小的id对应的记录"><a class="markdownIt-Anchor" href="#42-删除emp_no重复的记录只保留最小的id对应的记录"></a> <a href="https://www.nowcoder.com/practice/3d92551a6f6d4f1ebde272d20872cf05?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">42 删除emp_no重复的记录，只保留最小的id对应的记录。</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> titles_test <span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">not</span> <span class="keyword">in</span> (</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">min</span>(<span class="keyword">id</span>)</span><br><span class="line">    <span class="keyword">from</span> titles_test</span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> emp_no</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="43-将所有to_date为9999-01-01的全部更新为null且-from_date更新为2001-01-01"><a class="markdownIt-Anchor" href="#43-将所有to_date为9999-01-01的全部更新为null且-from_date更新为2001-01-01"></a> <a href="https://www.nowcoder.com/practice/859f28f43496404886a77600ea68ef59?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">43 将所有to_date为9999-01-01的全部更新为NULL,且 from_date更新为2001-01-01</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> titles_test <span class="keyword">set</span> <span class="keyword">to_date</span> = <span class="literal">null</span>, from_date = <span class="string">'2001-01-01'</span> <span class="keyword">where</span> <span class="keyword">to_date</span> =<span class="string">'9999-01-01'</span>;</span><br></pre></td></tr></table></figure><h2 id="44-将id5以及emp_no10001的行数据替换成id5以及emp_no10005其他数据保持不变使用replace实现"><a class="markdownIt-Anchor" href="#44-将id5以及emp_no10001的行数据替换成id5以及emp_no10005其他数据保持不变使用replace实现"></a> <a href="https://www.nowcoder.com/practice/2bec4d94f525458ca3d0ebf3bc8cd240?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">44 将id=5以及emp_no=10001的行数据替换成id=5以及emp_no=10005,其他数据保持不变，使用replace实现。</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 考察replace函数: 其中包含三个参数，第一个参数为该字段的名称，第二参数为该字段的需要被修改值，第三个参数为该字段修改后的值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> titles_test <span class="keyword">set</span> emp_no = <span class="keyword">replace</span>(emp_no, <span class="number">10001</span>, <span class="number">10005</span>) <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">5</span>;</span><br></pre></td></tr></table></figure><h2 id="45-将titles_test表名修改为titles_2017"><a class="markdownIt-Anchor" href="#45-将titles_test表名修改为titles_2017"></a> <a href="https://www.nowcoder.com/practice/5277d7f92aa746ab8aa42886e5d570d4?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">45 将titles_test表名修改为titles_2017</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 因为在 MySQL里面修改表名和表里的字段都是用的 ALTER TABLE + table_name + 后面的修改部分</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> titles_test <span class="keyword">rename</span> <span class="keyword">to</span> titles_2017;</span><br></pre></td></tr></table></figure><p>结合[40 在last_update后面新增加一列名字为create_date](#40 在last_update后面新增加一列名字为create_date)一起看</p><ul><li><strong>ALTER TABLE 表名 ADD 列名/索引/主键/外键等；</strong></li><li><strong>ALTER TABLE 表名 DROP 列名/索引/主键/外键等；</strong></li><li><strong>ALTER TABLE 表名 ALTER 仅用来改变某列的默认值；</strong></li><li><strong>ALTER TABLE 表名 RENAME 列名/索引名 TO 新的列名/新索引名；</strong></li><li><strong>ALTER TABLE 表名 RENAME TO/AS 新表名;</strong></li><li></li><li><strong>ALTER TABLE 表名 MODIFY 列的定义但不改变列名；</strong></li><li><strong>ALTER TABLE 表名 CHANGE 列名和定义都可以改变。</strong></li></ul><h2 id="46-在audit表上创建外键约束其emp_no对应employees_test表的主键id"><a class="markdownIt-Anchor" href="#46-在audit表上创建外键约束其emp_no对应employees_test表的主键id"></a> <a href="https://www.nowcoder.com/practice/aeaa116185f24f209ca4fa40e226de48?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">46 在audit表上创建外键约束，其emp_no对应employees_test表的主键id</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">audit</span>; </span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">audit</span>( </span><br><span class="line">    emp_no <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>, </span><br><span class="line">    create_date datetime <span class="keyword">NOT</span> <span class="literal">NULL</span>, </span><br><span class="line">    FOREIGN <span class="keyword">KEY</span>(emp_no) <span class="keyword">REFERENCES</span> employees_test(<span class="keyword">id</span>) </span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="48-将所有获取奖金的员工当前的薪水增加10"><a class="markdownIt-Anchor" href="#48-将所有获取奖金的员工当前的薪水增加10"></a> <a href="https://www.nowcoder.com/practice/d3b058dcc94147e09352eb76f93b3274?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">48 将所有获取奖金的员工当前的薪水增加10%</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> salaries <span class="keyword">set</span> salary = <span class="number">1.1</span>*salary </span><br><span class="line"><span class="keyword">where</span> salaries.to_date = <span class="string">'9999-01-01'</span></span><br><span class="line"><span class="keyword">and</span> emp_no <span class="keyword">in</span> (</span><br><span class="line">    <span class="keyword">select</span> emp_no </span><br><span class="line">    <span class="keyword">from</span> emp_bonus</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="50-将employees表中的所有员工的last_name和first_name通过连接起来"><a class="markdownIt-Anchor" href="#50-将employees表中的所有员工的last_name和first_name通过连接起来"></a> <a href="https://www.nowcoder.com/practice/810bf4ee3ac64949b08983aa66ec7bee?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">50 将employees表中的所有员工的last_name和first_name通过(’)连接起来。</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> (last_name || <span class="string">"'"</span> || first_name ) <span class="keyword">as</span> <span class="keyword">name</span> <span class="keyword">from</span> employees;</span><br></pre></td></tr></table></figure><h2 id="51-查找字符串10ab"><a class="markdownIt-Anchor" href="#51-查找字符串10ab"></a> <a href="https://www.nowcoder.com/practice/e3870bd5d6744109a902db43c105bd50?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">51 查找字符串’10,A,B’</a></h2><p>把串 “10,A,B” 中的 逗号用空串替代， 变成了 “10AB”, 然后原来串的长度 - 替换之后的串的长度 就是 被替换的 逗号的个数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ( <span class="keyword">length</span>(<span class="string">'10,A,B'</span>) - <span class="keyword">length</span>(<span class="keyword">replace</span>(<span class="string">'10,A,B'</span>, <span class="string">','</span>, <span class="string">''</span>)) ) <span class="keyword">as</span> cnt;</span><br></pre></td></tr></table></figure><h2 id="52-获取employees中的first_name查询按照first_name最后两个字母按照升序进行排列"><a class="markdownIt-Anchor" href="#52-获取employees中的first_name查询按照first_name最后两个字母按照升序进行排列"></a> <a href="https://www.nowcoder.com/practice/74d90728827e44e2864cce8b26882105?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">52 获取Employees中的first_name，查询按照first_name最后两个字母，按照升序进行排列</a></h2><blockquote><p>用mysql的话有函数<code>right</code>函数。就是取右边第几位的意思，同样还有一个 left 函数。<code>select * from salaries order by right(emp_no,2)</code>但是本题数据库是SQlite 只能用substr(emp_no,-2)</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> e.first_name</span><br><span class="line"><span class="keyword">from</span> employees <span class="keyword">as</span> e</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">substr</span>(e.first_name, <span class="number">-2</span>) <span class="keyword">asc</span>;</span><br><span class="line"><span class="comment">-- substr(e.first_name, -2, 2) 从最后第二位开始取2位</span></span><br></pre></td></tr></table></figure><h2 id="53-按照dept_no进行汇总属于同一个部门的emp_no按照逗号进行连接结果给出dept_no以及连接出的结果employees"><a class="markdownIt-Anchor" href="#53-按照dept_no进行汇总属于同一个部门的emp_no按照逗号进行连接结果给出dept_no以及连接出的结果employees"></a> <a href="https://www.nowcoder.com/practice/6e86365af15e49d8abe2c3d4b5126e87?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">53 按照dept_no进行汇总，属于同一个部门的emp_no按照逗号进行连接，结果给出dept_no以及连接出的结果employees</a></h2><blockquote><p>聚合函数<code>group_concat（X，Y）</code>，其中X是要连接的字段，Y是连接时用的符号，默认为逗号，可省略。此函数必须与GROUP BY配合使用。</p><p>此题以dept_no作为分组，将每个分组中不同的emp_no用逗号连接起来（即可省略Y）。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> dept_no, <span class="keyword">group_concat</span>(emp_no) <span class="keyword">as</span> employees</span><br><span class="line"><span class="keyword">from</span> dept_emp</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> dept_no</span><br></pre></td></tr></table></figure><h2 id="54-查找排除当前最大-最小salary之后的员工的平均工资avg_salary"><a class="markdownIt-Anchor" href="#54-查找排除当前最大-最小salary之后的员工的平均工资avg_salary"></a> <a href="https://www.nowcoder.com/practice/95078e5e1fba4438b85d9f11240bc591?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">54 查找排除当前最大、最小salary之后的员工的平均工资avg_salary</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">avg</span>(s.salary) <span class="keyword">as</span> avg_salary</span><br><span class="line"><span class="keyword">from</span> salaries <span class="keyword">as</span> s</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">to_date</span>= <span class="string">'9999-01-01'</span></span><br><span class="line"><span class="keyword">and</span> s.salary <span class="keyword">not</span> <span class="keyword">in</span> ( <span class="keyword">select</span> <span class="keyword">min</span>(salary) <span class="keyword">from</span> salaries <span class="keyword">where</span> <span class="keyword">to_date</span>= <span class="string">'9999-01-01'</span> )</span><br><span class="line"><span class="keyword">and</span> s.salary <span class="keyword">not</span> <span class="keyword">in</span> ( <span class="keyword">select</span> <span class="keyword">max</span>(salary) <span class="keyword">from</span> salaries <span class="keyword">where</span> <span class="keyword">to_date</span>= <span class="string">'9999-01-01'</span> );</span><br></pre></td></tr></table></figure><h2 id="55-分页查询employees表每5行一页返回第2页的数据"><a class="markdownIt-Anchor" href="#55-分页查询employees表每5行一页返回第2页的数据"></a> <a href="https://www.nowcoder.com/practice/f24966e0cb8a49c192b5e65339bc8c03?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">55 分页查询employees表，每5行一页，返回第2页的数据</a></h2><blockquote><p><code>limit offset, size</code><br>size是每页几条数据pageCnt，分页时offset输出页数（pageNum-1）*pageCnt</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> employees</span><br><span class="line"><span class="keyword">limit</span> (<span class="number">2</span><span class="number">-1</span>)*<span class="number">5</span>, <span class="number">5</span>;</span><br></pre></td></tr></table></figure><h2 id="56-获取所有员工的emp_no"><a class="markdownIt-Anchor" href="#56-获取所有员工的emp_no"></a> <a href="https://www.nowcoder.com/practice/e2dab5477fdd4ec0ba84031f8e817b8a?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">56 获取所有员工的emp_no</a></h2><h2 id="57-使用含有关键字exists查找未分配具体部门的员工的所有信息"><a class="markdownIt-Anchor" href="#57-使用含有关键字exists查找未分配具体部门的员工的所有信息"></a> <a href="https://www.nowcoder.com/practice/c39cbfbd111a4d92b221acec1c7c1484?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">57 使用含有关键字exists查找未分配具体部门的员工的所有信息。</a></h2><h2 id="59-获取有奖金的员工相关信息"><a class="markdownIt-Anchor" href="#59-获取有奖金的员工相关信息"></a> <a href="https://www.nowcoder.com/practice/5cdbf1dcbe8d4c689020b6b2743820bf?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">59 获取有奖金的员工相关信息。</a></h2><h2 id="60-统计salary的累计和running_total"><a class="markdownIt-Anchor" href="#60-统计salary的累计和running_total"></a> <a href="https://www.nowcoder.com/practice/58824cd644ea47d7b2b670c506a159a6?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">60 统计salary的累计和running_total</a></h2><h2 id="66-牛客每个人最近的登录日期一"><a class="markdownIt-Anchor" href="#66-牛客每个人最近的登录日期一"></a> <a href="https://www.nowcoder.com/practice/ca274ebe6eac40ab9c33ced3f2223bb2?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">66 牛客每个人最近的登录日期(一)</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">max</span>(<span class="built_in">date</span>)</span><br><span class="line"><span class="keyword">from</span> login</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> user_id</span><br></pre></td></tr></table></figure><h2 id="67-牛客每个人最近的登录日期二"><a class="markdownIt-Anchor" href="#67-牛客每个人最近的登录日期二"></a> <a href="https://www.nowcoder.com/practice/7cc3c814329546e89e71bb45c805c9ad?tpId=82&amp;tags=&amp;title=&amp;diffculty=0&amp;judgeStatus=0&amp;rp=1" target="_blank" rel="noopener">67 牛客每个人最近的登录日期(二)</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> user.name,client.name,<span class="keyword">max</span>(login.date)</span><br><span class="line"><span class="keyword">from</span> login</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> <span class="keyword">user</span> <span class="keyword">on</span> login.user_id = user.id</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> <span class="keyword">client</span> <span class="keyword">on</span> login.client_id = client.id</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> user_id</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> user.name;</span><br></pre></td></tr></table></figure><p>用<code>group by</code>需要注意的:</p><ul><li>在select<strong>指定的字段</strong><ul><li>要么就要<strong>包含在Group By语句</strong>的后面，作为分组的依据；</li><li>要么就要<strong>被包含在聚合函数</strong>中。</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;sql练习&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sql练习&quot;&gt;&lt;/a&gt; SQL练习&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;鉴于同学被字节狂问SQL题，因此也激发了我的危机感。 作为非科班的， 写SQL还是比较慌的， 因此做
      
    
    </summary>
    
    
      <category term="后端" scheme="https://nymrli.top/tags/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="SQL" scheme="https://nymrli.top/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>IDEA插件开发</title>
    <link href="https://nymrli.top/2020/07/11/IDEA%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    <id>https://nymrli.top/2020/07/11/IDEA插件开发/</id>
    <published>2020-07-11T07:50:42.000Z</published>
    <updated>2020-07-11T12:02:09.031Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新建idea-插件工程"><a class="markdownIt-Anchor" href="#新建idea-插件工程"></a> 新建IDEA 插件工程</h2><p>File -&gt; new -&gt; Project -&gt; Plugin即可</p><p>初始会生成一个项目xml配置文件, 以下是我进行修改后的</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">idea-plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>top.nymrli.privatesee<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>privateSee<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">vendor</span> <span class="attr">email</span>=<span class="string">"nymrli99@163.com"</span> <span class="attr">url</span>=<span class="string">"http://nymrli.top"</span>&gt;</span>Mrli<span class="tag">&lt;/<span class="name">vendor</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>&lt;![CDATA[</span><br><span class="line">      Highlight when private methods are called.</span><br><span class="line">    ]]&gt;<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">change-notes</span>&gt;</span>&lt;![CDATA[</span><br><span class="line">      &lt;br&gt;</span><br><span class="line">      &lt;em&gt;First created. This time will be tried&lt;/em&gt;</span><br><span class="line">      &lt;br&gt;</span><br><span class="line">    ]]&gt;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">change-notes</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- please see https://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">idea-version</span> <span class="attr">since-build</span>=<span class="string">"173.0"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- please see https://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html</span></span><br><span class="line"><span class="comment">       on how to target different products --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">depends</span>&gt;</span>com.intellij.modules.platform<span class="tag">&lt;/<span class="name">depends</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">extensions</span> <span class="attr">defaultExtensionNs</span>=<span class="string">"com.intellij"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Add your extensions here --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">extensions</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">actions</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Add your actions here --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">id</span>=<span class="string">"FirstPluginActionId"</span> <span class="attr">class</span>=<span class="string">"top.nymrli.privatesee.FirstPluginAction"</span> <span class="attr">text</span>=<span class="string">"测试"</span> <span class="attr">description</span>=<span class="string">"测试描述"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">add-to-group</span> <span class="attr">group-id</span>=<span class="string">"ToolsMenu"</span> <span class="attr">anchor</span>=<span class="string">"first"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">keyboard-shortcut</span> <span class="attr">keymap</span>=<span class="string">"$default"</span> <span class="attr">first-keystroke</span>=<span class="string">"ctrl I"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">actions</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">idea-plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="新建action"><a class="markdownIt-Anchor" href="#新建action"></a> 新建action</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstPluginAction</span> <span class="keyword">extends</span> <span class="title">AnAction</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(AnActionEvent e)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> insert action logic here</span></span><br><span class="line">        NotificationGroup notificationgroup = <span class="keyword">new</span> NotificationGroup(<span class="string">"flugin_id"</span>, NotificationDisplayType.BALLOON, <span class="keyword">true</span>);</span><br><span class="line">        Notification notification = notificationgroup.createNotification(<span class="string">"点击测试"</span>, MessageType.INFO);</span><br><span class="line">        Notifications.Bus.notify(notification);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行测试: edit configuration选择plugin, 然后选择运行</p><h2 id="启动初始化"><a class="markdownIt-Anchor" href="#启动初始化"></a> 启动初始化</h2><p>新建一个类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplicationComponent</span> <span class="keyword">implements</span> <span class="title">ApplicationComponent</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initComponent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"插件初始化"</span>);</span><br><span class="line">        TanChuanDialog dialog = <span class="keyword">new</span> TanChuanDialog();</span><br><span class="line">        dialog.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在xml配置指定</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application-components</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">component</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">implementation-class</span>&gt;</span></span><br><span class="line">        top.nymrli.privatesee.MyApplicationComponent</span><br><span class="line">      <span class="tag">&lt;/<span class="name">implementation-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">application-components</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="弹窗效果"><a class="markdownIt-Anchor" href="#弹窗效果"></a> 弹窗效果</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TanChuanDialog</span> <span class="keyword">extends</span> <span class="title">DialogWrapper</span> </span>&#123;</span><br><span class="line">    JPanel jPanel;</span><br><span class="line">    JLabel label;</span><br><span class="line">    JButton btn;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TanChuanDialog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// 设置弹窗的标题</span></span><br><span class="line">        setTitle(<span class="string">"启动弹窗"</span>);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置弹窗中间展示内容</span></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> JComponent <span class="title">createCenterPanel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        jPanel = <span class="keyword">new</span> JPanel();</span><br><span class="line">        label = <span class="keyword">new</span> JLabel(<span class="string">"显示内容"</span>);</span><br><span class="line">        jPanel.add(label);</span><br><span class="line">        <span class="keyword">return</span> jPanel;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自定义设置底部的按钮</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> JComponent <span class="title">createSouthPanel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        jPanel = <span class="keyword">new</span> JPanel();</span><br><span class="line">         btn = <span class="keyword">new</span> JButton(<span class="string">"再干一杯"</span>);</span><br><span class="line">         btn.addActionListener(e-&gt;&#123;</span><br><span class="line">             label.setText(<span class="string">"被点击了哦"</span>);</span><br><span class="line">         &#125;);</span><br><span class="line">        jPanel.add(btn);</span><br><span class="line">        <span class="keyword">return</span> jPanel;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;新建idea-插件工程&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#新建idea-插件工程&quot;&gt;&lt;/a&gt; 新建IDEA 插件工程&lt;/h2&gt;
&lt;p&gt;File -&amp;gt; new -&amp;gt; Project -&amp;gt; Plugin即可&lt;/
      
    
    </summary>
    
    
      <category term="Java" scheme="https://nymrli.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>getBargains的record和Solution</title>
    <link href="https://nymrli.top/2020/05/24/getBargains%E7%9A%84record%E5%92%8CSolution/"/>
    <id>https://nymrli.top/2020/05/24/getBargains的record和Solution/</id>
    <published>2020-05-24T08:44:25.000Z</published>
    <updated>2020-05-31T11:38:26.323Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>该篇为**<a href="https://github.com/Freedomisgood/getBargains" target="_blank" rel="noopener">getBargains</a>**仓库README.md直接搬运，记录一些appnium和andriod 10碰到的问题</p></blockquote><h2 id="自动拿券"><a class="markdownIt-Anchor" href="#自动拿券"></a> 自动拿券</h2><blockquote><p>通过别人发的口令, 打开淘宝APP进行抢券</p></blockquote><h3 id="1itchat接收群消息"><a class="markdownIt-Anchor" href="#1itchat接收群消息"></a> 1.itchat接收群消息</h3><h3 id="2将口令复制到剪贴板"><a class="markdownIt-Anchor" href="#2将口令复制到剪贴板"></a> 2.将口令复制到剪贴板</h3><h3 id="3打开淘宝app点击抢券"><a class="markdownIt-Anchor" href="#3打开淘宝app点击抢券"></a> 3.打开淘宝APP点击抢券</h3><h2 id="碰到的问题"><a class="markdownIt-Anchor" href="#碰到的问题"></a> 碰到的问题:</h2><ol><li><p>出现如下警告:<code>Warning: Activity not started, its current task has been brought to the front</code> or <code>Warning: Activity not started, intent has been delivered to currently running top-most instance.</code></p><ul><li>A: 不用管他就行, 只是个警告, 提示你有应用切到了顶层</li></ul></li><li><p>出现提示: <code>/system/bin/sh: adb: inaccessible or not found</code></p><ul><li>A: 已经在adb shell中输入的命令不需要再加上<code>adb shell</code>前缀<br>e.g.<code>umi:/ $ adb shell am start ca.zgrs.clipper/.Main</code> (umi:/)提示已经在adb shell中了</li></ul></li><li><p>查找app包名和Activity活动页面(Andriod 10)</p><ul><li>A: 原本的<code>adb shell dumpsys activity | find &quot;mFocusedActivity&quot;</code>在andriod 10上好像检测不出来</li></ul></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看包名</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> adb shell pm list packages</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看Activity</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> $ adb shell dumpsys activity com.taobao.taobao | grep ACTIVITY</span></span><br></pre></td></tr></table></figure><ol start="4"><li>adb打开应用的命令?</li></ol><ul><li>A: <code>adb shell am start -n package/launch activity</code></li></ul><ol start="5"><li><p>appnium声明driver的时候是打开指定app程序, 但如果每次都是重新打开, 那么加载淘宝的速度会很慢。应该使用切换后台</p><ul><li>A: 使用<code>driver.start_activity('com.taobao.taobao', 'com.taobao.tao.TBMainActivity')</code></li></ul><p><a href="https://blog.csdn.net/jianglianye21/article/details/89850033" target="_blank" rel="noopener">appium：一个手机运行两个APP，APP之间相互切换</a></p></li><li><p>ADB滑动解锁问题: 在一个位置按住</p><ul><li>A: 暂时还没解决, appnium可以, 但ADB好像没有找到解决方案</li></ul></li><li><p>桌面的activity:</p><ul><li>A: <code>.launcher.Launcher</code></li></ul></li><li><p>报错<code>selenium.common.exceptions.InvalidSessionIdException: Message: A session is either terminated or not started</code></p><ul><li>A: 原因是driver长时间没收到command自动关闭了, 与使用<code>driver.quit()</code>后再用driver执行操作报相同的错误。</li><li>-&gt;解决方案: 在desirable_caps中将<code>newCommandTimeout</code>设置大一点: <code>'newCommandTimeout': 1800</code></li></ul></li></ol><p>附录：</p><ul><li><p><a href="https://blog.csdn.net/lollipop666/article/details/82480403" target="_blank" rel="noopener">python3使用appnium运行手机上的APP</a></p></li><li><p><a href="https://github.com/majido/clipper/issues/9" target="_blank" rel="noopener">clipper - Broken on Android 10 (Android Q) #9</a></p></li><li><p><a href="https://testerhome.com/topics/3711" target="_blank" rel="noopener">Appium Python API 中文版 By-HZJ</a></p></li><li><p><a href="https://blog.csdn.net/u012002125/article/details/80870549" target="_blank" rel="noopener">Appium配置desired_capability详解</a></p></li><li><p>查看包名和activity</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  # 在米6(Andriod 10)上尝试可行</span><br><span class="line">  $ adb shell dumpsys window windows | findstr mFocusedApp</span><br><span class="line">  $ adb shell dumpsys window windows | findstr &quot;Current&quot;</span><br><span class="line">  </span><br><span class="line"># 下失效</span><br><span class="line">  $ adb shell dumpsys activity | find  mFocusedActivity</span><br></pre></td></tr></table></figure><ul><li><p>如果在有apk的情况下, <code>aapt dump badging d:\\test.apk</code></p></li><li><p>打开APP-&gt;<code>adb logcat &gt; D:/log.txt</code>  -&gt; 胡乱的对APP做一些操作-&gt;Ctrl+c 结束adb命令-&gt;打开log.txt文件，搜索：Displayed</p></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;该篇为**&lt;a href=&quot;https://github.com/Freedomisgood/getBargains&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;getBargains&lt;/a&gt;**仓库README.md直接搬运，
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>IDEA配置——自定义快捷键、生成注释</title>
    <link href="https://nymrli.top/2020/05/15/IDEA%E9%85%8D%E7%BD%AE%E2%80%94%E2%80%94%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BF%AB%E6%8D%B7%E9%94%AE%E3%80%81%E7%94%9F%E6%88%90%E6%B3%A8%E9%87%8A/"/>
    <id>https://nymrli.top/2020/05/15/IDEA配置——自定义快捷键、生成注释/</id>
    <published>2020-05-15T02:22:20.000Z</published>
    <updated>2020-09-06T08:18:25.674Z</updated>
    
    <content type="html"><![CDATA[<h1 id="idea配置自定义快捷键-生成注释"><a class="markdownIt-Anchor" href="#idea配置自定义快捷键-生成注释"></a> IDEA配置——自定义快捷键、生成注释</h1><blockquote><p>以前因为上JAVA课，还是不常用Java， 所以安装了个Eclipse， 但是现在要经常使用java的话， 感觉还是IDEA的支持做的可能更加到位一点</p></blockquote><h2 id="maven换源"><a class="markdownIt-Anchor" href="#maven换源"></a> Maven换源:</h2><blockquote><p>因为有段时间写SpringBoot被依赖给坑过，所以把Maven换源写在最前面。</p></blockquote><p>IDEA是会有默认的Maven工具的， 因此之前如果修改过Maven配置， 还需要在IDEA中指定具体使用的是哪一个MAVEN，使用哪一个配置文件。</p><p>▲(Ctrl + Alt + S修改的是当前工程)， 如果需要对新工程进行修改， 则点击<code>File-&gt;New Projects Settings-&gt;Settings for new Projects</code></p><p><img src="/2020/05/15/IDEA配置——自定义快捷键、生成注释/maven_idea.jpg" alt="maven_idea"></p><p>其中<code>User settings file</code>选择之前配置过的Maven_settings就行了，换源在里面修改。注意， mirror标签要放在mirrors标签内才能生效, 跟dependencies一样， 我后来才发现我竟然没放进去。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- mirror</span></span><br><span class="line"><span class="comment">   | Specifies a repository mirror site to use instead of a given repository. The repository that</span></span><br><span class="line"><span class="comment">   | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used</span></span><br><span class="line"><span class="comment">   | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">  &lt;mirror&gt;</span></span><br><span class="line"><span class="comment">    &lt;id&gt;mirrorId&lt;/id&gt;</span></span><br><span class="line"><span class="comment">    &lt;mirrorOf&gt;repositoryId&lt;/mirrorOf&gt;</span></span><br><span class="line"><span class="comment">    &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt;</span></span><br><span class="line"><span class="comment">    &lt;url&gt;http://my.repository.com/repo/path&lt;/url&gt;</span></span><br><span class="line"><span class="comment">  &lt;/mirror&gt;</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">   </span><br><span class="line">  <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure><p>补充:</p><p>还可以在pom.xml文件中指定改源, 填下下列字段:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="自动补全提示"><a class="markdownIt-Anchor" href="#自动补全提示"></a> 自动补全提示:</h2><p>菜单栏Settings(快捷键ctrl + alt + s)-&gt;Editr-&gt;General-&gt;Code Completion-&gt; 取消选中&quot;Match case&quot;</p><h2 id="idea自定义快捷键"><a class="markdownIt-Anchor" href="#idea自定义快捷键"></a> IDEA自定义快捷键</h2><table><thead><tr><th style="text-align:center">功能</th><th style="text-align:center">英文描述</th><th style="text-align:center">快捷键</th></tr></thead><tbody><tr><td style="text-align:center">回退上一次光标位置</td><td style="text-align:center">back</td><td style="text-align:center">Ctrl +alt + ←</td></tr><tr><td style="text-align:center">前进到下一次光标位置</td><td style="text-align:center">forward</td><td style="text-align:center">Ctrl +alt + →</td></tr><tr><td style="text-align:center">选中当前部分</td><td style="text-align:center">extend selection</td><td style="text-align:center">Ctrl + D</td></tr><tr><td style="text-align:center">复制当前行↑</td><td style="text-align:center">Duplicate Line or Selection</td><td style="text-align:center">shift + alt + ↑</td></tr><tr><td style="text-align:center">复制当前行↓</td><td style="text-align:center">Duplicate Entire Lines</td><td style="text-align:center">shift + alt + ↓</td></tr><tr><td style="text-align:center">切换到上行</td><td style="text-align:center">Move Line Up</td><td style="text-align:center">alt+↑</td></tr><tr><td style="text-align:center">切换到下行</td><td style="text-align:center">Move Line Down</td><td style="text-align:center">alt+↓</td></tr><tr><td style="text-align:center">下一个方法</td><td style="text-align:center">next Method</td><td style="text-align:center">ctrl + alt+ ↓</td></tr><tr><td style="text-align:center">上一个方法</td><td style="text-align:center">Previous Method</td><td style="text-align:center">ctrl + alt+ ↑</td></tr><tr><td style="text-align:center">生成getter等方法</td><td style="text-align:center">generate</td><td style="text-align:center">ctrl + L</td></tr><tr><td style="text-align:center">在下生成空白一行</td><td style="text-align:center">Start New Line</td><td style="text-align:center">Shift + Enter</td></tr><tr><td style="text-align:center">在上生成空白一行</td><td style="text-align:center">Start New Line Before Current</td><td style="text-align:center">Ctrl+ Shift + Ctrl</td></tr><tr><td style="text-align:center">完成该行——添加末尾分号+换到下行</td><td style="text-align:center">Complete Current Statement</td><td style="text-align:center">ctrl + shift + enter</td></tr><tr><td style="text-align:center">剪切改行（可当成删除改行使用）</td><td style="text-align:center">Cut</td><td style="text-align:center">ctrl + X</td></tr><tr><td style="text-align:center">工程中跳转指定class</td><td style="text-align:center">Navigate-class</td><td style="text-align:center">Ctrl + M</td></tr><tr><td style="text-align:center">新建</td><td style="text-align:center">Main Menu-File-New</td><td style="text-align:center">Ctrl + N</td></tr><tr><td style="text-align:center">关闭当前标签页</td><td style="text-align:center">Editor Tabs - Close</td><td style="text-align:center">Ctrl + W</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><p>未改变的快捷键设置</p><table><thead><tr><th style="text-align:center">功能</th><th style="text-align:center">英文描述</th><th style="text-align:center">快捷键</th></tr></thead><tbody><tr><td style="text-align:center">格式化代码</td><td style="text-align:center">Reformat Code</td><td style="text-align:center">ctrl + alt + L</td></tr><tr><td style="text-align:center">根据上下文完成动作（导包）</td><td style="text-align:center">Show Context Actions</td><td style="text-align:center">Alt + enter</td></tr><tr><td style="text-align:center">优化import导入</td><td style="text-align:center">Optimize lmports</td><td style="text-align:center">Shift + Ctrl + O</td></tr><tr><td style="text-align:center">插入生成模板(psvm)</td><td style="text-align:center">Insert Live Template</td><td style="text-align:center">Ctrl + J</td></tr><tr><td style="text-align:center">打开设置面板</td><td style="text-align:center">open settings</td><td style="text-align:center">Ctrl + alt + s</td></tr><tr><td style="text-align:center">统一修改变量名</td><td style="text-align:center">Main Menu - Refactor- Rename</td><td style="text-align:center">Shift + F6</td></tr><tr><td style="text-align:center">搜索指定Class</td><td style="text-align:center">Main Menu-Navigate-class</td><td style="text-align:center">Ctrl + M</td></tr><tr><td style="text-align:center">重写方法</td><td style="text-align:center">override Methods</td><td style="text-align:center">Ctrl + o</td></tr><tr><td style="text-align:center">查看类继承关系</td><td style="text-align:center"></td><td style="text-align:center">ctrl+H</td></tr><tr><td style="text-align:center">查看类继承关系图</td><td style="text-align:center"></td><td style="text-align:center">ctrl+alt+H</td></tr></tbody></table><p>▲、以上以windows设置为模板修改</p><h2 id="生成类注释-文件注释"><a class="markdownIt-Anchor" href="#生成类注释-文件注释"></a> <a href="%5Bhttps://blog.csdn.net/qq_34581118/article/details/78409782#%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95%E6%B3%A8%E9%87%8A%5D(https://blog.csdn.net/qq_34581118/article/details/78409782#%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95%E6%B3%A8%E9%87%8A)">生成类注释、文件注释</a></h2><blockquote><p>没弄图， 主要是按照<a href="%5Bhttps://blog.csdn.net/qq_34581118/article/details/78409782#%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95%E6%B3%A8%E9%87%8A%5D(https://blog.csdn.net/qq_34581118/article/details/78409782#%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95%E6%B3%A8%E9%87%8A)">idea生成类注释和方法注释的正确方法</a>配置的</p></blockquote><h3 id="生成类注释"><a class="markdownIt-Anchor" href="#生成类注释"></a> 生成类注释</h3><ol><li>打开Preferences</li><li>Editor -&gt; File and Code Templates -&gt; Files -&gt; Class</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#if ($&#123;PACKAGE_NAME&#125; &amp;&amp; $&#123;PACKAGE_NAME&#125; != "")package $&#123;PACKAGE_NAME&#125;;#end</span><br><span class="line">#parse("File Header.java")</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@program</span>: $&#123;PROJECT_NAME&#125;</span></span><br><span class="line"><span class="comment">* <span class="doctag">@description</span>: $&#123;description&#125;</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span>: MrLi</span></span><br><span class="line"><span class="comment">* <span class="doctag">@create</span>: $&#123;YEAR&#125;-$&#123;MONTH&#125;-$&#123;DAY&#125; $&#123;HOUR&#125;:$&#123;MINUTE&#125;</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> $</span>&#123;NAME&#125; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="生成方法注释"><a class="markdownIt-Anchor" href="#生成方法注释"></a> 生成方法注释</h3><ol><li>打开Preferences</li><li>Editor -&gt; Live Templates -&gt; 点击右边加号为自己添加一个Templates Group -&gt; 然后选中自己的Group-&gt;再次点击加号添加Live Templates</li><li><a href="http://xn--c1h978l9vlkycv0b31ip06ax0emv6bxteeq1b.No" target="_blank" rel="noopener">记得要把最下面的提示▲.No</a> applicable contexts yet.Define-&gt;设置为java</li><li>然后在Edit variables里面添加参数和返回值的自动取值</li></ol><p>按上述步骤设置完后就可以使用了： 在方法上面直接输入<code>/ + 你设置的Abbreviation快捷键 + tab</code>键就直接生成了 （我设置的是<code>/ + q + tab</code>）</p><p>神秘密码(Template text中填的):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">** </span><br><span class="line">* @Description: $description$ </span><br><span class="line">* @Param: $params$ </span><br><span class="line">* @Return: $returns$ </span><br><span class="line">* @Author: MrLi</span><br><span class="line">* @Date: $date$ </span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h2 id="删除没有用到的包"><a class="markdownIt-Anchor" href="#删除没有用到的包"></a> 删除没有用到的包</h2><p>1.手动快捷键</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + Alt + O1</span><br></pre></td></tr></table></figure><p>2.配置自动清理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + Alt + S 打开设置-&gt;editor-&gt;auto import</span><br></pre></td></tr></table></figure><p><img src="/2020/05/15/IDEA配置——自定义快捷键、生成注释/import.jpg" alt="import"></p><h2 id="intellij-idea-报错error-java-不支持发行版本5"><a class="markdownIt-Anchor" href="#intellij-idea-报错error-java-不支持发行版本5"></a> Intellij idea 报错：Error : java 不支持发行版本5</h2><p>解决方案： <a href="https://blog.csdn.net/qq_22076345/article/details/82392236" target="_blank" rel="noopener">https://blog.csdn.net/qq_22076345/article/details/82392236</a></p><h2 id="intellij-idea-神器居然还有这些小技巧"><a class="markdownIt-Anchor" href="#intellij-idea-神器居然还有这些小技巧"></a> <a href="https://blog.csdn.net/kl28978113/article/details/80305974" target="_blank" rel="noopener">Intellij IDEA 神器居然还有这些小技巧</a>[转]</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;idea配置自定义快捷键-生成注释&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#idea配置自定义快捷键-生成注释&quot;&gt;&lt;/a&gt; IDEA配置——自定义快捷键、生成注释&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;以前因为上JAVA课，还
      
    
    </summary>
    
    
      <category term="环境配置" scheme="https://nymrli.top/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
</feed>
