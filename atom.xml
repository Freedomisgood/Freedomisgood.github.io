<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>果粒橙的博客</title>
  
  <subtitle>别装作很努力，因为结局不会陪你演戏。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://nymrli.top/"/>
  <updated>2019-02-18T08:43:22.053Z</updated>
  <id>https://nymrli.top/</id>
  
  <author>
    <name>果粒橙</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Cmake 入门</title>
    <link href="https://nymrli.top/2019/02/18/Cmake-%E5%85%A5%E9%97%A8/"/>
    <id>https://nymrli.top/2019/02/18/Cmake-入门/</id>
    <published>2019-02-18T08:42:36.000Z</published>
    <updated>2019-02-18T08:43:22.053Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Cmake-入门"><a href="#Cmake-入门" class="headerlink" title="Cmake 入门"></a>Cmake 入门</h1><h3 id="入门案例：单个源文件"><a href="#入门案例：单个源文件" class="headerlink" title="入门案例：单个源文件"></a>入门案例：单个源文件</h3><p>例如，假设现在我们的项目中只有一个源文件 <a href="http://main.cc/" target="_blank" rel="noopener">main.cc</a> ，该程序的用途是计算一个数的指数幂。</p><h4 id="1-首先编写-CMakeLists-txt-文件，并保存在与-main-cc-源文件同个目录下"><a href="#1-首先编写-CMakeLists-txt-文件，并保存在与-main-cc-源文件同个目录下" class="headerlink" title="1.首先编写 CMakeLists.txt 文件，并保存在与 main.cc 源文件同个目录下"></a>1.首先编写 CMakeLists.txt 文件，并保存在与 <a href="http://main.cc/" target="_blank" rel="noopener">main.cc</a> 源文件同个目录下</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># CMake 最低版本号要求</span><br><span class="line">cmake_minimum_required (VERSION 2.8)</span><br><span class="line"># 项目信息</span><br><span class="line">project (Demo1)</span><br><span class="line"># 指定生成目标</span><br><span class="line">add_executable(Demo main.cc)</span><br></pre></td></tr></table></figure><p>语法:</p><p>由<strong>命令</strong>、<strong>注释</strong>和<strong>空格</strong>组成，其中命令是不区分大小写的。</p><ul><li><p>符号 <code>#</code> 后面的内容被认为是注释</p></li><li><p>命令由命令名称、小括号和参数组成</p></li><li><p>参数之间使用空格进行间隔</p></li></ul><h4 id="2-编译项目"><a href="#2-编译项目" class="headerlink" title="2.编译项目"></a>2.编译项目</h4><p>之后，在当前目录执行 <code>cmake .</code> ，得到 Makefile 后再使用 <code>make</code> 命令编译得到 Demo1 可执行文件。</p><h3 id="同一目录，多个源文件"><a href="#同一目录，多个源文件" class="headerlink" title="同一目录，多个源文件"></a>同一目录，多个源文件</h3><p>如果多文件，结构变成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">./Demo2</span><br><span class="line">    |</span><br><span class="line">    +--- main.cc</span><br><span class="line">    |</span><br><span class="line">    +--- MathFunctions.cc</span><br><span class="line">    |</span><br><span class="line">    +--- MathFunctions.h</span><br></pre></td></tr></table></figure><p><code>cmakelist.txt</code>需要改成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># CMake 最低版本号要求</span><br><span class="line">cmake_minimum_required (VERSION 2.8)</span><br><span class="line"># 项目信息</span><br><span class="line">project (Demo2)</span><br><span class="line"># 指定生成目标</span><br><span class="line">add_executable(Demo main.cc MathFunctions.cc)</span><br></pre></td></tr></table></figure><p>区别: <strong>即在 <code>add_executable</code> 命令中增加了一个 <code>MathFunctions.cc</code> 源文件</strong></p><p>省事的方法是使用 <code>aux_source_directory</code> 命令，该命令会查找指定目录下的所有源文件，然后将结果存进指定变量名。语法为<code>aux_source_directory(&lt;dir&gt; &lt;variable&gt;)</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># CMake 最低版本号要求</span><br><span class="line">cmake_minimum_required (VERSION 2.8)</span><br><span class="line"># 项目信息</span><br><span class="line">project (Demo2)</span><br><span class="line"># 查找当前目录下的所有源文件</span><br><span class="line"># 并将名称保存到 DIR_SRCS 变量</span><br><span class="line">aux_source_directory(. DIR_SRCS)</span><br><span class="line"># 指定生成目标</span><br><span class="line">add_executable(Demo $&#123;DIR_SRCS&#125;)</span><br></pre></td></tr></table></figure><h3 id="多个目录，多个源文件"><a href="#多个目录，多个源文件" class="headerlink" title="多个目录，多个源文件"></a>多个目录，多个源文件</h3><p>文件结构:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">./Demo3</span><br><span class="line">    |</span><br><span class="line">    +--- main.cc</span><br><span class="line">    |</span><br><span class="line">    +--- math/</span><br><span class="line">          |</span><br><span class="line">          +--- MathFunctions.cc</span><br><span class="line">          |</span><br><span class="line">          +--- MathFunctions.h</span><br></pre></td></tr></table></figure><p>对于这种情况，需要分别在项目根目录 Demo3 和 math 目录里各编写一个 CMakeLists.txt 文件。为了方便，我们可以先将 math 目录里的文件编译成<strong>静态库</strong>再由 main 函数调用。</p><h4 id="根目录中的-CMakeLists-txt-："><a href="#根目录中的-CMakeLists-txt-：" class="headerlink" title="根目录中的 CMakeLists.txt ："></a>根目录中的 CMakeLists.txt ：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># CMake 最低版本号要求</span><br><span class="line">cmake_minimum_required (VERSION 2.8)</span><br><span class="line"># 项目信息</span><br><span class="line">project (Demo3)</span><br><span class="line"># 查找当前目录下的所有源文件</span><br><span class="line"># 并将名称保存到 DIR_SRCS 变量</span><br><span class="line">aux_source_directory(. DIR_SRCS)</span><br><span class="line"></span><br><span class="line"># ▲添加 math 子目录</span><br><span class="line">add_subdirectory(math)</span><br><span class="line"></span><br><span class="line"># 指定生成目标 </span><br><span class="line">add_executable(Demo main.cc)</span><br><span class="line"># 添加链接库</span><br><span class="line">target_link_libraries(Demo MathFunctions)</span><br></pre></td></tr></table></figure><ul><li>使用命令 <code>add_subdirectory</code> 指明本项目包含一个子目录 math，这样 math 目录下的 CMakeLists.txt 文件和源代码也会被处理.</li><li>使用命令 <code>target_link_libraries</code> 指明可执行文件 main 需要连接一个名为 MathFunctions 的链接库 </li></ul><h4 id="子目录中的-CMakeLists-txt："><a href="#子目录中的-CMakeLists-txt：" class="headerlink" title="子目录中的 CMakeLists.txt："></a>子目录中的 CMakeLists.txt：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 查找当前目录下的所有源文件</span><br><span class="line"># 并将名称保存到 DIR_LIB_SRCS 变量</span><br><span class="line">aux_source_directory(. DIR_LIB_SRCS)</span><br><span class="line"># 生成链接库</span><br><span class="line">add_library (MathFunctions $&#123;DIR_LIB_SRCS&#125;)</span><br></pre></td></tr></table></figure><p>在该文件中使用命令 <code>add_library</code> 将 src 目录中的源文件编译为静态链接库</p><p>摘自<a href="https://www.hahack.com/codes/cmake/" target="_blank" rel="noopener">CMake 入门实战</a></p><hr><h3 id="set指令详解"><a href="#set指令详解" class="headerlink" title="set指令详解"></a>set指令详解</h3><p><strong>语法：</strong> SET(VAR [VALUE] [CACHE TYPE DOCSTRING [FORCE]])<br><strong>指令功能:</strong> 用来显式的定义变量<br><strong>例子:</strong> SET (SRC_LST main.c other.c)<br><strong>说明:</strong> 用变量代替值，例子中定义SRC_LST代替后面的字符串。</p><h4 id="例子"><a href="#例子" class="headerlink" title="例子:"></a>例子:</h4><h5 id="一-CMAKE-SOURCE-DIR-–-gt-CMakeLists-txt所在的目录"><a href="#一-CMAKE-SOURCE-DIR-–-gt-CMakeLists-txt所在的目录" class="headerlink" title="一. CMAKE_SOURCE_DIR  –&gt;CMakeLists.txt所在的目录"></a>一. CMAKE_SOURCE_DIR  –&gt;CMakeLists.txt所在的目录</h5><p><code>set(libs &quot;${CMAKE_SOURCE_DIR}/src/main/jnilibs&quot;)</code>定义了一个变量libs，并且变量的值为${CMAKE_SOURCE_DIR}/src/main/jnilibs，其中CMAKE_SOURCE_DIR 是一个cmake内置变量，指定了CMakeLists.txt所在的目录</p><h5 id="二-CMAKE-LIBRARY-OUTPUT-DIRECTORY–-gt-cmake编译输出的东西应该放在什么地方"><a href="#二-CMAKE-LIBRARY-OUTPUT-DIRECTORY–-gt-cmake编译输出的东西应该放在什么地方" class="headerlink" title="二.CMAKE_LIBRARY_OUTPUT_DIRECTORY–&gt;cmake编译输出的东西应该放在什么地方"></a>二.CMAKE_LIBRARY_OUTPUT_DIRECTORY–&gt;cmake编译输出的东西应该放在什么地方</h5><p><code>set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/src/main/jnilibs/${ANDROID_ABI})</code>这个命令用于给CMAKE_LIBRARY_OUTPUT_DIRECTORY宏赋值，该宏指定了cmake编译输出的东西应该放在什么地方。</p><p>这个例子中的地方是<code>${PROJECT_SOURCE_DIR}/src/main/jnilibs/${ANDROID_ABI}</code>其中PROJECT_SOURCE_DIR 是cmake内置宏，指向构建工程的全路径。</p><h3 id="include包含库、头文件"><a href="#include包含库、头文件" class="headerlink" title="include包含库、头文件"></a>include包含库、头文件</h3><h5 id="添加头文件路径，对应的函数叫include-directories"><a href="#添加头文件路径，对应的函数叫include-directories" class="headerlink" title="添加头文件路径，对应的函数叫include_directories"></a>添加头文件路径，对应的函数叫<code>include_directories</code></h5><h5 id="添加库路径，对应的函数叫LINK-DIRECTORIES"><a href="#添加库路径，对应的函数叫LINK-DIRECTORIES" class="headerlink" title="添加库路径，对应的函数叫LINK_DIRECTORIES"></a>添加库路径，对应的函数叫LINK_DIRECTORIES</h5><h5 id="添加库，对应的函数叫LINK-LIBRARIES，把所有的库加进去即可"><a href="#添加库，对应的函数叫LINK-LIBRARIES，把所有的库加进去即可" class="headerlink" title="添加库，对应的函数叫LINK_LIBRARIES，把所有的库加进去即可"></a>添加库，对应的函数叫LINK_LIBRARIES，把所有的库加进去即可</h5><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><p>使用<code>$ENV{NAME}</code>指令就可以调用系统的环境变量了。比如<code>MESSAGE(STATUS “HOME dir: $ENV{HOME}”)</code><br>设置环境变量的方式是:<code>SET(ENV{变量名} 值)</code></p><h3 id="dl、rt"><a href="#dl、rt" class="headerlink" title="dl、rt"></a>dl、rt</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">target_link_libraries(agentspark</span><br><span class="line">$&#123;RCSSNET3D_LIBRARY&#125;</span><br><span class="line">$&#123;Boost_SYSTEM_LIBRARY&#125;</span><br><span class="line">dl</span><br><span class="line">$&#123;CMAKE_THREAD_LIBS_INIT&#125;</span><br><span class="line">rt </span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><strong>dl</strong>是<code>libdl.so</code>,<strong>rt</strong>是<code>librt.so</code>的缩写···其实是静态加载了这两个动态链接库！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Cmake-入门&quot;&gt;&lt;a href=&quot;#Cmake-入门&quot; class=&quot;headerlink&quot; title=&quot;Cmake 入门&quot;&gt;&lt;/a&gt;Cmake 入门&lt;/h1&gt;&lt;h3 id=&quot;入门案例：单个源文件&quot;&gt;&lt;a href=&quot;#入门案例：单个源文件&quot; class=&quot;
      
    
    </summary>
    
    
      <category term="C++" scheme="https://nymrli.top/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Python+adb操作手机</title>
    <link href="https://nymrli.top/2019/02/06/Python-adb%E6%93%8D%E4%BD%9C%E6%89%8B%E6%9C%BA/"/>
    <id>https://nymrli.top/2019/02/06/Python-adb操作手机/</id>
    <published>2019-02-06T05:00:09.000Z</published>
    <updated>2019-02-06T08:19:33.590Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Adb"><a href="#Adb" class="headerlink" title="Adb"></a>Adb</h1><h3 id="wifi连接调试-adb-connect-ip"><a href="#wifi连接调试-adb-connect-ip" class="headerlink" title="wifi连接调试 adb connect {ip}"></a>wifi连接调试 adb connect {ip}</h3><p>如果你不想用usb连接调试，可以选择使用adb 连接调试，命令是 <code>adb connect {ip}</code> ，需要在同一个局域网内。这个功能也比较实用，但首次连接时，需要另外一些配置，建议可以网上搜索下<code>adb wifi连接手机</code>等关键字看看。</p><h3 id="屏幕截屏-screencap-p-图片存储地址"><a href="#屏幕截屏-screencap-p-图片存储地址" class="headerlink" title="屏幕截屏 screencap -p {图片存储地址}"></a>屏幕截屏 screencap -p {图片存储地址}</h3><p>这个其实直接通过手机截屏再发送到电脑就可以了，但我开发的是TV应用，在盒子上没法截屏，所以这个命令对我来说还是较实用的。</p><h3 id="获取或推送文件-adb-pull-push"><a href="#获取或推送文件-adb-pull-push" class="headerlink" title="获取或推送文件 adb pull/push"></a>获取或推送文件 adb pull/push</h3><p>这个也挺实用的，获取手机指定位置的文件到电脑上，或者从电脑发送文件到手机上</p><h3 id="模拟按键事件"><a href="#模拟按键事件" class="headerlink" title="模拟按键事件"></a>模拟按键事件</h3><p>//这条命令相当于按了设备的Back key键<br><code>adb shell input keyevent 4</code></p><p> //可以解锁屏幕</p><p><code>adb shell input keyevent  82</code></p><p>//在屏幕上做划屏操作，前四个数为坐标点，后面是滑动的时间（单位毫秒）</p><p><code>adb shell input swipe 50 250 250 250 500</code></p><p> 手机分辨率一般为1080<em>1920，其中左上角为（0,0），右下角为（1080</em>1920）</p><p>//在屏幕上点击坐标点x=50  y=250的位置。</p><p><code>adb shell input tap 50 250</code></p><p>//输入字符abc</p><p><code>adb shell input text abc</code></p><p><a href="https://www.cnblogs.com/ruo-li-suo-yi/p/8207311.html" target="_blank" rel="noopener">跳一跳游戏adb教程</a></p><h2 id="事件介绍"><a href="#事件介绍" class="headerlink" title="事件介绍"></a>事件介绍</h2><blockquote><p>代码演示都是在进入 <code>adb shell</code>模式下</p></blockquote><p>input swipe模拟的是滑动事件 , 如左滑:<code>input swipe 600 800 300 800</code></p><p>可以输入文本的文本框之类的控件上输入出 OuyangPeng 字符串: <code>input text OuyangPeng</code></p><p>input tap命令模拟触摸屏幕<code>input tap 600 800</code></p><p> input keyevent用法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">input keyevent 3    // Home</span><br><span class="line">input keyevent 4    // Back</span><br><span class="line">input keyevent 19  //Up</span><br><span class="line">input keyevent 20  //Down</span><br><span class="line">input keyevent 21  //Left</span><br><span class="line">input keyevent 22  //Right</span><br><span class="line">input keyevent 23  //Select/Ok</span><br><span class="line">input keyevent 24  //Volume+</span><br><span class="line">input keyevent 25  // Volume-</span><br><span class="line">input keyevent 82  // Menu 菜单</span><br></pre></td></tr></table></figure><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><h4 id="adb-启动应用"><a href="#adb-启动应用" class="headerlink" title="adb 启动应用:"></a>adb 启动应用:</h4><p><code>adb shell am start -n packgage名 /.activity</code>如 <code>adb shell am start -n com.android.calculator2/.Calculator</code></p><p>提醒点：一定要找到、找对activity和package</p><h4 id="长时间按某个元素：adb-input-shell-…"><a href="#长时间按某个元素：adb-input-shell-…" class="headerlink" title="长时间按某个元素：adb  input shell …"></a>长时间按某个元素：adb  input shell …</h4><p><code>adb -s 4d0041be98b01f shell input touchscreen swipe 540 716 545 718 1000</code></p><p>语义：-s  后跟设备号，swipe 先传移动坐标范围‘540 716 545 718’，然后1000是长按时间，单位毫秒。</p><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>event值记录</p><p><a href="https://blog.csdn.net/jlminghui/article/details/39268419" target="_blank" rel="noopener">https://blog.csdn.net/jlminghui/article/details/39268419</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Adb&quot;&gt;&lt;a href=&quot;#Adb&quot; class=&quot;headerlink&quot; title=&quot;Adb&quot;&gt;&lt;/a&gt;Adb&lt;/h1&gt;&lt;h3 id=&quot;wifi连接调试-adb-connect-ip&quot;&gt;&lt;a href=&quot;#wifi连接调试-adb-connect-ip&quot; c
      
    
    </summary>
    
    
      <category term="Python" scheme="https://nymrli.top/tags/Python/"/>
    
      <category term="模拟操作" scheme="https://nymrli.top/tags/%E6%A8%A1%E6%8B%9F%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>ACM_动态规划</title>
    <link href="https://nymrli.top/2019/02/03/ACM-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    <id>https://nymrli.top/2019/02/03/ACM-动态规划/</id>
    <published>2019-02-03T07:49:10.000Z</published>
    <updated>2019-02-07T11:33:36.167Z</updated>
    
    <content type="html"><![CDATA[<p>图解动态规划 : <a href="http://www.sohu.com/a/153858619_466939" target="_blank" rel="noopener">http://www.sohu.com/a/153858619_466939</a></p><h1 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划 :"></a>动态规划 :</h1><ul><li>最优子结构</li><li>边界</li><li>状态转移方程式</li></ul><h2 id="题目二：-国王和金矿"><a href="#题目二：-国王和金矿" class="headerlink" title="题目二： 国王和金矿"></a><strong>题目二： 国王和金矿</strong></h2><p>有一个国家发现了5座金矿，每座金矿的黄金储量不同，需要参与挖掘的工人数也不同。参与挖矿工人的总数是10人。每座金矿要么全挖，要么不挖，不能派出一半人挖取一半金矿。要求用程序求解出，要想得到尽可能多的黄金，应该选择挖取哪几座金矿？</p><p><img src="/2019/02/03/ACM-动态规划/2.png" alt="2"></p><h3 id="解法一-排列组合"><a href="#解法一-排列组合" class="headerlink" title="解法一: 排列组合"></a>解法一: 排列组合</h3><p>时间复杂度 : O(2^N)</p><h3 id="解法二-DP"><a href="#解法二-DP" class="headerlink" title="解法二 : DP"></a>解法二 : DP</h3><h4 id="1-找到最优子结构"><a href="#1-找到最优子结构" class="headerlink" title="1.找到最优子结构"></a>1.找到最优子结构</h4><ul><li>10人4金矿(有一个金矿没挖)</li><li>10-3人4金矿(挖了一个金矿)</li></ul><h4 id="2-最优选择"><a href="#2-最优选择" class="headerlink" title="2.最优选择"></a>2.最优选择</h4><p>5个金矿的最优选择，就是<em>（前4座金矿10工人的挖金数量）和（前4座金矿7工人的挖金数量+第5座金矿的挖金数量）</em>的<strong>最大值</strong>！</p><p><img src="/2019/02/03/ACM-动态规划/最优.jpg" alt="最优"></p><h4 id="3-边界"><a href="#3-边界" class="headerlink" title="3.边界"></a>3.边界</h4><p><img src="/2019/02/03/ACM-动态规划/边界.jpg" alt="边界"></p><hr><p>经过整理可得 <strong>状态转移方程式</strong>:</p><ul><li>边界:</li></ul><p><strong>F(n,w) = 0 (n&lt;=1, w&lt;p[0]);</strong></p><p><strong>F(n,w) = g[0] (n==1, w&gt;=p[0]);</strong></p><ul><li>推导式</li></ul><p><strong>F(n,w) = F(n-1,w) (n&gt;1, w&lt;p[n-1])</strong></p><p><strong>F(n,w) = max(F(n-1,w), F(n-1,w-p[n-1])+g[n-1]) (n&gt;1, w&gt;=p[n-1])</strong></p><h4 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法:"></a>实现方法:</h4><h5 id="简单递归"><a href="#简单递归" class="headerlink" title="简单递归"></a>简单递归</h5><h5 id="记忆搜索法"><a href="#记忆搜索法" class="headerlink" title="记忆搜索法"></a>记忆搜索法</h5><h5 id="动态规划-递推式"><a href="#动态规划-递推式" class="headerlink" title="动态规划(递推式)"></a>动态规划(递推式)</h5><p><img src="/2019/02/03/ACM-动态规划/DP写法.png" alt="DP写法"></p><hr><h2 id="01背包问题"><a href="#01背包问题" class="headerlink" title="01背包问题"></a>01背包问题</h2><h3 id="简单递归-1"><a href="#简单递归-1" class="headerlink" title="简单递归"></a>简单递归</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e4</span>;</span><br><span class="line"><span class="comment">/* 01背包问题 */</span></span><br><span class="line">pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; wv[maxn];</span><br><span class="line"><span class="keyword">int</span> N; <span class="comment">// 物品数量</span></span><br><span class="line"><span class="keyword">int</span> W; <span class="comment">// 背包重量</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">rec</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( i == N) res= <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>( j &lt; wv[i].first )</span><br><span class="line">        res = rec(i+<span class="number">1</span>,j);</span><br><span class="line">    <span class="keyword">else</span> res = max(rec(i+<span class="number">1</span>,j) , rec(i+<span class="number">1</span>,j-wv[i].first) + wv[i].second);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span> ; i &lt;N ; i++) <span class="built_in">cin</span> &gt;&gt; wv[i].first &gt;&gt; wv[i].second;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; W;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; rec(<span class="number">0</span>,W) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    solve();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="记忆搜索"><a href="#记忆搜索" class="headerlink" title="记忆搜索"></a>记忆搜索</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e4</span>;</span><br><span class="line"><span class="comment">/* 01背包问题 */</span></span><br><span class="line">pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; wv[maxn];</span><br><span class="line"><span class="keyword">int</span> N; <span class="comment">// 物品数量</span></span><br><span class="line"><span class="keyword">int</span> W; <span class="comment">// 背包重量</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[maxn][maxn]; <span class="comment">//2.多了个记忆数组(称为DP数组)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">rec</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( dp[i][j] &gt; <span class="number">0</span> ) <span class="keyword">return</span> dp[i][j];</span><br><span class="line">    <span class="comment">// 如果已经计算过,就直接使用之前的结果</span></span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( i == N) res= <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>( j &lt; wv[i].first )</span><br><span class="line">        res = rec(i+<span class="number">1</span>,j);</span><br><span class="line">    <span class="keyword">else</span> res = max(rec(i+<span class="number">1</span>,j) , rec(i+<span class="number">1</span>,j-wv[i].first) + wv[i].second);</span><br><span class="line">    dp[i][j] =res;<span class="comment">// 2.将结果记录</span></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span> ; i &lt;N ; i++) <span class="built_in">cin</span> &gt;&gt; wv[i].first &gt;&gt; wv[i].second;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; W;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; rec(<span class="number">0</span>,W) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    solve();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="动态规划解法"><a href="#动态规划解法" class="headerlink" title="动态规划解法"></a>动态规划解法</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e4</span>;</span><br><span class="line"><span class="comment">/* 01背包问题 */</span></span><br><span class="line">pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; wv[maxn];</span><br><span class="line"><span class="keyword">int</span> N; <span class="comment">// 物品数量</span></span><br><span class="line"><span class="keyword">int</span> W; <span class="comment">// 背包重量</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[maxn][maxn]; <span class="comment">//2.多了个记忆数组(称为DP数组)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 逆序推导</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span> ; i &lt;N ; i++) <span class="built_in">cin</span> &gt;&gt; wv[i].first &gt;&gt; wv[i].second;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; W;</span><br><span class="line">        <span class="keyword">for</span>( <span class="keyword">int</span> i= N<span class="number">-1</span> ; i &gt;= <span class="number">0</span> ; i--)&#123;</span><br><span class="line">        <span class="keyword">for</span>( <span class="keyword">int</span> j=<span class="number">0</span>;j&lt;= W ; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>( j &lt; wv[i].first ) dp[i][j] = dp[i+<span class="number">1</span>][j];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            dp[i][j] = max( dp[i+<span class="number">1</span>][j] , dp[i+<span class="number">1</span>][j - wv[i].first] + wv[i].second);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; dp[<span class="number">0</span>][W] &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 顺序推导</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span> ; i &lt;N ; i++) <span class="built_in">cin</span> &gt;&gt; wv[i].first &gt;&gt; wv[i].second;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; W;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>( <span class="keyword">int</span> i= <span class="number">0</span> ; i &lt; N ; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>( <span class="keyword">int</span> j=<span class="number">0</span>;j&lt;= W ; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>( j &lt; wv[i].first ) dp[i+<span class="number">1</span>][j] = dp[i][j];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            dp[i+<span class="number">1</span>][j] = max( dp[i][j] , dp[i][j - wv[i].first] + wv[i].second);</span><br><span class="line">        <span class="comment">// 推导式也变了,下一行的依据上一行写成dp[i+1][j] = ...</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; dp[N][W] &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">// 输出的结果变了</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    solve();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>▲注意，边界一定要注意处理。 这题由于边界全为0，而全局数组初始化默认是0，所以不需要处理，否则得像</p><p><strong>国王和金矿</strong>提供的题解一样书写。</p><h2 id="最长公共子序列问题"><a href="#最长公共子序列问题" class="headerlink" title="最长公共子序列问题"></a>最长公共子序列问题</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e4</span>;</span><br><span class="line"><span class="comment">/* LCS */</span></span><br><span class="line"><span class="keyword">int</span> dp[maxn+<span class="number">1</span>][maxn+<span class="number">1</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m,n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="built_in">string</span> sn,sm;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; sn &gt;&gt; sm;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>( sn[i] == sm[j] ) dp[i+<span class="number">1</span>][j+<span class="number">1</span>] = dp[i][j] + <span class="number">1</span>;</span><br><span class="line">         <span class="comment">// p[i+1][j+1] = max(dp[i][j] + 1 , max(dp[i+1][j] , dp[i][j+1]));化简而来</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">else</span> dp[i+<span class="number">1</span>][j+<span class="number">1</span>] = max(dp[i][j+<span class="number">1</span>] , dp[i+<span class="number">1</span>][j] );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; dp[n][m] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    solve();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完全背包问题"><a href="#完全背包问题" class="headerlink" title="完全背包问题"></a>完全背包问题</h2><h2 id="多重部分和"><a href="#多重部分和" class="headerlink" title="多重部分和"></a>多重部分和</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;图解动态规划 : &lt;a href=&quot;http://www.sohu.com/a/153858619_466939&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.sohu.com/a/153858619_466939&lt;/a&gt;&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
      <category term="ACM" scheme="https://nymrli.top/tags/ACM/"/>
    
      <category term="DP" scheme="https://nymrli.top/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>ACM_贪心专题</title>
    <link href="https://nymrli.top/2019/02/01/ACM-%E8%B4%AA%E5%BF%83%E4%B8%93%E9%A2%98/"/>
    <id>https://nymrli.top/2019/02/01/ACM-贪心专题/</id>
    <published>2019-02-01T12:17:50.000Z</published>
    <updated>2019-02-02T12:19:38.617Z</updated>
    
    <content type="html"><![CDATA[<h1 id="贪心专题"><a href="#贪心专题" class="headerlink" title="贪心专题"></a>贪心专题</h1><h2 id="1-活动安排"><a href="#1-活动安排" class="headerlink" title="1.活动安排"></a>1.活动安排</h2><p>有若干个活动，第i个开始时间和结束时间是[Si,fi)，只有一个教室，活动之间不能交叠，求最多安排多少个活动？</p><p>Input</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">第一行一个正整数n (n &lt;= 10000)代表活动的个数。</span><br><span class="line">第二行到第(n + 1)行包含n个开始时间和结束时间。</span><br><span class="line">开始时间严格小于结束时间，并且时间都是非负整数，小于1000000000</span><br></pre></td></tr></table></figure><p>Output</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一行包含一个整数表示活动个数。</span><br></pre></td></tr></table></figure><p>Input示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1 2</span><br><span class="line">3 4</span><br><span class="line">2 9</span><br></pre></td></tr></table></figure><p>Output示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>博主提供:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e4</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> s,e;<span class="comment">//start , end </span></span><br><span class="line">&#125; a[maxn];</span><br><span class="line"></span><br><span class="line"><span class="comment">//由于使用结构体,所以需要自定义cmp函数</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span>  <span class="title">cmp</span><span class="params">(node x,node y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x.e&lt;y.e) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(x.e==y.e&amp;&amp;x.s&gt;y.s) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,i,j,ans,end;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i].s&gt;&gt;a[i].e;</span><br><span class="line">sort(a,a+n,cmp);</span><br><span class="line">ans = <span class="number">0</span>;</span><br><span class="line">end = <span class="number">-1e9</span><span class="number">-100</span>;</span><br><span class="line"><span class="keyword">for</span>(i =<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i].s&gt;=end)&#123;<span class="comment">// 结束最早的</span></span><br><span class="line">ans++;</span><br><span class="line">end=a[i].e;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不使用结构体,使用map:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span>  <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e4</span> +<span class="number">5</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;N) == <span class="number">1</span>)&#123;</span><br><span class="line">        pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; itv[maxn];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i&lt;N; i++) <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;itv[i].second , &amp;itv[i].first);</span><br><span class="line">        sort( itv , itv + N);</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span> ;</span><br><span class="line">        <span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>( <span class="keyword">int</span> i =<span class="number">0</span> ; i&lt; N ; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> ( t &lt; itv[i].second )&#123;</span><br><span class="line">                ans ++;</span><br><span class="line">                t = itv[i].first;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="HUD-OJ-2037今年暑假不AC"><a href="#HUD-OJ-2037今年暑假不AC" class="headerlink" title="HUD OJ  2037今年暑假不AC"></a>HUD OJ  <a href="http://acm.hdu.edu.cn/showproblem.php?pid=2037" target="_blank" rel="noopener">2037今年暑假不AC</a></h2><p>感觉像是板子题，都是时间规划类，需要最多目标的题目。但是在第15行时，必须写&lt;=,否则WA.</p><blockquote><p>&lt;= 的结果是 5 ; &lt; 的结果是 3</p></blockquote><p>经过与上题的对比发现，主要的区别在于这句话 ：上题规定 <strong>开始时间严格小于结束时间，并且时间都是非负整数，小于1000000000</strong> ，而这题 <strong>开始时间是可以等于结束时间的</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e4</span>+ <span class="number">5</span>;</span><br><span class="line">pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; node[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    <span class="keyword">while</span>( <span class="built_in">cin</span> &gt;&gt; N)&#123;</span><br><span class="line">        <span class="keyword">if</span> ( !N ) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++) <span class="built_in">cin</span> &gt;&gt; node[i].second &gt;&gt; node[i].first ;</span><br><span class="line">        sort(node,node+N);</span><br><span class="line">        <span class="keyword">int</span> ans =<span class="number">0</span> , endt =<span class="number">0</span> ;</span><br><span class="line">        <span class="keyword">for</span>( <span class="keyword">int</span> i=<span class="number">0</span> ;i&lt;N;i ++)&#123;</span><br><span class="line">            <span class="keyword">if</span>( endt &lt;= node[i].second )&#123;</span><br><span class="line">                ans ++ ;</span><br><span class="line">                endt = node[i].first;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字典序比较"><a href="#字典序比较" class="headerlink" title="字典序比较"></a>字典序比较</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">include &lt;bits/stdc++.h&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e4</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">0</span> , b = n<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>( a &lt;= b)&#123;</span><br><span class="line">        <span class="keyword">bool</span> left = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; a+i &lt;=b ; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>( s[a+i] &lt; s[b-i] )&#123;</span><br><span class="line">                left = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (s[a+i] &gt; s[b-i])&#123;</span><br><span class="line">                left = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>( left ) <span class="built_in">putchar</span>(s[a++]);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">putchar</span>(s[b--]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;N);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">    solve(N);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;贪心专题&quot;&gt;&lt;a href=&quot;#贪心专题&quot; class=&quot;headerlink&quot; title=&quot;贪心专题&quot;&gt;&lt;/a&gt;贪心专题&lt;/h1&gt;&lt;h2 id=&quot;1-活动安排&quot;&gt;&lt;a href=&quot;#1-活动安排&quot; class=&quot;headerlink&quot; title=&quot;1.活动安
      
    
    </summary>
    
    
      <category term="ACM" scheme="https://nymrli.top/tags/ACM/"/>
    
      <category term="贪心" scheme="https://nymrli.top/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>学习nginx配置</title>
    <link href="https://nymrli.top/2019/01/24/%E5%AD%A6%E4%B9%A0nginx%E9%85%8D%E7%BD%AE/"/>
    <id>https://nymrli.top/2019/01/24/学习nginx配置/</id>
    <published>2019-01-24T08:45:40.000Z</published>
    <updated>2019-01-24T08:47:29.469Z</updated>
    
    <content type="html"><![CDATA[<h4 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h4><h5 id="多台虚拟主机"><a href="#多台虚拟主机" class="headerlink" title="多台虚拟主机:"></a>多台虚拟主机:</h5><p>1.分配IP地址</p><p>2.新建、编写usr/local/nginx的conf配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">http&#123;</span><br><span class="line">    sever&#123;</span><br><span class="line">        listen 192.168.1.17:80;//监听 (IP地址:) 端口</span><br><span class="line">        server_name 192.168.1.17;// 域名或者ip</span><br><span class="line">        access_log logs/server1.access.log conbined;//指定位置+使用日志文件默认格式</span><br><span class="line">        location /</span><br><span class="line">        &#123;</span><br><span class="line">        index index.html index.htm; //index表示意义(关键字),左边优先级高.指定的首页</span><br><span class="line">        root html/ss2;</span><br><span class="line">        //虚拟主机目录(网站目录)==&gt;ss2下的所以html文件都可以通过192.168.1.17/xxx访问</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.编写目录下的首页index.html文件</p><p>4.运行nginx</p><p><code>usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/xnzj.conf</code></p><p>▲在根目录下可以直接通过路径访问,如根目录下只有index文件,而配置中设置的是<code>index index.html</code>此时没有找到index.html后就会显示403错误,但是可以通过<code>192.168.1.17</code>==&gt;<code>192.168.1.17/index</code>添加路径的方法来加载index界面</p><h5 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h5><ul><li>缓存</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">listen xxx;</span><br><span class="line">server_name yyy;</span><br><span class="line">location ~.*\.(jpg|png|)$&#123;</span><br><span class="line">        expires 30d;</span><br><span class="line">&#125;</span><br><span class="line">location ~.*\.(css|js|)$&#123;</span><br><span class="line">        expires 1h;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>自动列目录</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[/ect/nginx/nginx.conf]</span><br><span class="line">server&#123;</span><br><span class="line">..</span><br><span class="line">    location / &#123;</span><br><span class="line">      root html;</span><br><span class="line">      index index.html index.hml;</span><br><span class="line">      autoindex on; #▲</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="uwsgi模块使用"><a href="#uwsgi模块使用" class="headerlink" title="uwsgi模块使用"></a>uwsgi模块使用</h4><p>安装<br><code>source activate</code># 开启虚拟开发环境模式<br><code>pip install uwsgi</code> # 安装uwsgi<br>配置<br>uwsgi配置文件支持很多格式，我采用.ini格式，命名为uconfig.ini具体内容如下：</p><p>启动uwsgi , 命令输入<code>uwsgi uconfig.ini</code></p><p>外部访问测试 </p><p>此时在外部访问 公网IP：5000就可以访问了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[uwsgi]</span><br><span class="line"></span><br><span class="line"># 外部访问地址，可以指定多种协议，现在用http便于调试，之后用socket</span><br><span class="line">http = 0.0.0.0:5000</span><br><span class="line"># 指向项目目录</span><br><span class="line">chdir =  /home/pythonproject/my_flask/py3env/myblog/</span><br><span class="line"># flask启动程序文件</span><br><span class="line">wsgi-file = manage.py</span><br><span class="line"># flask在manage.py文件中的app名</span><br><span class="line">callable = app #很多人习惯将Flask应用对象取名为”app”，但是WSGI标准是”application”。uWSGI提供了一个功能，可以指定应用对象，方法就是在配置文件中加上”callable”项：</span><br><span class="line"># 处理器数</span><br><span class="line">processes = 4</span><br><span class="line"># 线程数</span><br><span class="line">threads = 2</span><br><span class="line">#状态检测地址</span><br><span class="line">stats = 127.0.0.1:9191</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    include uwsgi_params;</span><br><span class="line">    uwsgi_pass 127.0.0.1:3031;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段配置表明Nginx会将收到的所有请求都转发到”127.0.0.1:3031″端口上，即uWSGI服务器上。现在让我们重启Nginx，</p><p><img src="/2019/01/24/学习nginx配置/Users/10630/Desktop/tmp/%E5%AD%A6%E4%B9%A0nginx%E9%85%8D%E7%BD%AE/nginx%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%91%98%E8%A6%81.jpg" alt="nginx配置文件摘要"></p><p> <img src="" alt="服务器"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;nginx配置&quot;&gt;&lt;a href=&quot;#nginx配置&quot; class=&quot;headerlink&quot; title=&quot;nginx配置&quot;&gt;&lt;/a&gt;nginx配置&lt;/h4&gt;&lt;h5 id=&quot;多台虚拟主机&quot;&gt;&lt;a href=&quot;#多台虚拟主机&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
      <category term="环境配置" scheme="https://nymrli.top/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>C++日期操作</title>
    <link href="https://nymrli.top/2019/01/24/C++%E6%97%A5%E6%9C%9F%E6%93%8D%E4%BD%9C/"/>
    <id>https://nymrli.top/2019/01/24/C++日期操作/</id>
    <published>2019-01-24T07:00:56.000Z</published>
    <updated>2019-02-06T08:23:36.537Z</updated>
    
    <content type="html"><![CDATA[<h2 id="C-日期操作"><a href="#C-日期操作" class="headerlink" title="C++日期操作"></a>C++日期操作</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span>&#123;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">time_t</span> now = time(<span class="number">0</span>);<span class="comment">// 基于当前系统的当前日期/时间 的时间戳</span></span><br><span class="line">   <span class="built_in">cout</span> &lt;&lt; <span class="string">"1970 到目前经过秒数:"</span> &lt;&lt; now &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   tm *ltm = localtime(&amp;now);<span class="comment">// 将时间戳转换为结构体,再输出 tm 结构的各个组成部分</span></span><br><span class="line">   <span class="built_in">cout</span> &lt;&lt; <span class="string">"年: "</span>&lt;&lt; <span class="number">1900</span> + ltm-&gt;tm_year &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   <span class="built_in">cout</span> &lt;&lt; <span class="string">"月: "</span>&lt;&lt; <span class="number">1</span> + ltm-&gt;tm_mon&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   <span class="built_in">cout</span> &lt;&lt; <span class="string">"日: "</span>&lt;&lt;  ltm-&gt;tm_mday &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   <span class="built_in">cout</span> &lt;&lt; <span class="string">"时间: "</span>&lt;&lt; ltm-&gt;tm_hour &lt;&lt; <span class="string">":"</span>;</span><br><span class="line">   <span class="built_in">cout</span> &lt;&lt; ltm-&gt;tm_min &lt;&lt; <span class="string">":"</span>;</span><br><span class="line">   <span class="built_in">cout</span> &lt;&lt; ltm-&gt;tm_sec &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   getchar();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="time-t结构体"><a href="#time-t结构体" class="headerlink" title="time_t结构体"></a><code>time_t</code>结构体</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( <span class="keyword">void</span> )</span> </span>&#123; </span><br><span class="line"><span class="keyword">time_t</span> t = time(<span class="number">0</span>); </span><br><span class="line">    <span class="keyword">char</span> tmp[<span class="number">64</span>]; </span><br><span class="line">    strftime( tmp, <span class="keyword">sizeof</span>(tmp), <span class="string">"%Y/%m/%d %X %A 本年第%j天 %z"</span>,localtime(&amp;t) ); </span><br><span class="line">    <span class="built_in">puts</span>( tmp ); </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// ---第二种</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">getTime</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">time_t</span> timep;</span><br><span class="line">    time (&amp;timep);</span><br><span class="line">    <span class="keyword">char</span> tmp[<span class="number">64</span>];</span><br><span class="line">    strftime(tmp, <span class="keyword">sizeof</span>(tmp), <span class="string">"%Y-%m-%d %H:%M:%S"</span>,localtime(&amp;timep) );</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span>   time = getTime();</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; time &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>size_t strftime(char <em>strDest, size_t maxsize, const char </em>format, const struct tm <em>timeptr);<br>根据格式字符串生成字符串。<br>struct tm </em>localtime(const time_t *timer);<br>取得当地时间，localtime获取的结果由结构tm返回<br>返回的字符串可以依下列的格式而定：<br>%a 星期几的缩写。Eg:Tue<br>%A 星期几的全名。 Eg: Tuesday<br>%b 月份名称的缩写。<br>%B 月份名称的全名。<br>%c 本地端日期时间较佳表示字符串。<br>%d 用数字表示本月的第几天 (范围为 00 至 31)。日期<br>%H 用 24 小时制数字表示小时数 (范围为 00 至 23)。<br>%I 用 12 小时制数字表示小时数 (范围为 01 至 12)。<br>%j 以数字表示当年度的第几天 (范围为 001 至 366)。<br>%m 月份的数字 (范围由 1 至 12)。<br>%M 分钟。<br>%p 以 ‘’AM’’ 或 ‘’PM’’ 表示本地端时间。<br>%S 秒数。<br>%U 数字表示为本年度的第几周，第一个星期由第一个周日开始。<br>%W 数字表示为本年度的第几周，第一个星期由第一个周一开始。<br>%w 用数字表示本周的第几天 ( 0 为周日)。<br>%x 不含时间的日期表示法。<br>%X 不含日期的时间表示法。 Eg: 15:26:30<br>%y 二位数字表示年份 (范围由 00 至 99)。<br>%Y 完整的年份数字表示，即四位数。 Eg:2008<br>%Z(%z) 时区或名称缩写。Eg:中国标准时间<br>%% % 字符。 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;C-日期操作&quot;&gt;&lt;a href=&quot;#C-日期操作&quot; class=&quot;headerlink&quot; title=&quot;C++日期操作&quot;&gt;&lt;/a&gt;C++日期操作&lt;/h2&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
      
    
    </summary>
    
    
      <category term="C++" scheme="https://nymrli.top/tags/C/"/>
    
      <category term="程序开发经验" scheme="https://nymrli.top/tags/%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>Shell代码编写记录</title>
    <link href="https://nymrli.top/2019/01/23/Shell%E4%BB%A3%E7%A0%81%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/"/>
    <id>https://nymrli.top/2019/01/23/Shell代码编写记录/</id>
    <published>2019-01-23T05:48:59.000Z</published>
    <updated>2019-01-24T03:06:07.015Z</updated>
    
    <content type="html"><![CDATA[<h2 id="随机选取端口"><a href="#随机选取端口" class="headerlink" title="随机选取端口"></a>随机选取端口</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 随机设置代理和监控端口，允许每台机器有多个代理</span><br><span class="line"><span class="meta">#</span> 注意:$RANDOM返回一个从0到32767的值，端口&lt;= 1024保留给root用户</span><br><span class="line"><span class="meta">#</span> TODO:不是随机选择端口，而是绑定到可用端口</span><br><span class="line">export SPARK_SERVERPORT=$[$RANDOM + 1025]</span><br><span class="line">export SPARK_AGENTPORT=$[$RANDOM + 1025]</span><br></pre></td></tr></table></figure><h2 id="后台执行-获取其PID"><a href="#后台执行-获取其PID" class="headerlink" title="后台执行,获取其PID"></a>后台执行,获取其PID</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">rcssserver3d --agent-port $SPARK_AGENTPORT --server-port $SPARK_SERVERPORT &amp;</span><br><span class="line"><span class="meta">#</span> 将rcssserver3d后台运行在随机获得的端口上</span><br><span class="line">PID=$! # 获得进程号,最后用进程PID关闭rcssserver3d</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> ---类比学习---</span><br><span class="line">python ./test1.py &amp;</span><br><span class="line">PID=$!</span><br><span class="line">echo $PID</span><br></pre></td></tr></table></figure><h2 id="组合命令"><a href="#组合命令" class="headerlink" title="组合命令"></a>组合命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sleep 5#延迟时间</span><br><span class="line">DIR_SCRIPT="$( cd "$( dirname "$0" )" &amp;&amp; pwd )" </span><br><span class="line"><span class="meta">#</span> 先运行 cd切换目录,再将当前工作目录赋值给 DIR_SCRIPT</span><br><span class="line">TYPE=$1#TYPE为读取第二个参数</span><br><span class="line">DIR_PARAMS="$( cd "$( dirname "$2" )" &amp;&amp; pwd )"</span><br><span class="line">DIR_OUTPUT="$( cd "$( dirname "$3" )" &amp;&amp; pwd )"</span><br><span class="line"></span><br><span class="line">PARAMS_FILE=$DIR_PARAMS/$(basename $2)</span><br><span class="line"><span class="meta">#</span> basename返回文件名</span><br><span class="line">OUTPUT_FILE=$DIR_OUTPUT/$(basename $3)</span><br></pre></td></tr></table></figure><h2 id="输出判断"><a href="#输出判断" class="headerlink" title="输出判断"></a>输出判断</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">while [ ! -f $OUTPUT_FILE ] &amp;&amp; [ $total_wait_time -lt $maxWaitTimeSecs ]</span><br><span class="line">do </span><br><span class="line">  sleep 1</span><br><span class="line">  total_wait_time=`expr $total_wait_time + 1`</span><br><span class="line"><span class="meta">  #</span> expr 表示后面是运算表达式</span><br><span class="line">done </span><br><span class="line"><span class="meta">#</span> -f 是正常文件 </span><br><span class="line"><span class="meta">#</span> Shell 中 ()用[]代替</span><br><span class="line">if [ ! -f $OUTPUT_FILE ]</span><br><span class="line">then</span><br><span class="line">  echo "Timed out while waiting for script to complete, current wait time is $total_wait_time seconds."</span><br><span class="line">else</span><br><span class="line">  echo "Completed with a wait time of $total_wait_time seconds."</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h2 id="关闭进程"><a href="#关闭进程" class="headerlink" title="关闭进程"></a>关闭进程</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">echo "Killing Simulator"</span><br><span class="line">kill -s 2 $PID</span><br><span class="line"><span class="meta">#</span> kill -s 信号名 进程号</span><br><span class="line">echo "Killing Agent"</span><br><span class="line">kill -s 2 $AGENTPID</span><br></pre></td></tr></table></figure><p>格式：<code>kill &lt;pid&gt;</code></p><p>格式：<code>kill -TERM &lt;pid&gt;</code></p><p>发送SIGTERM旌旗灯号到指定过程，若是过程没有捕获该旌旗灯号，则过程终止（If no signal is specified， the TERM signal is sent.  The TERM signal will kill processes which do not catch this signal.）</p><p>格式：kill -l</p><p>列出所有旌旗灯号名称（Print a list of signal names.  These are found in /usr/include/linux/signal.h）。只有第9种旌旗灯号（SIGKILL）才可以无前提终止过程，其他旌旗灯号过程都有权力忽视。下面是常用的旌旗灯号：</p><h3 id="旌旗灯号名称"><a href="#旌旗灯号名称" class="headerlink" title="旌旗灯号名称"></a>旌旗灯号名称</h3><ul><li><p>HUP     1    终端断线</p></li><li><p>INT     2    中断（同 Ctrl + C）</p></li><li><p>QUIT    3    退出（同 Ctrl + ）</p></li><li><p>TERM    15    终止</p></li><li><p>KILL    9    强迫终止</p></li><li><p>CONT    18    持续（与STOP相反， fg/bg号令）</p></li><li><p>STOP    19    暂停（同 Ctrl + Z）</p></li></ul><h2 id="Bash-Shell-脚本获取进程-pid"><a href="#Bash-Shell-脚本获取进程-pid" class="headerlink" title="Bash Shell 脚本获取进程 pid"></a>Bash Shell 脚本获取进程 pid</h2><ul><li>第一种方法:</li></ul><p><code>ps -ef | grep &quot;Processname&quot; | grep -v grep | awk &#39;{print $2}&#39;</code></p><ul><li>第二种</li></ul><p>最简单的方法是使用 <a href="https://www.baidu.com/s?wd=pgrep&amp;tn=24004469_oem_dg&amp;rsv_dl=gh_pl_sl_csd" target="_blank" rel="noopener">pgrep</a>：</p><p><code>pgrep -f name</code></p><h3 id="根据PID关闭进程"><a href="#根据PID关闭进程" class="headerlink" title="根据PID关闭进程"></a>根据PID关闭进程</h3><p><code>kill -9 PID</code></p><h3 id="根据进程名关闭进程"><a href="#根据进程名关闭进程" class="headerlink" title="根据进程名关闭进程"></a>根据进程名关闭进程</h3><p>法一:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -f name1</span><br></pre></td></tr></table></figure><p>法二:</p><p>如果是可执行程序的话，可以直接使用 <a href="https://www.baidu.com/s?wd=pidof&amp;tn=24004469_oem_dg&amp;rsv_dl=gh_pl_sl_csd" target="_blank" rel="noopener">pidof</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pidof name</span><br></pre></td></tr></table></figure><h3 id="关闭Roboviz-sh里java进程的方法"><a href="#关闭Roboviz-sh里java进程的方法" class="headerlink" title="关闭Roboviz.sh里java进程的方法:"></a>关闭Roboviz.sh里java进程的方法:</h3><blockquote><p>grep -v ：显示不包含匹配文本的所有行(反向查找)。比如 grep -v grep 就是查找不含有 grep 字段的行</p></blockquote><p>写法一:<code>kill -9 $(ps x | grep Roboviz.jar | grep -v grep | awk &#39;{print $1}&#39;)</code></p><p>写法二: <code>ps -ef | grep Roboviz.jar | grep -v grep | awk &#39;{print $2}&#39; | xargs kill -9</code></p><h2 id="shell脚本中的冒号作用"><a href="#shell脚本中的冒号作用" class="headerlink" title="shell脚本中的冒号作用"></a>shell脚本中的冒号作用</h2><h3 id="作用一-占位符-lt-gt-pass"><a href="#作用一-占位符-lt-gt-pass" class="headerlink" title="作用一: 占位符&lt;==&gt;pass"></a>作用一: 占位符&lt;==&gt;pass</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if egrep '.*vmlinuz-2.6.32-220.23.1.lvs.el6.*nohz=off' /boot/grub/grub.conf ;then </span><br><span class="line">    :</span><br><span class="line">else </span><br><span class="line">    sed -i -r 's/(.*vmlinuz-2.6.32-220.23.1.lvs.el6.*)/\1 nohz=off/' /boot/grub/grub.conf</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h3 id="作用二-分隔符"><a href="#作用二-分隔符" class="headerlink" title="作用二: 分隔符"></a>作用二: 分隔符</h3><blockquote><p> 冒号(:)常用来做路径的分隔符（PATH），数据字段的分隔符（/etc/passwd）</p></blockquote><h2 id="宏"><a href="#宏" class="headerlink" title="宏"></a>宏</h2><h3 id="特殊变量"><a href="#特殊变量" class="headerlink" title="特殊变量:"></a>特殊变量:</h3><ul><li>$$ 当前脚本PID</li><li>$!  后台子进程PID</li><li>$? 上句执行结果</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;随机选取端口&quot;&gt;&lt;a href=&quot;#随机选取端口&quot; class=&quot;headerlink&quot; title=&quot;随机选取端口&quot;&gt;&lt;/a&gt;随机选取端口&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
      
    
    </summary>
    
    
      <category term="Shell" scheme="https://nymrli.top/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>Matlib基础教程</title>
    <link href="https://nymrli.top/2019/01/23/Matlib%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    <id>https://nymrli.top/2019/01/23/Matlib基础教程/</id>
    <published>2019-01-23T05:43:34.000Z</published>
    <updated>2019-01-23T05:44:12.723Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Matlab学习"><a href="#Matlab学习" class="headerlink" title="Matlab学习"></a>Matlab学习</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A = [1 3 5];</span><br><span class="line">max(A)</span><br><span class="line">ans =</span><br><span class="line">     5</span><br></pre></td></tr></table></figure><p>如果存在多个输入参数，请使用逗号加以分隔：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">B = [10 6 4];</span><br><span class="line">max(A,B)</span><br><span class="line">ans =</span><br><span class="line">    10     6     5</span><br><span class="line">%A中列元素与B中列元素一一比较.</span><br></pre></td></tr></table></figure><p><strong>clc 函数清除命令行窗口。</strong></p><h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">disp(&apos;hello world&apos;)</span><br><span class="line">hello world</span><br><span class="line">要调用不需要任何输入且不会返回任何输出的函数，请只键入函数名称：</span><br></pre></td></tr></table></figure><h4 id="二维绘图"><a href="#二维绘图" class="headerlink" title="二维绘图"></a>二维绘图</h4><blockquote><p><code>r--&#39;</code> 字符串为<strong>线条设定</strong>。每个设定可包含表示线条颜色、样式和标记的字符。标记是在绘制的每个数据点上显示的符号，例如，<code>+</code>、<code>o</code> 或 <code>*</code>。例如，<code>&#39;g:*&#39;</code> 请求绘制使用 <code>*</code> 标记的绿色点线。</p><p>请注意，为第一幅绘图定义的标题和标签不再被用于当前的<strong>图</strong>窗口中。默认情况下，每次调用绘图函数、重置坐标轴及其他元素以准备新绘图时，MATLAB® 都会清除图形。</p><p>要将绘图添加到现有图形中，请使用 <code>hold</code>。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x = 0:pi/100:2*pi;</span><br><span class="line">y = sin(x);</span><br><span class="line">plot(x,y)</span><br><span class="line">hold on</span><br><span class="line">y2 = cos(x);</span><br><span class="line">plot(x,y2,&apos;:&apos;)</span><br><span class="line">legend(&apos;sin&apos;,&apos;cos&apos;)</span><br></pre></td></tr></table></figure><h4 id="三维绘图"><a href="#三维绘图" class="headerlink" title="三维绘图"></a>三维绘图</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[X,Y] = meshgrid(-2:.2:2);</span><br><span class="line">Z = X .* exp(-X.^2 - Y.^2);</span><br><span class="line">surf(X,Y,Z)</span><br></pre></td></tr></table></figure><blockquote><p><code>surf</code> 函数及其伴随函数 <code>mesh</code> 以三维形式显示曲面图。<code>surf</code> 使用颜色显示曲面图的连接线和面。<code>mesh</code> 生成仅以颜色标记连接定义点的线条的线框曲面图。（surf填充-sruface）</p></blockquote><h4 id="M文件"><a href="#M文件" class="headerlink" title="M文件"></a>M文件</h4><blockquote><p>脚本文件</p><p>函数文件</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">脚本文件 </span><br><span class="line">1.多条命令的综合体 </span><br><span class="line">2.没有输入、输出变量 </span><br><span class="line">3.使用MATLAB基本工作空间 </span><br><span class="line">4.没有函数声明行 </span><br><span class="line"></span><br><span class="line">函数文件</span><br><span class="line">1.常用于扩充MATLAB函数库</span><br><span class="line">2.可以包含输入、输出变量</span><br><span class="line">3.运算中生成的所有变量都存放在函数工作空间</span><br><span class="line">4.包含函数声明行</span><br></pre></td></tr></table></figure><p>函数名为mymax，文件名为mymax.m（必须相同）。它需要五个数字作为参数并返回最大的数字。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">创建函数文件，名为mymax.m 并输入下面的代码：  </span><br><span class="line">function max = mymax(n1, n2, n3, n4, n5)  </span><br><span class="line">%This function calculates the maximum of the  </span><br><span class="line">% five numbers given as input  </span><br><span class="line">max =  n1;  </span><br><span class="line">if(n2 &gt; max)  </span><br><span class="line">    max = n2;  </span><br><span class="line">end  </span><br><span class="line">if(n3 &gt; max)  </span><br><span class="line">   max = n3;  </span><br><span class="line">end  </span><br><span class="line">if(n4 &gt; max)  </span><br><span class="line">    max = n4;  </span><br><span class="line">end  </span><br><span class="line">if(n5 &gt; max)  </span><br><span class="line">    max = n5;  </span><br><span class="line">end</span><br></pre></td></tr></table></figure><h4 id="符号变量与符号表达式"><a href="#符号变量与符号表达式" class="headerlink" title="符号变量与符号表达式"></a>符号变量与符号表达式</h4><figure class="highlight plain"><figcaption><span>x y;            %定义x,y为符号变量>>z</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">需要用syms或sym定义，例如</span><br><span class="line">&gt;&gt;syms  x y;            %定义x,y为符号变量</span><br><span class="line">&gt;&gt;z=x^2+y^2       ％定义z为含有x与y的符号表达式</span><br><span class="line"></span><br><span class="line">也可以这样定义z，  </span><br><span class="line">&gt;&gt;z=sym(‘x^2+y^2’)     %与上面等价</span><br></pre></td></tr></table></figure><hr><h5 id="关于符号表达式的基本命令"><a href="#关于符号表达式的基本命令" class="headerlink" title="关于符号表达式的基本命令"></a>关于符号表达式的基本命令</h5><table><thead><tr><th>命令</th><th>含义</th></tr></thead><tbody><tr><td>pretty(s)</td><td>将s显示为数学书写形式</td></tr><tr><td>symsum(s,x,a,b)</td><td>对s中的x从a到b求和</td></tr><tr><td>findsym(s)</td><td>给出s中所有的符号变量</td></tr><tr><td>findsym(s,n)</td><td>给出s中离x最近的n个符号变量，n大于s中符号变量个数时则按字母表顺序返回符号变量</td></tr><tr><td>subs(s,a,b)</td><td>将s中的a置换成b</td></tr><tr><td>double(s)</td><td>将s转换成数值形式</td></tr><tr><td>str2num(s)</td><td>字符变量转换为数值变量</td></tr><tr><td>num2str(s)</td><td>数值变量转换为字符变量</td></tr><tr><td>sym(a)</td><td>将a转换为符号变量</td></tr><tr><td>digits(d)</td><td>给出有效数字个数为d的近似值</td></tr><tr><td>vpa(s,d)</td><td>计算s在精度为d位有效数字的解</td></tr><tr><td>eval(s)</td><td>执行符号表达式s</td></tr></tbody></table><table><thead><tr><th>命 令</th><th>含  义</th></tr></thead><tbody><tr><td>collect(s)</td><td>合并s中的同类项</td></tr><tr><td>compose(f,g,x,y)</td><td>计算复合函数f(g(y)),x,y分别为f,g的自变量</td></tr><tr><td>g＝finverse(f)</td><td>计算f(x)的反函数，g的自变量仍为x</td></tr><tr><td>expand(s)</td><td>展开表达式s</td></tr><tr><td>factor(s)</td><td>因式分解s</td></tr><tr><td>[N,D]=numden(s)</td><td>通分s中各式，其和的分子为N，分母为D</td></tr><tr><td>simplify(s)</td><td>对s进行综合化简</td></tr><tr><td>simple(s)</td><td>给出s的所有最简式</td></tr></tbody></table><hr><h6 id="微积分"><a href="#微积分" class="headerlink" title="微积分"></a>微积分</h6><table><thead><tr><th>命 令</th><th>含  义</th></tr></thead><tbody><tr><td>limit(f,x,a)</td><td>计算函数f(x)当x-&gt;a时的极限</td></tr><tr><td>limit(f,x,a,’right’)</td><td>计算函数f(x)当x-&gt;a+时的右极限</td></tr><tr><td>limit(f,x,a,’left’)</td><td>计算函数f(x)当x-&gt;a-时的左极限</td></tr><tr><td>x=fminbnd(f,a,b)</td><td>计算函数f(x)在区间[a,b]上的最小值点</td></tr><tr><td>[x,fmin]=fminbnd(f,a,b)</td><td>计算函数f(x)在区间[a,b]上的最小值点及最小值fmin</td></tr><tr><td>diff(f,’x’,n)</td><td>计算函数f(x)对变量x的n阶导数，’x’可省</td></tr><tr><td>int(f,x)</td><td>计算函数f(x)的不定积分，积分变量为x</td></tr><tr><td>int(f,x,a,b)</td><td>计算函数f(x)在[a,b]上的定积分(符号)</td></tr><tr><td>quad(f,a,b)</td><td>计算函数f(x)在[a,b]上的定积分值</td></tr><tr><td>taylor(f)</td><td>计算函数f(x)在x=0处的5阶泰勒展开式</td></tr><tr><td>taylor(f,n,x,a)</td><td>计算函数f(x)在x=a处的n-1阶泰勒展开式</td></tr></tbody></table><p>▲需要注意的是，在进行这些计算前必须申明是符号计算，即要加上syms x y;等语句</p><hr><p>基本的绘图步骤 </p><table><thead><tr><th>步    骤</th><th>典 型 代 码</th></tr></thead><tbody><tr><td>1. 准备绘图数据</td><td>x = 0:0.2:12; y1 = bessel(1,x);</td></tr><tr><td>2. 选择一个窗口并在窗口中给图形定位</td><td>figure(1) ，subplot(2,2,1)</td></tr><tr><td>3. 调用基本的绘图函数</td><td>h = plot(x,y1,x,y2,x,y3);</td></tr><tr><td>4. 选择线型和标记特性</td><td>set(h,’LineWidth’,2,{‘LineStyle’},{‘–’;’:’;’-.’})</td></tr><tr><td>5. 设置坐标轴的极限值、标记符号和网格线</td><td>axis([0 12 -0.5 1])</td></tr><tr><td>6. 使用坐标轴标签、图例和文本对图形进行注释</td><td>xlabel(‘Time’)ylabel(‘Amplitude’)</td></tr><tr><td>7. 输出图形</td><td>print -depsc -tiff -r200 myplot</td></tr></tbody></table><hr><h6 id="二维曲线图"><a href="#二维曲线图" class="headerlink" title="# 二维曲线图"></a># 二维曲线图</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">例：</span><br><span class="line">&gt;&gt; x= 0:0.01:10;</span><br><span class="line">&gt;&gt; y=sin(x);</span><br><span class="line">&gt;&gt; plot(x,y)</span><br></pre></td></tr></table></figure><h6 id="函数绘图"><a href="#函数绘图" class="headerlink" title="# 函数绘图"></a># 函数绘图</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fplot(‘function’,范围)，例如</span><br><span class="line">    fplot(&apos;sin(x)&apos;,[0,2*pi],&apos;r&apos;)</span><br><span class="line">后面选项与plot一致。再如</span><br><span class="line">   fplot(‘[sin(x),cos(x)]’,[0,2*pi])同时画出两个函数图形</span><br></pre></td></tr></table></figure><h6 id="符号函数绘图"><a href="#符号函数绘图" class="headerlink" title="#符号函数绘图"></a>#符号函数绘图</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">格式ezplot(f,[a,b])  画出符号函数f在[a,b]上的图形</span><br></pre></td></tr></table></figure><h6 id="极坐标图形"><a href="#极坐标图形" class="headerlink" title="# 极坐标图形"></a># 极坐标图形</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MATLAB提供了polar函数来在极坐标下绘制图形 ：</span><br><span class="line">&gt;&gt; x= 0:0.01:10;</span><br><span class="line">&gt;&gt; y=1+cos(x);</span><br><span class="line">&gt;&gt; polar(x,y,&apos;rs&apos;)</span><br></pre></td></tr></table></figure><p>图形控制与修饰</p><table><thead><tr><th>命令</th><th>含义</th></tr></thead><tbody><tr><td>axis auto</td><td>坐标轴缺省设置</td></tr><tr><td>axis equal</td><td>纵、横轴采用相等单位长度</td></tr><tr><td>axis image</td><td>纵、横轴采用相等单位长度，且坐标框紧贴数据范围</td></tr><tr><td>axis([x1 x2 y1 y2])</td><td>设定坐标范围</td></tr><tr><td>grid on</td><td>画出网格线</td></tr><tr><td>grid off</td><td>不画网格线</td></tr><tr><td>hold on</td><td>使以后图形画在当前图形上</td></tr><tr><td>hold off</td><td>使以后图形不画在当前图形上</td></tr></tbody></table><table><thead><tr><th>命令</th><th>含义</th></tr></thead><tbody><tr><td>title(x,y,‘name’)</td><td>在(x,y)处标示图名</td></tr><tr><td>xlabel(‘xtext’)</td><td>横坐标轴名</td></tr><tr><td>ylabel(‘ytext’)</td><td>纵坐标轴名</td></tr><tr><td>legend(‘first’,’second’,n)</td><td>对一个坐标系中的两幅图作出图例注解</td></tr><tr><td>figure</td><td>另开图形窗口</td></tr><tr><td>subplot(m,n,k)</td><td>m×n幅子图的第k幅称为当前图</td></tr></tbody></table><h6 id="多个图形的绘制方法"><a href="#多个图形的绘制方法" class="headerlink" title="多个图形的绘制方法"></a>多个图形的绘制方法</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">subplot函数 可以实现多个图形的绘制：</span><br><span class="line">&gt;&gt; x = 0:.1:20;</span><br><span class="line">&gt;&gt; subplot(2,2,1)</span><br><span class="line">&gt;&gt; plot(x,sin(x));</span><br></pre></td></tr></table></figure><h6 id="三维网线图"><a href="#三维网线图" class="headerlink" title="# 三维网线图"></a># 三维网线图</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.mesh(X,Y,Z)  ，例</span><br><span class="line">    x=-5:0.2:5;y=x;</span><br><span class="line">  [X Y]=meshgrid(x,y);%生成格点矩阵</span><br><span class="line">   Z=sin(sqrt(X.^2+Y.^2));</span><br><span class="line">   mesh(X,Y,Z) </span><br><span class="line">2. ezmesh(‘f’,‘g’,‘h’,[u1,u2,v1,v2] )，例</span><br><span class="line">   ezmesh(&apos;cos(u)*cos(v)&apos;,&apos;sin(u)*cos(v)&apos;,&apos;sin(v)&apos;,[0,2*pi,-pi,pi]); axis equal</span><br></pre></td></tr></table></figure><h5 id="数值变量与符号变量"><a href="#数值变量与符号变量" class="headerlink" title="数值变量与符号变量"></a>数值变量与符号变量</h5><p>数值变量的常用函数，一般都可以直接用在符号变量上，比如三角函数，这些都是可以通用的，而且函数的含义也完全一样。     但偏偏有些函数非常蛋疼，对符号变量与数值变量都可以进行操作，但操作的含义完全不同，比如diff，diff对于一个数值变量的运算结果是差分，而对于一个符号变量的运算结果则是求导 。</p><blockquote><p>  另外也存在很多函数只能对数值变量操作，比如离散傅里叶变换fft。还有很多函数只能对符号变量操作，比如泰勒展开taylor。因此在matlab使用中，一定要区分变量的类型，其实真的用起来也好区分，因为完成特定的计算任务，要么全部用数值，要么全部用符号，这也符合一般处理问题的原则。 </p></blockquote><p><strong>4.字符串的常用函数</strong>    </p><p> matlab中字符串的常用算符就更少了，但都非常有用，这里介绍几个： 1）num2str和str2num：可以实现数值变量和字符串变量的转换，比如 a=1 b=num2str(1)<em>复制代码</em>运算结果显示a是一个数值变量，b是一个字符串变量，函数名中的2就是英文中to的意思，也就是把num数值类型转化成str字符类型。str2num就是这个函数的反函数，这两个命令结合，可以实现特定的功能，比如提取一个数字的最高位： a=123456 b=num2str(a) c=b(1) d=str2num(c) </p><p><strong>2.3for循环</strong></p><p>​    for循环的语法是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">for 数值变量=向量</span><br><span class="line">    执行语句</span><br><span class="line">end</span><br><span class="line">---</span><br><span class="line">其含义是，数值变量会取向量中的每一个值，然后执行语句，在执行语句中，数值变量是一个1*1的矩阵。比如for a=[0 1 3]</span><br><span class="line">---</span><br><span class="line">则会让a=0，执行语句，然后a=1，执行语句，最后a=3，执行语句。这里容易和赋值语句混淆，因为a=[0 1 3]是一个数值变量赋值，赋值后a是个向量，但加上了for后，a是1*1矩阵。另外，在数值变量赋值那段，我们说过有一种常用的赋值方法是&quot;a=初始值:步长:终值&quot;，其结果是把a赋值成一个向量，因此这也广泛用于for语句中</span><br><span class="line"> for a=初始值:步长:终值</span><br><span class="line"> ---</span><br><span class="line">则在执行语句中，a是一个遍历初值到终值的1*1矩阵。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Matlab学习&quot;&gt;&lt;a href=&quot;#Matlab学习&quot; class=&quot;headerlink&quot; title=&quot;Matlab学习&quot;&gt;&lt;/a&gt;Matlab学习&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl
      
    
    </summary>
    
    
      <category term="Matlab" scheme="https://nymrli.top/tags/Matlab/"/>
    
  </entry>
  
  <entry>
    <title>中文Bois模式界面</title>
    <link href="https://nymrli.top/2019/01/23/%E4%B8%AD%E6%96%87Bois%E6%A8%A1%E5%BC%8F%E7%95%8C%E9%9D%A2/"/>
    <id>https://nymrli.top/2019/01/23/中文Bois模式界面/</id>
    <published>2019-01-23T05:40:19.000Z</published>
    <updated>2019-01-23T05:42:54.257Z</updated>
    
    <content type="html"><![CDATA[<p>暗夜精灵的Bois界面。觉得还挺友好的。</p><p><img src="/2019/01/23/中文Bois模式界面/1.jpg" alt="1"></p><p><img src="/2019/01/23/中文Bois模式界面/2.jpg" alt="2"></p><p><img src="/2019/01/23/中文Bois模式界面/3.jpg" alt="3"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;暗夜精灵的Bois界面。觉得还挺友好的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/01/23/中文Bois模式界面/1.jpg&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/01/23/中文Bois模式界面/2.jpg&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="计算机基础知识" scheme="https://nymrli.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>Chrome开发者工具Network</title>
    <link href="https://nymrli.top/2019/01/23/Chrome%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7Network/"/>
    <id>https://nymrli.top/2019/01/23/Chrome开发者工具Network/</id>
    <published>2019-01-23T05:38:12.000Z</published>
    <updated>2019-01-23T05:39:27.448Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Chrome开发者工具中Network功能介绍"><a href="#Chrome开发者工具中Network功能介绍" class="headerlink" title="Chrome开发者工具中Network功能介绍"></a>Chrome开发者工具中Network功能介绍</h4><ul><li>第一列Name:请求的名称，一般会将URL的最后一 部分内容当作名称。  </li><li>第二列Status: 响应的状态码，这里显示为200，代表响应是正常的。通过状态码，我们可   以判断发送了请求之后是否得到了正常的响应。   </li><li>第三列Type: 请求的文档类型。这里为document, 代表我们这次请求的是一个HTML文档,内容就是一些HTML代码。  </li><li>第四列initiator: 请求源。用来标记请求是由哪个对象或进程发起的。   </li><li>第五列Size: 从服务器下载的文件和请求的资源大小。如果是从缓存中取得的资源，则该列会显示from cache。</li><li>第六列Time:发起请求到获取响应所用的总时间。</li><li>第七列Waterfall:网络请求的可视化瀑布流。  </li></ul><p>响应中分General部分，请求头、响应头：</p><blockquote><p>其中General含：</p><ul><li>Request URL为请求的URL，</li><li>Request Method为请求的方法</li><li>Status Code为响应状态码，</li><li>Remote Address为远程服务器的地址和端口</li><li>Referrer Policy为Referrer判别策略。</li></ul></blockquote><p><img src="/2019/01/23/Chrome开发者工具Network/Chrome.jpg" alt="Chrome"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Chrome开发者工具中Network功能介绍&quot;&gt;&lt;a href=&quot;#Chrome开发者工具中Network功能介绍&quot; class=&quot;headerlink&quot; title=&quot;Chrome开发者工具中Network功能介绍&quot;&gt;&lt;/a&gt;Chrome开发者工具中Netwo
      
    
    </summary>
    
    
      <category term="爬虫" scheme="https://nymrli.top/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="计算机基础知识" scheme="https://nymrli.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>AU使用</title>
    <link href="https://nymrli.top/2019/01/23/AU%E4%BD%BF%E7%94%A8/"/>
    <id>https://nymrli.top/2019/01/23/AU使用/</id>
    <published>2019-01-23T05:36:05.000Z</published>
    <updated>2019-01-23T05:36:39.080Z</updated>
    
    <content type="html"><![CDATA[<h4 id="AU学习使用"><a href="#AU学习使用" class="headerlink" title="AU学习使用"></a>AU学习使用</h4><blockquote><p>留人声、去伴奏</p></blockquote><h4 id="First"><a href="#First" class="headerlink" title="First."></a>First.</h4><p><img src="/2019/01/23/AU使用/立体声-中置声道提取.jpg" alt="立体声-中置声道提取"></p><p>▲侧边声道电平控制微弱，中置声道电平控制效果强。</p><p><img src="/2019/01/23/AU使用/立体声-中置声道提取2.jpg" alt="立体声-中置声道提取2"></p><p>▲交叉渗透，越大伴奏声音越不明显</p><h4 id="Second"><a href="#Second" class="headerlink" title="Second."></a>Second.</h4><p><img src="/2019/01/23/AU使用/图示均衡器.jpg" alt="图示均衡器"></p><p>前面几排调低到满意。（童声高音频率范围为260-880Hz,低音频率范围为196-700Hz,女声高音频率范围为220-1.1KHz,低音频率范围为200-700KHz,男声高音频率范围为160-523KHz低音频率范围为80-358Hz. 国际通信标准制定为300Hz-3400Hz! ）</p><hr><blockquote><p>留伴奏、去人声</p></blockquote><p>···选中所有，菜单栏-收藏夹-移除人声</p><p><img src="/2019/01/23/AU使用/移除人声.jpg" alt="移除人声"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;AU学习使用&quot;&gt;&lt;a href=&quot;#AU学习使用&quot; class=&quot;headerlink&quot; title=&quot;AU学习使用&quot;&gt;&lt;/a&gt;AU学习使用&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;留人声、去伴奏&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;First&quot;&gt;
      
    
    </summary>
    
    
      <category term="多媒体" scheme="https://nymrli.top/tags/%E5%A4%9A%E5%AA%92%E4%BD%93/"/>
    
  </entry>
  
  <entry>
    <title>Charles配置</title>
    <link href="https://nymrli.top/2019/01/23/Charles%E9%85%8D%E7%BD%AE/"/>
    <id>https://nymrli.top/2019/01/23/Charles配置/</id>
    <published>2019-01-23T05:32:21.000Z</published>
    <updated>2019-01-23T05:33:19.644Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Charles配置"><a href="#Charles配置" class="headerlink" title="Charles配置"></a>Charles配置</h3><hr><h4 id="下载SSL证书"><a href="#下载SSL证书" class="headerlink" title="下载SSL证书"></a>下载SSL证书</h4><p><img src="/2019/01/23/Charles配置/5.jpg" alt="5"></p><p><img src="/2019/01/23/Charles配置/6.jpg" alt="6"></p><h4 id="设置SSL端口"><a href="#设置SSL端口" class="headerlink" title="设置SSL端口"></a>设置SSL端口</h4><p><img src="/2019/01/23/Charles配置/8.jpg" alt="8"></p><p>*为通配IP网址，一般SSL的端口都是443</p><p>手机抓包</p><hr><h4 id="打开Charles代理"><a href="#打开Charles代理" class="headerlink" title="打开Charles代理"></a>打开Charles代理</h4><p><img src="/2019/01/23/Charles配置/7.jpg" alt="7"></p><p>具体配置，电脑端不用做任何配置，但是需要把防火墙关掉（这点很重要）！<br>charles需要设置下代理端口：进入Proxy，点击Proxy Setting, 端口设置为8888（一般默认为这个）</p><h4 id="配置手机SSL证书"><a href="#配置手机SSL证书" class="headerlink" title="配置手机SSL证书"></a>配置手机SSL证书</h4><p><img src="/2019/01/23/Charles配置/20180816141020.png" alt="20180816141020"></p><p>然后手机打开浏览器输入<code>chls.pro/ssl</code>下载证书</p><h4 id="小米手机安装charles证书"><a href="#小米手机安装charles证书" class="headerlink" title="小米手机安装charles证书"></a>小米手机安装charles证书</h4><blockquote><p>1.使用第三方浏览器下载.pem 格式的文件 （我使用的是QQ浏览器）<br>2.将这个文件放入小米的 DownLoad 文件夹下 (这步也可以不做，只要在4中的从存储设备安装能找到这个文件就行)<br>3.将.pem 文件修改为.crt 格式<br>4.设置—更多设置—系统安全—加密与凭据—-从存储设备安装–选择文件，选定该文件 </p></blockquote><h5 id="注：本人用的是小米6。"><a href="#注：本人用的是小米6。" class="headerlink" title="注：本人用的是小米6。"></a>注：本人用的是小米6。</h5><p><img src="/2019/01/23/Charles配置/1.jpg" alt="1"></p><hr><h4 id="手机设置代理"><a href="#手机设置代理" class="headerlink" title="手机设置代理"></a>手机设置代理</h4><p><img src="/2019/01/23/Charles配置/手机设置.png" alt="手机设置"></p><p>其中PAC地址打开Cmd，输入<code>ipconfig</code>查看</p><p><img src="/2019/01/23/Charles配置/代理.jpg" alt="代理"></p><hr><blockquote><h3 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客:"></a>参考博客:</h3><ul><li>Charles配置</li><li><a href="https://blog.csdn.net/liulanghk/article/details/46342205" target="_blank" rel="noopener">https://blog.csdn.net/liulanghk/article/details/46342205</a></li><li><a href="https://www.jianshu.com/p/7a88617ce80b" target="_blank" rel="noopener">https://www.jianshu.com/p/7a88617ce80b</a></li></ul><hr><ul><li>Charles使用</li><li><a href="http://www.bubuko.com/infodetail-2252870.html" target="_blank" rel="noopener">http://www.bubuko.com/infodetail-2252870.html</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Charles配置&quot;&gt;&lt;a href=&quot;#Charles配置&quot; class=&quot;headerlink&quot; title=&quot;Charles配置&quot;&gt;&lt;/a&gt;Charles配置&lt;/h3&gt;&lt;hr&gt;
&lt;h4 id=&quot;下载SSL证书&quot;&gt;&lt;a href=&quot;#下载SSL证书&quot; clas
      
    
    </summary>
    
    
      <category term="爬虫" scheme="https://nymrli.top/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="环境配置" scheme="https://nymrli.top/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>Python中对时间戳、时间的处理</title>
    <link href="https://nymrli.top/2019/01/23/Python%E4%B8%AD%E5%AF%B9%E6%97%B6%E9%97%B4%E6%88%B3%E3%80%81%E6%97%B6%E9%97%B4%E7%9A%84%E5%A4%84%E7%90%86/"/>
    <id>https://nymrli.top/2019/01/23/Python中对时间戳、时间的处理/</id>
    <published>2019-01-23T02:17:34.000Z</published>
    <updated>2019-01-23T02:17:44.466Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python中对时间戳、时间的处理"><a href="#Python中对时间戳、时间的处理" class="headerlink" title="Python中对时间戳、时间的处理"></a>Python中对时间戳、时间的处理</h1><h2 id="time模块"><a href="#time模块" class="headerlink" title="time模块"></a>time模块</h2><h3 id="获得时间戳"><a href="#获得时间戳" class="headerlink" title="获得时间戳"></a>获得时间戳</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">timestmamp = time.time()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br><span class="line"><span class="comment"># 1548208280.4581678</span></span><br></pre></td></tr></table></figure><h3 id="将时间戳转换成时间"><a href="#将时间戳转换成时间" class="headerlink" title="将时间戳转换成时间"></a>将时间戳转换成时间</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">timestamp = <span class="number">1462451334</span></span><br><span class="line">timeArr = time.localtime(timestamp) <span class="comment"># 转换成时间数组</span></span><br><span class="line">print(timeArr)</span><br><span class="line"><span class="comment"># &gt;&gt;&gt;time.struct_time(tm_year=2016, tm_mon=5, tm_mday=5, tm_hour=20, tm_min=28, tm_sec=54, tm_wday=3, tm_yday=126, tm_isdst=0)</span></span><br><span class="line">dt = time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>,timeArr) <span class="comment"># 指定转换成时间格式</span></span><br><span class="line">print(dt)</span><br></pre></td></tr></table></figure><h2 id="将时间转换成时间戳"><a href="#将时间转换成时间戳" class="headerlink" title="将时间转换成时间戳"></a>将时间转换成时间戳</h2><ul><li>利用<code>strptime()</code>函数将时间转换成时间数组</li><li>利用<code>mktime()</code>函数将时间数组转换成时间戳</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line">dt = <span class="string">"2016-05-05 20:28:54"</span></span><br><span class="line">timeArray = time.strptime(dt, <span class="string">"%Y-%m-%d %H:%M:%S"</span>) <span class="comment">#转换成时间数组</span></span><br><span class="line">timestamp = time.mktime(timeArray) <span class="comment">#转换成时间戳</span></span><br><span class="line"><span class="keyword">print</span> (timestamp)</span><br><span class="line"><span class="comment"># &gt;&gt;&gt; 1462451334.0</span></span><br></pre></td></tr></table></figure><h2 id="重新格式化时间"><a href="#重新格式化时间" class="headerlink" title="重新格式化时间"></a>重新格式化时间</h2><ul><li>利用<code>strptime()</code>函数将时间转换成时间数组</li><li>利用<code>strftime()</code>函数重新格式化时间</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line">dt = <span class="string">"2016-05-05 20:28:54"</span></span><br><span class="line">timeArray = time.strptime(dt, <span class="string">"%Y-%m-%d %H:%M:%S"</span>) </span><br><span class="line"><span class="comment">#转换成时间数组</span></span><br><span class="line">dt_new = time.strftime(<span class="string">"%Y%m%d-%H:%M:%S"</span>,timeArray) </span><br><span class="line"><span class="comment">#转换成新的时间格式(20160505-20:28:54)</span></span><br><span class="line"><span class="keyword">print</span> (dt_new)</span><br></pre></td></tr></table></figure><h2 id="按指定的格式获取当前时间"><a href="#按指定的格式获取当前时间" class="headerlink" title="按指定的格式获取当前时间"></a>按指定的格式获取当前时间</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取当前时间</span></span><br><span class="line">time_now = int(time.time()) </span><br><span class="line">time_local = time.localtime(time_now)<span class="comment"># 转换成localtime</span></span><br><span class="line">dt = time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>,time_local)</span><br><span class="line"><span class="comment"># 转换成新的时间格式(2016-05-09 18:59:20)</span></span><br><span class="line">print(dt)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Python中对时间戳、时间的处理&quot;&gt;&lt;a href=&quot;#Python中对时间戳、时间的处理&quot; class=&quot;headerlink&quot; title=&quot;Python中对时间戳、时间的处理&quot;&gt;&lt;/a&gt;Python中对时间戳、时间的处理&lt;/h1&gt;&lt;h2 id=&quot;time模
      
    
    </summary>
    
    
      <category term="Python" scheme="https://nymrli.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Sublmie 没有输出结果问题解决</title>
    <link href="https://nymrli.top/2019/01/22/Sublmie-%E6%B2%A1%E6%9C%89%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <id>https://nymrli.top/2019/01/22/Sublmie-没有输出结果问题解决/</id>
    <published>2019-01-22T15:05:20.000Z</published>
    <updated>2019-01-22T15:09:09.957Z</updated>
    
    <content type="html"><![CDATA[<p>无论是<code>Python</code>或者<code>C/C++</code>程序按<code>Ctrl+b</code>后运行没有输出。发现是编译选项出了问题。</p><p>解决方法如下：</p><p>按下<code>Ctrl +Shift + b</code>选择编译方法，光标移到有<code>Run</code>的选项,再按<code>Ctrl+b</code>编译</p><p><img src="/2019/01/22/Sublmie-没有输出结果问题解决/1.jpg" alt="1"></p><p>成功如图~</p><p><img src="/2019/01/22/Sublmie-没有输出结果问题解决/2.jpg" alt="2"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;无论是&lt;code&gt;Python&lt;/code&gt;或者&lt;code&gt;C/C++&lt;/code&gt;程序按&lt;code&gt;Ctrl+b&lt;/code&gt;后运行没有输出。发现是编译选项出了问题。&lt;/p&gt;
&lt;p&gt;解决方法如下：&lt;/p&gt;
&lt;p&gt;按下&lt;code&gt;Ctrl +Shift + b&lt;/code&gt;
      
    
    </summary>
    
    
      <category term="Sublime" scheme="https://nymrli.top/tags/Sublime/"/>
    
  </entry>
  
  <entry>
    <title>基础网络知识</title>
    <link href="https://nymrli.top/2019/01/22/%E5%9F%BA%E7%A1%80%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86/"/>
    <id>https://nymrli.top/2019/01/22/基础网络知识/</id>
    <published>2019-01-22T11:31:47.000Z</published>
    <updated>2019-01-23T03:53:41.909Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是客户端、服务器端"><a href="#什么是客户端、服务器端" class="headerlink" title="什么是客户端、服务器端?"></a>什么是客户端、服务器端?</h2><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端 :"></a>客户端 :</h3><p>​    发送数据、接收返回数据端</p><h3 id="服务器"><a href="#服务器" class="headerlink" title="服务器:"></a>服务器:</h3><p>​    处理数据端</p><hr><h2 id="TCP"><a href="#TCP" class="headerlink" title="TCP :"></a>TCP :</h2><p>面向连接—&gt; 打电话(相互回复,一来一回)</p><p>客户端向服务器端 拨号 , 三次握手 , </p><h2 id="UDP"><a href="#UDP" class="headerlink" title="UDP :"></a>UDP :</h2><p>面向无连接 –&gt; 寄快递(寄出去就不管了).   比如 : 直播</p><h3 id="UDP四层结构"><a href="#UDP四层结构" class="headerlink" title="UDP四层结构"></a>UDP四层结构</h3><ul><li><p>网络访问层(链路层):  <strong>物理连接设备</strong>(网线)、<strong>MAC地址</strong>（物理地址）</p></li><li><p>互联网层： <strong>IP地址</strong>（定位设备）</p></li><li><p>传输层： <strong>port</strong> (端口号) : 表示通信进程,将数据交给哪个应用处理</p></li><li><p>应用层： 自己定义的协议（处理字符串消息的方法）</p></li></ul><h4 id="port"><a href="#port" class="headerlink" title="port :"></a>port :</h4><p> 知名端口 : 0 - 1023，有指定的应用程序</p><p>可自由使用的端口 : 1024 - 65535</p><p>▲广播只能使用<strong>UDP</strong>，TCP没有广播功能。一般广播只用在局域网内（路由器不转发广播）。</p><hr><h2 id="套接字-socket-："><a href="#套接字-socket-：" class="headerlink" title="套接字(socket) ："></a>套接字(socket) ：</h2><p>特殊的设备文件 ， 写网络应用程序的接口，写入后就是发送，接收就是读取。 应该类似于 esp8266吧…</p><h2 id="Python演示程序"><a href="#Python演示程序" class="headerlink" title="Python演示程序"></a>Python演示程序</h2><h3 id="服务器端程序"><a href="#服务器端程序" class="headerlink" title="服务器端程序"></a>服务器端程序</h3> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">s = socket.socket(socket.AF_INET,socket.SOCK_DGRAM) </span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">参数说明:</span></span><br><span class="line"><span class="string">AF_INET IPv4</span></span><br><span class="line"><span class="string">STREAM TCP</span></span><br><span class="line"><span class="string">SOCK_DGRAM UDP</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">server_addr = (<span class="string">'127.0.0.1'</span>,<span class="number">8888</span>)    <span class="comment"># 本地回环地址 , 端口</span></span><br><span class="line">s.bind(server_addr)                                    <span class="comment"># 绑定、传入信息</span></span><br><span class="line">data,cilent_addr = s.recvfrom(<span class="number">1024</span>)        <span class="comment"># BUF_SIZE指定接收数据长度 , (数据内容,客户端地址)</span></span><br><span class="line">s.sendto(data,cilent_addr)                        <span class="comment"># 给客户端发送数据</span></span><br></pre></td></tr></table></figure><h3 id="客户端程序"><a href="#客户端程序" class="headerlink" title="客户端程序"></a>客户端程序</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">s = socket.socket(socket.AF_INET,socket.SOCK_DGRAM) </span><br><span class="line">server_addr = (<span class="string">'192.168.43.3'</span>,<span class="number">8888</span>)</span><br><span class="line">s.sendto(<span class="string">b'hello'</span>,server_addr)</span><br></pre></td></tr></table></figure><h3 id="广播程序"><a href="#广播程序" class="headerlink" title="广播程序"></a>广播程序</h3><blockquote><p><code>255.255.255.255</code>为广播地址</p></blockquote><p>广播端接收程序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line">s.setsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">PORT = <span class="number">9999</span></span><br><span class="line">s.bind( (<span class="string">''</span>, PORT) )</span><br><span class="line"><span class="comment"># 这边必须是'',不能为自己的IP(否则只接受自己IP的,不接受255.255.255.2555的广播)</span></span><br><span class="line">print(<span class="string">'Listening for broadcast at '</span>, s.getsockname())</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    data, address = s.recvfrom(<span class="number">65535</span>)</span><br><span class="line">    print(<span class="string">'Server received from &#123;&#125;:&#123;&#125;'</span>.format(address, data.decode(<span class="string">'utf-8'</span>)))</span><br></pre></td></tr></table></figure><p>广播发送程序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket </span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line">s.setsockopt(socket.SOL_SOCKET,socket.SO_BROADCAST,<span class="number">1</span>)</span><br><span class="line"><span class="comment"># 创建套接字,UDP默认没有广播权限</span></span><br><span class="line">PORT = <span class="number">9999</span></span><br><span class="line">network = <span class="string">'&lt;broadcast&gt;'</span></span><br><span class="line"><span class="comment"># &lt;==&gt; network = '255.255.255.255'</span></span><br><span class="line">s.sendto(<span class="string">b'hel'</span>,(network,PORT))</span><br></pre></td></tr></table></figure><hr><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展 :"></a>拓展 :</h2><p><strong>大端和小端模式的概念</strong></p><p>网络通信时 通常使用大端</p><hr><p>Linxu下<code>ifconfig</code>命令:</p><ul><li><p>eth0     网卡</p></li><li><p>wlan0  无线网卡</p></li></ul><hr><p>偶然发现<strong>安卓</strong>开热点的局域网地址是<code>192.18.x.x</code>，而<strong>苹果</strong>的热点局域网IP地址是<code>172.20.x.x</code>，于是搜了了解下</p><ol><li>192.168网段是一种私有IP地址网段，任何人在私有网络中都可以任意使用这些IP地址，但是如果要连接<a href="https://www.baidu.com/s?wd=%E5%A4%96%E7%BD%91&amp;tn=SE_PcZhidaonwhc_ngpagmjz&amp;rsv_dl=gh_pc_zhidao" target="_blank" rel="noopener">外网</a>就要使用<a href="https://www.baidu.com/s?wd=%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2&amp;tn=SE_PcZhidaonwhc_ngpagmjz&amp;rsv_dl=gh_pc_zhidao" target="_blank" rel="noopener">网络地址转换</a>NAT技术进行转换后才能连接<a href="https://www.baidu.com/s?wd=%E5%A4%96%E7%BD%91&amp;tn=SE_PcZhidaonwhc_ngpagmjz&amp;rsv_dl=gh_pc_zhidao" target="_blank" rel="noopener">外网</a>；</li><li>在宽带<a href="https://www.baidu.com/s?wd=%E8%B7%AF%E7%94%B1%E5%99%A8&amp;tn=SE_PcZhidaonwhc_ngpagmjz&amp;rsv_dl=gh_pc_zhidao" target="_blank" rel="noopener">路由器</a>上一般默认的内网IP地址为192.168.0或192.168.1网段，它是经过<a href="https://www.baidu.com/s?wd=%E8%B7%AF%E7%94%B1%E5%99%A8&amp;tn=SE_PcZhidaonwhc_ngpagmjz&amp;rsv_dl=gh_pc_zhidao" target="_blank" rel="noopener">路由器</a>的NAT技术转换为<a href="https://www.baidu.com/s?wd=WAN%E6%8E%A5%E5%8F%A3&amp;tn=SE_PcZhidaonwhc_ngpagmjz&amp;rsv_dl=gh_pc_zhidao" target="_blank" rel="noopener">WAN接口</a>的公用IP地址而连接<a href="https://www.baidu.com/s?wd=%E5%A4%96%E7%BD%91&amp;tn=SE_PcZhidaonwhc_ngpagmjz&amp;rsv_dl=gh_pc_zhidao" target="_blank" rel="noopener">外网</a>的；</li><li>这样的私有IP地址除了这个网段外，还有B类网络的172.16-172.31及A类网络的10网段都是私有IP地址。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;什么是客户端、服务器端&quot;&gt;&lt;a href=&quot;#什么是客户端、服务器端&quot; class=&quot;headerlink&quot; title=&quot;什么是客户端、服务器端?&quot;&gt;&lt;/a&gt;什么是客户端、服务器端?&lt;/h2&gt;&lt;h3 id=&quot;客户端&quot;&gt;&lt;a href=&quot;#客户端&quot; class=&quot;
      
    
    </summary>
    
    
      <category term="计算机网络知识" scheme="https://nymrli.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>Jupyter使用</title>
    <link href="https://nymrli.top/2019/01/21/Jupyter%E4%BD%BF%E7%94%A8/"/>
    <id>https://nymrli.top/2019/01/21/Jupyter使用/</id>
    <published>2019-01-21T02:46:56.000Z</published>
    <updated>2019-01-21T03:19:14.826Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>安装<code>pip install jupyter</code></p><p>运行<code>jupyter notebook</code></p><hr><h2 id="基础概念与操作"><a href="#基础概念与操作" class="headerlink" title="基础概念与操作"></a>基础概念与操作</h2><p>Jupyter有三种类型的cells：</p><ul><li>code cells</li><li>markdown cells</li><li>raw cells</li><li>常用的是<code>code cells</code>和 <code>markdown cells</code>类型。</li></ul><hr><p>Cells状态分为<strong>命令模式</strong>和<strong>编辑模式</strong>，Enter进入编辑模式，ESC进入命令模式，命令模式和编辑模式下支持很多操作快捷键，非常好用。</p><h3 id="常用命令模式快捷键："><a href="#常用命令模式快捷键：" class="headerlink" title="常用命令模式快捷键："></a><strong>常用命令模式快捷键：</strong></h3><blockquote><p>y: 单元进入代码状态</p><p>m: 转入markdown状态</p><p>r：转入raw状态</p><p>a: 上方插入新单元</p><p>b：下方插入新单元</p><p>x：剪切选中单元</p><p>c: 复制选中单元</p><p>shift-v：粘贴到上方单元</p><p>v：粘贴到下方单元</p><p>d,d（连续按两次d）:删除选中单元</p><p>z：恢复最后删除单元</p><p>ctrl+Enter:运行本单元，两种模式都适用</p><p>shift+Enter：运行本单元，并跳到下个单元，两种模式都适用</p><p>alt+Enter：运行本单元，并在下方插入新单元，两种模式都适用</p></blockquote><h3 id="常用编辑模式快捷键："><a href="#常用编辑模式快捷键：" class="headerlink" title="常用编辑模式快捷键："></a><strong>常用编辑模式快捷键：</strong></h3><blockquote><p>Tab：代码补齐或缩进</p><p>Shift+Tab：调用方法提示，非常有用，在调用包中函数时，对于函数中的使用说明和相关参数配置，按两次shift+Tab可获取详细的方法提示。</p><p>Ctrl+]：缩进</p><p>Ctrl+[ : 解除缩进</p><p>Ctrl+A: 全选</p><p>Ctrl+Backspace：删除光标前面本行所有的内容</p><p>Ctrl+Delete:删除光标后本行所有的内容</p><p>Shift+Home：往前选取本行所有内容</p><p>Shift+End：往后选取本行所有内容；</p></blockquote><h3 id="执行当前cell，并自动跳到下一个cell：Shift-Enter"><a href="#执行当前cell，并自动跳到下一个cell：Shift-Enter" class="headerlink" title="执行当前cell，并自动跳到下一个cell：Shift Enter"></a>执行当前cell，并自动跳到下一个cell：Shift Enter</h3><h3 id="执行当前cell，执行后不自动调转到下一个cell：Ctrl-Enter"><a href="#执行当前cell，执行后不自动调转到下一个cell：Ctrl-Enter" class="headerlink" title="执行当前cell，执行后不自动调转到下一个cell：Ctrl-Enter"></a>执行当前cell，执行后不自动调转到下一个cell：Ctrl-Enter</h3><h3 id="载入代码"><a href="#载入代码" class="headerlink" title="载入代码"></a>载入代码</h3><p><code>%load /Users/chenqionghe/test.py</code></p><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h3 id="jupyter-notebook-写代码自动补全"><a href="#jupyter-notebook-写代码自动补全" class="headerlink" title="jupyter notebook 写代码自动补全"></a>jupyter notebook 写代码自动补全</h3><p>进入命令行环境，有两种方式进入命令行。</p><ul><li>方法1：通过anconda navigator界面，选择environments，选择对应环境名，选择open terminal</li><li>方法2：直接使用cmd或者terminal等终端进入命令行。激活你想要配置代码补全的环境（如果是默认环境不用激活）</li></ul><h4 id="1-安装nbextensions"><a href="#1-安装nbextensions" class="headerlink" title="1.安装nbextensions"></a>1.安装<strong>nbextensions</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> pip install jupyter_contrib_nbextensions -i https://pypi.mirrors.ustc.edu.cn/simple</span><br><span class="line"><span class="meta">$</span> jupyter contrib nbextension install --user</span><br></pre></td></tr></table></figure><h4 id="2-安装nbextensions-configurator"><a href="#2-安装nbextensions-configurator" class="headerlink" title="2.安装nbextensions_configurator"></a>2.安装<strong>nbextensions_configurator</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> pip install --user jupyter_nbextensions_configurator </span><br><span class="line"><span class="meta">$</span> jupyter nbextensions_configurator enable --user</span><br></pre></td></tr></table></figure><p>效果如图</p><p><img src="/2019/01/21/Jupyter使用/补全.jpg" alt="补全"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;p&gt;安装&lt;code&gt;pip install jupyter&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;运行&lt;code&gt;jupyter notebook&lt;/co
      
    
    </summary>
    
    
      <category term="Python" scheme="https://nymrli.top/tags/Python/"/>
    
      <category term="机器学习" scheme="https://nymrli.top/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>河海大学AI+机器人冬令营(12-26)</title>
    <link href="https://nymrli.top/2019/01/19/%E6%B2%B3%E6%B5%B7%E5%A4%A7%E5%AD%A6AI-%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%86%AC%E4%BB%A4%E8%90%A5/"/>
    <id>https://nymrli.top/2019/01/19/河海大学AI-机器人冬令营/</id>
    <published>2019-01-19T14:31:19.000Z</published>
    <updated>2019-01-31T14:09:48.482Z</updated>
    
    <content type="html"><![CDATA[<h1 id="河海大学AI-机器人冬令营-19-26"><a href="#河海大学AI-机器人冬令营-19-26" class="headerlink" title="河海大学AI+机器人冬令营(19-26)"></a>河海大学AI+机器人冬令营(19-26)</h1><h2 id="The-First-Day-19"><a href="#The-First-Day-19" class="headerlink" title="The First Day~19"></a>The First Day~19</h2><p>11:50和CXY从学校出发，坐地铁的途中感觉比想象中舒服多了，没有很多挤着急着回家的学生党。</p><h3 id="宾馆打卡"><a href="#宾馆打卡" class="headerlink" title="宾馆打卡"></a>宾馆打卡</h3><p>13:30到尚客优宾馆，环境挺好。还有个办公桌,很舒服。</p><p><img src="/2019/01/19/河海大学AI-机器人冬令营/19\1.jpg" alt="1"></p><p>在房间里待到了大概3点，人都差不多到齐了以后，河海的负责人张老师带领我们去了河海大学。</p><h3 id="校门口打卡"><a href="#校门口打卡" class="headerlink" title="校门口打卡"></a>校门口打卡</h3><p><img src="/2019/01/19/河海大学AI-机器人冬令营/19\2.jpg" alt="2"></p><p>计软院的副院长、该活动的负责人幽默、诙谐地给我讲了讲活动背景、及要求和合作的机器人公司<u>优必选</u>。</p><p>下面是机器人表演舞蹈串烧的照片。关节自由多真的很多啊….很多很难的动作~</p><p><img src="/2019/01/19/河海大学AI-机器人冬令营/19\3.jpg" alt="3"></p><p>介绍环节大约在4点就结束了。之后是在图书馆门口的签名墙上花费了巨大的时间，每个人都单独拍了两次照，说是要给我们留在纪念册上，很期待呢。</p><p>100号人拍完照已经是5：30左右了，拿到饭票后，院长就带我们前往了食堂。平常的学生食堂似乎已经关门了，接待我们的是一个据说连河海本校学生也不知道的xx食堂。</p><h3 id="食堂打卡"><a href="#食堂打卡" class="headerlink" title="食堂打卡"></a>食堂打卡</h3><p>大家围在圆桌上等饭吃，^_^</p><p><img src="/2019/01/19/河海大学AI-机器人冬令营/19\4.jpg" alt="4"></p><p>饭终于上来了O(∩_∩)O，两荤一小荤+两素，水果+酸奶的组合已经非常不错了，下午3点才吃午饭的我，表示强行吃完这些后撑得不行。</p><p><img src="/2019/01/19/河海大学AI-机器人冬令营/19\5.jpg" alt="5"></p><p>吃完后，负责人告诉我们可以回去了。找到了南邮的其他人，我们就浩浩荡荡地回宾馆了，河海的新校区很大，给我的感觉跟南理工一样，但南理工由于居民区的存在可能显得更热闹点，放假的河海闲的挺冷清的。天黑的很快，我们开着导航，最终成功回到了宾馆。</p><p><img src="/2019/01/19/河海大学AI-机器人冬令营/19\6.jpg" alt="6"></p><p>19号的活动大致就结束了。</p><hr><h2 id="The-Second-Day-20"><a href="#The-Second-Day-20" class="headerlink" title="The Second Day~20"></a>The Second Day~20</h2><p>冬令营今天算正式开营，7:30要求在宾馆集合。床挺软的，睡得还行，早上却被一个不太好的梦在大约6:50做哟与惊醒，但还是在床上黏到了7：15的闹钟响。起了后以为应该算早的了，但最后在7：31的时候才弄好，到了一楼大厅，发现很多人都已经到了，看来大家的热情还很高涨。老师也很干脆利落，7:33就直接出发去学校了。</p><p>7:33出发，到河海的校门口大约在7:40左右。<em>冬青食堂</em>在学校的西北角，要走进去很多，到的时候约为7:50。比规定的时间8:10早到了15分钟，结果我们100号人就在食堂门口等了大约15分钟QAQ。</p><p>事实证明应该不需要这么早集合！</p><p>早上是包子+稀饭，配上少许的拌饭菜–咸菜，早餐就算勉强吃完了。</p><h3 id="教学楼打卡"><a href="#教学楼打卡" class="headerlink" title="教学楼打卡"></a>教学楼打卡</h3><p>早上9:00上课，非常准时。</p><p>上午的任务是组装好机器人，是个挺有逼格的机器人。从开箱到拼装，都交给我们完成了。据说这个是卖2W+的教育类机器人，顺丰快递单上表明的价格似乎是20W，运费都要110+。</p><p><em>开箱</em></p><p><img src="/2019/01/19/河海大学AI-机器人冬令营/20\9.jpg" alt="9"></p><p><em>组成</em></p><p><img src="/2019/01/19/河海大学AI-机器人冬令营/20\8.jpg" alt="8"></p><p><em>终于拼好了</em></p><p><img src="/2019/01/19/河海大学AI-机器人冬令营/20\1.jpg" alt="1"></p><p><img src="/2019/01/19/河海大学AI-机器人冬令营/20\2.jpg" alt="2"></p><p>与机器人交互需要连接WIFI和蓝牙，又折腾了好久才终于连上，期间我的同伴还错连了一个女生的机器人，瞎几把按了几个好玩的东西，引得女生大吼：“谁连了我的机器人啊”。</p><p>玩了玩几个高难度动作：单手俯卧撑、舞蹈串烧……就11:30了，上午的授课就算结束了。</p><h3 id="仍是食堂打卡"><a href="#仍是食堂打卡" class="headerlink" title="仍是食堂打卡"></a>仍是食堂打卡</h3><p>水果换成了小橘子，肯定没有香蕉好吃啦，期望明天是苹果^_^</p><p><img src="/2019/01/19/河海大学AI-机器人冬令营/20\6.jpg" alt="6"></p><p>档案袋资料,在上午结束后发的。但开营式还要等河海的领导到齐后才能开，大约定在了明天21号的下午。</p><p><em>档案袋</em></p><p><img src="/2019/01/19/河海大学AI-机器人冬令营/20\7.jpg" alt="7"></p><p><em>学员卡</em></p><p><img src="/2019/01/19/河海大学AI-机器人冬令营/20\5.jpg" alt="5"></p><p>下午讲了很久的<code>Linux</code>的基础知识。=.=很无聊啊，我连《机器学习Python实践》一本书都快读完了。</p><p>下午5:30挺准时下课的，6:30就要上课了，所以只好直接去食堂就餐了。</p><p>晚上6:30开始教授的是<code>vim的</code>基本操作，小测是让我们用VIM写个C程序编译，然后在最后结束的时候让我们10个人组个组，一起学习。队名、口号想了很久，最后很鸡贼的选了<strong>yeah</strong>当口号，<strong>不如跳舞</strong>是我们的队名。</p><p>表上说是7:30结束的，到最后，我们组是最后一个完成的，时间已经是8:30了。到宾馆几乎9点。</p><p>解决了<code>Markdown</code>的渲染问题<code>TypeError: Cannot set property &#39;lastIndex&#39; of undefined</code></p><p>再码码代码也就休息了，希望今天能睡个好觉~</p><hr><h2 id="The-Third-Day-21"><a href="#The-Third-Day-21" class="headerlink" title="The Third Day~21"></a>The Third Day~21</h2><p>早上还是很早就醒了，不知道为什么睡不深。</p><p>走的时候看了一下档案袋，想到了下午有开幕式，结果还是忘记了带<strong>营员证</strong>，结果只好中午吃饭后跑回来拿。</p><p>早上吃的是还是豆浆、粥，肉包，与昨天不同的是，菜包已经没了，很有可能是大家都不爱吃，最后剩下了很多。虽然肉包的皮也很厚，但毕竟是个肉吧2333。还多了<strong>油条</strong>，<strong>辣榨菜</strong>，这两个是我比较喜欢吃的，配粥很下饭。</p><p>上午，在调呼吸灯，感觉记忆力退化的很厉害，当初的PWM现在已经都不太会了。调了挺久，到中午吃饭的时候，才调出来。</p><p>下午，主要在看<code>MMDR_N4</code>的算法，总算厘清了思路，可以直接用了。授课方面的话介绍的是舵机的使用，只不过由于机器人用的是数字舵机，操作比较方便，再加上API封装的比较好，完成的就很轻松，不需要自己手写PWM。</p><p>在两点的时候，凑齐了各方的领导，终于在图书馆举办了开幕式。</p><p><img src="/2019/01/19/河海大学AI-机器人冬令营/21\1.jpg" alt="1"></p><p><img src="/2019/01/19/河海大学AI-机器人冬令营/21\2.jpg" alt="2"></p><p>结束的还挺迅速的，稍微玩了下手机就结束了。</p><p>晚上的任务是完成布置的作业:</p><blockquote><p>金鸡独立：</p><ul><li>保存机器人初始的舵机状态</li><li>控制舵机的方式实现金鸡独立（腿抬高，手臂动作）</li><li>站稳</li><li>恢复舵机状态</li></ul><p>使用APP上的回读编程，完成一个动作序列（可以加音乐）</p><ul><li>保存到机器人上，通过ubtRobotStartAction接口调用自己编排的动作</li></ul></blockquote><p>由于脚掌体积较大,所以将原来向后的动作加了个往前抬腿，转动脚踝的动作，使得平衡出了很大的问题，最终弄到9点都还没弄完，只好留到第二天完成了。</p><p>回到宾馆后，跟活动室的学长们视频了一波，汇报了一下进度和了解了下他们的情况，最后将看的MMDR_N4抽出，写了个文档，睡觉的时候都快11:30了。今天睡得比较晚了。</p><h2 id="The-Fourth-Day-22"><a href="#The-Fourth-Day-22" class="headerlink" title="The Fourth Day~22"></a>The Fourth Day~22</h2><p>早上7:15的闹钟,黏了7分钟才起。隔天没Debug出来，睡的也比较晚，导致起的时候非常的疲倦。所幸的是，我们到楼下时发现老师还没来，大部队也还没走。等了好几分钟，看老师还没来，就带头直接去食堂了。早餐不同的是<strong>桃酥饼</strong>，和<strong>萝卜丝馅饼</strong>，吃完之后才收到老师的消息，得知老师也没爬起来。</p><p>上午介绍的是机器人的五个传感器的使用，主要是使用它提供的Api。传感器有： 压力、触摸、超声波、红外、气温气压。这些都比较基础，就一直在看<code>optimization</code>里的优化细节。WDD问了下Andriod方面的需求，就花了时间整理了下思路，安排了人员。</p><p>下午据说有电视台采访，于是没怎么看Apollo的资料，认真调了下机器人的代码。就在准备展示我们的作品，上电视的时候，机器人的动作错了，导致没站稳直接摔到了。摄影小哥等我们调试了几分钟还没调好后，就放弃我们了:sob:</p><p>晚上跟前几天比结束的很早，讲了点TCP/UDP及网络的基础知识，让我们写了个UDP接收信息的程序就结束了。这方面感觉老师讲的还挺好的，经验、涉及面很丰富。</p><h2 id="The-Fifth-Day-23"><a href="#The-Fifth-Day-23" class="headerlink" title="The Fifth Day~23"></a>The Fifth Day~23</h2><p>图像处理，介绍了人脸检测、人脸识别、表情检测的接口。</p><p>具体的我也忘记做了啥了…我应该都在敲机器学习.</p><h2 id="The-Fifth-Day-24"><a href="#The-Fifth-Day-24" class="headerlink" title="The Fifth Day~24"></a>The Fifth Day~24</h2><p>下午1点还是2点，公布了项目的要求。大家就都热火朝天的开始干起来了，我们进度算很快了，吃饭前就完成了所有基础功能，我把图灵机器人和天气的Api都已经写好了。</p><p>晚上处理了人脸跟踪的功能，但碰到了python2中字符串不可变的问题，确实很棘手处理了很久才搞定。</p><p>主要发现的问题是:</p><ul><li>当字符串&lt;4时,如’123’，那么输出的话是’’.</li><li>当赋值为<code>a=&#39;notfound&#39;时,</code>,怀疑是<code>zhx</code>后面还是多余的空格而没有被输出出来</li><li>当写成<code>a=&#39;notfounda&#39;</code>的时候，if判断得写成 <code>if a == &#39;notfound\x00&#39;</code></li></ul><h2 id="The-Sixth-Day-25"><a href="#The-Sixth-Day-25" class="headerlink" title="The Sixth Day~25"></a>The Sixth Day~25</h2><p>完成项目的拓展功能和答辩。我们昨天就完成了所有的基础功能，第二天的任务就是添加拓展功能。我们选择了三个：随机播放或中途暂停音乐、语音识别 、 人脸识别跟踪行走。 除了语音识别功能，其实有不少在昨天晚上都已经搞定了，但是当天演示时却bug了。真的是很悲催，再加上抽签的运气不是很好，第二个就上场了，导致最后的演示效果很差。</p><p>计划2点开始演示，但真正的开始时间却是2:30，我们大约是3：10分演示的，由于机器人金鸡独立时摔倒的缘故，存储人脸的机器人重启了，导致人脸数据丢失而无法演示人脸跟踪。</p><p>后面几组演示的就比较幸运，第7组都已经是吃完晚饭6:30以后演示的了…真的抽签太看运气了。</p><p>虽然演示后结果不太令人满意吧，但好在大家也没有太沮丧。说实话，演示完后就已经没什么心思看别人的演示了。于是我和张志兴学长以及南大计软的一个女生交流了一会。向张志兴学长讨教了不少单片机方面的知识，张志兴学长很棒… 说实话我一直以为他是大二的…</p><h2 id="The-Seventh-Day-26"><a href="#The-Seventh-Day-26" class="headerlink" title="The Seventh Day~26"></a>The Seventh Day~26</h2><p>忍了很久想吃面的欲望，最后一天，决定不吃食堂，找了河海外面的一家早餐店吃了面。</p><p><img src="/2019/01/19/河海大学AI-机器人冬令营/hexo\source\_posts\河海大学AI-机器人冬令营\26\IMG_20190126_081547.jpg" alt="IMG_20190126_081547"></p><p>最后一天是闭营典礼，主要是副院长讲话，然后颁奖，昨天的答辩环节效果很差，注定了今天我们只能当观众。大家的心情都不是很好吧，毕竟都花了挺多心思，但没有获奖，真的挺可惜的。</p><p>颁完奖，拍完照，就解散了。我和我的小组成员留了一会，总结了一下这次很多地方的问题，以及交流了一下，主要是感觉对不起大家，我们完全是有能力获奖的，但由于种种原因而失败了，非常的遗憾。总结的过程被副院长听到了，很尴尬，他要我写篇感想23333，不慎惶恐。</p><p>总结结束后，我并不是很急着回学校，于是找张老师聊了聊天。得知张洪涛老师是内蒙古人，大学就读于杭州，现在工作于深圳，真的是横跨了整个中国。他也是自动化专业的，很大程度上也是因为家庭原因，直接选择了工作，据他所说大学是玩了4年，91年生的，目前也工作了6-7年了，但我感觉他的知识面还是挺广的，他讲解的网络方面的一点东西对我还是有不少启发的，所以也不知他说的是不是真的。</p><p>跟他交流了大概两个小时吧，主要是自动化的学科方向，以及之后的工作方向。感觉找前辈聊天真的是个很愉快的过程，不管他的经验是否能够借鉴，但每个人的经历都耐人寻味，想了解更多人的生活。</p><p><img src="/2019/01/19/河海大学AI-机器人冬令营/hexo\source\_posts\河海大学AI-机器人冬令营\26\IMG_20190126_111700.jpg" alt="IMG_20190126_111700"></p><p>10点半结束的，大约12点半才离开河海，上地铁回南邮。</p><p><img src="/2019/01/19/河海大学AI-机器人冬令营/hexo\source\_posts\河海大学AI-机器人冬令营\26\IMG_20190126_121710.jpg" alt="IMG_20190126_121710"></p><p>下面是我提交的感想，院长说会帮我润色一下的，也不知道他刊在哪里了。</p><ul><li>大学入学以来，一直都在为了竞赛和学业而疲于奔命。经常为生活圈子日益狭窄，压力日益繁重而恐慌。于是经过一系列思考后，最终在数模美赛、电赛培训…多种寒假活动中选择参加了由江苏省教育部发起，河海大学组织的“AI+机器人”冬令营活动。选择这个冬令营原因，一是因为机器人是个交叉的学科，在接触的过程中，即可以了解硬件，又会涉及软件开发，对个人能力都会有比较高的提高；二是，想找点真正感兴趣的东西做做放松下身心，而不是像在学校那样再为了能力分和绩点终日劳神费心。</li></ul><ul><li>冬令营聚集了江苏省各所高校里有能力和想法的学生，在这里我们能碰到很多志同道合的朋友，刚来初到的前几天，我认识了我们学校同批参加冬令营的同学。后来几天经过交流认识了各个学校参加各种项目的同学，有做机甲大师的、有参加飞思卡尔的，有弄Robocup的……在不上课的时间里，就听他们讲说了各地的轶事、各个方面的细节……</li></ul><ul><li>为时一共七天的冬令营，前五天，张洪涛老师都非常耐心地带着大家一个一个模块完成任务，每一阶段的成功，都极大地调动了我们的积极性和成就感。也为我们能够从容接受最后的项目实战做了很大的铺垫。</li></ul><ul><li>最后两天是完成项目，要求十个人组成一只队伍，分布式地操作机器人。在提出五个基本要求的基础上，张老师也给了我们一点启发性的意见作为评比的加分项。24号下午项目要求一公布出来，我们就在组内分配好了任务。由于基础工作比较明确，我们很快的就分配好了各自的工作，经过大家的全身心投入，我们很顺利的在吃晚饭之前就几乎把所有基础功能都做完了，但是却没有进行即时阶段性的汇总，导致第二天展示前调试比较匆忙，这也是比较可惜的地方。</li></ul><ul><li>吃完晚饭后，大家都很快的回到了机房，继续为更好的功能而调试。晚上规定在6:30-7:30的交流时间之后就能回去了，但为了调试代码，我们全组都选择留了下来，直到9点左右才走。当时我们在攻克的是跟踪人脸行走功能，困扰我们的是Python2上的编码问题，无论是否检测得到人脸都会向前行走。所以虽然效果能算达到，但并不是为了单纯演示就行，我们还是决定从原理上彻底查明这个的原因。由于负责的同学没怎么接触过这个问题，于是我们花了很大的功夫，在调试了N遍以后终于找了原因和解决方案。事实上也证明了我们的付出没有白费，第二天有其他小组也碰到了这样的问题，我们为他们讲明了原因，他们也很快的实现了这个功能。</li></ul><ul><li>我们的拓展功能还有随机播放或中途暂停音乐及语音识别，我们第二天的时间全都在测试这些。但由于语音识别的效果比较差，最后我们还是只能选择放弃演示。而播放音乐的功能全在演示前的一段时间被调错而无法使用。所有最终我们的演示效果很差，成绩也不是很理想。</li></ul><ul><li>作为我们队长，以及在接触Python比较多的情况下，没有带领团队获得比较好的成绩我还是比较自责的。但回想整个完成的过程，其实感慨、收获还是颇多的。首先是学长学姐对我的支持，大三学长张志兴个人能力很强，但有时我的错误指挥，他都给了很大的宽容。其次是大家团队合作的热情和态度，碰到BUG大家甚至会不吃饭选择一起解决；还有由于人数原因而后来被分配到我们小组的周轶凡，虽然跟组离得很远，逐渐边缘化，有时我甚至都没有想起他来，但是他都会非常积极地要求任务和积极参加讨论，让我感受到了团队合作的感觉，感受到了we are a team!再者是徐弘毅的热情，他跟我同是大二的，由于没怎么接触过python，还特地带了Python的书，碰到了那个编码问题，也是钻研了很久；还有的是一个比较好玩的事，当初刚开始合作完成项目的时候，大家连人名都不知道，偶然听到一个张志兴的名字，就一直把徐弘毅叫做张志兴，因为每次这么叫他队友时，徐弘毅总是第一个回头的……</li></ul><ul><li>但同时我们确实也存在很多的问题：答辩展示的重点并不是很明确，有些基础功能觉得大家都展示过，自己就太轻视而可能没有展示；拓展功能完成的太顺利而没有介绍到……都是一些答辩上完成的不够好的地方，以及临场应变还不熟练。还有的是缺少团队合作经验，导致很多程序架构方面的事都没有说清楚，比如Python在缩进上要求很严格，而我在我的笔记本上汇总总程序都是4个空格一层缩进，他们在机器人上的代码都是8个空格一层的。但队友都比较好心，没有提出问题，而是默默的每次都帮我改好，直到最后演示前又发了一遍代码后才发现这个由于没有沟通而导致严重的架构问题。同时还有，分工上也太牵强了，虽然基础功能分工的比较明确，都挺好的实现了，但是拓展功能，由于我做该方面做的比较多，我没有分配下去而是选择了一人承担，导致汇总以及拓展功能的调试都落在我身上，在展示前一段调试的时间里，哪边出了问题都得我去处理，最后确实有点无暇分身、弄得很乱……</li></ul><ul><li>这次的项目有很多好好坏坏，但这次的合作，让我们从全都不认识，到现在能相互开玩笑；不能写Python代码到能写Python项目，真的成长了太多。虽然成绩比较可惜，但是我为认识他们而高兴。在此，我要再次感谢我的队友：张志兴、徐弘毅、王青雅、侍亚东、林丹丹、陈晓谦、陈怀新。大家在各自的领域内都是大手子，而这次我能荣幸的担任他们的队长，真的是很不容易，从心里感谢他们的包容和理解、配合与支持。</li></ul><ul><li>因为你们，不虚此行~</li></ul><h2 id="附"><a href="#附" class="headerlink" title="附:"></a>附:</h2><ul><li><p>安排表</p><p><img src="/2019/01/19/河海大学AI-机器人冬令营/hexo\source\_posts\河海大学AI-机器人冬令营\IMG_20190122_094041.jpg" alt="IMG_20190122_094041"></p></li><li><p>三角包子(实心,没馅的!!!</p></li></ul><p><img src="/2019/01/19/河海大学AI-机器人冬令营/hexo\source\_posts\河海大学AI-机器人冬令营\IMG_20190125_080824.jpg" alt="IMG_20190125_080824"></p><p>两大荤、一小荤、两素的套餐，多图警告</p><p><img src="/2019/01/19/河海大学AI-机器人冬令营/hexo\source\_posts\河海大学AI-机器人冬令营\IMG_20190124_175136.jpg" alt="IMG_20190124_175136"></p><p><img src="/2019/01/19/河海大学AI-机器人冬令营/hexo\source\_posts\河海大学AI-机器人冬令营\IMG_20190123_121517.jpg" alt="IMG_20190123_121517"></p><p><img src="/2019/01/19/河海大学AI-机器人冬令营/hexo\source\_posts\河海大学AI-机器人冬令营\IMG_20190122_121433.jpg" alt="IMG_20190122_121433"></p><p><img src="/2019/01/19/河海大学AI-机器人冬令营/hexo\source\_posts\河海大学AI-机器人冬令营\IMG_20190121_175227.jpg" alt="IMG_20190121_175227"></p><p><img src="/2019/01/19/河海大学AI-机器人冬令营/hexo\source\_posts\河海大学AI-机器人冬令营\IMG_20190121_121409.jpg" alt="IMG_20190121_121409"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;河海大学AI-机器人冬令营-19-26&quot;&gt;&lt;a href=&quot;#河海大学AI-机器人冬令营-19-26&quot; class=&quot;headerlink&quot; title=&quot;河海大学AI+机器人冬令营(19-26)&quot;&gt;&lt;/a&gt;河海大学AI+机器人冬令营(19-26)&lt;/h1&gt;&lt;h2
      
    
    </summary>
    
    
      <category term="生活小记" scheme="https://nymrli.top/tags/%E7%94%9F%E6%B4%BB%E5%B0%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>DFS专项练习</title>
    <link href="https://nymrli.top/2019/01/19/DFS%E4%B8%93%E9%A1%B9%E7%BB%83%E4%B9%A0/"/>
    <id>https://nymrli.top/2019/01/19/DFS专项练习/</id>
    <published>2019-01-19T12:53:03.000Z</published>
    <updated>2019-01-19T12:53:26.486Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DFS专题"><a href="#DFS专题" class="headerlink" title="DFS专题"></a>DFS专题</h1><h3 id="leetcode-104-二叉树的最大深度"><a href="#leetcode-104-二叉树的最大深度" class="headerlink" title="leetcode 104. 二叉树的最大深度"></a>leetcode 104. 二叉树的最大深度</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * struct TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode *left;</span></span><br><span class="line"><span class="comment"> *     TreeNode *right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxDepth</span><span class="params">(TreeNode* root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root==<span class="literal">NULL</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> l1=maxDepth(root-&gt;left);</span><br><span class="line">        <span class="keyword">int</span> l2=maxDepth(root-&gt;right);</span><br><span class="line">        <span class="keyword">return</span> max(l1,l2)+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="DFS模板总结"><a href="#DFS模板总结" class="headerlink" title="DFS模板总结"></a>DFS模板总结</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">()</span><span class="comment">//参数用来表示状态  &#123;  </span></span></span><br><span class="line"><span class="function">    <span class="title">if</span><span class="params">(到达终点状态)</span>  </span>&#123;  </span><br><span class="line">        ...<span class="comment">//根据题意添加  </span></span><br><span class="line">        <span class="keyword">return</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">if</span>(越界或者是不合法状态)  </span><br><span class="line">        <span class="keyword">return</span>;  </span><br><span class="line">    <span class="keyword">if</span>(特殊状态)<span class="comment">//剪枝</span></span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">for</span>(扩展方式)  &#123;  </span><br><span class="line">        <span class="keyword">if</span>(扩展方式所达到状态合法)  </span><br><span class="line">        &#123;  </span><br><span class="line">            修改操作;<span class="comment">//根据题意来添加  </span></span><br><span class="line">            标记；  </span><br><span class="line">            dfs（）；  </span><br><span class="line">            (还原标记)；  <span class="comment">// visited[i] = 1;</span></span><br><span class="line">            <span class="comment">//是否还原标记根据题意  </span></span><br><span class="line">            <span class="comment">//如果加上（还原标记）就是 回溯法  </span></span><br><span class="line">            <span class="comment">// visited[i] = 0</span></span><br><span class="line">        &#125;  </span><br><span class="line"> </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="全排列问题"><a href="#全排列问题" class="headerlink" title="全排列问题"></a>全排列问题</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> p[<span class="number">10</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">10</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x==n+<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;p[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (vis[i]==<span class="literal">false</span>  )</span><br><span class="line">&#123;</span><br><span class="line">p[x] = i;</span><br><span class="line">vis[i] = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">dfs(x+<span class="number">1</span>);</span><br><span class="line">vis[i] = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">n=<span class="number">4</span>;</span><br><span class="line">dfs(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;DFS专题&quot;&gt;&lt;a href=&quot;#DFS专题&quot; class=&quot;headerlink&quot; title=&quot;DFS专题&quot;&gt;&lt;/a&gt;DFS专题&lt;/h1&gt;&lt;h3 id=&quot;leetcode-104-二叉树的最大深度&quot;&gt;&lt;a href=&quot;#leetcode-104-二叉树的最大深
      
    
    </summary>
    
    
      <category term="Algorithm" scheme="https://nymrli.top/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Typora可选选项</title>
    <link href="https://nymrli.top/2019/01/19/Typora%E5%8F%AF%E9%80%89%E9%80%89%E9%A1%B9/"/>
    <id>https://nymrli.top/2019/01/19/Typora可选选项/</id>
    <published>2019-01-19T12:51:11.000Z</published>
    <updated>2019-01-19T12:52:14.319Z</updated>
    
    <content type="html"><![CDATA[<p>用了这么久<em>markdown</em>才发现原来支持Latex的符号公式，但是在Typera中需要自行设置出来，<code>文件--&gt;偏好设置--&gt;markdown拓展语法（内联公式）、代码块（显示行号）</code></p><ul><li>Latex 公式：$\frac{3}{2}​$</li><li>带有行号的代码块</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"hello world"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其他功能自行发现吧！^_^</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;用了这么久&lt;em&gt;markdown&lt;/em&gt;才发现原来支持Latex的符号公式，但是在Typera中需要自行设置出来，&lt;code&gt;文件--&amp;gt;偏好设置--&amp;gt;markdown拓展语法（内联公式）、代码块（显示行号）&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Latex
      
    
    </summary>
    
    
      <category term="计算机基础知识" scheme="https://nymrli.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>Latex学习</title>
    <link href="https://nymrli.top/2019/01/19/Latex%E5%AD%A6%E4%B9%A0/"/>
    <id>https://nymrli.top/2019/01/19/Latex学习/</id>
    <published>2019-01-19T12:49:31.000Z</published>
    <updated>2019-01-20T13:56:04.756Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本概念和使用"><a href="#基本概念和使用" class="headerlink" title="基本概念和使用"></a>基本概念和使用</h1><h4 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello, world!"></a>Hello, world!</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\documentclass&#123;article&#125;</span><br><span class="line">%这里是导言区</span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line">Hello, world!</span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure><h5 id="请注意，TeX-对控制序列的大小写是敏感的"><a href="#请注意，TeX-对控制序列的大小写是敏感的" class="headerlink" title="请注意，TeX 对控制序列的大小写是敏感的"></a><strong>请注意，TeX 对控制序列的大小写是敏感的</strong></h5><h5 id="部分控制序列还有被方括号-包括的可选参数。"><a href="#部分控制序列还有被方括号-包括的可选参数。" class="headerlink" title="部分控制序列还有被方括号[]包括的可选参数。"></a>部分控制序列还有被方括号<code>[]</code>包括的可选参数。</h5><p>出现了控制序列 <code>begin</code>，这个控制序列总是与 <code>end</code> 成对出现。这两个控制序列以及他们中间的内容被称为「环境」；他们之后的第一个必要参数总是<strong>一致的</strong>，被称为环境名。</p><p>只有在 “document” 环境中的内容，才会被正常输出到文档中去或是作为控制序列对文档产生影响。也就是说，在 <code>\end{document}</code> 之后插入任何内容都是无效的。</p><p><code>\begin{document}</code> 与 <code>\documentclass{article}</code> 之间的部分被称为导言区。导言区中的控制序列，通常会影响到整个输出文档。</p><h4 id="输出中文"><a href="#输出中文" class="headerlink" title="输出中文"></a>输出中文</h4><p>使用命令行输入<code>texworks</code>打开tex编辑器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">\documentclass[UTF8]&#123;ctexart&#125;</span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line">你好，world!</span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure><ol><li>文档类从 <code>article</code> 变为 <code>ctexart</code>；</li><li>增加了文档类选项 <code>UTF8</code>。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">\documentclass[UTF8]&#123;ctexart&#125;</span><br><span class="line">\title&#123;你好，world!&#125;</span><br><span class="line">\author&#123;Liam&#125;</span><br><span class="line">\date&#123;\today&#125;</span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line">\maketitle</span><br><span class="line">你好，world!</span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure><h1 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h1><h3 id="中文问题"><a href="#中文问题" class="headerlink" title="中文问题"></a>中文问题</h3><p>面对中文编码问题，CJK被淘汰，<strong>使用ctexart编译中文</strong></p><p>▲注意，编译方式必须改为<strong>xeLaTex</strong>，只有部分环境下 pdfLaTex 也可以编译成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">\documentclass[UTF8]&#123;ctexart&#125;</span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line">您可以看到，说明你编译成功了！</span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure><h3 id="标准文类"><a href="#标准文类" class="headerlink" title="标准文类"></a>标准文类</h3><ul><li>article：短文，评论，学术论文；无左右页区分，无章设置。对应中文类ctexart。</li><li>book：著作，学位论文；默认有左右页区分，章起右页。对应中文类ctexbook。</li><li>report：商业，科技，试验报告，默认无左右页区分，章起新页。对应中文类：ctexrep。</li><li>beamer：论文陈述幻灯片；提供多种主题式样，可方便更改幻灯片的整体风格。</li></ul><h3 id="常用宏包"><a href="#常用宏包" class="headerlink" title="常用宏包"></a>常用宏包</h3><p>不是必须记住，需要用哪个现查即可，列出这些是为了浏览别人的源文件时知道人家调用了哪个宏包。 </p><ul><li>amsmath 公式环境和数学命令 </li><li>amssymb 数学符号生成命令 </li><li>array 数组和表格制作 </li><li>calc 四则运算 </li><li>caption 插图和表格标题格式设置 </li><li>fancyhdr 页眉页脚设置 </li><li>fancyvrb 抄录格式设置 </li><li>fontspec 字体选择 </li><li>geometry 版面尺寸设置 </li><li>graphicx 插图处理 </li><li>hyperref 创建超文本链接和PDF书签 </li><li>longtable 制作跨页表格 </li><li>multicol 多栏排版 </li><li>ntheorem 定理设置 </li><li>paralist 多种列表环境 </li><li>tabularx 自动设置表格列宽 </li><li>titlesec 章节标题格式设置 </li><li>titletoc 目录格式设置 </li><li>xcolor 颜色处理 </li><li>xeCJK 中日朝文字处理和字体选择</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基本概念和使用&quot;&gt;&lt;a href=&quot;#基本概念和使用&quot; class=&quot;headerlink&quot; title=&quot;基本概念和使用&quot;&gt;&lt;/a&gt;基本概念和使用&lt;/h1&gt;&lt;h4 id=&quot;Hello-world&quot;&gt;&lt;a href=&quot;#Hello-world&quot; class=&quot;he
      
    
    </summary>
    
    
      <category term="计算机基础知识" scheme="https://nymrli.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
      <category term="Latex" scheme="https://nymrli.top/tags/Latex/"/>
    
  </entry>
  
</feed>
