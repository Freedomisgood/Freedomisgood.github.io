<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mrli&#39;s Blog</title>
  
  <subtitle>别装作很努力，结局不会陪你演戏。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://nymrli.top/"/>
  <updated>2020-12-22T04:22:17.214Z</updated>
  <id>https://nymrli.top/</id>
  
  <author>
    <name>Mrli</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>UML简单记录</title>
    <link href="https://nymrli.top/2020/12/11/UML%E7%AE%80%E5%8D%95%E8%AE%B0%E5%BD%95/"/>
    <id>https://nymrli.top/2020/12/11/UML简单记录/</id>
    <published>2020-12-11T05:59:15.000Z</published>
    <updated>2020-12-22T04:22:17.214Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>要学习设计模式，首先绕不开的就是UML图，同时对于一名开发而言，开发文档中也必然会出现UML的身影。之前在实习的时候，其实已经学过不少了，但不用后又很容易忘记，(在阿里实习的时候就以为记得很熟了，结果现在又忘了)——因此这也是一个防忘系列</p></blockquote><h2 id="uml"><a class="markdownIt-Anchor" href="#uml"></a> UML</h2><blockquote><p>UML(Unified Modeling Language)是一种标准的图形化<strong>建模语言</strong>，是一种为<strong>面对对象</strong>系统的产品进行说明、可视化、编制文档的标准语言，它是面向对象分析与设计的一种<strong>标准表示</strong>。</p></blockquote><p>（1）UML是一种语言。<br>从上面的定义可以看出，就其本质，UML是一种语言，既然是语言，那就是用来交流的，UML用来在哪些人员之间进行交流呢？很明显，UML主要是在软件开发的整个生命周期所涉及到的人员之间进行交流的语言。<br>（2）UML是一种建模语言。<br>那么什么是建模呢？<br>模型是用某种工具对事物的一种表达方式，通常会表达出事物最重要的方面而简化或忽略其他方面。比如常见的工程模型、飞机模型、车辆模型等。<br>模型在软件上主要的作用是，可以在一定的抽象层次上，使人们通过对模型的分析和研究，来制定出最终的软件结构和内部的相互关系。<br>（3）UML是一种图形化建模语言。<br>为什么要图形化呢？<br>很简单，图形化的东西直观、简单、准确，更有利于软件开发的整个生命周期所涉及到的人员之间进行交流。因为对于一个大型的软件项目，参与的人员很多，根本不可能相互用语言来交流，图形化是一个很好的方案。<br>（4）UML是一种标准的图形化建模语言。<br>只有标准的东西，才会有更多的人学习和使用它，大家对同一表达的理解才会一样，才能真正达到相互交流的目的。<br>否则要是没有标准，大家各自为政，可能会出现同一个图形，大家有不同的认识和理解，那就没法交流了。</p><h3 id="基本构件"><a class="markdownIt-Anchor" href="#基本构件"></a> 基本构件</h3><p>建模的核心是模型，模型是现实的简化、真实系统的抽象。因此好的建模语言就需要提供全样的模块组成，如下就是UML的基本构件。UML主要由三部分概念组成：具体的事物、事物间的关系、事物与关系组合而成的图。</p><p>我们使用UML的目的就是确认好具体的事物以及事物间的关系，并以此来选择合适的图来表达，三者是紧紧联系的。在UML2.0中，我们使用最频繁的就是类图、时序图了。</p><p><img src="/2020/12/11/UML简单记录/%E5%9F%BA%E6%9C%AC%E6%9E%84%E5%BB%BA.jpg" alt="基本构建"></p><h4 id="事物"><a class="markdownIt-Anchor" href="#事物"></a> 事物</h4><p>事物是抽象化的最终结果，分为结构事物、行为事物、分组事物、注释事物。其中我们比较频繁使用的是结构事物中的类和接口、行为事物中的交互和状态机</p><h4 id="关系"><a class="markdownIt-Anchor" href="#关系"></a> 关系</h4><p>UML将事物之间的关系归纳为6种：</p><p><img src="/2020/12/11/UML简单记录/gx.png" alt="gx"></p><h5 id="实现-继承"><a class="markdownIt-Anchor" href="#实现-继承"></a> 实现、继承</h5><p>实现是实现接口，继承是继承父类。</p><p>▲两者的图形都是子指向父，并且箭头全是空心三角箭头。</p><h5 id="关联"><a class="markdownIt-Anchor" href="#关联"></a> 关联</h5><p>类之间存在关联关系就可以用普通关联来表达</p><p><img src="/2020/12/11/UML简单记录/%E5%85%B3%E8%81%94.jpg" alt="关联"></p><h5 id="聚合"><a class="markdownIt-Anchor" href="#聚合"></a> 聚合</h5><blockquote><p>聚合在《研读设计模式》中认为是关联的子集，可分为普通聚合、共享聚合、复合聚合</p></blockquote><p>聚合关系表示类之间整体与部分的关系，成员对象是整体对象的一部分，但是成员对象可以脱离整体对象独立存在。e.g.公交车司机和工作服，两者没有共同的声明周期。</p><h5 id="组合"><a class="markdownIt-Anchor" href="#组合"></a> 组合</h5><p>组合关系表示类之间整体与部分的关系，整体和部分有一致的生存期，一旦整体对象不存在，那么部分对象也将不存在，整体和部分是同生共死的关系。e.g.人由头部和身体组成，两者不可分割。</p><h5 id="总结以上关系"><a class="markdownIt-Anchor" href="#总结以上关系"></a> 总结以上关系</h5><p>在这6种类关系中，组合、聚合和关联的代码结构一样，可以从关系的强弱来理解，各类关系从强到弱依次是：继承&gt;实现&gt;组合&gt;聚合&gt;关联&gt;依赖。下面我们用一张完整的类图，熔前面描述的所有类与类之间的关系串联起来。</p><p><img src="/2020/12/11/UML简单记录/%E5%85%B3%E7%B3%BB%E6%95%B4%E7%90%86.jpg" alt="关系整理"></p><h3 id="图"><a class="markdownIt-Anchor" href="#图"></a> 图</h3><p>UML2.0一共有13中图（UML1.5定义了9种，2.0增加了4种），最常用的就是类图、对象图、时序图、状态图</p><p><img src="/2020/12/11/UML简单记录/%E5%9B%BE.jpg" alt="图"></p><h2 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h2><h3 id="经典关系图"><a class="markdownIt-Anchor" href="#经典关系图"></a> 经典关系图</h3><img src="/2020/12/11/UML简单记录/关系图.jpg" alt="关系图"><h3 id="记忆技巧"><a class="markdownIt-Anchor" href="#记忆技巧"></a> 记忆技巧</h3><p><img src="/2020/12/11/UML简单记录/%E8%AE%B0%E5%BF%86.jpg" alt="记忆"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;要学习设计模式，首先绕不开的就是UML图，同时对于一名开发而言，开发文档中也必然会出现UML的身影。之前在实习的时候，其实已经学过不少了，但不用后又很容易忘记，(在阿里实习的时候就以为记得很熟了，结果现在又忘了)——因此这也是一个防忘系列&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="计算机基础知识" scheme="https://nymrli.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
      <category term="防忘系列" scheme="https://nymrli.top/tags/%E9%98%B2%E5%BF%98%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>浙大2020春夏-人工智能习题2——垃圾分类</title>
    <link href="https://nymrli.top/2020/12/11/%E6%B5%99%E5%A4%A72020%E6%98%A5%E5%A4%8F-%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B9%A0%E9%A2%982%E2%80%94%E2%80%94%E5%9E%83%E5%9C%BE%E5%88%86%E7%B1%BB/"/>
    <id>https://nymrli.top/2020/12/11/浙大2020春夏-人工智能习题2——垃圾分类/</id>
    <published>2020-12-11T02:25:45.000Z</published>
    <updated>2020-12-19T12:57:33.295Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>homework for ZJU: <a href="https://mo.zju.edu.cn/homework/zju_ai_2020_ss" target="_blank" rel="noopener">https://mo.zju.edu.cn/homework/zju_ai_2020_ss</a></p></blockquote><h1 id="1-实验介绍"><a class="markdownIt-Anchor" href="#1-实验介绍"></a> 1. 实验介绍</h1><h2 id="11-实验背景"><a class="markdownIt-Anchor" href="#11-实验背景"></a> 1.1 实验背景</h2><p>自今年 7 月 1 日起，上海市将正式实施 《上海市生活垃圾管理条例》。<br>垃圾分类，看似是微不足道的“小事”，实则关系到13亿多人生活环境的改善，理应大力提倡。<br>垃圾识别分类数据集中包括玻璃 (glass) 、硬纸板 (cardboard) 、金属 (metal) 、纸 (paper) 、塑料 (plastic) 、一般垃圾 (trash) ，共6个类别。<br>生活垃圾由于种类繁多，具体分类缺乏统一标准，大多人在实际操作时会“选择困难”，基于深度学习技术建立准确的分类模型，利用技术手段改善人居环境。</p><h2 id="12-实验要求"><a class="markdownIt-Anchor" href="#12-实验要求"></a> 1.2 实验要求</h2><p>a）建立深度神经网络模型，并尽可能将其调到最佳状态。<br>b）绘制深度神经网络模型图、绘制并分析学习曲线。<br>c）用准确率等指标对模型进行评估。</p><h2 id="13-实验环境"><a class="markdownIt-Anchor" href="#13-实验环境"></a> 1.3 实验环境</h2><p>可以使用基于 Python 的 OpenCV 库进行图像相关处理，使用 Numpy 库进行相关数值运算，使用 Keras 等框架建立深度学习模型等。</p><h1 id="2实验内容"><a class="markdownIt-Anchor" href="#2实验内容"></a> 2.实验内容</h1><h2 id="21-介绍数据集"><a class="markdownIt-Anchor" href="#21-介绍数据集"></a> 2.1 介绍数据集</h2><p>该数据集包含了 2307 个生活垃圾图片。数据集的创建者将垃圾分为了 6 个类别，分别是：</p><table><thead><tr><th>序号</th><th>中文名</th><th>英文名</th><th>数据集大小</th></tr></thead><tbody><tr><td>1</td><td>玻璃</td><td>glass</td><td>457</td></tr><tr><td>2</td><td>纸</td><td>paper</td><td>540</td></tr><tr><td>3</td><td>硬纸板</td><td>cardboard</td><td>370</td></tr><tr><td>4</td><td>塑料</td><td>plastic</td><td>445</td></tr><tr><td>5</td><td>金属</td><td>metal</td><td>380</td></tr><tr><td>6</td><td>一般垃圾</td><td>trash</td><td>115</td></tr></tbody></table><ul><li>物品都是放在白板上在日光/室内光源下拍摄的，压缩后的尺寸为 512 * 384</li></ul><h2 id="22-图片预处理"><a class="markdownIt-Anchor" href="#22-图片预处理"></a> 2.2 图片预处理</h2><p>图片生成器 <a href="https://keras.io/preprocessing/image/" target="_blank" rel="noopener">ImageDataGenerator</a>: keras.preprocessing.image 模块中的图片生成器，主要用以生成一个 batch 的图像数据，支持实时数据提升。训练时该函数会无限生成数据，直到达到规定的 epoch 次数为止。同时也可以在 batch 中对数据进行增强，扩充数据集大小，增强模型的泛化能力，比如进行旋转，变形，归一化等等。</p><p>图片生成器的主要方法：</p><ul><li><p>fit(x, augment=False, rounds=1)：计算依赖于数据的变换所需要的统计信息(均值方差等)。</p></li><li><p>flow(self, X, y, batch_size=32, shuffle=True, seed=None, save_to_dir=None, save_prefix=’’, save_format=‘png’)：接收 Numpy 数组和标签为参数,生成经过数据提升或标准化后的 batch 数据，并在一个无限循环中不断的返回 batch 数据。</p></li><li><p>flow_from_directory(directory): 以文件夹路径为参数，会从路径推测 label，生成经过数据提升/归一化后的数据，在一个无限循环中无限产生 batch 数据。</p></li></ul><blockquote><p>根据上面的介绍和我们数据集的特性，我们主要运用 <code>ImageDataGenerator()</code> 和 <code>flow_from_directory()</code> 方法。我们将数据处理过程封装成为一个函数：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入图片生成器</span></span><br><span class="line"><span class="keyword">from</span> keras.preprocessing.image <span class="keyword">import</span> ImageDataGenerator</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">processing_data</span><span class="params">(data_path, height, width, batch_size=<span class="number">32</span>, validation_split=<span class="number">0.1</span>)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    数据处理</span></span><br><span class="line"><span class="string">    :param data_path: 带有子目录的数据集路径</span></span><br><span class="line"><span class="string">    :param height: 图像形状的行数</span></span><br><span class="line"><span class="string">    :param width: 图像形状的列数</span></span><br><span class="line"><span class="string">    :param batch_size: batch 数据的大小，整数，默认32。</span></span><br><span class="line"><span class="string">    :param validation_split: 在 0 和 1 之间浮动。用作测试集的训练数据的比例，默认0.1。</span></span><br><span class="line"><span class="string">    :return: train_generator, validation_generator: 处理后的训练集数据、验证集数据</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    train_data = ImageDataGenerator(</span><br><span class="line">            <span class="comment"># 对图片的每个像素值均乘上这个放缩因子，把像素值放缩到0和1之间有利于模型的收敛</span></span><br><span class="line">            rescale=<span class="number">1.</span> / <span class="number">255</span>,  </span><br><span class="line">            <span class="comment"># 浮点数，剪切强度（逆时针方向的剪切变换角度）</span></span><br><span class="line">            shear_range=<span class="number">0.1</span>,  </span><br><span class="line">            <span class="comment"># 随机缩放的幅度，若为浮点数，则相当于[lower,upper] = [1 - zoom_range, 1+zoom_range]</span></span><br><span class="line">            zoom_range=<span class="number">0.1</span>,</span><br><span class="line">            <span class="comment"># 浮点数，图片宽度的某个比例，数据提升时图片水平偏移的幅度</span></span><br><span class="line">            width_shift_range=<span class="number">0.1</span>,</span><br><span class="line">            <span class="comment"># 浮点数，图片高度的某个比例，数据提升时图片竖直偏移的幅度</span></span><br><span class="line">            height_shift_range=<span class="number">0.1</span>,</span><br><span class="line">            <span class="comment"># 布尔值，进行随机水平翻转</span></span><br><span class="line">            horizontal_flip=<span class="keyword">True</span>,</span><br><span class="line">            <span class="comment"># 布尔值，进行随机竖直翻转</span></span><br><span class="line">            vertical_flip=<span class="keyword">True</span>,</span><br><span class="line">            <span class="comment"># 在 0 和 1 之间浮动。用作验证集的训练数据的比例</span></span><br><span class="line">            validation_split=validation_split  </span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 接下来生成测试集，可以参考训练集的写法</span></span><br><span class="line">    validation_data = ImageDataGenerator(</span><br><span class="line">            rescale=<span class="number">1.</span> / <span class="number">255</span>,</span><br><span class="line">            validation_split=validation_split)</span><br><span class="line"></span><br><span class="line">    train_generator = train_data.flow_from_directory(</span><br><span class="line">            <span class="comment"># 提供的路径下面需要有子目录</span></span><br><span class="line">            data_path, </span><br><span class="line">            <span class="comment"># 整数元组 (height, width)，默认：(256, 256)。 所有的图像将被调整到的尺寸。</span></span><br><span class="line">            target_size=(height, width),</span><br><span class="line">            <span class="comment"># 一批数据的大小</span></span><br><span class="line">            batch_size=batch_size,</span><br><span class="line">            <span class="comment"># "categorical", "binary", "sparse", "input" 或 None 之一。</span></span><br><span class="line">            <span class="comment"># 默认："categorical",返回one-hot 编码标签。</span></span><br><span class="line">            class_mode=<span class="string">'categorical'</span>,</span><br><span class="line">            <span class="comment"># 数据子集 ("training" 或 "validation")</span></span><br><span class="line">            subset=<span class="string">'training'</span>, </span><br><span class="line">            seed=<span class="number">0</span>)</span><br><span class="line">    validation_generator = validation_data.flow_from_directory(</span><br><span class="line">            data_path,</span><br><span class="line">            target_size=(height, width),</span><br><span class="line">            batch_size=batch_size,</span><br><span class="line">            class_mode=<span class="string">'categorical'</span>,</span><br><span class="line">            subset=<span class="string">'validation'</span>,</span><br><span class="line">            seed=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> train_generator, validation_generator</span><br><span class="line"></span><br><span class="line"><span class="comment"># -------------使用---------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据路径</span></span><br><span class="line">data_path = <span class="string">"./datasets/la1ji1fe1nle4ishu4ju4ji22-momodel/dataset-resized"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 图像数据的行数和列数</span></span><br><span class="line">height, width = <span class="number">384</span>, <span class="number">512</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取训练数据和验证数据集</span></span><br><span class="line">train_generator, validation_generator = processing_data(data_path, height, width)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过属性class_indices可获得文件夹名与类的序号的对应字典。 (类别的顺序将按照字母表顺序映射到标签值)。</span></span><br><span class="line">labels = train_generator.class_indices</span><br><span class="line">print(labels)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 转换为类的序号与文件夹名对应的字典</span></span><br><span class="line">labels = dict((v, k) <span class="keyword">for</span> k, v <span class="keyword">in</span> labels.items())</span><br><span class="line">print(labels)</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Found 2078 images belonging to 6 classes.</span></span><br><span class="line"><span class="string">Found 229 images belonging to 6 classes.</span></span><br><span class="line"><span class="string">&#123;'trash': 5, 'metal': 2, 'plastic': 4, 'glass': 1, 'cardboard': 0, 'paper': 3&#125;</span></span><br><span class="line"><span class="string">&#123;0: 'cardboard', 1: 'glass', 2: 'metal', 3: 'paper', 4: 'plastic', 5: 'trash'&#125;</span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure><h2 id="23-采用-keras-建立一个简单的深度神经网络模型"><a class="markdownIt-Anchor" href="#23-采用-keras-建立一个简单的深度神经网络模型"></a> 2.3 采用 Keras 建立一个简单的深度神经网络模型</h2><p>通过 Keras 构建深度学习模型的步骤如下：</p><h3 id="1-定义模型创建一个模型并添加配置层"><a class="markdownIt-Anchor" href="#1-定义模型创建一个模型并添加配置层"></a> 1. 定义模型——创建一个模型并添加配置层</h3><blockquote><p>Keras 的核心数据结构是 model，一种组织网络层的方式。最简单的模型是 <a href="https://keras.io/getting-started/sequential-model-guide/" target="_blank" rel="noopener">Sequential 顺序模型</a>，它由多个网络层线性堆叠。</p></blockquote><ol><li>方式一: 使用 .add() 方法将各层添加到模型中</li></ol>   <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方式一: 使用 .add() 方法将各层添加到模型中</span></span><br><span class="line"><span class="comment"># 导入相关包</span></span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense, Activation</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择模型，选择序贯模型（Sequential())</span></span><br><span class="line">model = Sequential()</span><br><span class="line"><span class="comment"># 构建网络层</span></span><br><span class="line"><span class="comment"># 添加全连接层，输入784维,输出空间维度32</span></span><br><span class="line">model.add(Dense(<span class="number">32</span>, input_shape=(<span class="number">784</span>,)))</span><br><span class="line"><span class="comment"># 添加激活层，激活函数是 relu</span></span><br><span class="line">model.add(Activation(<span class="string">'relu'</span>))</span><br><span class="line"><span class="comment"># 打印模型概况</span></span><br><span class="line">model.summary()</span><br></pre></td></tr></table></figure><ol start="2"><li><p>方式二：网络层实例的列表构建序贯模型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方式二：网络层实例的列表构建序贯模型</span></span><br><span class="line"><span class="comment"># 导入相关的包</span></span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense, Activation</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择模型，选择序贯模型（Sequential())</span></span><br><span class="line"><span class="comment"># 通过将网络层实例的列表传递给 Sequential 的构造器，来创建一个 Sequential 模型</span></span><br><span class="line">model = Sequential([</span><br><span class="line">    Dense(<span class="number">32</span>, input_shape=(<span class="number">784</span>,)),</span><br><span class="line">    Activation(<span class="string">'relu'</span>)</span><br><span class="line">])</span><br><span class="line"><span class="comment"># 打印模型概况</span></span><br><span class="line">model.summary()</span><br></pre></td></tr></table></figure></li><li><p>方式三：函数式模型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方式三：函数式模型</span></span><br><span class="line"><span class="comment"># 导入相关的包</span></span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Input, Dense,Activation</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Model</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入层，返回一个张量 tensor</span></span><br><span class="line">inputs = Input(shape=(<span class="number">784</span>,))</span><br><span class="line"><span class="comment"># 全连接层，返回一个张量</span></span><br><span class="line">output_1 = Dense(<span class="number">32</span>)(inputs)</span><br><span class="line"><span class="comment"># 激活函数层</span></span><br><span class="line">predictions= Activation(activation=<span class="string">'relu'</span>)(output_1)</span><br><span class="line"><span class="comment"># 创建一个模型，包含输入层、全连接层和激活层</span></span><br><span class="line">model = Model(inputs=inputs, outputs=predictions)</span><br><span class="line"><span class="comment"># 打印模型概况</span></span><br><span class="line">model.summary()</span><br></pre></td></tr></table></figure></li></ol><h3 id="2-编译模型指定损失函数和优化器并调用模型的-compile-函数完成模型编译"><a class="markdownIt-Anchor" href="#2-编译模型指定损失函数和优化器并调用模型的-compile-函数完成模型编译"></a> 2. 编译模型——指定损失函数和优化器，并调用模型的 compile() 函数，完成模型编译。</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入相关包</span></span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Input, Dense, Flatten, Dropout, Activation</span><br><span class="line"><span class="keyword">from</span> keras.layers.normalization <span class="keyword">import</span> BatchNormalization</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Model</span><br><span class="line"><span class="keyword">from</span> keras.callbacks <span class="keyword">import</span> TensorBoard</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dnn_model</span><span class="params">(input_shape, train_generator, validation_generator, model_save_path=<span class="string">'results/dnn.h5'</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">              log_dir=<span class="string">"results/logs/"</span>)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    该函数实现 Keras 创建深度学习模型的过程. ▲.定义模型+编译模型</span></span><br><span class="line"><span class="string">    :param input_shape: 模型数据形状大小，比如:input_shape=(384, 512, 3)</span></span><br><span class="line"><span class="string">    :param train_generator: 训练集</span></span><br><span class="line"><span class="string">    :param validation_generator: 验证集</span></span><br><span class="line"><span class="string">    :param model_save_path: 保存模型的路径</span></span><br><span class="line"><span class="string">    :param log_dir: 保存模型日志路径</span></span><br><span class="line"><span class="string">    :return: 返回已经训练好的模型</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># Input 用于实例化 Keras 张量。</span></span><br><span class="line">    <span class="comment"># shape: 一个尺寸元组（整数），不包含批量大小。 例如，shape=(32,) 表明期望的输入是按批次的 32 维向量。</span></span><br><span class="line">    inputs = Input(shape=input_shape)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将输入展平</span></span><br><span class="line">    dnn = Flatten()(inputs)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Dense 全连接层  实现以下操作：output = activation(dot(input, kernel) + bias)</span></span><br><span class="line">    <span class="comment"># 其中 activation 是按逐个元素计算的激活函数，kernel 是由网络层创建的权值矩阵，</span></span><br><span class="line">    <span class="comment"># 以及 bias 是其创建的偏置向量 (只在 use_bias 为 True 时才有用)。</span></span><br><span class="line">    dnn = Dense(<span class="number">6</span>)(dnn)</span><br><span class="line">    <span class="comment"># 批量标准化层: 在每一个批次的数据中标准化前一层的激活项， 即应用一个维持激活项平均值接近 0，标准差接近 1 的转换。</span></span><br><span class="line">    <span class="comment"># axis: 整数，需要标准化的轴 （通常是特征轴）。默认值是 -1</span></span><br><span class="line">    dnn = BatchNormalization(axis=<span class="number">-1</span>)(dnn)</span><br><span class="line">    <span class="comment"># 将激活函数,输出尺寸与输入尺寸一样，激活函数可以是'softmax'、'sigmoid'等</span></span><br><span class="line">    dnn = Activation(<span class="string">'sigmoid'</span>)(dnn)</span><br><span class="line">    <span class="comment"># Dropout 包括在训练中每次更新时，将输入单元的按比率随机设置为 0, 这有助于防止过拟合。</span></span><br><span class="line">    <span class="comment"># rate: 在 0 和 1 之间浮动。需要丢弃的输入比例。</span></span><br><span class="line">    dnn = Dropout(<span class="number">0.25</span>)(dnn)</span><br><span class="line"></span><br><span class="line">    dnn = Dense(<span class="number">12</span>)(dnn)</span><br><span class="line">    dnn = BatchNormalization(axis=<span class="number">-1</span>)(dnn)</span><br><span class="line">    dnn = Activation(<span class="string">'relu'</span>)(dnn)</span><br><span class="line">    dnn = Dropout(<span class="number">0.5</span>)(dnn)</span><br><span class="line"></span><br><span class="line">    dnn = Dense(<span class="number">6</span>)(dnn)</span><br><span class="line">    dnn = BatchNormalization(axis=<span class="number">-1</span>)(dnn)</span><br><span class="line">    dnn = Activation(<span class="string">'softmax'</span>)(dnn)</span><br><span class="line"></span><br><span class="line">    outputs = dnn</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 生成一个函数型模型</span></span><br><span class="line">    model = Model(inputs=inputs, outputs=outputs)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 编译模型, 采用 compile 函数: https://keras.io/models/model/#compile</span></span><br><span class="line">    model.compile(</span><br><span class="line">            <span class="comment"># 是优化器, 主要有Adam、sgd、rmsprop等方式。</span></span><br><span class="line">            optimizer=<span class="string">'Adam'</span>,</span><br><span class="line">            <span class="comment"># 损失函数,多分类采用 categorical_crossentropy</span></span><br><span class="line">            loss=<span class="string">'categorical_crossentropy'</span>,</span><br><span class="line">            <span class="comment"># 是除了损失函数值之外的特定指标, 分类问题一般都是准确率</span></span><br><span class="line">            metrics=[<span class="string">'accuracy'</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 可视化，TensorBoard 是由 Tensorflow 提供的一个可视化工具。</span></span><br><span class="line">    tensorboard = TensorBoard(log_dir)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 训练模型, fit_generator函数:https://keras.io/models/model/#fit_generator</span></span><br><span class="line">    <span class="comment"># 利用Python的生成器，逐个生成数据的batch并进行训练。</span></span><br><span class="line">    <span class="comment"># callbacks: 实例列表。在训练时调用的一系列回调。详见 https://keras.io/callbacks/。</span></span><br><span class="line">    d = model.fit_generator(</span><br><span class="line">            <span class="comment"># 一个生成器或 Sequence 对象的实例</span></span><br><span class="line">            generator=train_generator,</span><br><span class="line">            <span class="comment"># epochs: 整数，数据的迭代总轮数。</span></span><br><span class="line">            epochs=<span class="number">5</span>,</span><br><span class="line">            <span class="comment"># 一个epoch包含的步数,通常应该等于你的数据集的样本数量除以批量大小。</span></span><br><span class="line">            steps_per_epoch=<span class="number">2076</span> // <span class="number">32</span>,</span><br><span class="line">            <span class="comment"># 验证集</span></span><br><span class="line">            validation_data=validation_generator,</span><br><span class="line">            <span class="comment"># 在验证集上,一个epoch包含的步数,通常应该等于你的数据集的样本数量除以批量大小。</span></span><br><span class="line">            validation_steps=<span class="number">231</span> // <span class="number">32</span>,</span><br><span class="line">            callbacks=[tensorboard])</span><br><span class="line">    <span class="comment"># 模型保存</span></span><br><span class="line">    model.save(model_save_path)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> d, model</span><br></pre></td></tr></table></figure><h3 id="3-训练模型通过调用模型的-fit-函数来训练模型"><a class="markdownIt-Anchor" href="#3-训练模型通过调用模型的-fit-函数来训练模型"></a> 3. 训练模型——通过调用模型的 fit() 函数来训练模型。</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开始时间</span></span><br><span class="line">start = time.time()</span><br><span class="line"><span class="comment"># 数据预处理</span></span><br><span class="line">data_path = <span class="string">"./datasets/la1ji1fe1nle4ishu4ju4ji22-momodel/dataset-resized"</span></span><br><span class="line"><span class="comment"># 图像数据的行数和列数</span></span><br><span class="line">height, width = <span class="number">384</span>, <span class="number">512</span></span><br><span class="line"><span class="comment"># 获取训练数据和验证数据</span></span><br><span class="line">train_generator, validation_generator = processing_data(data_path, height, width)</span><br><span class="line"><span class="comment"># 定义模型输入大小</span></span><br><span class="line">input_shape=(<span class="number">384</span>, <span class="number">512</span>, <span class="number">3</span>)</span><br><span class="line"><span class="comment"># 训练模型，获取训练过程和训练后的模型</span></span><br><span class="line">res,model = dnn_model(input_shape, train_generator, validation_generator)</span><br><span class="line"><span class="comment"># 打印模型概况和模型训练总数长</span></span><br><span class="line">model.summary()</span><br><span class="line">print(<span class="string">"模型训练总时长："</span>,time.time()-start)</span><br></pre></td></tr></table></figure><ol><li>查看模型训练效果</li></ol>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plot_training_history</span><span class="params">(res)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    绘制模型的训练结果</span></span><br><span class="line"><span class="string">    :param res: 模型的训练结果</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 绘制模型训练过程的损失和平均损失</span></span><br><span class="line">    <span class="comment"># 绘制模型训练过程的损失值曲线，标签是 loss</span></span><br><span class="line">    plt.plot(res.history[<span class="string">'loss'</span>], label=<span class="string">'loss'</span>)</span><br><span class="line">    <span class="comment"># 绘制模型训练过程中的平均损失曲线，标签是 val_loss</span></span><br><span class="line">    plt.plot(res.history[<span class="string">'val_loss'</span>], label=<span class="string">'val_loss'</span>)</span><br><span class="line">    <span class="comment"># 绘制图例,展示出每个数据对应的图像名称和图例的放置位置</span></span><br><span class="line">    plt.legend(loc=<span class="string">'upper right'</span>)</span><br><span class="line">    <span class="comment"># 展示图片</span></span><br><span class="line">    plt.show()</span><br><span class="line">    <span class="comment"># 绘制模型训练过程中的的准确率和平均准确率</span></span><br><span class="line">    <span class="comment"># 绘制模型训练过程中的准确率曲线，标签是 acc</span></span><br><span class="line">    plt.plot(res.history[<span class="string">'accuracy'</span>], label=<span class="string">'accuracy'</span>)</span><br><span class="line">    <span class="comment"># 绘制模型训练过程中的平均准确率曲线，标签是 val_acc</span></span><br><span class="line">    plt.plot(res.history[<span class="string">'val_accuracy'</span>], label=<span class="string">'val_accuracy'</span>)</span><br><span class="line">    <span class="comment"># 绘制图例,展示出每个数据对应的图像名称，图例的放置位置为默认值。</span></span><br><span class="line">    plt.legend()</span><br><span class="line">    <span class="comment"># 展示图片</span></span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure><h3 id="4-模型预测调用模型的-evaluate或者-predict-等函数对新数据进行预测"><a class="markdownIt-Anchor" href="#4-模型预测调用模型的-evaluate或者-predict-等函数对新数据进行预测"></a> 4. 模型预测——调用模型的 evaluate()或者 predict() 等函数对新数据进行预测。</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_and_model_prediction</span><span class="params">(validation_generator)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    加载模型和模型评估，打印验证集的 loss 和准确度</span></span><br><span class="line"><span class="string">    :param validation_generator: 预测数据</span></span><br><span class="line"><span class="string">    :return: </span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 加载模型</span></span><br><span class="line">    model = load_model(<span class="string">'results/dnn.h5'</span>)</span><br><span class="line">    <span class="comment"># 获取验证集的 loss 和 accuracy</span></span><br><span class="line">    loss, accuracy = model.evaluate_generator(validation_generator)</span><br><span class="line">    print(<span class="string">"\nLoss: %.2f, Accuracy: %.2f%%"</span> % (loss, accuracy * <span class="number">100</span>))</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 打印模型评估的结果</span></span><br><span class="line">load_and_model_prediction(validation_generator)</span><br></pre></td></tr></table></figure><p>(预测可视化)：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> load_model</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plot_load_and_model_prediction</span><span class="params">(validation_generator, labels)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    加载模型、模型预测并展示模型预测结果等</span></span><br><span class="line"><span class="string">    :param validation_generator: 预测数据</span></span><br><span class="line"><span class="string">    :param labels: 数据标签</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 加载模型</span></span><br><span class="line">    model = load_model(<span class="string">'results/dnn.h5'</span>)</span><br><span class="line">    <span class="comment"># 测试集数据与标签</span></span><br><span class="line">    test_x, test_y = validation_generator.__getitem__(<span class="number">2</span>)</span><br><span class="line">    <span class="comment"># 预测值</span></span><br><span class="line">    preds = model.predict(test_x)</span><br><span class="line">    <span class="comment"># 绘制预测图像的预测值和真实值，定义画布</span></span><br><span class="line">    plt.figure(figsize=(<span class="number">16</span>, <span class="number">16</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">16</span>):</span><br><span class="line">        <span class="comment"># 绘制各个子图</span></span><br><span class="line">        plt.subplot(<span class="number">4</span>, <span class="number">4</span>, i + <span class="number">1</span>)</span><br><span class="line">        <span class="comment"># 图片名称</span></span><br><span class="line">        plt.title(</span><br><span class="line">                <span class="string">'pred:%s / truth:%s'</span> % (labels[np.argmax(preds[i])], labels[np.argmax(test_y[i])]))</span><br><span class="line">        <span class="comment"># 展示图片</span></span><br><span class="line">        plt.imshow(test_x[i])</span><br><span class="line">        </span><br><span class="line"><span class="comment"># 展示模型预测结果</span></span><br><span class="line">plot_load_and_model_prediction(validation_generator, labels)</span><br></pre></td></tr></table></figure><h3 id="5-使用模型"><a class="markdownIt-Anchor" href="#5-使用模型"></a> 5. 使用模型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> load_model</span><br><span class="line"><span class="keyword">from</span> keras.preprocessing <span class="keyword">import</span> image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_and_predict</span><span class="params">(img)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    加载模型并预测一张图片的类别</span></span><br><span class="line"><span class="string">    :param img: PIL.Image 对象</span></span><br><span class="line"><span class="string">    :return: string, 模型识别图片的类别, </span></span><br><span class="line"><span class="string">            共 'cardboard','glass','metal','paper','plastic','trash' 6 个类别</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 加载模型, 默认'results/dnn.h5',请填写你的最佳模型</span></span><br><span class="line">    model_path = <span class="string">'results/dnn.h5'</span></span><br><span class="line">    model = load_model(model_path)</span><br><span class="line">    <span class="comment"># 把图片转换成为numpy数组</span></span><br><span class="line">    img = image.img_to_array(img)</span><br><span class="line">    <span class="comment"># 图片放缩</span></span><br><span class="line">    img = <span class="number">1.0</span>/<span class="number">255</span> * img</span><br><span class="line">    <span class="comment"># expand_dims的作用是把img.shape转换成(1, img.shape[0], img.shape[1], img.shape[2])</span></span><br><span class="line">    x = np.expand_dims(img, axis=<span class="number">0</span>)</span><br><span class="line">    <span class="comment"># 模型预测, y: [[0.22421867 0.13031775 0.15167782 0.15904953 0.21509506 0.11964121]]</span></span><br><span class="line">    y = model.predict(x)</span><br><span class="line">    <span class="comment"># 获取labels</span></span><br><span class="line">    labels = &#123;<span class="number">0</span>: <span class="string">'cardboard'</span>, <span class="number">1</span>: <span class="string">'glass'</span>, <span class="number">2</span>: <span class="string">'metal'</span>, <span class="number">3</span>: <span class="string">'paper'</span>, <span class="number">4</span>: <span class="string">'plastic'</span>, <span class="number">5</span>: <span class="string">'trash'</span>&#125;</span><br><span class="line">    <span class="comment"># 获取输入图片的类别</span></span><br><span class="line">    y_predict = labels[np.argmax(y)]</span><br><span class="line">    <span class="comment"># 返回图片的类别</span></span><br><span class="line">    <span class="keyword">return</span> y_predict</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> keras.preprocessing <span class="keyword">import</span> image</span><br><span class="line"><span class="comment"># 输入图片路径和名称</span></span><br><span class="line">file_path = <span class="string">'test.jpg'</span></span><br><span class="line"><span class="comment"># 打印该张图片的类别</span></span><br><span class="line">img = image.load_img(file_path)</span><br><span class="line">print(load_and_predict(img))</span><br></pre></td></tr></table></figure><h1 id="mycode"><a class="markdownIt-Anchor" href="#mycode"></a> Mycode</h1><blockquote><p>编写 <strong>数据处理</strong>、<strong>创建模型</strong>、<strong>训练模型</strong>、<strong>保存模型</strong> 和 <strong>评估模型</strong> 等部分的代码</p></blockquote><h2 id="完成模型"><a class="markdownIt-Anchor" href="#完成模型"></a> 完成模型</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">processing_data</span><span class="params">(data_path)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    数据处理</span></span><br><span class="line"><span class="string">    :param data_path: 数据集路径</span></span><br><span class="line"><span class="string">    :return: train, test:处理后的训练集数据、测试集数据</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># -------------------------- 实现数据处理部分代码 ----------------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ------------------------------------------------------------------------</span></span><br><span class="line">    train_data, test_data = <span class="keyword">None</span>, <span class="keyword">None</span></span><br><span class="line">    <span class="keyword">return</span> train_data, test_data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">model</span><span class="params">(train_data, test_data, save_model_path)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    创建、训练和保存深度学习模型</span></span><br><span class="line"><span class="string">    :param train_data: 训练集数据</span></span><br><span class="line"><span class="string">    :param test_data: 测试集数据</span></span><br><span class="line"><span class="string">    :param save_model_path: 保存模型的路径和名称</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># --------------------- 实现模型创建、训练和保存等部分的代码 ---------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 保存模型（请写好保存模型的路径及名称）</span></span><br><span class="line">    <span class="comment"># -------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> model</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">evaluate_mode</span><span class="params">(test_data, save_model_path)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    加载模型和评估模型</span></span><br><span class="line"><span class="string">    可以实现，比如: 模型训练过程中的学习曲线，测试集数据的loss值、准确率及混淆矩阵等评价指标！</span></span><br><span class="line"><span class="string">    主要步骤:</span></span><br><span class="line"><span class="string">        1.加载模型(请填写你训练好的最佳模型),</span></span><br><span class="line"><span class="string">        2.对自己训练的模型进行评估</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param test_data: 测试集数据</span></span><br><span class="line"><span class="string">    :param save_model_path: 加载模型的路径和名称,请填写你认为最好的模型</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># ----------------------- 实现模型加载和评估等部分的代码 -----------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ---------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    深度学习模型训练流程,包含数据处理、创建模型、训练模型、模型保存、评价模型等。</span></span><br><span class="line"><span class="string">    如果对训练出来的模型不满意,你可以通过调整模型的参数等方法重新训练模型,直至训练出你满意的模型。</span></span><br><span class="line"><span class="string">    如果你对自己训练出来的模型非常满意,则可以提交作业!</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    data_path = <span class="keyword">None</span>  <span class="comment"># 数据集路径</span></span><br><span class="line">    save_model_path = <span class="keyword">None</span>  <span class="comment"># 保存模型路径和名称</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取数据</span></span><br><span class="line">    train_data, test_data = processing_data(data_path)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建、训练和保存模型</span></span><br><span class="line">    model(train_data, test_data, save_model_path)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 评估模型</span></span><br><span class="line">    evaluate_mode(test_data, save_model_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="模型预测"><a class="markdownIt-Anchor" href="#模型预测"></a> 模型预测</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> load_model</span><br><span class="line"><span class="keyword">from</span> keras.preprocessing <span class="keyword">import</span> image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -------------------------- 请加载您最满意的模型 ---------------------------</span></span><br><span class="line"><span class="comment"># 加载模型(请加载你认为的最佳模型)</span></span><br><span class="line"><span class="comment"># 加载模型,加载请注意 model_path 是相对路径, 与当前文件同级。</span></span><br><span class="line"><span class="comment"># 如果你的模型是在 results 文件夹下的 dnn.h5 模型，则 model_path = 'results/dnn.h5'</span></span><br><span class="line">model_path = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载模型，如果采用keras框架训练模型，则 model=load_model(model_path)</span></span><br><span class="line">model = <span class="keyword">None</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(img)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    加载模型和模型预测</span></span><br><span class="line"><span class="string">    主要步骤:</span></span><br><span class="line"><span class="string">        1.图片处理</span></span><br><span class="line"><span class="string">        2.用加载的模型预测图片的类别</span></span><br><span class="line"><span class="string">    :param img: PIL.Image 对象</span></span><br><span class="line"><span class="string">    :return: string, 模型识别图片的类别, </span></span><br><span class="line"><span class="string">            共 'cardboard','glass','metal','paper','plastic','trash' 6 个类别</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># -------------------------- 实现模型预测部分的代码 ---------------------------</span></span><br><span class="line">    <span class="comment"># 获取图片的类别，共 'cardboard','glass','metal','paper','plastic','trash' 6 个类别</span></span><br><span class="line">    <span class="comment"># 把图片转换成为numpy数组</span></span><br><span class="line">    img = image.img_to_array(img)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取输入图片的类别</span></span><br><span class="line">    y_predict = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -------------------------------------------------------------------------</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 返回图片的类别</span></span><br><span class="line">    <span class="keyword">return</span> y_predict</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------使用-----------------------------</span></span><br><span class="line"><span class="keyword">from</span> keras.preprocessing <span class="keyword">import</span> image</span><br><span class="line"><span class="comment"># 输入图片路径和名称</span></span><br><span class="line">img_path = <span class="string">'test.jpg'</span></span><br><span class="line"><span class="comment"># 打印该张图片的类别</span></span><br><span class="line">img = image.load_img(img_path)</span><br><span class="line">print(predict(img))</span><br></pre></td></tr></table></figure><h3 id="mo项目上代码-accuracy为56"><a class="markdownIt-Anchor" href="#mo项目上代码-accuracy为56"></a> Mo项目上代码-&gt; accuracy为56%</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">import</span> random </span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image </span><br><span class="line"><span class="keyword">from</span> torchvision.transforms <span class="keyword">import</span> transforms</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms.functional <span class="keyword">as</span> TF</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> torch.utils.data <span class="keyword">as</span> Data</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyCNN</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, image_size, num_classes)</span>:</span></span><br><span class="line">        super(MyCNN, self).__init__()</span><br><span class="line">        <span class="comment"># conv1: Conv2d -&gt; BN -&gt; ReLU -&gt; MaxPool</span></span><br><span class="line">        self.conv1 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(in_channels=<span class="number">3</span>, out_channels=<span class="number">16</span>, kernel_size=<span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">16</span>),</span><br><span class="line">            nn.ReLU(), </span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>),</span><br><span class="line">        )</span><br><span class="line">        <span class="comment"># conv2: Conv2d -&gt; BN -&gt; ReLU -&gt; MaxPool</span></span><br><span class="line">        self.conv2 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(in_channels=<span class="number">16</span>, out_channels=<span class="number">32</span>, kernel_size=<span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">32</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>),</span><br><span class="line">        )</span><br><span class="line">        <span class="comment"># fully connected layer</span></span><br><span class="line">        self.fc = nn.Linear(<span class="number">32</span> * (image_size // <span class="number">4</span>) * (image_size // <span class="number">4</span>), num_classes)</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        input: N * 3 * image_size * image_size</span></span><br><span class="line"><span class="string">        output: N * num_classes</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        x = self.conv1(x)</span><br><span class="line">        x = self.conv2(x)</span><br><span class="line">        <span class="comment"># view(x.size(0), -1): change tensor size from (N ,H , W) to (N, H*W)</span></span><br><span class="line">        x = x.view(x.size(<span class="number">0</span>), <span class="number">-1</span>)</span><br><span class="line">        output = self.fc(x)</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_model</span><span class="params">(model_path, device)</span>:</span></span><br><span class="line">    net = MyCNN(<span class="number">32</span>,<span class="number">6</span>)</span><br><span class="line">    print(<span class="string">'loading the model from %s'</span> % model_path)</span><br><span class="line">    state_dict = torch.load(model_path, map_location=str(device))</span><br><span class="line">    <span class="keyword">if</span> hasattr(state_dict, <span class="string">'_metadata'</span>):</span><br><span class="line">        <span class="keyword">del</span> state_dict._metadata</span><br><span class="line">    net.load_state_dict(state_dict)</span><br><span class="line">    <span class="keyword">return</span> net </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载模型,加载请注意 model_path 是相对路径, 与当前文件同级。</span></span><br><span class="line"><span class="comment"># 如果你的模型是在 results 文件夹下的 dnn.h5 模型，则 model_path = 'results/dnn.h5'</span></span><br><span class="line">model_path = <span class="string">'results/cnn.pth'</span></span><br><span class="line">device = torch.device(<span class="string">'cuda'</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">'cpu'</span>)</span><br><span class="line">model = load_model(model_path, device).to(device)</span><br><span class="line">model.eval()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(img)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    :param img: PIL.Image 对象</span></span><br><span class="line"><span class="string">    :return: string, 模型识别图片的类别, </span></span><br><span class="line"><span class="string">            共 'cardboard','glass','metal','paper','plastic','trash' 6 个类别</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    transform = transforms.Compose([transforms.RandomCrop(size=(<span class="number">384</span>,<span class="number">512</span>), padding=<span class="number">10</span>),</span><br><span class="line">                                transforms.Resize((<span class="number">32</span>,<span class="number">32</span>)),</span><br><span class="line">                                transforms.ToTensor(),</span><br><span class="line">                                transforms.Normalize([<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>], [<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>])</span><br><span class="line">    ])</span><br><span class="line">    img = transform(img)</span><br><span class="line"></span><br><span class="line">    classes=[<span class="string">'glass'</span>,<span class="string">'paper'</span>,<span class="string">'carboard'</span>,<span class="string">'plastic'</span>,<span class="string">'metal'</span>,<span class="string">'trash'</span>]</span><br><span class="line"></span><br><span class="line">    img = img.to(device).unsqueeze(<span class="number">0</span>)</span><br><span class="line">    pred_cate = model(img)</span><br><span class="line">    preds = pred_cate.argmax(dim=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># -------------------------------------------------------------------------</span></span><br><span class="line">    y_predict = classes[preds]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 返回图片的类别</span></span><br><span class="line">    <span class="keyword">return</span> y_predict</span><br></pre></td></tr></table></figure><p>VGG16代码：accurary：92%</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###############################################################################</span></span><br><span class="line"><span class="comment"># 重要: 请务必把任务(jobs)中需要保存的文件存放在 results 文件夹内</span></span><br><span class="line"><span class="comment"># Important : Please make sure your files are saved to the 'results' folder</span></span><br><span class="line"><span class="comment"># in your jobs</span></span><br><span class="line"><span class="comment">###############################################################################</span></span><br><span class="line"><span class="comment"># ------------------------------------------提交内容-----------------------------------</span></span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Input, Dense, Flatten, Dropout, Activation </span><br><span class="line"><span class="keyword">from</span> keras.layers.normalization <span class="keyword">import</span> BatchNormalization</span><br><span class="line"><span class="keyword">from</span> keras.preprocessing.image <span class="keyword">import</span> ImageDataGenerator</span><br><span class="line"><span class="keyword">from</span> keras.callbacks <span class="keyword">import</span> TensorBoard</span><br><span class="line"><span class="keyword">from</span> keras.preprocessing <span class="keyword">import</span> image</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> load_model</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Model</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> glob, os, cv2, random,time</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Conv2D,Flatten,MaxPooling2D,Dense </span><br><span class="line"><span class="keyword">from</span> keras.optimizers <span class="keyword">import</span> SGD</span><br><span class="line"><span class="keyword">from</span> keras.applications.vgg16 <span class="keyword">import</span> VGG16</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">processing_data</span><span class="params">(data_path)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    数据处理</span></span><br><span class="line"><span class="string">    :param data_path: 数据集路径</span></span><br><span class="line"><span class="string">    :return: train, test:处理后的训练集数据、测试集数据</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    train_data = ImageDataGenerator(</span><br><span class="line">            <span class="comment"># 对图片的每个像素值均乘上这个放缩因子，把像素值放缩到0和1之间有利于模型的收敛</span></span><br><span class="line">            rescale=<span class="number">1.</span> / <span class="number">225</span>,  </span><br><span class="line">            <span class="comment"># 浮点数，剪切强度（逆时针方向的剪切变换角度）</span></span><br><span class="line">            shear_range=<span class="number">0.1</span>,  </span><br><span class="line">            <span class="comment"># 随机缩放的幅度，若为浮点数，则相当于[lower,upper] = [1 - zoom_range, 1+zoom_range]</span></span><br><span class="line">            zoom_range=<span class="number">0.1</span>,</span><br><span class="line">            <span class="comment"># 浮点数，图片宽度的某个比例，数据提升时图片水平偏移的幅度</span></span><br><span class="line">            width_shift_range=<span class="number">0.1</span>,</span><br><span class="line">            <span class="comment"># 浮点数，图片高度的某个比例，数据提升时图片竖直偏移的幅度</span></span><br><span class="line">            height_shift_range=<span class="number">0.1</span>,</span><br><span class="line">            <span class="comment"># 布尔值，进行随机水平翻转</span></span><br><span class="line">            horizontal_flip=<span class="keyword">True</span>,</span><br><span class="line">            <span class="comment"># 布尔值，进行随机竖直翻转</span></span><br><span class="line">            vertical_flip=<span class="keyword">True</span>,</span><br><span class="line">            <span class="comment"># 在 0 和 1 之间浮动。用作验证集的训练数据的比例</span></span><br><span class="line">            validation_split=<span class="number">0.1</span>  </span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 接下来生成测试集，可以参考训练集的写法</span></span><br><span class="line">    validation_data = ImageDataGenerator(</span><br><span class="line">            rescale=<span class="number">1.</span> / <span class="number">255</span>,</span><br><span class="line">            validation_split=<span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line">    train_generator = train_data.flow_from_directory(</span><br><span class="line">            <span class="comment"># 提供的路径下面需要有子目录</span></span><br><span class="line">            data_path, </span><br><span class="line">            <span class="comment"># 整数元组 (height, width)，默认：(256, 256)。 所有的图像将被调整到的尺寸。</span></span><br><span class="line">            target_size=(<span class="number">150</span>, <span class="number">150</span>),</span><br><span class="line">            <span class="comment"># 一批数据的大小</span></span><br><span class="line">            batch_size=<span class="number">16</span>,</span><br><span class="line">            <span class="comment"># "categorical", "binary", "sparse", "input" 或 None 之一。</span></span><br><span class="line">            <span class="comment"># 默认："categorical",返回one-hot 编码标签。</span></span><br><span class="line">            class_mode=<span class="string">'categorical'</span>,</span><br><span class="line">            <span class="comment"># 数据子集 ("training" 或 "validation")</span></span><br><span class="line">            subset=<span class="string">'training'</span>, </span><br><span class="line">            seed=<span class="number">0</span>)</span><br><span class="line">    validation_generator = validation_data.flow_from_directory(</span><br><span class="line">            data_path,</span><br><span class="line">            target_size=(<span class="number">150</span>, <span class="number">150</span>),</span><br><span class="line">            batch_size=<span class="number">16</span>,</span><br><span class="line">            class_mode=<span class="string">'categorical'</span>,</span><br><span class="line">            subset=<span class="string">'validation'</span>,</span><br><span class="line">            seed=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> train_generator, validation_generator</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">model</span><span class="params">(train_generator, validation_generator, save_model_path)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    模型的建立</span></span><br><span class="line"><span class="string">    本次实验采用Vgg16模型</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    vgg16_model = VGG16(weights=<span class="string">'imagenet'</span>,include_top=<span class="keyword">False</span>, input_shape=(<span class="number">150</span>,<span class="number">150</span>,<span class="number">3</span>))</span><br><span class="line">    top_model = Sequential()</span><br><span class="line">    top_model.add(Flatten(input_shape=vgg16_model.output_shape[<span class="number">1</span>:]))</span><br><span class="line">    top_model.add(Dense(<span class="number">256</span>,activation=<span class="string">'relu'</span>))</span><br><span class="line">    top_model.add(Dropout(<span class="number">0.5</span>))</span><br><span class="line">    top_model.add(Dense(<span class="number">6</span>,activation=<span class="string">'softmax'</span>))</span><br><span class="line"></span><br><span class="line">    model = Sequential()</span><br><span class="line">    model.add(vgg16_model)</span><br><span class="line">    model.add(top_model)</span><br><span class="line">    <span class="comment"># 编译模型, 采用 compile 函数: https://keras.io/models/model/#compile</span></span><br><span class="line">    model.compile(</span><br><span class="line">             <span class="comment"># 是优化器, 主要有Adam、sgd、rmsprop等方式。</span></span><br><span class="line">            optimizer=SGD(lr=<span class="number">1e-3</span>,momentum=<span class="number">0.9</span>),</span><br><span class="line">            <span class="comment"># 损失函数,多分类采用 categorical_crossentropy</span></span><br><span class="line">            loss=<span class="string">'categorical_crossentropy'</span>,</span><br><span class="line">            <span class="comment"># 是除了损失函数值之外的特定指标, 分类问题一般都是准确率</span></span><br><span class="line">            metrics=[<span class="string">'accuracy'</span>])</span><br><span class="line"></span><br><span class="line">    model.fit_generator(</span><br><span class="line">            <span class="comment"># 一个生成器或 Sequence 对象的实例</span></span><br><span class="line">            generator=train_generator,</span><br><span class="line">            <span class="comment"># epochs: 整数，数据的迭代总轮数。</span></span><br><span class="line">            epochs=<span class="number">200</span>,</span><br><span class="line">            <span class="comment"># 一个epoch包含的步数,通常应该等于你的数据集的样本数量除以批量大小。</span></span><br><span class="line">            steps_per_epoch=<span class="number">2259</span> // <span class="number">16</span>,</span><br><span class="line">            <span class="comment"># 验证集</span></span><br><span class="line">            validation_data=validation_generator,</span><br><span class="line">             <span class="comment"># 在验证集上,一个epoch包含的步数,通常应该等于你的数据集的样本数量除以批量大小。</span></span><br><span class="line">            validation_steps=<span class="number">248</span> // <span class="number">16</span>,</span><br><span class="line">            )</span><br><span class="line">    model.save(save_model_path)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> model</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">evaluate_mode</span><span class="params">(validation_generator, save_model_path)</span>:</span></span><br><span class="line">     <span class="comment"># 加载模型</span></span><br><span class="line">    model = load_model(<span class="string">'results/Ynnex1.h5'</span>)</span><br><span class="line">    <span class="comment"># 获取验证集的 loss 和 accuracy</span></span><br><span class="line">    loss, accuracy = model.evaluate_generator(validation_generator)</span><br><span class="line">    print(<span class="string">"\nLoss: %.2f, Accuracy: %.2f%%"</span> % (loss, accuracy * <span class="number">100</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(img)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    加载模型和模型预测</span></span><br><span class="line"><span class="string">    主要步骤:</span></span><br><span class="line"><span class="string">        1.加载模型(请加载你认为的最佳模型)</span></span><br><span class="line"><span class="string">        2.图片处理</span></span><br><span class="line"><span class="string">        3.用加载的模型预测图片的类别</span></span><br><span class="line"><span class="string">    :param img: PIL.Image 对象</span></span><br><span class="line"><span class="string">    :return: string, 模型识别图片的类别, </span></span><br><span class="line"><span class="string">            共 'cardboard','glass','metal','paper','plastic','trash' 6 个类别</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 把图片转换成为numpy数组</span></span><br><span class="line">    img = img.resize((<span class="number">150</span>, <span class="number">150</span>))</span><br><span class="line">    img = image.img_to_array(img)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 加载模型,加载请注意 model_path 是相对路径, 与当前文件同级。</span></span><br><span class="line">    <span class="comment"># 如果你的模型是在 results 文件夹下的 dnn.h5 模型，则 model_path = 'results/dnn.h5'</span></span><br><span class="line">    model_path = <span class="string">'results/Ynnex1.h5'</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 作业提交时测试用, 请勿删除此部分</span></span><br><span class="line">        model_path = os.path.realpath(__file__).replace(<span class="string">'main.py'</span>, model_path)</span><br><span class="line">    <span class="keyword">except</span> NameError:</span><br><span class="line">        model_path = <span class="string">'./'</span> + model_path</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># -------------------------- 实现模型预测部分的代码 ---------------------------</span></span><br><span class="line">    <span class="comment"># 加载模型</span></span><br><span class="line">    model = load_model(model_path)</span><br><span class="line">    <span class="comment"># expand_dims的作用是把img.shape转换成(1, img.shape[0], img.shape[1], img.shape[2])</span></span><br><span class="line">    x = np.expand_dims(img, axis=<span class="number">0</span>)</span><br><span class="line">    <span class="comment"># 模型预测</span></span><br><span class="line">    y = model.predict(x)</span><br><span class="line">    <span class="comment"># 获取labels</span></span><br><span class="line">    labels = &#123;<span class="number">0</span>: <span class="string">'cardboard'</span>, <span class="number">1</span>: <span class="string">'glass'</span>, <span class="number">2</span>: <span class="string">'metal'</span>, <span class="number">3</span>: <span class="string">'paper'</span>, <span class="number">4</span>: <span class="string">'plastic'</span>, <span class="number">5</span>: <span class="string">'trash'</span>&#125;</span><br><span class="line">    <span class="comment"># -------------------------------------------------------------------------</span></span><br><span class="line">    predict = labels[np.argmax(y)]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 返回图片的类别</span></span><br><span class="line">    <span class="keyword">return</span> predict</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    深度学习模型训练流程,包含数据处理、创建模型、训练模型、模型保存、评价模型等。</span></span><br><span class="line"><span class="string">    如果对训练出来的模型不满意,你可以通过调整模型的参数等方法重新训练模型,直至训练出你满意的模型。</span></span><br><span class="line"><span class="string">    如果你对自己训练出来的模型非常满意,则可以提交作业!</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    data_path = <span class="string">"./datasets/la1ji1fe1nle4ishu4ju4ji22-momodel/dataset-resized"</span>  <span class="comment"># 数据集路径</span></span><br><span class="line">    save_model_path = <span class="string">'results/Ynnex1.h5'</span>  <span class="comment"># 保存模型路径和名称</span></span><br><span class="line">    <span class="comment"># 获取数据</span></span><br><span class="line">    train_generator, validation_generator = processing_data(data_path)</span><br><span class="line">    <span class="comment"># 创建、训练和保存模型</span></span><br><span class="line">    model(train_generator, validation_generator, save_model_path)</span><br><span class="line">    <span class="comment"># 评估模型</span></span><br><span class="line">    evaluate_mode(validation_generator, save_model_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据测试</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_result</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">import</span> random,cv2</span><br><span class="line">    <span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">    <span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">    <span class="keyword">from</span> PIL <span class="keyword">import</span> Image </span><br><span class="line"></span><br><span class="line">    <span class="comment"># 导入相关包</span></span><br><span class="line">    <span class="keyword">import</span> glob, os</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 数据集路径</span></span><br><span class="line">    data_path = <span class="string">"./datasets/la1ji1fe1nle4ishu4ju4ji22-momodel/dataset-resized"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取数据名称列表</span></span><br><span class="line">    img_list = glob.glob(os.path.join(data_path, <span class="string">'*/*.jpg'</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打印数据集总量</span></span><br><span class="line">    print(<span class="string">"数据集总数量:"</span>, len(img_list))</span><br><span class="line">    print(<span class="string">"数据路径和名称:"</span>,img_list[<span class="number">0</span>])</span><br><span class="line">    <span class="comment"># 从数据名称列表 img_list 中随机选取 6 个。</span></span><br><span class="line">    <span class="keyword">for</span> i, img_path <span class="keyword">in</span> enumerate(random.sample(img_list, <span class="number">6</span>)):</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 读取图片</span></span><br><span class="line">        img = cv2.imread(img_path)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 将图片从 BGR 模式转为 RGB 模式</span></span><br><span class="line">        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)</span><br><span class="line">        img = Image.fromarray(img)</span><br><span class="line">        plt.imshow(img)</span><br><span class="line">        plt.show()</span><br><span class="line">        res = predict(img)</span><br><span class="line">        print(res)</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"><span class="comment">#     main()</span></span><br><span class="line">    test_result()</span><br></pre></td></tr></table></figure><p>VGG16说明：<a href="https://baijiahao.baidu.com/s?id=1667221544796169037&amp;wfr=spider&amp;for=pc" target="_blank" rel="noopener">https://baijiahao.baidu.com/s?id=1667221544796169037&amp;wfr=spider&amp;for=pc</a></p><h1 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h1><h2 id="csdn"><a class="markdownIt-Anchor" href="#csdn"></a> CSDN</h2><ul><li><a href="https://blog.csdn.net/weixin_40651515/article/details/105804557" target="_blank" rel="noopener">基于深度学习的垃圾分类识别系统</a></li><li><a href="https://blog.csdn.net/qq_34218654/article/details/102885223" target="_blank" rel="noopener">基于深度学习的计算机视觉 - 垃圾分类（附源码）</a></li></ul><h2 id="github"><a class="markdownIt-Anchor" href="#github"></a> Github</h2><ul><li><a href="https://github.com/jzx-gooner/DL-wastesort" target="_blank" rel="noopener">基于深度学习的垃圾分类</a></li><li><strong><a href="https://github.com/wusaifei/garbage_classify" target="_blank" rel="noopener">garbage_classify</a></strong></li><li><strong><a href="https://github.com/Jack-Cherish/Deep-Learning" target="_blank" rel="noopener">Deep-Learning</a></strong></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;homework for ZJU: &lt;a href=&quot;https://mo.zju.edu.cn/homework/zju_ai_2020_ss&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://mo.zju.edu.
      
    
    </summary>
    
    
      <category term="ZJU" scheme="https://nymrli.top/tags/ZJU/"/>
    
      <category term="ML" scheme="https://nymrli.top/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>细品单例模式</title>
    <link href="https://nymrli.top/2020/12/11/%E7%BB%86%E5%93%81%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    <id>https://nymrli.top/2020/12/11/细品单例模式/</id>
    <published>2020-12-11T02:25:26.000Z</published>
    <updated>2020-12-11T13:02:05.492Z</updated>
    
    <content type="html"><![CDATA[<p>虽然还没正式踏入开发就业浪潮中，但为了保证自己的代码质量，最近还是在学设计模式相关内容。以下为读《研磨设计模式》和《设计模式就该这样学：基于经典框架源码和真实业务场景》的读书笔记。</p><blockquote><p>GoF的《设计模式》就是设计模式的始祖、经典教科书。其描述严谨，举例恰当，分类组织，是应该反复细读的经典，两本书皆提及了GoF这本书，引用了GoF中的部分例子。</p></blockquote><h1 id="单例模式"><a class="markdownIt-Anchor" href="#单例模式"></a> 单例模式</h1><h2 id="虚拟场景"><a class="markdownIt-Anchor" href="#虚拟场景"></a> 虚拟场景：</h2><p>读取配置文件的内容（假设系统采用的是properties格式的配置文件）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.javass.dp.singleton.example1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppConfig</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用来存放配置文件中参数A的值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> String parameterA;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用来存放配置文件中参数B的值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> String parameterB;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getParameterA</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> parameterA;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getParameterB</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> parameterB;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">AppConfig</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//调用读取配置文件的方法</span></span><br><span class="line">readConfig();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 读取配置文件，把配置文件中的内容读出来设置到属性上</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">readConfig</span><span class="params">()</span></span>&#123;</span><br><span class="line">Properties p = <span class="keyword">new</span> Properties(); </span><br><span class="line">InputStream in = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">in = AppConfig.class.getResourceAsStream(<span class="string">"AppConfig.properties"</span>);</span><br><span class="line">p.load(in);</span><br><span class="line"><span class="comment">//把配置文件中的内容读出来设置到属性上</span></span><br><span class="line"><span class="keyword">this</span>.parameterA = p.getProperty(<span class="string">"paramA"</span>);</span><br><span class="line"><span class="keyword">this</span>.parameterB = p.getProperty(<span class="string">"paramB"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"装载配置文件出错了，具体堆栈信息如下："</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">in.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="存在的问题"><a class="markdownIt-Anchor" href="#存在的问题"></a> 存在的问题：</h2><p>系统运行期间，如果存在很多个AppConfig的实例对象即配置内容，会严重浪费内存资源。实际上，对于AppConfig这种类<strong>在运行期间只要一个实例对象就够了</strong>。===&gt;单例模式</p><blockquote><p>定义：保证一个类仅有一个实例，并提供一个访问它的全局访问点。</p></blockquote><h2 id="单例实现思路"><a class="markdownIt-Anchor" href="#单例实现思路"></a> 单例实现思路：</h2><p>一个类能够被创建多个实例的问题根源在于类的构造方法是公开的，也就是可以让类的外部通过构造方法来创建多个实例。换句话说，只要类的构造方法能让类的外部访问，就没有办法去控制外部来创建这个类的实例个数。要想控制一个类只被创建一个实例，那么首要的问题就是要把<strong>创建实例的权限收回来，让类自身来负责自己类实例的创建工作</strong>，然后由这个类来提供外部可以访问这个类实例的方法，这就是单例模式的实现方式。</p><h2 id="单例模式的结构和说明"><a class="markdownIt-Anchor" href="#单例模式的结构和说明"></a> 单例模式的结构和说明：</h2><p><img src="/2020/12/11/细品单例模式/%E7%BB%93%E6%9E%84%E5%9B%BE.jpg" alt="结构图"></p><p>Singleton：私有化构造函数来隐藏构造，从而自己负责创建Singleton类自己的唯一实例，并提供一个getlnstance的方法，让外部来访问这个类的唯一实例。</p><h2 id="基础级单例"><a class="markdownIt-Anchor" href="#基础级单例"></a> 基础级单例</h2><h3 id="饿汉式"><a class="markdownIt-Anchor" href="#饿汉式"></a> 饿汉式</h3><blockquote><p>所谓饿汉式，既然饿，那么在创建对象实例的时候就比较着急，饿了嘛，于是在<strong>装载类的时候就创建对象实例</strong>，写法如下：</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton instance = <span class="keyword">new</span> Singleton();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="实现方式"><a class="markdownIt-Anchor" href="#实现方式"></a> 实现方式：</h4><ol><li>私有化构造方法</li><li>提供获取实例的方法getInstance</li><li>把获取实例的方法变成静态方法</li><li>定义存储实例的属性(成员变量)instance</li><li>将实例成员变量instance定义为静态的（由于要在静态方法中使用，被迫写成static，没用到static特性）</li><li>从而实现控制实例的创建</li></ol><h3 id="懒汉式"><a class="markdownIt-Anchor" href="#懒汉式"></a> 懒汉式</h3><blockquote><p>所谓懒汉式，既然是<strong>懒</strong>，那么在创建对象实例的时候就不着急，<strong>会一直等到马上要使用对象实例的时候才会创建</strong>，懒人嘛，总是推托不开的时候才去真正执行工作，因此在装载对象的时候不创建对象实例，写法如下：</p><p>懒汉式体现了延迟加载的思想，lazy load，这个lazy并不是懒惰的意思，而是延迟的意思，Lazy load在实际开发中是种很常见的思想，可以尽可能的节约资源。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义一个变量来存储创建好的类实例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Singleton uniqueInstance = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ▲私有化构造方法，将构造方法权限回收，好在内部控制创建实例的数目</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义一个方法来为客户端提供类实例， 提供访问方法</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 一个Singleton的实例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (instance == <span class="keyword">null</span>) instance = <span class="keyword">new</span> Singleton();</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="实现方式-2"><a class="markdownIt-Anchor" href="#实现方式-2"></a> 实现方式：</h4><ol><li>私有化构造方法</li><li>提供获取实例的方法getInstance</li><li>把获取实例的方法变成静态方法</li><li>定义存储实例的属性(成员变量)instance</li><li>将实例成员变量instance定义为静态的（利用static在类装载的时候执行的特性，从而实现初始化）</li><li>从而实现控制实例的创建</li></ol><p>🎯以上两种就是最基础的单例写法，在不考虑复杂的条件下仅是满足了定义所要求的功能：运行期间只会被创建一个实例，切提供了一个全局唯一访问点（即getInstance方法）</p><h3 id="优缺点分析"><a class="markdownIt-Anchor" href="#优缺点分析"></a> 优缺点分析：</h3><ul><li>时间和空间：<ul><li>饿汉：空间换时间，类加载时就创建。因此当系统有大量单例对象存在时，系统初始化就会造成大量的内存浪费</li><li>懒汉：时间换空间，每次获取时都需要判断是否需要创建实例</li></ul></li><li>线程安全：<ul><li>饿汉：线程安全，因为虚拟机保证智慧加载以此类推，并且加载类的时候不会并发发生。</li><li>懒汉：需要加上synchronized关键字才能确认线程安全，但synchronized加在方法上会比较影响性能，导致大批量线程阻塞，从而导致程序性能大幅下降</li></ul></li></ul><h2 id="双重检查锁"><a class="markdownIt-Anchor" href="#双重检查锁"></a> 双重检查锁</h2><blockquote><p>为了保证加载时的性能-&gt;即不能采用饿汉，而是得采用懒汉lazy load的模式</p><p>那么如何较好地保证线程安全呢？===&gt;在懒汉式的基础上，我们得到了双重检查锁</p></blockquote><p>懒汉式的做法好比地铁进站限流，在寒风刺骨的冬天，所有人都在站前广场转圈，用户体验会不好；而双重检查就是设置两重检查，好比在入站门处和入厅后再闸口检票处再检查一次</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对保存实例的变量添加volatile的修饰。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">static</span> Singleton instance = <span class="keyword">null</span>;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  Singleton <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//先检查实例是否存在，如果不存在才进入下面的同步块</span></span><br><span class="line"><span class="keyword">if</span>(instance == <span class="keyword">null</span>)&#123;</span><br><span class="line"><span class="comment">//同步块，线程安全的创建实例</span></span><br><span class="line"><span class="keyword">synchronized</span>(Singleton.class)&#123;</span><br><span class="line"><span class="comment">//再次检查实例是否存在，如果不存在才真的创建实例</span></span><br><span class="line"><span class="keyword">if</span>(instance == <span class="keyword">null</span>)&#123;</span><br><span class="line">instance = <span class="keyword">new</span> Singleton();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> instance;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>双重检查加锁机制和懒汉不同的在于并不是进入getInstace方法需要同步(由方法加锁-&gt;方法内部加对象锁)，而是不存在实例的时候才会进入同步块。此处阻塞的不是基于整个LazyDoubleCheckSingleton类的阻塞，而是在getInstance方法内部的阻塞，只要逻辑不复杂，对于调用者是感觉不到的。</p><p>▲注：被volatile修饰的变量的值不会被本地线程缓存，所有对该变量的读写都是直接操作共享内存的，从而使得多个线程能够正确的处理该变量。（由于Java1.4前对volatile关键字实现有问题，因此双重检查锁适用于Java1.5以后）。此外<u>volatile可能会屏蔽JVM一些必要的代码优化，所以会降低运行效率</u>，因此一般建议没有特别需要，不要使用volatile。因此，<strong>不建议系统中大量使用双重检查锁</strong>。</p><h2 id="静态内部类式类级内部类"><a class="markdownIt-Anchor" href="#静态内部类式类级内部类"></a> 静态内部类式（类级内部类）</h2><blockquote><p>虽然双重检查锁较之懒汉和饿汉有了不少优化，但双重检查锁仍存在1.volatile性能、2.synchronized性能，有没有什么办法不使用synchronized关键字，还能实现延迟加载和线程安全呢？==&gt;静态内部类式</p></blockquote><h3 id="什么是类级内部类"><a class="markdownIt-Anchor" href="#什么是类级内部类"></a> 什么是类级内部类？</h3><p>简单点说，<strong>类级内部类</strong>指的是，有<u>static修饰的成员式内部类</u>。如果没有static修饰的成员式内部类被称为<strong>对象级内部类</strong>。</p><ul><li>类级内部类相当于其外部类的static成分，<u>它的对象(类级内部类对象)与外部类对象间不存在依赖关系</u>，因此可直接创建。而对象级内部类的实例，是绑定在外部对象实例中的。</li><li>类级内部类中，可以定义静态的方法。在<u>内部类的静态方法</u>中只能够引用外部类中的<strong>静态</strong>成员方法或者成员变量。</li><li><strong>类级内部类相当于其外部类的成员，只有在第一次被使用的时候才会被装载。</strong></li></ul><h4 id="jvm隐含执行同步的情况"><a class="markdownIt-Anchor" href="#jvm隐含执行同步的情况"></a> JVM隐含执行同步的情况：</h4><ul><li>由静态初始化器（在静态字段上或static{}块中的初始化器）初始化数据时</li><li>访问final字段时</li><li>在创建线程之前创建对象时</li><li>线程可以看见它将要处理的对象时</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LazyStaticInnerClassSingleton</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 类级的内部类，也就是静态的成员式内部类，该内部类的实例与外部类的实例没有绑定关系，</span></span><br><span class="line"><span class="comment"> * 而且只有被调用到才会装载，从而实现了延迟加载</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SingletonHolder</span></span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 静态初始化器，由JVM来保证线程安全</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> LazyStaticInnerClassSingleton instance = <span class="keyword">new</span> LazyStaticInnerClassSingleton();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 私有化构造方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">LazyStaticInnerClassSingleton</span><span class="params">()</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LazyStaticInnerClassSingleton <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> SingletonHolder.instance;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解决反射破坏单例问题"><a class="markdownIt-Anchor" href="#解决反射破坏单例问题"></a> 解决反射破坏单例问题</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LazyStaticInnerClassSingleton</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 类级的内部类，也就是静态的成员式内部类，该内部类的实例与外部类的实例没有绑定关系，</span></span><br><span class="line"><span class="comment"> * 而且只有被调用到才会装载，从而实现了延迟加载</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SingletonHolder</span></span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 静态初始化器，由JVM来保证线程安全</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> LazyStaticInnerClassSingleton instance = <span class="keyword">new</span> LazyStaticInnerClassSingleton();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 私有化构造方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">LazyStaticInnerClassSingleton</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (LazyStaticInnerClassSingleton.instance != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"不允许创建多个实例"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LazyStaticInnerClassSingleton <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> SingletonHolder.instance;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="枚举式单例"><a class="markdownIt-Anchor" href="#枚举式单例"></a> 枚举式单例</h2><blockquote><p>虽然静态内部类式已经接近完美了，但还不够优雅，还有没有更优雅的写法呢？—&gt;枚举式单例</p></blockquote><p>对枚举的观点：</p><ul><li>Java的枚举类型实质上是功能齐全的类，因此可以有自己的属性和方法。</li><li>Java枚举类型的基本思想是通过公有的静态final域为每个<u>枚举常量</u>导出<u>实例的类</u>。</li><li>从某个角度讲，<u>枚举</u>是单例的泛型化，<u>本质上是<em>单元素</em>的枚举</u>。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Singleton &#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义一个枚举的元素,它就代表了Singleton的一个实例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">uniqueInstance;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 示意方法，单例可以有自己的操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">singletonOperation</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//功能处理</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用枚举来实现单实例控制会更加简洁，而且<strong>无偿地提供了防序列化（需要增加readResove方法）、反射破坏的机制</strong>，并由JVM从根本上提供保障，绝对防止多次实例化，是更简洁、高效、安全的实现单例的方式。至于为什么可以这么玩，可以看《设计模式就该这样学：基于经典框架源码和真实业务场景》中的源码分析</p><h2 id="容器式单例"><a class="markdownIt-Anchor" href="#容器式单例"></a> 容器式单例</h2><blockquote><p>适用于需要大量创建单例对象的场景，便于管理，但它是非线程安全的。Spring中有用到容器式单例的写法。容器一般就是一个Map</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContainerSingleton</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ContainerSingleton</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String, Object&gt; ioc = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getBean</span><span class="params">(String className)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (ioc) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!ioc.containsKey(className)) &#123;</span><br><span class="line">                Object obj = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    obj = Class.forName(className).newInstance();</span><br><span class="line">                    ioc.put(className, obj);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> obj;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> ioc.get(className)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="模式讲解"><a class="markdownIt-Anchor" href="#模式讲解"></a> 模式讲解：</h2><p>单例模式的范围为一个虚拟机的范围，因为加载类的载类的功能是虚拟机的，一个虚拟机在通过自己的ClassLoader 装载饿汉式实现单例类的时候就会创建一个类的实例。</p><p>▲所以需要注意的是，如果一个虚拟机里面有很多个ClassLoader，而且<u>这些ClassLoader都装载某个类的话(针对饿汉式)，就算这个类是单例，它也会产生很多个实例</u>。当然，如果一个机器上有多个虚拟机，那么每个虚拟机里面都应该至少有一个这个类的实例，也就是说整个机器。<strong>所以这边讨论的单例都不适用于集群环境。</strong></p><p>▲单例模式的本质：控制实例数目</p><h2 id="应用场景"><a class="markdownIt-Anchor" href="#应用场景"></a> 应用场景：</h2><blockquote><p>对于Java来说单例模式就是要保证在一个JVM中只存在单一实例</p></blockquote><ul><li>需要频繁创建的一些类，使用单例可以降低系统的内存压力，减少GC</li><li>某些类创建实例时占用资源较多，或实例化耗时较长，且经常使用</li><li>频繁访问数据库或文件的对象</li><li>对于一些控制硬件级别的操作，或者从系统上来讲应当是单一控制逻辑的操作，如果有多个实例，则无法保证逻辑的统一性。</li></ul><p>p.s. 抽象工厂模式中具体的工厂类就是一个单例</p><h2 id="单例模式的优点"><a class="markdownIt-Anchor" href="#单例模式的优点"></a> 单例模式的优点：</h2><ol><li>可以保证内存中只有一个实例，减少了内存的开销</li><li>可以避免对资源的多重占用</li><li>设置全局访问点，可以优化和共享资源的访问</li></ol><h2 id="单例模式的缺点"><a class="markdownIt-Anchor" href="#单例模式的缺点"></a> 单例模式的缺点：</h2><ol><li>没有接口，扩展困难。如果要扩展，则除了修改原来的代码，没有第二种途径， 违背了开闭原则。好在的是，一般修改单例也比较简单</li><li>在并发测试中，单例不利于代码调试。在调试过程总，如果单例代码没有执行完，也不能模拟生成一个恶心的对象</li><li>单例模式的功能代码通常写在一个类中，如果功能设计不合理，很容易违背单一职责原则</li></ol><h1 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h1><h2 id="lazy-load-缓存思想"><a class="markdownIt-Anchor" href="#lazy-load-缓存思想"></a> Lazy load-&gt;缓存思想</h2><p>缓存使用场景：当某些资源或者数据被频繁地使用，而这些资源或数据存储在系统外部，比如数据库、硬盘文件等，那么每次操作这些数据的时候都得从数据库或者硬盘上去获取，速度会很慢，将造成性能问题。<br>一个简单的解决方法就是：把这些数据<strong>缓存到内存</strong>里面，每次操作的时候，先到内存里面找，看有没有这些数据，如果有，就直接使用，如果没有就获取它，并设置到缓存中，<u>下一次访问的时候就可以直接从内存中获取了</u>，从而节省大量的时间。当然，缓存是一种<strong>典型的空间换时间</strong>的方案。</p><h3 id="缓存基本实现"><a class="markdownIt-Anchor" href="#缓存基本实现"></a> 缓存基本实现</h3><p>在Java开发中最常见的一种实现缓存的方式就是使用<em>Map</em>，基本步骤如下。<br>（1）先到缓存里面查找，看看是否存在需要使用的数据。<br>（2）如果没有找到，那么就创建一个满足要求的数据，然后把这个数据设置到缓存中，以备下次使用。如果找到了相应的数据，或者是创建了相应的数据，那就直接使用这个数据。</p><h2 id="多例控制模式"><a class="markdownIt-Anchor" href="#多例控制模式"></a> 多例控制模式</h2><p>▲单例模式的本质：控制实例数目，只要按照这种思想，我们除了控制单例以外，还可以限制实例具体数目为2、3、4…</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.javass.dp.singleton.example9;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 简单演示如何扩展单例模式，控制实例数目为3个 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OneExtend</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义一个缺省的key值的前缀</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String DEFAULT_PREKEY = <span class="string">"Cache"</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 缓存实例的容器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String,OneExtend&gt; map = <span class="keyword">new</span> HashMap&lt;String,OneExtend&gt;();</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用来记录当前正在使用第几个实例，到了控制的最大数目，就返回从1开始</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> num = <span class="number">1</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义控制实例的最大数目</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> NUM_MAX = <span class="number">3</span>; </span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">OneExtend</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> OneExtend <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">String key = DEFAULT_PREKEY+num;</span><br><span class="line">OneExtend oneExtend = map.get(key);</span><br><span class="line"><span class="keyword">if</span>(oneExtend==<span class="keyword">null</span>)&#123;</span><br><span class="line">oneExtend = <span class="keyword">new</span> OneExtend();</span><br><span class="line">map.put(key, oneExtend);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//把当前实例的序号加1</span></span><br><span class="line">num++;</span><br><span class="line"><span class="keyword">if</span>(num &gt; NUM_MAX)&#123;</span><br><span class="line"><span class="comment">//如果实例的序号已经达到最大数目了，那就重复从1开始获取</span></span><br><span class="line">num = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> oneExtend;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">OneExtend t1 = getInstance();</span><br><span class="line">OneExtend t2 = getInstance();</span><br><span class="line">OneExtend t3 = getInstance();</span><br><span class="line">OneExtend t4 = getInstance();</span><br><span class="line">OneExtend t5 = getInstance();</span><br><span class="line">OneExtend t6 = getInstance();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"t1=="</span>+t1);</span><br><span class="line">System.out.println(<span class="string">"t2=="</span>+t2);</span><br><span class="line">System.out.println(<span class="string">"t3=="</span>+t3);</span><br><span class="line">System.out.println(<span class="string">"t4=="</span>+t4);</span><br><span class="line">System.out.println(<span class="string">"t5=="</span>+t5);</span><br><span class="line">System.out.println(<span class="string">"t6=="</span>+t6);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;虽然还没正式踏入开发就业浪潮中，但为了保证自己的代码质量，最近还是在学设计模式相关内容。以下为读《研磨设计模式》和《设计模式就该这样学：基于经典框架源码和真实业务场景》的读书笔记。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GoF的《设计模式》就是设计模式的始祖、经典教科书。
      
    
    </summary>
    
    
      <category term="计算机基础知识" scheme="https://nymrli.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>浙大2020春夏-人工智能习题3——图像恢复</title>
    <link href="https://nymrli.top/2020/12/09/%E6%B5%99%E5%A4%A72020%E6%98%A5%E5%A4%8F-%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B9%A0%E9%A2%983%E2%80%94%E2%80%94%E5%9B%BE%E5%83%8F%E6%81%A2%E5%A4%8D/"/>
    <id>https://nymrli.top/2020/12/09/浙大2020春夏-人工智能习题3——图像恢复/</id>
    <published>2020-12-09T05:20:46.000Z</published>
    <updated>2020-12-17T07:27:31.056Z</updated>
    
    <content type="html"><![CDATA[<h1 id="习题3-图像恢复"><a class="markdownIt-Anchor" href="#习题3-图像恢复"></a> <strong>习题3</strong> - 图像恢复</h1><h2 id="31-实验内容"><a class="markdownIt-Anchor" href="#31-实验内容"></a> 3.1 <strong>实验内容</strong></h2><p>图像是一种非常常见的信息载体，但是在图像的获取、传输、存储的过程中可能由于各种原因使得图像受到噪声的影响——称为图像退化。图像复原就是重建退化的图像，使其最大限度恢复景物原貌的处理。如何去除噪声的影响，恢复图像原本的信息是计算机视觉中的重要研究问题。</p><p>常见的图像恢复算法有基于空间域的中值滤波、基于小波域的小波去噪、基于偏微分方程的非线性扩散滤波等，在本次实验中，📌<strong>我们要对图像添加噪声，并对添加噪声的图像进行基于模型的去噪</strong>。</p><h2 id="32-实验要求"><a class="markdownIt-Anchor" href="#32-实验要求"></a> 3.2 <strong>实验要求</strong></h2><p>A. 生成受损图像。</p><ul><li>a) 受损图像是由原始图像添加了不同噪声遮罩（noise masks）得到的。</li><li>b) 噪声遮罩仅包含 {0,1} 值。对原图的噪声遮罩的可以每行分别用 0.8/0.4/0.6 的噪声比率产生的，即噪声遮罩每个通道每行 80%/40%/60% 的像素值为 0，其他为 1。</li></ul><p>B. 使用模型，进行图像恢复。</p><p>C. 评估误差为所有恢复图像与原始图像的 2-范数之和，此误差越小越好，其他评估方式包括 Cosine 相似度以及 SSIM 相似度。</p><p>D. 提交程序报告,请在本地编辑并命名为『程序报告.docx』或者 『程序报告.pdf』后， 上传到左侧文件列表中。</p><h2 id="33-实验环境"><a class="markdownIt-Anchor" href="#33-实验环境"></a> 3.3 <strong>实验环境</strong></h2><p>可以使用基于Python的 <a href="https://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_tutorials.html" target="_blank" rel="noopener">OpenCV</a> 库进行图像相关处理，使用 <a href="https://www.numpy.org/" target="_blank" rel="noopener">Numpy</a> 库进行相关数值运算。</p><h2 id="34-参考资料"><a class="markdownIt-Anchor" href="#34-参考资料"></a> 3.4 <strong>参考资料</strong></h2><p>OpenCV：<a href="https://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_tutorials.html" target="_blank" rel="noopener">https://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_tutorials.html</a></p><p>Numpy：<a href="https://www.numpy.org/" target="_blank" rel="noopener">https://www.numpy.org/</a></p><h1 id="notes"><a class="markdownIt-Anchor" href="#notes"></a> notes</h1><h2 id="图像退化复原过程模型"><a class="markdownIt-Anchor" href="#图像退化复原过程模型"></a> 图像退化/复原过程模型</h2><p><img src="https://img-blog.csdn.net/20150715093119065" alt=""></p><h2 id="图像复原处理的过程"><a class="markdownIt-Anchor" href="#图像复原处理的过程"></a> 图像复原处理的过程</h2><p>设原始图像 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">f(x, y),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> 则退化后的图像可以表示为</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>H</mi><mo stretchy="false">[</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>+</mo><mi>η</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x, y)=H[f(x, y)]+\eta(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span> 为退化函数, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>η</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\eta(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 为加性柬声, 复原的日标是得到基于退化图像的一个估计 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\hat{f}(x, y),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> 使得图像能够尽可能地贴近原始图像。 *若H是线性的、空间不变的过程, 则退化图像在空间频域中可以表示为</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><mi>η</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x, y)=h(x, y) * f(x, y)+\eta(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p><p>进行傅立叶变换, 有</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mi>F</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>+</mo><mi>N</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G(u, v)=H(u, v) F(u, v)+N(u, v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span></span></p><h2 id="1-图像增强与图像复原的区别"><a class="markdownIt-Anchor" href="#1-图像增强与图像复原的区别"></a> <strong>1. 图像增强与图像复原的区别</strong></h2><p>图像增强的目的是消除噪声，显现那些被模糊了的细节或简单地突出一幅图像中读者感兴趣的特征，不考虑图像质量下降的原因。图像复原是<strong>利用退化现象的某种先验知识</strong>，建立退化现象的数学模型，再根据模型进行反向的推演运算，以恢复原来的景物图像。因而，图像复原可以理解为图像降质过程的反向过程。建立图像复原的反向过程的数学模型，就是图像复原的主要任务。经过反向过程的数学模型的运算，要想恢复全真的景物图像比较困难。所以， 图像复原本身往往需要有一个质量标准， 即衡量接近全真景物图像的程度，或者说，对原图像的估计是否到达最佳的程度。</p><h2 id="2-噪声模型"><a class="markdownIt-Anchor" href="#2-噪声模型"></a> <strong>2. 噪声模型：</strong></h2><p>噪声主要来源于图像的获取和传输过程。</p><p>（1）图像传感器的工作情况受各种因素的影响，如图像获取中的环境条件和传感器元器件自身的质量。</p><p>（2）图像在传输过程中主要由于所用传输信道被干扰而受到噪声污染。</p><p>**噪声种类：**高斯噪声、瑞利噪声、伽马噪声、指数噪声、均匀分布噪声、脉冲噪声（椒盐噪声）</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="number">-4</span>:<span class="number">.1</span>:<span class="number">4</span>;</span><br><span class="line">subplot(<span class="number">321</span>)</span><br><span class="line">Y1=show_noise_pdf(<span class="string">'gaussian'</span>,x,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">plot(x,Y1);</span><br><span class="line">title(<span class="string">'高斯'</span>);</span><br><span class="line">subplot(<span class="number">322</span>)</span><br><span class="line">Y2=show_noise_pdf(<span class="string">'uniform'</span>,x,<span class="number">-3</span>,<span class="number">3</span>);</span><br><span class="line">plot(x,Y2);</span><br><span class="line">title(<span class="string">'均匀'</span>);</span><br><span class="line">subplot(<span class="number">323</span>)</span><br><span class="line">Y3=show_noise_pdf(<span class="string">'salt &amp; pepper'</span>,x);</span><br><span class="line">plot(x,Y3);</span><br><span class="line">title(<span class="string">'椒盐'</span>);</span><br><span class="line">subplot(<span class="number">324</span>)</span><br><span class="line">Y4=show_noise_pdf(<span class="string">'rayleigh'</span>,x,<span class="number">1</span>);</span><br><span class="line">plot(x,Y4);</span><br><span class="line">title(<span class="string">'瑞利'</span>);</span><br><span class="line">subplot(<span class="number">325</span>)</span><br><span class="line">Y5=show_noise_pdf(<span class="string">'exp'</span>,x,<span class="number">1</span>);</span><br><span class="line">plot(x,Y5);</span><br><span class="line">title(<span class="string">'指数'</span>);</span><br><span class="line">subplot(<span class="number">326</span>)</span><br><span class="line">Y6=show_noise_pdf(<span class="string">'gamma'</span>,x,<span class="number">2</span>,<span class="number">5</span>);</span><br><span class="line">plot(x,Y6);</span><br><span class="line">title(<span class="string">'伽马'</span>);</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdn.net/20180809103221221?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JhaWR1XzM5MDQ0MTc4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><h3 id="噪声概率密度函数probability-density-function"><a class="markdownIt-Anchor" href="#噪声概率密度函数probability-density-function"></a> 噪声概率密度函数probability density function：</h3><h4 id="高斯噪声"><a class="markdownIt-Anchor" href="#高斯噪声"></a> 高斯噪声</h4><p>概率密度函数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><msqrt><mrow><mn>2</mn><mi>π</mi><mi>σ</mi></mrow></msqrt></mfrac><msup><mi>e</mi><mrow><mi mathvariant="normal">−</mi><mfrac><mrow><mo stretchy="false">(</mo><mi>z</mi><mi mathvariant="normal">−</mi><mi>μ</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac></mrow></msup></mrow><annotation encoding="application/x-tex">p(z)=\frac{1}{\sqrt{2πσ}}e^{−\frac{(z−μ)^2}{2σ^2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.8670900000000001em;vertical-align:-0.5379999999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.5510085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5379999999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.32909em;"><span style="top:-3.4534200000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.250957142857143em;"><span style="top:-2.5061857142857145em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9384399999999999em;"><span style="top:-2.93844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.5020714285714285em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mord mtight">−</span><span class="mord mathdefault mtight">μ</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49381428571428565em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span><br>均值：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex">μ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">μ</span></span></span></span><br>方差：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">σ^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p>高斯噪声是一个均值为 0 方差为 $σ_n^2  $的正态分布，是一个加性噪声（在原图的基础上加上噪声即为加噪后的图象）。但要正确地给图片添加高斯噪声，还要取决于程序中读入图片的数据格式。</p><h4 id="瑞利噪声"><a class="markdownIt-Anchor" href="#瑞利噪声"></a> 瑞利噪声</h4><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext> 概率密度函数： </mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>2</mn><mi>b</mi></mfrac><mo stretchy="false">(</mo><mi>z</mi><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mo stretchy="false">(</mo><mi>z</mi><mo>−</mo><mi>a</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mi mathvariant="normal">/</mi><mi>b</mi></mrow></msup><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>z</mi><mo>≥</mo><mi>a</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>z</mi><mo>&lt;</mo><mi>a</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext> 均值： </mtext><mi>μ</mi><mo>=</mo><mi>a</mi><mo>+</mo><msqrt><mrow><mi>π</mi><mi>b</mi></mrow></msqrt><mi mathvariant="normal">/</mi><mn>4</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext> 方差: </mtext><msup><mi>σ</mi><mn>2</mn></msup><mo>=</mo><mfrac><mrow><mi>b</mi><mo stretchy="false">(</mo><mn>4</mn><mo>−</mo><mi>π</mi><mo stretchy="false">)</mo></mrow><mn>4</mn></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}&amp;\text { 概率密度函数： }\\&amp;p(z)=\left\{\begin{array}{ll}\frac{2}{b}(z-a) e^{-(z-a)^{2} / b}, &amp; z \geq a \\0, &amp; z&lt;a\end{array}\right.\\&amp;\text { 均值： } \mu=a+\sqrt{\pi b} / 4\\&amp;\text { 方差: } \sigma^{2}=\frac{b(4-\pi)}{4}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:8.401015000000001em;vertical-align:-3.9505075000000014em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.4505075000000005em;"><span style="top:-7.133967500000001em;"><span class="pstrut" style="height:3.52346em;"></span><span class="mord"></span></span><span style="top:-4.9505075000000005em;"><span class="pstrut" style="height:3.52346em;"></span><span class="mord"></span></span><span style="top:-2.645952499999999em;"><span class="pstrut" style="height:3.52346em;"></span><span class="mord"></span></span><span style="top:-0.5589524999999987em;"><span class="pstrut" style="height:3.52346em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.9505075000000014em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.4505075000000005em;"><span style="top:-7.133967500000001em;"><span class="pstrut" style="height:3.52346em;"></span><span class="mord"><span class="mord"></span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">概率密度函数：</span><span class="mord"> </span></span></span></span><span style="top:-4.9505075000000005em;"><span class="pstrut" style="height:3.52346em;"></span><span class="mord"><span class="mord"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5234599999999998em;"><span style="top:-3.53654em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999998em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">a</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mtight">/</span><span class="mord mathdefault mtight">b</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-2.33654em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0234600000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5234599999999998em;"><span style="top:-3.53654em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">a</span></span></span><span style="top:-2.33654em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0234600000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.645952499999999em;"><span class="pstrut" style="height:3.52346em;"></span><span class="mord"><span class="mord"></span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">均值：</span><span class="mord"> </span></span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981095em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord mathdefault">b</span></span></span><span style="top:-2.941095em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.058904999999999985em;"><span></span></span></span></span></span><span class="mord">/</span><span class="mord">4</span></span></span><span style="top:-0.5589524999999987em;"><span class="pstrut" style="height:3.52346em;"></span><span class="mord"><span class="mord"></span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">方差</span><span class="mord">: </span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="mopen">(</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.9505075000000014em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>曲线：<img src="https://img-blog.csdn.net/20150715100251107" alt="这里写图片描述"></p><h4 id="伽马爱尔兰噪声"><a class="markdownIt-Anchor" href="#伽马爱尔兰噪声"></a> 伽马（爱尔兰）噪声</h4><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext> 概率密度函数： </mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mrow><msup><mi>a</mi><mi>b</mi></msup><msup><mi>z</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><mrow><mo stretchy="false">(</mo><mi>b</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">!</mo></mrow></mfrac><msup><mi>e</mi><mrow><mo>−</mo><mi>a</mi><mi>z</mi></mrow></msup><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>z</mi><mo>≥</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>z</mi><mo>&lt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext> 均值： </mtext><mi>μ</mi><mo>=</mo><mfrac><mi>b</mi><mi>a</mi></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext> 方差： </mtext><msup><mi>σ</mi><mn>2</mn></msup><mo>=</mo><mfrac><mi>b</mi><msup><mi>a</mi><mn>2</mn></msup></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}&amp;\text { 概率密度函数： }\\&amp;p(z)=\left\{\begin{array}{ll}\frac{a^{b} z^{(b-1)}}{(b-1) !} e^{-a z}, &amp; z \geq 0 \\0, &amp; z&lt;0\end{array}\right.\\&amp;\text { 均值： } \mu=\frac{b}{a}\\&amp;\text { 方差： } \sigma^{2}=\frac{b}{a^{2}}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:9.51491em;vertical-align:-4.507455000000001em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.007455em;"><span style="top:-7.917455em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"></span></span><span style="top:-5.507455em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"></span></span><span style="top:-2.585985em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"></span></span><span style="top:-0.228544999999999em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.507455000000001em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.007455em;"><span style="top:-7.917455em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">概率密度函数：</span><span class="mord"> </span></span></span></span><span style="top:-5.507455em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6453499999999999em;"><span style="top:-3.64535em;"><span class="pstrut" style="height:3.0707em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0707em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">b</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mclose mtight">!</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9270285714285713em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9667142857142857em;"><span style="top:-2.966714285714285em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">b</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-2.2853499999999998em;"><span class="pstrut" style="height:3.0707em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1453500000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6453499999999999em;"><span style="top:-3.64535em;"><span class="pstrut" style="height:3.0707em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-2.2853499999999998em;"><span class="pstrut" style="height:3.0707em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1453500000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.585985em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">均值：</span><span class="mord"> </span></span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-0.228544999999999em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">方差：</span><span class="mord"> </span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.507455000000001em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>曲线：<img src="https://img-blog.csdn.net/20150715101947373" alt="这里写图片描述"><br>注意：只有当分母是Γ(b)Γ(b)时，才是伽马噪声，如表达式中的，该密度近似称为爱尔兰密度</p><h4 id="指数分布噪声"><a class="markdownIt-Anchor" href="#指数分布噪声"></a> 指数分布噪声</h4><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext> 概率密度函数： </mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><msup><mi>e</mi><mrow><mo>−</mo><mi>a</mi><mi>z</mi></mrow></msup><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>z</mi><mo>≥</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>z</mi><mo>&lt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext> 均值: </mtext><mi>μ</mi><mo>=</mo><mfrac><mn>1</mn><mi>a</mi></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext> 方差： </mtext><msup><mi>σ</mi><mn>2</mn></msup><mo>=</mo><mfrac><mn>1</mn><msup><mi>a</mi><mn>2</mn></msup></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}&amp;\text { 概率密度函数： }\\&amp;p(z)=\left\{\begin{array}{ll}a e^{-a z}, &amp; z \geq 0 \\0, &amp; z&lt;0\end{array}\right.\\&amp;\text { 均值: } \mu=\frac{1}{a}\\&amp;\text { 方差： } \sigma^{2}=\frac{1}{a^{2}}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:8.814910000000001em;vertical-align:-4.157455000000001em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.657455em;"><span style="top:-7.267455em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"></span></span><span style="top:-5.157454999999999em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"></span></span><span style="top:-2.5859849999999995em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"></span></span><span style="top:-0.2785449999999997em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.157455000000001em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.657455em;"><span style="top:-7.267455em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord"></span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">概率密度函数：</span><span class="mord"> </span></span></span></span><span style="top:-5.157454999999999em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.5859849999999995em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord"></span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">均值</span><span class="mord">: </span></span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-0.2785449999999997em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord"></span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">方差：</span><span class="mord"> </span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.157455000000001em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h4 id="脉冲椒盐噪声"><a class="markdownIt-Anchor" href="#脉冲椒盐噪声"></a> 脉冲（椒盐）噪声</h4><p>概率密度函数： 双极脉冲口声 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>P</mi><mi>a</mi></msub><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>z</mi><mo>=</mo><mi>a</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>P</mi><mi>b</mi></msub><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>z</mi><mo>=</mo><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> 其他 </mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">p(z)=\left\{\begin{array}{ll}P_{a}, &amp; z=a \\ P_{b}, &amp; z=b \\ 0, &amp; \text { 其他 }\end{array}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.49999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">a</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">b</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">其他</span><span class="mord"> </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br>如果b&gt;a，灰度值b在图像中将显示为一个亮点，相反，a的值将显示为一个暗点。若Pa或Pb为零，则脉冲噪声为单极脉冲。如果两者都不为零，尤其在它们近似相等时，脉冲噪声将类似于随机分布在图像上的胡椒和盐粉微粒，因此双极脉冲噪声也称为椒盐噪声。</p><p><img src="https://img-blog.csdn.net/20150715103542532" alt=""></p><h2 id="3-空间滤波"><a class="markdownIt-Anchor" href="#3-空间滤波"></a> <strong>3. 空间滤波</strong></h2><blockquote><p>图像滤波器又叫做<strong>掩模</strong>、<strong>核</strong>、<strong>模板</strong>或<strong>窗口</strong>，是与原图像的子图像有相同维数的子图像，滤波器子图像中的值是<strong>系数值</strong>，不是像素值，滤波器的处理结果是子图像中心位置像素值等于被掩住位置的像素值与滤波器中系数的<strong>点积和</strong>。</p></blockquote><p><u>无论是平均平滑还是高斯平滑，在处理图像噪声时，都或多或少会对图片产生一定的模糊</u>，损失部分信息。较为理想的情况，是可以选择性地进行滤波，只在噪声区域进行平滑，而在无噪声区域不进行平滑，将模糊的影响降到最低，这就是自适应性滤波的思想。通常噪声的存在，可能会使得附近邻域内，极值的上下差距较大，或者是方差较大，我们可以设置一定的阈值来判断该点是否需要进行平滑。不过这个不是该章节的内容。</p><p>​    不同的滤波器在处理不同类型的噪声是效果不同，对于线性平滑滤波，在处理像素邻域内的噪声点时，噪声或多或少都会影响该点的像素值计算(以高斯平滑为例，距离近则影响大，距离远则影响小，与距离的平方呈反比)；但是中值滤波通常可以将噪声点直接忽略掉。同时，中值滤波在降噪的同时引起的模糊效应较低。中值滤波的一种典型应用，就是用来消除椒盐(salt &amp; pepper)噪声。</p><hr><p>**空间滤波器种类：**均值滤波器（适于高斯噪声）、统计排序滤波器（适于椒盐噪声）、自适应局部噪声消除滤波器（适于所有噪声）、自适应中值滤波器（适于椒盐噪声）。</p><p>空域滤波器分为<strong>平滑滤波器</strong>和<strong>锐化滤波器</strong>，平滑滤波用<strong>积分</strong>实现，锐化滤波用<strong>微分</strong>实现</p><ul><li><p>平滑滤波器（低通滤波器）：------体现一种平均，所以模板均下来一般为1</p><ul><li><p>作用：****模糊处理****:去除图像中一些不重要的细节、减小噪声</p></li><li><p>分类：</p><p>1.<strong>线性滤波器</strong>：均值滤波器</p><p>2.<strong>非线性滤波器</strong>（一般指统计排序滤波器）： 中值滤波器</p></li></ul></li><li><p>**锐化滤波（高通滤波器）****-----**体现一种插值，所以模板均下来是0</p><ul><li>作用：1.提取图像的边缘信息、2.突出图像边缘及细节、3.拟补平滑滤波造成的边缘模糊</li></ul></li></ul><h3 id="31-均值滤波器均值滤波器"><a class="markdownIt-Anchor" href="#31-均值滤波器均值滤波器"></a> 3.1 均值滤波器——均值滤波器</h3><ul><li><p>算术均值滤波器 描述: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow></msub><mi>g</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{f}(x, y)=\sum_{(s, t) \in S_{x y}} g(s, t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.24703em;vertical-align:-0.49703em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22528999999999982em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span><br>结果：模糊了结果, 降低了口声<br>适用：适用于高斯口声或均匀随机噪声</p></li><li><p>几何均值滤波器 描述: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><msub><mo>∏</mo><mrow><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow></msub><mi>g</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\hat{f}(x, y)=\left[\prod_{(s, t) \in S_{x y}} g(s, t)\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22528999999999982em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">]</span></span></span></span></span></span><br>结果：和算术均值滤波器相比, 丟失更少的细节<br>适用：同算术均值滤波器</p></li><li><p>谐波均值滤波器 描述: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>m</mi><mi>n</mi></mrow><mrow><msub><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>z</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>z</mi><mi>y</mi></mrow></msub></mrow></msub><mfrac><mn>1</mn><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow></mfrac></mrow><annotation encoding="application/x-tex">\hat{f}(x, y)=\frac{m n}{\sum_{(z, y) \in S_{z y}} \frac{1}{g(s, t)}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.518639em;vertical-align:-0.8232470000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.5989799999999996em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.21427571428571424em;"><span style="top:-2.214275714285714em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.23056em;"><span style="top:-2.3000000000000003em;margin-left:-0.05764em;margin-right:0.1em;"><span class="pstrut" style="height:2.5em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39444em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6031814285714286em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.640785714285714em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5377857142857143em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8232470000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>结果：谐波均值滤波器对于“盐”噪声效果更好，但是不适用于“胡椒”噪声。<br>适用：像高斯那样的噪声</p></li><li><p>逆谐波均值滤波器<br>其实Q称为滤波器的阶数，当Q值为正时，滤波器用于消除“胡椒”噪声；当Q值为负时，滤波器用于消除“盐”噪声。但它不能同时消除两种噪声，当Q值为0时，逆谐波滤波器变为算术均值滤波器；当Q为-1时，逆谐波均值滤波器退变为谐波均值滤波器。<br>适用：脉冲噪声<br>缺点：必须知道是明噪声还是暗噪声</p></li><li><p>高斯滤波</p><p>GaussianBlur， k窗口值都是奇数，如3、5、7，越靠近中心的权重越大。整个高斯核跟图像窗口做卷积后取其值</p></li></ul><h3 id="32-顺序统计滤波器非线性滤波器"><a class="markdownIt-Anchor" href="#32-顺序统计滤波器非线性滤波器"></a> 3.2 顺序统计滤波器——非线性滤波器</h3><ul><li><p>中值滤波器<br>描述: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi mathvariant="normal">median</mi><mo>⁡</mo><mrow><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub><mo stretchy="false">{</mo><mi>g</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow></msub></mrow><annotation encoding="application/x-tex">\hat{f}(x, y)=\operatorname{median}_{(s, t) \in S_{x y}\{g(s, t)\}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0719599999999998em;vertical-align:-0.3775199999999999em;"></span><span class="mop"><span class="mop"><span class="mord mathrm">m</span><span class="mord mathrm">e</span><span class="mord mathrm">d</span><span class="mord mathrm">i</span><span class="mord mathrm">a</span><span class="mord mathrm">n</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34479999999999994em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mopen mtight">{</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mclose mtight">}</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3775199999999999em;"><span></span></span></span></span></span></span></span></span></span>，中值滤波本质上是一个<strong>统计排序滤波器</strong>，是以该点为中心的的邻域内的所有像素的统计排序中值作为该点的响应；而平滑就是加权平均数作为响应，概念上有一定差别。<br>适用：对单极或双极脉冲噪声非常有效</p><p>视频讲解：<a href="https://www.bilibili.com/video/BV1fQ4y1N7EP?from=search&amp;seid=11848827709822211739" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1fQ4y1N7EP?from=search&amp;seid=11848827709822211739</a></p></li><li><p>最大值滤波器 描述: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>z</mi><mi>y</mi></mrow></msub></mrow></msub><mo stretchy="false">{</mo><mi>g</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\hat{f}(x, y)=\max _{(s, t) \in S_{z y}}\{g(s, t)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1275199999999999em;vertical-align:-0.3775199999999999em;"></span><span class="mop"><span class="mop">max</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34479999999999994em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3775199999999999em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span><br>结果:<br>适用：发现图像中的最亮点，故适用于去除“胡椒”噪声（黑色）</p></li><li><p>最小值滤波器 描述: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow></msub><mo stretchy="false">{</mo><mi>g</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\hat{f}(x, y)=\min _{(s, t) \in S_{x y}}\{g(s, t)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1275199999999999em;vertical-align:-0.3775199999999999em;"></span><span class="mop"><span class="mop">min</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34479999999999994em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3775199999999999em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span><br>适用: 发现图像中的最暗点，适用于去除“盐”噪声（白色）</p></li><li><p>中点滤波器 描述: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><msub><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow></msub><mo stretchy="false">{</mo><mi>g</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mo>+</mo><msub><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow></msub><mo stretchy="false">{</mo><mi>g</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\hat{f}(x, y)=\left[\max _{(s, t) \in S_{x y}}\{g(s, t)\}+\min _{(s, t) \in S_{x y}}\{g(s, t)\}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.22752em;vertical-align:-0.3775199999999999em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mop"><span class="mop">max</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34479999999999994em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3775199999999999em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop"><span class="mop">min</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34479999999999994em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3775199999999999em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose">}</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span></span><br>适用: 结合了顺序统计和求平均，对高斯和均匀随机分布的噪声有很好的效果</p></li><li><p>修正后的阿尔法均值滤波體 描述: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mi>m</mi><mi>n</mi></mrow></mfrac><msub><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow></msub><mrow><mo fence="true">{</mo><msub><mi>g</mi><mi>r</mi></msub><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">\hat{f}(x, y)=\frac{1}{m n} \sum_{(s, t) \in S_{x y}}\left\{g_{r}(s, t)\right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.342138em;vertical-align:-0.49703em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22528999999999982em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span></span><br>在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>邻域内取点g（s，t）最高灰度值的d/2和最低灰度值的d/2，用gr(s,t)来代表剩余的mn-d个像素，由这些剩余像素点的平均值形成的滤波器称为修正后的阿尔法均值滤波器<br>当d=0时，退变为算术均值滤波器；当d=（mn-d）/2时，退变为中值滤波器。<br>适用：对多重混合的噪声有很好的效果</p></li></ul><h3 id="33-自适应滤波器"><a class="markdownIt-Anchor" href="#33-自适应滤波器"></a> 3.3 自适应滤波器</h3><p>自适应滤波器的行为变化基于由m*n矩形窗口Sxy定义的区域内图像的统计特性，它的性能要明显优于前面介绍的滤波器，代价是滤波器的复杂度。</p><ul><li><p>自适应、局部噪声消除滤波器<br>描述: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><mfrac><msubsup><mi>σ</mi><mi>η</mi><mn>2</mn></msubsup><msubsup><mi>σ</mi><mi>L</mi><mn>2</mn></msubsup></mfrac><mrow><mo fence="true">[</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><msub><mi>m</mi><mi>L</mi></msub><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\hat{f}(x, y)=g(x, y)-\frac{\sigma_{\eta}^{2}}{\sigma_{L}^{2}}\left[g(x, y)-m_{L}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.842425em;vertical-align:-0.611085em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2313399999999999em;"><span style="top:-2.62642em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051142857142857em;"><span style="top:-2.160707142857143em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3392928571428572em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.60742em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.214em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span></span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.42488571428571426em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.611085em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span><br>其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>σ</mi><mi>η</mi><mn>2</mn></msubsup><mo separator="true">,</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_{\eta}^{2}, g(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.197216em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 形成的噪声方差<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mi>L</mi></msub><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">m_{L},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 局部像素点的均值<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>σ</mi><mi>L</mi><mn>2</mn></msubsup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\sigma_{L}^{2},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.089439em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.424669em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 局部方差<br>滤波器性能预期：<br>(1) 如果 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>σ</mi><mi>η</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sigma_{\eta}^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.197216em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span> 为零, 滤波器应该简单的返回 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 的值。<br>(2) 如果局部方差与 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>σ</mi><mi>η</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sigma_{\eta}^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.197216em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span> 是高度相关的, 那么滤波器要返回一个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 的近似值。<br>(3) 如果两个方差相等, 希望滤波器返回区域Sxy上像素的算术均值。 个关键的问题是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>σ</mi><mi>η</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sigma_{\eta}^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.197216em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span> 未知, 需要进行估计，合理的估计会带来较好的滤波效果。 适用：防止由于缺乏图像噪声方差知识而产生的无意义结果, 适用均值和方差确定的加性高斯口声。</p></li><li><p>自适应中值滤波器<br>描述：自适应中值滤波算法分两层进行<br>先考虑如下符号：</p><ul><li>Zmin=Sxy中灰度值的最小值</li><li>Zmax=Sxy中灰度值的最大值</li><li>Zmed=Sxy中灰度值的中间值</li><li>Zxy=在坐标（x，y）上的灰度值</li><li>Smax=Sxy允许的最大尺寸<br>算法流程：<br>A层： A1=Zmed-Zmin；<br>A2=Zmed-Zmax；<br>如果A1&gt;0且A2&lt;0（即Zmin</li></ul></li></ul><p>from: <a href="https://blog.csdn.net/xdmdth/article/details/46889091?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-3.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-3.control" target="_blank" rel="noopener">https://blog.csdn.net/xdmdth/article/details/46889091?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-3.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-3.control</a></p><h1 id="mycode"><a class="markdownIt-Anchor" href="#mycode"></a> Mycode</h1><h2 id="增加噪声"><a class="markdownIt-Anchor" href="#增加噪声"></a> 增加噪声</h2><h3 id="椒盐噪声"><a class="markdownIt-Anchor" href="#椒盐噪声"></a> 椒盐噪声</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NoiseGenerator</span>:</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_pulse_noise</span><span class="params">(im, noise_ratios=<span class="number">0.3</span>)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        给图像增加脉冲噪声</span></span><br><span class="line"><span class="string">        脉冲噪声：噪声点只有两种情况，全黑or全白，因此又称为椒盐噪声</span></span><br><span class="line"><span class="string">        :param im: 待处理的图像</span></span><br><span class="line"><span class="string">        :param noise_ratios: 噪声比</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        h, w = im.shape[<span class="number">0</span>:<span class="number">2</span>]                            <span class="comment"># 获得图像的长宽</span></span><br><span class="line">        p_size = h * w                                  <span class="comment"># 计算出图像的平面大小</span></span><br><span class="line">        <span class="keyword">for</span> r <span class="keyword">in</span> range(int(p_size * noise_ratios)):     <span class="comment"># 噪声点数量</span></span><br><span class="line">            <span class="comment"># 获得噪声的随机位置</span></span><br><span class="line">            rand_h = random.randint(<span class="number">0</span>, h - <span class="number">1</span>)</span><br><span class="line">            rand_w = random.randint(<span class="number">0</span>, w - <span class="number">1</span>)</span><br><span class="line">            <span class="comment"># 两种处理: 1.像素点设置为全黑，2.像素点设置为全白</span></span><br><span class="line">            im[rand_h, rand_w, :] = np.array([<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]) <span class="keyword">if</span> random.random() &lt; <span class="number">0.5</span> <span class="keyword">else</span> np.array([<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>])</span><br><span class="line">        <span class="keyword">return</span> im</span><br></pre></td></tr></table></figure><h3 id="高斯噪声-2"><a class="markdownIt-Anchor" href="#高斯噪声-2"></a> 高斯噪声</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NoiseGenerator</span>:</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_normalization</span><span class="params">(cls, image)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        将数据线性归一化</span></span><br><span class="line"><span class="string">        :param image: 图片矩阵，一般是np.array 类型</span></span><br><span class="line"><span class="string">        :return: 将归一化后的数据，在（0,1）之间</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="comment"># 获取图片数据类型对象的最大值和最小值</span></span><br><span class="line">        info = np.iinfo(image.dtype)</span><br><span class="line">        <span class="comment"># 图像数组数据放缩在 0-1 之间</span></span><br><span class="line">        <span class="keyword">return</span> image.astype(np.double) / info.max</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_gaussian_noise</span><span class="params">(im, mean=<span class="number">0</span>, var=<span class="number">0.005</span>)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        添加高斯噪声</span></span><br><span class="line"><span class="string">        :param im:</span></span><br><span class="line"><span class="string">        :param mean: 均值</span></span><br><span class="line"><span class="string">        :param var: 方差</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="comment"># image = np.array(im / 255, dtype=float)   # 将像素值归一， (0, 1)</span></span><br><span class="line">        image = NoiseGenerator._normalization(im)   <span class="comment"># 将像素值归一, (0, 1)</span></span><br><span class="line">        noise = np.random.normal(mean, var ** <span class="number">0.5</span>, image.shape)  <span class="comment"># 产生高斯噪声</span></span><br><span class="line">        noised_im = image + noise  <span class="comment"># 直接将归一化的图片与噪声相加</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">clip_img</span><span class="params">(noised_im)</span>:</span></span><br><span class="line">            <span class="string">"""</span></span><br><span class="line"><span class="string">            将值限制在(-1或0, 1)间，然后乘255恢复</span></span><br><span class="line"><span class="string">            :param noised_im: 加了噪声的图片</span></span><br><span class="line"><span class="string">            :return: clip过的图片</span></span><br><span class="line"><span class="string">            """</span><span class="string">""</span></span><br><span class="line">            low_clip = <span class="number">-1.</span> <span class="keyword">if</span> noised_im.min() &lt; <span class="number">0</span> <span class="keyword">else</span> <span class="number">0.</span> <span class="comment"># 如果最小值小于1, 则边界设为(-1, 1)</span></span><br><span class="line">            out_im = np.clip(noised_im, low_clip, <span class="number">1.0</span>)  <span class="comment"># 如果noised_im中像素小于low_clip则置为low_clip, 大于1值置为1</span></span><br><span class="line">            out_im = np.uint8(out_im * <span class="number">255</span>) <span class="comment"># 将(-1, 1)的浮点型转成(0, 255)的整型</span></span><br><span class="line">            <span class="keyword">return</span> out_im</span><br><span class="line">        <span class="keyword">return</span> clip_img(noised_im)</span><br></pre></td></tr></table></figure><p>▲这边肯定有人会好奇<code>out_im = np.uint8(out_im * 255)</code>并不是将其转换到(0, 255)，而是(-255, 255)。 解释一下：——注意这边的<code>np.uint8</code>可以看到这边的数据类型就是8位int，所以范围是0-255，因此即使num=-55，那么计算的结果其实是201； num=-1，结果其实是255。</p><p>法二：skimage</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> skimage <span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> skimage</span><br><span class="line"><span class="keyword">import</span> pylab</span><br><span class="line">impath = <span class="string">"000001.jpg"</span></span><br><span class="line">image = io.imread(impath)</span><br><span class="line">img1 = image / <span class="number">255.00</span><span class="comment"># 均一化处理</span></span><br><span class="line">img2 = skimage.util.random_noise(image,mode=<span class="string">'gaussian'</span>,seed=<span class="keyword">None</span>,clip=<span class="keyword">True</span>)</span><br><span class="line">plt.figure(<span class="number">1</span>)</span><br><span class="line">plt.subplot(<span class="number">121</span>)</span><br><span class="line">plt.imshow(img1)</span><br><span class="line">plt.title(<span class="string">"Origin picture"</span>)</span><br><span class="line">plt.subplot(<span class="number">122</span>)</span><br><span class="line">plt.imshow(img2)</span><br><span class="line">plt.title(<span class="string">"Add Gaussian noise"</span>)</span><br><span class="line">pylab.show()</span><br><span class="line">plt.savefig(<span class="string">"noise_image.jpg"</span>)</span><br></pre></td></tr></table></figure><p>注意到：增加高斯噪声还可以用图像三方库完成的：<code>skimage.util.random_noise(image,mode ='gaussian',seed=None,clip=True)</code></p><h3 id="skimage的简介"><a class="markdownIt-Anchor" href="#skimage的简介"></a> skimage的简介</h3><blockquote><p>skimage即是Scikit-Image。基于python脚本语言开发的数字图片处理包，比如PIL,Pillow, opencv, scikit-image等。</p><p>PIL和Pillow只提供最基础的数字图像处理，功能有限；opencv实际上是一个c++库，只是提供了python接口，更新速度非常慢。scikit-image是基于<strong>scipy</strong>的一款图像处理包，它将图片作为numpy数组进行处理，正好与matlab一样，因此，我们最终选择scikit-image进行数字图像处理。</p><p>skimage包的全称是scikit-image SciKit (toolkit for SciPy) ，它对scipy.ndimage进行了扩展，提供了更多的图片处理功能。它是由python语言编写的，由scipy 社区开发和维护。skimage包由许多的子模块组成，各个子模块提供不同的功能。</p></blockquote><table><thead><tr><th>子模块名称</th><th style="text-align:center">主要实现功能</th></tr></thead><tbody><tr><td>io</td><td style="text-align:center">读取、保存和显示图片或视频</td></tr><tr><td>data</td><td style="text-align:center">提供一些测试图片和样本数据</td></tr><tr><td>color</td><td style="text-align:center">颜色空间变换</td></tr><tr><td>filters</td><td style="text-align:center">图像增强、边缘检测、排序滤波器、自动阈值等</td></tr><tr><td>draw</td><td style="text-align:center">操作于numpy数组上的基本图形绘制，包括线条、矩形、圆和文本等</td></tr><tr><td>transform</td><td style="text-align:center">几何变换或其它变换，如旋转、拉伸和拉东变换等</td></tr><tr><td>morphology</td><td style="text-align:center">形态学操作，如开闭运算、骨架提取等</td></tr><tr><td>exposure</td><td style="text-align:center">图片强度调整，如亮度调整、直方图均衡等</td></tr><tr><td>feature</td><td style="text-align:center">特征检测与提取等</td></tr><tr><td>measure</td><td style="text-align:center">图像属性的测量，如相似性或等高线等</td></tr><tr><td>segmentation</td><td style="text-align:center">图像分割</td></tr><tr><td>restoration</td><td style="text-align:center">图像恢复</td></tr><tr><td>util</td><td style="text-align:center">通用函数</td></tr></tbody></table><h3 id="数据加模糊高斯模糊"><a class="markdownIt-Anchor" href="#数据加模糊高斯模糊"></a> 数据加模糊——高斯模糊：</h3><ul><li>本质上是低通滤波器，输出图像的每个像素点是原图像上对应像素点与周围像素点的加权和。</li><li>即用高斯分布权值矩阵与原始图像矩阵做卷积运算。</li></ul><p><a href="python%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0-%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%9B%BE%E7%89%87%E5%8A%A0%E9%81%AE%E6%8C%A1%E3%80%81%E5%99%AA%E5%A3%B0%E3%80%81%E6%A8%A1%E7%B3%8A">https://blog.csdn.net/qq_37995260/article/details/100351153</a></p><p><a href="http://www.cppcns.com/jiaoben/python/253632.html" target="_blank" rel="noopener">Python给图像添加噪声具体操作</a></p><h2 id="增加噪声noise_mask_image"><a class="markdownIt-Anchor" href="#增加噪声noise_mask_image"></a> 增加噪声noise_mask_image</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CGK提供的，巧用了np.random.choice，学习了</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">noise_mask_image</span><span class="params">(img, noise_ratio)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    根据题目要求生成受损图片</span></span><br><span class="line"><span class="string">    :param img: 图像矩阵，一般为 np.ndarray</span></span><br><span class="line"><span class="string">    :param noise_ratio: 噪声比率，可能值是0.4/0.6/0.8</span></span><br><span class="line"><span class="string">    :return: noise_img 受损图片, 图像矩阵值 0-1 之间，数据类型为 np.array, </span></span><br><span class="line"><span class="string">             数据类型对象 (dtype): np.double, 图像形状:(height,width,channel),通道(channel) 顺序为RGB</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 受损图片初始化</span></span><br><span class="line">    noise_img = <span class="keyword">None</span></span><br><span class="line">    <span class="comment"># -------------实现受损图像答题区域-----------------</span></span><br><span class="line">    mask = np.random.choice([<span class="number">0</span>, <span class="number">1</span>], size=(img.shape[<span class="number">0</span>],img.shape[<span class="number">1</span>],img.shape[<span class="number">2</span>]), p = [noise_ratio, <span class="number">1</span> - noise_ratio])</span><br><span class="line">    noise_img = mask * img</span><br><span class="line">    <span class="comment"># -----------------------------------------------</span></span><br><span class="line">    <span class="keyword">return</span> noise_img</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 符合题意版本， 但是过不了样例，说产生的比例不正确</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">noise_mask_image</span><span class="params">(img, noise_ratio)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    根据题目要求生成受损图片</span></span><br><span class="line"><span class="string">    :param img: 图像矩阵，一般为 np.ndarray</span></span><br><span class="line"><span class="string">    :param noise_ratio: 噪声比率，可能值是0.4/0.6/0.8</span></span><br><span class="line"><span class="string">    :return: noise_img 受损图片, 图像矩阵值 0-1 之间，数据类型为 np.array, </span></span><br><span class="line"><span class="string">             数据类型对象 (dtype): np.double, 图像形状:(height,width,channel),通道(channel) 顺序为RGB</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 受损图片初始化</span></span><br><span class="line">    noise_img = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -------------实现受损图像答题区域-----------------</span></span><br><span class="line">    <span class="keyword">import</span> random</span><br><span class="line">    <span class="keyword">from</span> copy <span class="keyword">import</span> deepcopy</span><br><span class="line">    noise_img = deepcopy(img)</span><br><span class="line">    h, w = img.shape[: <span class="number">2</span>]  <span class="comment"># h为图片的长, w为图片的宽</span></span><br><span class="line"><span class="comment">#     noise_img = normalization(img)</span></span><br><span class="line">    <span class="keyword">for</span> dh <span class="keyword">in</span> range(h):  <span class="comment"># 遍历每行</span></span><br><span class="line">        cols = range(w)</span><br><span class="line">        mask_indexes = random.sample(cols, int(w * noise_ratio))</span><br><span class="line">        pixel_list = [<span class="number">0</span> <span class="keyword">if</span> i <span class="keyword">in</span> mask_indexes <span class="keyword">else</span> <span class="number">1</span> <span class="keyword">for</span> i <span class="keyword">in</span> cols]</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> cols:</span><br><span class="line">            noise_img[dh, c, :] = noise_img[dh, c, :] * pixel_list[c]</span><br><span class="line">    <span class="comment"># -----------------------------------------------</span></span><br><span class="line">    noise_img = np.array(noise_img, dtype=<span class="string">'double'</span>)</span><br><span class="line">    <span class="keyword">return</span> noise_img</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/qi-yuan-008/p/12581979.html" target="_blank" rel="noopener">Python的random操作</a></p><h2 id="图像恢复"><a class="markdownIt-Anchor" href="#图像恢复"></a> 图像恢复</h2><h3 id="中值滤波demo"><a class="markdownIt-Anchor" href="#中值滤波demo"></a> 中值滤波demo</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">AddNoise</span><span class="params">(src, dst, probility=<span class="number">0.05</span>)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    salt_pepper增加噪声</span></span><br><span class="line"><span class="string">    :param src:</span></span><br><span class="line"><span class="string">    :param dst:</span></span><br><span class="line"><span class="string">    :param probility:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    imarray = np.array(Image.open(src))</span><br><span class="line">    height, width = imarray.shape[:<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(height):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(width):</span><br><span class="line">            <span class="keyword">if</span> np.random.random(<span class="number">1</span>) &lt; probility:</span><br><span class="line">                <span class="keyword">if</span> np.random.random(<span class="number">1</span>) &lt; <span class="number">0.5</span>:</span><br><span class="line">                    imarray[i, j, :] = <span class="number">0</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    imarray[i, j, :] = <span class="number">255</span></span><br><span class="line">    new_im = Image.fromarray(imarray)</span><br><span class="line">    new_im.save(dst)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">MedianFilter</span><span class="params">(src, dst, k=<span class="number">3</span>, padding=None)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    中值滤波</span></span><br><span class="line"><span class="string">    :param src:</span></span><br><span class="line"><span class="string">    :param dst:</span></span><br><span class="line"><span class="string">    :param k: 过滤器核大小</span></span><br><span class="line"><span class="string">    :param padding:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    imarray = np.array(Image.open(src))</span><br><span class="line">    height, width, channels = imarray.shape</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> padding:</span><br><span class="line">        edge = int((k - <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> height - <span class="number">1</span> - edge &lt;= edge <span class="keyword">or</span> width - <span class="number">1</span> - edge &lt;= edge:</span><br><span class="line">            print(<span class="string">"The parameter k is to large."</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">        new_arr = np.zeros((height, width, <span class="number">3</span>), dtype=<span class="string">"uint8"</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(height):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(width):</span><br><span class="line">                <span class="keyword">for</span> c <span class="keyword">in</span> range(channels):           <span class="comment"># 处理3个通道</span></span><br><span class="line">                    <span class="keyword">if</span> i &lt;= edge - <span class="number">1</span> <span class="keyword">or</span> i &gt;= height - <span class="number">1</span> - edge <span class="keyword">or</span> j &lt;= edge - <span class="number">1</span> <span class="keyword">or</span> j &gt;= width - edge - <span class="number">1</span>:</span><br><span class="line">                        new_arr[i, j, c] = imarray[i, j, c]</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        new_arr[i, j, c] = np.median(imarray[i - edge:i + edge + <span class="number">1</span>, j - edge:j + edge + <span class="number">1</span>, c])</span><br><span class="line">        new_im = Image.fromarray(new_arr)</span><br><span class="line">        new_im.save(dst)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    gray_girl = <span class="string">"A.png"</span></span><br><span class="line">    tar = <span class="string">"A_noised.png"</span></span><br><span class="line">    AddNoise(gray_girl, tar)</span><br><span class="line">    src = <span class="string">"A_noised.png"</span></span><br><span class="line">    dst = <span class="string">"A_repaired.png"</span></span><br><span class="line">    MedianFilter(src, dst)</span><br></pre></td></tr></table></figure><p>下图是k=3是的改进后的中值滤波策略的结果，可以看到图像的清晰度得到了较大的保留，噪声的数量就相对也残留的比较多。从中可以看到，二者之间有此消彼长的关系。至于为什么还有这么多的椒盐噪声，原因是因为我们添加噪声的代码中设置的概率太高了，导致图像中的椒盐噪声数量非常多，<u>在小区域内有可能有许多的噪声点，导致算法所寻找到的中值仍然是噪声的数值范围</u>。这种情况下扩大滤波模板的大小并不会有多大的改变。此时可以将已经执行过一次中值滤波的结果图像再执行一次中值滤波，效果就会更好一些。</p><p>参考：数字图像处理的python实现(8)——中值滤波https://blog.csdn.net/baidu_41902768/article/details/94451787——上述代码在j的条件判断上需要将height-1-edge改成width-1-edge</p><h3 id="图像修复restore_image"><a class="markdownIt-Anchor" href="#图像修复restore_image"></a> 图像修复restore_image</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Filter</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, k = <span class="number">3</span>)</span>:</span></span><br><span class="line">        self.k = k</span><br><span class="line">        self.padding = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_median</span><span class="params">(self, imarray)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        中值滤波</span></span><br><span class="line"><span class="string">        :param imarray:</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        height, width, channels = imarray.shape</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.padding:</span><br><span class="line">            edge = int((self.k - <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">if</span> height - <span class="number">1</span> - edge &lt;= edge <span class="keyword">or</span> width - <span class="number">1</span> - edge &lt;= edge:</span><br><span class="line">                print(<span class="string">"The parameter k is to large."</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">            new_arr = np.zeros((height, width, <span class="number">3</span>), dtype=<span class="string">"uint8"</span>)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(height):</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> range(width):</span><br><span class="line">                    <span class="keyword">for</span> c <span class="keyword">in</span> range(channels):  <span class="comment"># 处理3个通道</span></span><br><span class="line">                        <span class="keyword">if</span> i &lt;= edge - <span class="number">1</span> <span class="keyword">or</span> i &gt;= height - <span class="number">1</span> - edge \</span><br><span class="line">                                <span class="keyword">or</span> j &lt;= edge - <span class="number">1</span> <span class="keyword">or</span> j &gt;= width - edge - <span class="number">1</span>:</span><br><span class="line">                            <span class="comment"># 除了中心点以外其他边沿的点</span></span><br><span class="line">                            new_arr[i, j, c] = imarray[i, j, c]</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            <span class="comment"># 中心点为排序后的中值</span></span><br><span class="line">                            new_arr[i, j, c] = np.median(imarray[i-edge: i+edge+<span class="number">1</span>, j-edge: j+edge+<span class="number">1</span>, c])</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> new_arr</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_max</span><span class="params">(self, imarray)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        中值滤波</span></span><br><span class="line"><span class="string">        :param imarray:</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        height, width, channels = imarray.shape</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.padding:</span><br><span class="line">            edge = int((self.k - <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">if</span> height - <span class="number">1</span> - edge &lt;= edge <span class="keyword">or</span> width - <span class="number">1</span> - edge &lt;= edge:</span><br><span class="line">                print(<span class="string">"The parameter k is to large."</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">            new_arr = np.zeros((height, width, <span class="number">3</span>), dtype=<span class="string">"uint8"</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(height):</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> range(width):</span><br><span class="line">                    <span class="keyword">for</span> c <span class="keyword">in</span> range(channels):  <span class="comment"># 处理3个通道</span></span><br><span class="line">                        <span class="keyword">if</span> i &lt;= edge - <span class="number">1</span> <span class="keyword">or</span> i &gt;= height - <span class="number">1</span> - edge \</span><br><span class="line">                                <span class="keyword">or</span> j &lt;= edge - <span class="number">1</span> <span class="keyword">or</span> j &gt;= width - edge - <span class="number">1</span>:</span><br><span class="line">                            <span class="comment"># 边界处理， 当i索引&lt;=edge-1 -&gt; 或者 i &gt;= ((height-1)-&gt;图像边界-edge)-&gt;窗口在图像边界内的边界</span></span><br><span class="line">                            new_arr[i, j, c] = imarray[i, j, c]</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            <span class="comment"># 中心点为排序后的中值</span></span><br><span class="line">                            new_arr[i, j, c] = np.max(imarray[i-edge: i+edge+<span class="number">1</span>, j-edge: j+edge+<span class="number">1</span>, c])</span><br><span class="line">            <span class="keyword">return</span> new_arr</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">restore_image</span><span class="params">(noise_img, size=<span class="number">4</span>)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    使用 你最擅长的算法模型 进行图像恢复。</span></span><br><span class="line"><span class="string">    :param noise_img: 一个受损的图像</span></span><br><span class="line"><span class="string">    :param size: 输入区域半径，长宽是以 size*size 方形区域获取区域, 默认是 4</span></span><br><span class="line"><span class="string">    :return: res_img 恢复后的图片，图像矩阵值 0-1 之间，数据类型为 np.array,</span></span><br><span class="line"><span class="string">            数据类型对象 (dtype): np.double, 图像形状:(height,width,channel), 通道(channel) 顺序为RGB</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 恢复图片初始化，首先 copy 受损图片，然后预测噪声点的坐标后作为返回值。</span></span><br><span class="line">    res_img = np.copy(noise_img)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取噪声图像</span></span><br><span class="line">    noise_mask = get_noise_mask(noise_img)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># -------------实现图像恢复代码答题区域----------------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res_img</span><br></pre></td></tr></table></figure><p>目前修复思路: 由于观察到mask基本都是胡椒噪声（黑色），因此最大值滤波效果会比较好一点，但是仍然会有少量椒盐噪声残余，因此，可以采用将降噪后的图像再次降噪（而不是扩大过滤核大小）。 在这里剩余的仍然是胡椒噪声（黑色），但是经过测试可以看出最大值滤波对图像的影响明显大于中值滤波，最大值滤波会比较模糊，因此这边采用的是“最大值滤波+中值滤波”的组合。（注：为什么先用最大值滤波？因为实验测试第一次就用中值滤波效果很差）</p><p><img src="/2020/12/09/浙大2020春夏-人工智能习题3——图像恢复/noise.png" alt="noise"></p><h4 id="先用最大值滤波的效果"><a class="markdownIt-Anchor" href="#先用最大值滤波的效果"></a> 先用最大值滤波的效果：</h4><p><img src="/2020/12/09/浙大2020春夏-人工智能习题3——图像恢复/first.png" alt="first"></p><h5 id="组合中值滤波的效果"><a class="markdownIt-Anchor" href="#组合中值滤波的效果"></a> 组合中值滤波的效果：</h5><p><img src="/2020/12/09/浙大2020春夏-人工智能习题3——图像恢复/medina.png" alt="medina"></p><h5 id="组合最大值滤波效果"><a class="markdownIt-Anchor" href="#组合最大值滤波效果"></a> 组合最大值滤波效果</h5><p><img src="/2020/12/09/浙大2020春夏-人工智能习题3——图像恢复/max.png" alt="max"></p><p>直接使用中值滤波实验结果：</p><p><img src="/2020/12/09/浙大2020春夏-人工智能习题3——图像恢复/%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8%E4%B8%AD%E5%80%BC%E6%BB%A4%E6%B3%A2%E7%BB%93%E6%9E%9C.png" alt="直接使用中值滤波结果"></p><h4 id="记录坑点"><a class="markdownIt-Anchor" href="#记录坑点"></a> 记录坑点：</h4><blockquote><p>用savefig保存时，图片会有压缩，导致保存和重新从文件中读取的内容有些区别</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">noised_im = NoiseGenerator.add_pulse_noise(im)<span class="comment"># (1104, 828, 3)</span></span><br><span class="line">plt.imshow(noised_im)</span><br><span class="line">plt.axis(<span class="string">"off"</span>)</span><br><span class="line">plt.savefig(<span class="string">"A_noised.png"</span>)</span><br><span class="line">src = <span class="string">"A_noised.png"</span></span><br><span class="line">dst = <span class="string">"A_repaired.png"</span></span><br><span class="line">MedianFilter(src, dst)<span class="comment"># (480, 640, 4)</span></span><br></pre></td></tr></table></figure><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结：</h3><blockquote><p>samples给的图中噪声基本都是胡椒噪声，没有什么盐噪声，因此考虑最大值滤波</p></blockquote><ul><li>当黑色占比大于0.3时使用&quot;最大值滤波+中值滤波组合&quot;， 当小于0.3时直接使用中值滤波</li><li>k=5太模糊，目前使用k=3</li></ul><h1 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h1><ul><li><a href="https://blog.csdn.net/u012526003/article/details/77784211/?utm_medium=distribute.pc_relevant.none-task-blog-title-3&amp;spm=1001.2101.3001.4242" target="_blank" rel="noopener">图像复原原理及实现</a></li></ul><h2 id="读取展示图片的两种方式"><a class="markdownIt-Anchor" href="#读取展示图片的两种方式"></a> 读取展示图片的两种方式：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -----------------用cv的imshow-------------</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_noise</span><span class="params">(filename)</span>:</span></span><br><span class="line">    im = cv2.imread(filename)</span><br><span class="line">    cv2.imshow(<span class="string">'original img'</span>, im)</span><br><span class="line">    h, w = im.shape[<span class="number">0</span>:<span class="number">2</span>]</span><br><span class="line">    pNum = h * w</span><br><span class="line">    nRate = <span class="number">0.3</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(int(pNum * nRate)):</span><br><span class="line">        randh = random.randint(<span class="number">0</span>, h - <span class="number">1</span>)</span><br><span class="line">        randw = random.randint(<span class="number">0</span>, w - <span class="number">1</span>)</span><br><span class="line">        <span class="comment"># print(h,randh,w,randw)</span></span><br><span class="line">        <span class="keyword">if</span> random.random() &lt; <span class="number">0.5</span>:</span><br><span class="line">            im[randh, randw, :] = np.array([<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            im[randh, randw, :] = np.array([<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>])</span><br><span class="line">    cv2.imshow(<span class="string">'add noise'</span>, im)</span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">add_noise(<span class="string">'A.png'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#-----------------用plt.imshow-------------</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_photo</span><span class="params">(pic_path)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    :param pic_path: 图片路径</span></span><br><span class="line"><span class="string">    :return: &lt;class 'numpy.ndarray'&gt;</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 以 BGR 方式读取图片</span></span><br><span class="line">    im = cv2.imread(pic_path)</span><br><span class="line">    <span class="comment"># 将 BGR 方式转换为 RGB 方式</span></span><br><span class="line">    im = cv2.cvtColor(im, cv2.COLOR_BGR2RGB)</span><br><span class="line">    <span class="comment"># 展示图片</span></span><br><span class="line">    plt.imshow(im)</span><br><span class="line">    <span class="comment"># 关闭坐标轴</span></span><br><span class="line">    plt.axis(<span class="string">'off'</span>)</span><br><span class="line">    <span class="comment"># show</span></span><br><span class="line">    plt.show()</span><br><span class="line">    <span class="keyword">return</span> im</span><br></pre></td></tr></table></figure><h2 id="imshow的参数"><a class="markdownIt-Anchor" href="#imshow的参数"></a> imshow的参数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@_preprocess_data(label_namer=None)</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">imshow</span><span class="params">(self, X, cmap=None, norm=None, aspect=None,</span></span></span><br><span class="line"><span class="function"><span class="params">              interpolation=None, alpha=None, vmin=None, vmax=None,</span></span></span><br><span class="line"><span class="function"><span class="params">              origin=None, extent=None, shape=None, filternorm=<span class="number">1</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">              filterrad=<span class="number">4.0</span>, imlim=None, resample=None, url=None, **kwargs)</span>:</span></span><br><span class="line">       <span class="string">"""</span></span><br><span class="line"><span class="string">       Display an image on the axes.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       Parameters</span></span><br><span class="line"><span class="string">       ----------</span></span><br><span class="line"><span class="string">       X : array_like, shape (n, m) or (n, m, 3) or (n, m, 4)</span></span><br><span class="line"><span class="string">           Display the image in `X` to current axes.  `X` may be an</span></span><br><span class="line"><span class="string">           array or a PIL image. If `X` is an array, it</span></span><br><span class="line"><span class="string">           can have the following shapes and types:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">           - MxN -- values to be mapped (float or int)</span></span><br><span class="line"><span class="string">           - MxNx3 -- RGB (float or uint8)</span></span><br><span class="line"><span class="string">           - MxNx4 -- RGBA (float or uint8)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">           MxN arrays are mapped to colors based on the `norm` (mapping</span></span><br><span class="line"><span class="string">           scalar to scalar) and the `cmap` (mapping the normed scalar to</span></span><br><span class="line"><span class="string">           a color).</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">           Elements of RGB and RGBA arrays represent pixels of an MxN image.</span></span><br><span class="line"><span class="string">           All values should be in the range [0 .. 1] for floats or</span></span><br><span class="line"><span class="string">           [0 .. 255] for integers.  Out-of-range values will be clipped to</span></span><br><span class="line"><span class="string">           these bounds.</span></span><br></pre></td></tr></table></figure><h3 id="clip"><a class="markdownIt-Anchor" href="#clip"></a> clip</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).</span><br></pre></td></tr></table></figure><p>按照上述信息可知，如果元素为float类型且超过了1，则会被clip，这边clip就是上下限幅，而不是截取小数点后部分</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">res = np.array([</span><br><span class="line">    [[<span class="number">1.22</span>,<span class="number">2.22</span>,<span class="number">3.22</span>]],</span><br><span class="line">    [[<span class="number">-0.55</span>,<span class="number">-0.44</span>,<span class="number">-6.55</span>]]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><img src="/2020/12/09/浙大2020春夏-人工智能习题3——图像恢复/test_clip.png" alt="test_clip"></p><h2 id="图像相似度指标"><a class="markdownIt-Anchor" href="#图像相似度指标"></a> 图像相似度指标</h2><h3 id="ssim结构相似性度量"><a class="markdownIt-Anchor" href="#ssim结构相似性度量"></a> SSIM（结构相似性度量）</h3><blockquote><p>这是一种全参考的图像质量评价指标，分别从亮度、对比度、结构三个方面度量图像相似性。SSIM取值范围[0, 1]，值越大，表示图像失真越小。</p></blockquote><h3 id="cosin相似度余弦相似度"><a class="markdownIt-Anchor" href="#cosin相似度余弦相似度"></a> cosin相似度（余弦相似度）</h3><blockquote><p>把图片表示成一个向量，通过计算向量之间的余弦距离来表征两张图片的相似度。</p></blockquote><p><a href="https://blog.csdn.net/u010977034/article/details/82733137" target="_blank" rel="noopener">https://blog.csdn.net/u010977034/article/details/82733137</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;习题3-图像恢复&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#习题3-图像恢复&quot;&gt;&lt;/a&gt; &lt;strong&gt;习题3&lt;/strong&gt; - 图像恢复&lt;/h1&gt;
&lt;h2 id=&quot;31-实验内容&quot;&gt;&lt;a class=&quot;markdownIt-
      
    
    </summary>
    
    
      <category term="ZJU" scheme="https://nymrli.top/tags/ZJU/"/>
    
      <category term="ML" scheme="https://nymrli.top/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>枚举类的优雅写法Java-&gt;Python</title>
    <link href="https://nymrli.top/2020/12/05/%E6%9E%9A%E4%B8%BE%E7%B1%BB%E7%9A%84%E4%BC%98%E9%9B%85%E5%86%99%E6%B3%95Java-Python/"/>
    <id>https://nymrli.top/2020/12/05/枚举类的优雅写法Java-Python/</id>
    <published>2020-12-05T08:19:27.000Z</published>
    <updated>2020-12-05T08:44:17.991Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>枚举类型作为与接口、类同一级别的存在，自然有它独特的用途。至于它性能上的优势暂且不谈，我们在这篇文章中只是考虑怎么把Enum写得更优雅</p></blockquote><h2 id="java"><a class="markdownIt-Anchor" href="#java"></a> Java</h2><h3 id="enum的写法"><a class="markdownIt-Anchor" href="#enum的写法"></a> Enum的写法</h3><blockquote><p>在阿里实习的时候印象最深的就是学到了枚举的写法， 大致如下所示</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> EnumOperationPermission implements IEnumBehaviour &#123;</span><br><span class="line">    <span class="comment">// ----------------------- 实际的枚举对象 ------------------------</span></span><br><span class="line">    SAVE(<span class="string">"保存"</span>, <span class="number">0</span>), </span><br><span class="line">    SUBMIT(<span class="string">"提交"</span>, <span class="number">1</span>), </span><br><span class="line">    BACK(<span class="string">"退回"</span>, <span class="number">2</span>), </span><br><span class="line">    VIEWCOMMENTS(<span class="string">"查看意见"</span>, <span class="number">3</span>), </span><br><span class="line">    SIGN(<span class="string">"签发"</span>, <span class="number">4</span>), </span><br><span class="line">    DISTRIBUTE(<span class="string">"分发"</span>, <span class="number">5</span>), </span><br><span class="line">    CALLBACK(<span class="string">"撤回"</span>, <span class="number">6</span>), </span><br><span class="line">    NODE(<span class="string">"节点"</span>, <span class="number">7</span>), </span><br><span class="line">    BROWSINFO(<span class="string">"浏览情况"</span>, <span class="number">8</span>), </span><br><span class="line">    FINISH(<span class="string">"完成"</span>, <span class="number">9</span>),</span><br><span class="line">    DETAIL(<span class="string">"订票明细"</span>,<span class="number">10</span>);</span><br><span class="line">    <span class="comment">// ----------------------- 实际的枚举对象 ------------------------</span></span><br><span class="line">   <span class="keyword">private</span> String mName;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">int</span> mId;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">private</span> <span class="title">EnumOperationPermission</span><span class="params">(String name, <span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">this</span>.mName = name;</span><br><span class="line">     <span class="keyword">this</span>.mId = id;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">   <span class="comment">// 一般只有get, 没有set</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> mName;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> mId;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">   <span class="comment">// 下面的用途为自定义跟enum的valueOf相同， 即通过某个值返回enum这个类</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> EnumOperationPermission <span class="title">parse</span><span class="params">(String name)</span> </span>&#123; </span><br><span class="line">     EnumOperationPermission[] enumList = EnumOperationPermission.values();</span><br><span class="line">     <span class="keyword">for</span> (IEnumBehaviour enumInstance : enumList) &#123;</span><br><span class="line">       <span class="keyword">if</span> (enumInstance.toString().equalsIgnoreCase(name) || enumInstance.getName().equalsIgnoreCase(name)</span><br><span class="line">           || String.valueOf(enumInstance.getId()).equalsIgnoreCase(name)) &#123;</span><br><span class="line">         <span class="keyword">return</span> (EnumOperationPermission) enumInstance;</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> EnumOperationPermission.SAVE;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="python"><a class="markdownIt-Anchor" href="#python"></a> Python</h2><p>最简易的写法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Color</span><span class="params">(Enum)</span>:</span></span><br><span class="line">    RED = <span class="number">1</span></span><br><span class="line">    YELLOW = <span class="number">2</span></span><br><span class="line">    BLUE = <span class="number">3</span></span><br></pre></td></tr></table></figure><p>枚举类的特点:</p><ul><li><p>标签值<strong>不可被修改</strong></p></li><li><p>一个标签只能对应一个值，但多个标签可以对应相同的值(别名) --&gt; 不同key可以有相同的val( 如果不允许存在相同val, 则在类前加上装饰器@unique， 需要从enum包中导入)</p></li><li><p>枚举类型可以做等值比较和身份比较，但是<strong>不能做大小比较</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Color</span><span class="params">(Enum)</span>:</span></span><br><span class="line">    RED = <span class="number">1</span></span><br><span class="line">    YELLOW = <span class="number">1</span></span><br><span class="line">    BLUE = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">print(Color.RED == Color.YELLOW)</span><br><span class="line"> <span class="keyword">True</span></span><br><span class="line">print(Color.RED <span class="keyword">is</span> Color.YELLOW)</span><br><span class="line"> <span class="keyword">True</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="枚举类型-枚举名称-枚举值"><a class="markdownIt-Anchor" href="#枚举类型-枚举名称-枚举值"></a> <strong>枚举类型、枚举名称、枚举值</strong></h3><blockquote><p>跟Java不同的是，Java一般自己定义有哪些属性，如name, code。 而Python中有设好的name和value属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="class"><span class="keyword">class</span> <span class="title">Enum</span><span class="params">(metaclass=EnumMeta)</span>:</span></span><br><span class="line">&gt; @DynamicClassAttribute</span><br><span class="line">&gt;     <span class="function"><span class="keyword">def</span> <span class="title">name</span><span class="params">(self)</span>:</span></span><br><span class="line">&gt;         <span class="string">"""The name of the Enum member."""</span></span><br><span class="line">&gt;         <span class="keyword">return</span> self._name_</span><br><span class="line">&gt; </span><br><span class="line">&gt;     @DynamicClassAttribute</span><br><span class="line">&gt;     <span class="function"><span class="keyword">def</span> <span class="title">value</span><span class="params">(self)</span>:</span></span><br><span class="line">&gt;         <span class="string">"""The value of the Enum member."""</span></span><br><span class="line">&gt;         <span class="keyword">return</span> self._value_</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><ul><li>枚举类型就是指这个枚举类；</li><li>枚举实例就是指枚举类型下的具体实例</li><li>枚举名称为枚举类型实例的key，<a href="http://xn--Enum-zi0ir4c201l.name" target="_blank" rel="noopener">本质是Enum.name</a></li><li>枚举名称为枚举类型实例的value，本质Enum.value</li></ul><h3 id="如何使用枚举类型"><a class="markdownIt-Anchor" href="#如何使用枚举类型"></a> 如何使用枚举类型</h3><p>可以用读取字典的方式来读取，并且可以遍历：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Color</span><span class="params">(Enum)</span>:</span></span><br><span class="line">    RED = <span class="number">1</span></span><br><span class="line">    YELLOW = <span class="number">1</span></span><br><span class="line">    BLUE = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">print(Color[<span class="string">'RED'</span>])  访问</span><br><span class="line"><span class="keyword">for</span> e <span class="keyword">in</span> Color:      遍历</span><br><span class="line">    print(e)</span><br><span class="line"> 当多个标签对应相同值时，第一个定义的为主名，其他的为别名</span><br><span class="line"> 直接遍历无法输出别名，可以用__members__来全部输出</span><br><span class="line"><span class="keyword">for</span> e <span class="keyword">in</span> Color.__members__:</span><br><span class="line">    print(e)</span><br></pre></td></tr></table></figure><p>注意Python中是没有类似Java中<code>EnumOperationPermission.values();</code>来获得枚举的所有实例对象的</p><h4 id="如何从python-enum类获取所有值"><a class="markdownIt-Anchor" href="#如何从python-enum类获取所有值"></a> 如何从python enum类获取所有值？</h4><p>如何像Java中一样<code>EnumOperationPermission.values();</code>呢？<a href="https://oomake.com/question/8760202%E4%B8%AD%E6%8F%90%E5%88%B0" target="_blank" rel="noopener">https://oomake.com/question/8760202中提到</a><code>Enum</code>有一个<code>members</code>字典，经翻阅源码后发现3.6中并没有这个字典，有的是<code>__member__</code>属性，其返回值为OrderedDict</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EnumMeta</span><span class="params">(type)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span><span class="params">(metacls, cls, bases, classdict)</span>:</span></span><br><span class="line"> ...</span><br><span class="line">    enum_class._member_names_ = []                names <span class="keyword">in</span> definition order</span><br><span class="line">        enum_class._member_map_ = OrderedDict()       name-&gt;value map</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__members__</span><span class="params">(cls)</span>:</span></span><br><span class="line">        <span class="string">"""Returns a mapping of member name-&gt;value.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        This mapping lists all enum members, including aliases. Note that this</span></span><br><span class="line"><span class="string">        is a read-only view of the internal mapping.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">return</span> MappingProxyType(cls._member_map_)</span><br></pre></td></tr></table></figure><p>所有写法有:</p><h5 id="通过类的value属性来获得所有值"><a class="markdownIt-Anchor" href="#通过类的value属性来获得所有值"></a> 通过类的value属性来获得所有值</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Color</span><span class="params">(Enum)</span>:</span></span><br><span class="line">    RED = <span class="number">1</span></span><br><span class="line">    GREEN = <span class="string">'GREEN'</span></span><br><span class="line">    BLUE = (<span class="string">'blue'</span>, <span class="string">'#0000ff'</span>)</span><br><span class="line">    </span><br><span class="line"><span class="meta">@staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        获得所有值</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        <span class="keyword">return</span> list(map(<span class="keyword">lambda</span> c: c.value, Color))</span><br><span class="line">print(Color.list())</span><br></pre></td></tr></table></figure><h5 id="模仿java写法"><a class="markdownIt-Anchor" href="#模仿java写法"></a> 模仿Java写法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Chess</span><span class="params">(Enum)</span>:</span></span><br><span class="line">    BLACK = &#123;<span class="string">'graph'</span>: <span class="string">'X'</span>, <span class="string">'val'</span>: <span class="number">0</span>&#125;</span><br><span class="line">    WHITE = &#123;<span class="string">'graph'</span>: <span class="string">'O'</span>, <span class="string">'val'</span>: <span class="number">1</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getChess</span><span class="params">(color)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> Chess:</span><br><span class="line">            <span class="keyword">if</span> color == c.value.get(<span class="string">"graph"</span>):</span><br><span class="line">                <span class="keyword">return</span> c</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getVal</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.value.get(<span class="string">'val'</span>)</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getGraph</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.value.get(<span class="string">'graph'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;枚举类型作为与接口、类同一级别的存在，自然有它独特的用途。至于它性能上的优势暂且不谈，我们在这篇文章中只是考虑怎么把Enum写得更优雅&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;java&quot;&gt;&lt;a class=&quot;markdownIt-Anc
      
    
    </summary>
    
    
      <category term="计算机基础知识" scheme="https://nymrli.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>理解科学计算(numpy,pytorch)中的dim参数</title>
    <link href="https://nymrli.top/2020/12/05/%E7%90%86%E8%A7%A3%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97%E4%B8%AD%E7%9A%84dim%E5%8F%82%E6%95%B0/"/>
    <id>https://nymrli.top/2020/12/05/理解科学计算中的dim参数/</id>
    <published>2020-12-05T03:53:10.000Z</published>
    <updated>2020-12-10T06:22:37.272Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>😄理解numpy中array和pytorch中tensor的操作是开始科学运算的第一步!</p></blockquote><p>首先明白维度的感念：</p><h2 id="维度"><a class="markdownIt-Anchor" href="#维度"></a> 维度</h2><p>我们通常能听到的都是2D, 3D，其实这边的D就是dimension的含义即维度。2D，我们通常理解为是平面，如我们最熟悉的直角坐标系就是平面坐标系，还有极坐标系。而3D呢，就是在平面的基础上增加了一维——高度，从而使平面的物体立起来了，同样3D也有耳熟能详的坐标系——3维坐标系。</p><p>更官方的解释呢：维度（Dimension），又称为<a href="https://baike.baidu.com/item/%E7%BB%B4%E6%95%B0/6496548" target="_blank" rel="noopener">维数</a>，是<a href="https://baike.baidu.com/item/%E6%95%B0%E5%AD%A6/107037" target="_blank" rel="noopener">数学</a>中独立参数的<a href="https://baike.baidu.com/item/%E6%95%B0%E7%9B%AE/7720359" target="_blank" rel="noopener">数目</a>。在<a href="https://baike.baidu.com/item/%E7%89%A9%E7%90%86%E5%AD%A6/313183" target="_blank" rel="noopener">物理学</a>和<a href="https://baike.baidu.com/item/%E5%93%B2%E5%AD%A6/140608" target="_blank" rel="noopener">哲学</a>的领域内，指独立的时空坐标的数目。0维是一个无限小的点，没有长度。<strong>1维是一条无限长的线，只有长度。2维是一个平面，是由长度和宽度(或部分曲线)组成面积。3维是2维加上高度组成体积。4维分为时间上和空间上的4维，人们说的4维通常是指关于物体在时间线上的转移。</strong>（4维准确来说有两种。1.四维时空，是指三维空间加一维时间。2.四维空间，只指四个维度的空间。）四维运动产生了五维。</p><p>从哲学角度看，人们观察、思考与表述某事物的“<u>思维角度</u>”，简称“维度”。例如，人们观察与思考“月亮”这个事物，可以从月亮的“内容、时间、空间”三个思维角度去描述；也可以从月亮的“载体、能量、信息”三个思维角度去描述。这边的维度其实也可以理解为角度，从不同的方面去看待、确定一个事物。</p><p>所以代数上来说，维度其实是数学里在<strong>表示</strong>方面的一个重要的概念，它反映的是一个空间的本质性质。</p><h2 id="科学计算中维度的概念"><a class="markdownIt-Anchor" href="#科学计算中维度的概念"></a> 科学计算中维度的概念</h2><h3 id="从二维点位置-编程中的坐标系"><a class="markdownIt-Anchor" href="#从二维点位置-编程中的坐标系"></a> 从二维点位置-&gt;编程中的坐标系</h3><p>维度的考量主要集中在矩阵的运算上。首先我们来看一个元素：4，其实它就是一个点，可以被认为是0维的。但往往我们不会只有一个元素。我们最常见的是编程中的数组，如[1,2,3,4]，这个是由多个元素构成的，它的维度就是一维的，这个我们也比较好理解。</p><p>而二维是什么呢？我们能直观理解的二维是平面坐标系的那种：(1,3), (4,5)…即给一个x，一个y，那么在平面中就可以在直角坐标系下确定这个点（物）。现在我们规整下这些坐标点[ (1, 3), (4, 5) ]，从这个角度上离我们的矩阵，或是数组好像还是有点远。那么我们继续变形。</p><p>如果我们需要画出坐标系中有哪些点的话， 1.第一种做法就是跟上述一样， 把点都存一个vector中[ (1, 3), (4, 5) ]，然后遍历，再在坐标系中点出。2.第二种呢，就是在坐标系中把所有的位置都列出来，如果有点存在就把它标出来，即跟我们列出迷宫地图一样，先把地图画出来，然后再把宝藏标出来。所以上述的两个点可以理解为。在给出了<code>map[20][20]</code>的地图上，(1, 3)和(4, 5)位置为true， 即<code>map[1][3] = 1</code>, <code>map[4][5] = 1</code>，其他位置<code>map[x][y] = 0</code>，所以这样我们就从[(1, 3), (4, 5)]==&gt; 用map形式表现出了这两个点，两者成功在<strong>二维</strong>上进行了转换。接下来我们就来分析这个二维的map。</p><p>数组，在编程中，我们都不陌生，如<code>int arr[50][50]</code>，虽然可以通过这个二维的数组，根据val的不同来表示三维的量，但是我们这边不把它这么理解，仅是当做<code>bool arr[50][50]</code>来理解维度上的概念。===&gt;同样，面对numpy中的array我们也是这么个理解。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> torch </span><br><span class="line">x = np.random.randint(<span class="number">2</span>, size = (<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line">print(x)</span><br><span class="line"></span><br><span class="line">y = torch.randint(<span class="number">2</span>, size = (<span class="number">2</span>, <span class="number">3</span>))</span><br><span class="line">print(y)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">[[0 1 1]</span></span><br><span class="line"><span class="string"> [1 0 1]]</span></span><br><span class="line"><span class="string">tensor([[1, 0, 1],</span></span><br><span class="line"><span class="string">        [0, 0, 1]])</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><p>我们从numpy的x上理解，这边是创建了一个2*3的矩阵，其中<code>x[0][1], x[0][2], x[1][0], x[0][2]</code>全1，其余为0，输入<code>x.shape</code>得到的结果是(2, 3)，有两项，跟我们从map的理解上是一致的，这个地图map拥有长和宽两个维度。</p><p>然后我们从编程中观察这个2*3的矩阵或是叫数组，可以发现<code>x[a][b]</code>第一个<code>[]</code>中的内容a范围是从0-1的，第一个<code>[]</code>中的内容b范围是从0-2的，0的话学编程的人都能很快的理解，而第二个的范围却不太那么肯定。为什么呢？因为它跟我们普通认知的直角坐标系不一致。下面我们把x画出来(不改变输出显示的形式，而是让坐标系去适应这种表现形式)。</p><p><img src="/2020/12/05/理解科学计算中的dim参数/%E5%9D%90%E6%A0%87%E7%B3%BB.png" alt="坐标系"></p><p>为什么是这样画的呢？首先明确的原则是，不改变输出显示的形式，而是让坐标系去适应这种输出形式，因此输出长啥样，我们坐标系只能去适应。由于我们碰到有x，有y的时候，习惯上把第一个出现的当作x，第二个当作y，所以就有了第一个[]为x，第二个[]为y。</p><p>好了，现在我们确定好坐标系长什么样了。接下来就是具体理解dim的含义了</p><h3 id="编程中坐标系-科学计算中array的dim"><a class="markdownIt-Anchor" href="#编程中坐标系-科学计算中array的dim"></a> 编程中坐标系-&gt;科学计算中array的dim</h3><blockquote><p>想必大家在学习numpy或者torch的时候都被各种函数方法中的dim参数折磨过，感觉怎么理解都有问题，不敢自己使用。因此，这边就是解决，这些函数中的dim到底是怎么确定的</p></blockquote><p>比如我们创建一个高维的array</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">A = torch.randint(<span class="number">2</span>, size = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([[[[0, 0, 1, 0],</span></span><br><span class="line"><span class="string">          [1, 1, 0, 1],</span></span><br><span class="line"><span class="string">          [0, 0, 0, 0]],</span></span><br><span class="line"><span class="string">         [[0, 0, 1, 1],</span></span><br><span class="line"><span class="string">          [1, 1, 1, 0],</span></span><br><span class="line"><span class="string">          [0, 1, 0, 0]]]])</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><p>举个我自己最初理解dim的笨方法：硬记x为第一维(dim = 0)， y为第二维(dim = 1)</p><p>实际上这种记法是比较低效的，最好的方法是我们怎么定义这个array就怎么记，比如我们这边创建的是一个size=(1, 2, 3, 4)，输出<code>len(A.shape)</code>为4，可以看到这就是个4维的tensor，那么我们顺理成章地就把把各个维度依次定义出来了。如dim = 0地指的就是size = 1的那层，dim = 1就是指size = 2的那层，依次类推。这样说可能有点抽象，因此我们回归简单的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">B = torch.randint(<span class="number">2</span>, size = (<span class="number">3</span>, <span class="number">2</span>))</span><br><span class="line">print(B)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([[1, 0],</span></span><br><span class="line"><span class="string">        [1, 1],</span></span><br><span class="line"><span class="string">        [0, 0]])</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><p>按照我们刚的定义，dim=0就是size=3的这一层，也就是我们坐标系中的X轴orX面。</p><p>好了，想必大家这个时候还不知道我在说什么。接下来就带大家来测试函数。</p><h4 id="测试dim在函数参数中的定义"><a class="markdownIt-Anchor" href="#测试dim在函数参数中的定义"></a> 测试dim在函数参数中的定义</h4><blockquote><p>提前指出把：要注意函数介绍中dim指的是&quot;<strong>沿着dim这个维度</strong>&quot;or&quot;<strong>删除、增加…dim这个维度(在dim这个维度上进行维度修改)</strong>&quot;</p></blockquote><h5 id="规约计算"><a class="markdownIt-Anchor" href="#规约计算"></a> 规约计算</h5><blockquote><p>一般是指分组聚合计算，表现结果就是会进行维度压缩</p></blockquote><h6 id="sum"><a class="markdownIt-Anchor" href="#sum"></a> sum</h6><blockquote><p>沿着dim累加元素</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">C = torch.randint(<span class="number">5</span>, size = (<span class="number">2</span>, <span class="number">5</span>))</span><br><span class="line">print(C)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([[2, 3, 3, 4, 0],</span></span><br><span class="line"><span class="string">        [1, 0, 2, 4, 4]])</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">print(C.sum(dim = <span class="number">0</span>))</span><br><span class="line">print(C.sum(dim = <span class="number">1</span>))</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([3, 3, 5, 8, 4])</span></span><br><span class="line"><span class="string">tensor([12, 11])</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><p>可以看到sum就是比较典型的&quot;沿着dim&quot;的例子，当dim = 0时就沿着dim = 0即x轴进行累加，由于sum这个函数会进行维度的压缩，所以最后的结果为<code>tensor([3, 3, 5, 8, 4])</code></p><h6 id="cumprod"><a class="markdownIt-Anchor" href="#cumprod"></a> cumprod</h6><blockquote><p>通过dim指定沿着某个维度计算累积</p><p>其他的函数还有cumsum、prod、sum，实际上两者是相同的，还有mean、median、var、std、min、max</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line">x = torch.Tensor([</span><br><span class="line">    [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],</span><br><span class="line">    [<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,]</span><br><span class="line">])</span><br><span class="line">print(torch.cumprod(x, dim = <span class="number">0</span>))</span><br><span class="line">print(torch.cumprod(x, dim = <span class="number">1</span>))</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([[ 2.,  3.,  4.,  5.,  6.],</span></span><br><span class="line"><span class="string">        [18., 24., 28., 30., 30.]])</span></span><br><span class="line"><span class="string">tensor([[2.0000e+00, 6.0000e+00, 2.4000e+01, 1.2000e+02, 7.2000e+02],</span></span><br><span class="line"><span class="string">        [9.0000e+00, 7.2000e+01, 5.0400e+02, 3.0240e+03, 1.5120e+04]])</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># min</span></span><br><span class="line">x = torch.Tensor([</span><br><span class="line">    [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],</span><br><span class="line">    [<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,]</span><br><span class="line">])</span><br><span class="line">print(torch.min(x, dim = <span class="number">0</span>))</span><br><span class="line">print(torch.min(x, dim = <span class="number">1</span>))</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">torch.return_types.min(</span></span><br><span class="line"><span class="string">    values=tensor([2., 3., 4., 5., 5.]),</span></span><br><span class="line"><span class="string">    indices=tensor([0, 0, 0, 0, 1]) )</span></span><br><span class="line"><span class="string">torch.return_types.min(</span></span><br><span class="line"><span class="string">    values=tensor([2., 5.]),</span></span><br><span class="line"><span class="string">    indices=tensor([0, 4]) )</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mean</span></span><br><span class="line">x = torch.Tensor([</span><br><span class="line">    [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],</span><br><span class="line">    [<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,]</span><br><span class="line">])</span><br><span class="line">print(torch.mean(x, dim = <span class="number">0</span>))</span><br><span class="line">print(torch.mean(x, dim = <span class="number">1</span>))</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([5.5000, 5.5000, 5.5000, 5.5000, 5.5000])</span></span><br><span class="line"><span class="string">tensor([4., 7.])</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><h5 id="索引-切片-连接"><a class="markdownIt-Anchor" href="#索引-切片-连接"></a> 索引、切片、连接</h5><h6 id="squeezeunsqueeze"><a class="markdownIt-Anchor" href="#squeezeunsqueeze"></a> squeeze，unsqueeze</h6><blockquote><p>unsqueeze关键字：参数dim指定在第几个维度增加&quot;[]&quot;，以提升维度</p><p>squeeze: unsqueeze的逆操作，删除dim指定的维度</p></blockquote><p>unsqueeze</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">D = torch.Tensor( [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>] )</span><br><span class="line">y = D.unsqueeze(dim = <span class="number">0</span>)</span><br><span class="line">print(y, y.shape)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([[1., 2., 3., 4., 5.]]) torch.Size([1, 5])</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">y = D.unsqueeze(dim = <span class="number">1</span>)</span><br><span class="line">print(y.shape)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([[1.],</span></span><br><span class="line"><span class="string">        [2.],</span></span><br><span class="line"><span class="string">        [3.],</span></span><br><span class="line"><span class="string">        [4.],</span></span><br><span class="line"><span class="string">        [5.]])  torch.Size([5, 1])</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><p>可以看到的是dim = 0的时候就是在dim = 0 维度上增加了一维， 使得变成了[1, 5]。第二个是在dim=1的位置加了一维变成了[5, 1] （这也就是为什么很多书上会说其实就是在dim维度上加了1）</p><p>▲这个典型就是要区分： <strong>在dim维度上</strong> 和 <strong>沿着dim维度</strong>了</p><p>squeeze</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">F = torch.Tensor( [ [<span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], </span><br><span class="line">                    [<span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span> ,<span class="number">55</span>]</span><br><span class="line">                  ])</span><br><span class="line">y = torch.squeeze(F, dim = <span class="number">0</span>)</span><br><span class="line">print(y, y.shape)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([[ 0.,  2.,  3.,  4.],</span></span><br><span class="line"><span class="string">        [22., 33., 44., 55.]]) torch.Size([2, 4])</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">y = torch.squeeze(F, dim = <span class="number">1</span>)</span><br><span class="line">print(y, y.shape)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([[ 0.,  2.,  3.,  4.],</span></span><br><span class="line"><span class="string">        [22., 33., 44., 55.]]) torch.Size([2, 4])</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><p>这边变换不大的原因是因为dim上没有size=1可以删除</p><h6 id="split"><a class="markdownIt-Anchor" href="#split"></a> split</h6><blockquote><p><strong>按(沿着)dim维度</strong>将tensor分成n个部分</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">x = torch.Tensor([</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>],</span><br><span class="line">    [<span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>]</span><br><span class="line">])</span><br><span class="line">print(x)</span><br><span class="line">print(torch.split(x, <span class="number">5</span>, dim = <span class="number">1</span>))</span><br><span class="line"><span class="comment"># 指定划分列表，表示依次有1,2,3,4个长度 (总和得跟dim维度上元素个数相同)</span></span><br><span class="line">print(torch.split(x, [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>], dim = <span class="number">1</span>))</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">tensor([[ 1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10.],</span></span><br><span class="line"><span class="string">        [10.,  9.,  8.,  7.,  6.,  5.,  4.,  3.,  2.,  1.]])</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">(tensor([# 可以看到这个是在x[:][6]的地方将tensor切成了两个</span></span><br><span class="line"><span class="string">[ 1.,  2.,  3.,  4.,  5.],</span></span><br><span class="line"><span class="string">        [10.,  9.,  8.,  7.,  6.]</span></span><br><span class="line"><span class="string">        ]), </span></span><br><span class="line"><span class="string">tensor([</span></span><br><span class="line"><span class="string">        [ 6.,  7.,  8.,  9., 10.],</span></span><br><span class="line"><span class="string">        [ 5.,  4.,  3.,  2.,  1.]</span></span><br><span class="line"><span class="string">        ]))</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">(tensor([[ 1.],</span></span><br><span class="line"><span class="string">        [10.]]), tensor([[2., 3.],</span></span><br><span class="line"><span class="string">        [9., 8.]]), tensor([[4., 5., 6.],</span></span><br><span class="line"><span class="string">        [7., 6., 5.]]), tensor([[ 7.,  8.,  9., 10.],</span></span><br><span class="line"><span class="string">        [ 4.,  3.,  2.,  1.]]))</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><h6 id="unbind"><a class="markdownIt-Anchor" href="#unbind"></a> unbind</h6><blockquote><p>删除某个维度后，返回所有切片组成的<strong>元组</strong></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">x = torch.rand(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="comment"># x = torch.rand(size=(1,2,3))</span></span><br><span class="line">print(x, x.shape)</span><br><span class="line">out = torch.unbind(x, dim = <span class="number">1</span>)</span><br><span class="line">print(out, len(out))</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([</span></span><br><span class="line"><span class="string">[</span></span><br><span class="line"><span class="string">            [0.3631, 0.6672, 0.9489],</span></span><br><span class="line"><span class="string">            [0.4944, 0.1606, 0.6122]</span></span><br><span class="line"><span class="string">]</span></span><br><span class="line"><span class="string">         ])torch.Size([1, 2, 3])</span></span><br><span class="line"><span class="string">         </span></span><br><span class="line"><span class="string">(</span></span><br><span class="line"><span class="string">    tensor([[0.3631, 0.6672, 0.9489]]), torch.Size([1, 3])</span></span><br><span class="line"><span class="string">    tensor([[0.4944, 0.1606, 0.6122]])torch.Size([1, 3])</span></span><br><span class="line"><span class="string">)      2</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">x = torch.Tensor([</span><br><span class="line">        [[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,],</span><br><span class="line">        [<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>],</span><br><span class="line">        [<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>]],</span><br><span class="line">    </span><br><span class="line">        [[<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>],</span><br><span class="line">        [<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>],</span><br><span class="line">        [<span class="number">21</span>,<span class="number">22</span>,<span class="number">23</span>,<span class="number">24</span>]]</span><br><span class="line">])</span><br><span class="line">print(x, x.shape)</span><br><span class="line">out = torch.unbind(x, dim = <span class="number">1</span>)</span><br><span class="line">print(out, len(out))</span><br><span class="line">print(out[<span class="number">0</span>].shape)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([</span></span><br><span class="line"><span class="string">        [[1,2,3,4,],</span></span><br><span class="line"><span class="string">        [5,6,7,8],</span></span><br><span class="line"><span class="string">        [9,10,11,12]],</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        [[13,14,15,16],</span></span><br><span class="line"><span class="string">        [17,18,19,20],</span></span><br><span class="line"><span class="string">        [21,22,23,24]]</span></span><br><span class="line"><span class="string">])        torch.Size([2, 3, 4])</span></span><br><span class="line"><span class="string">(tensor([</span></span><br><span class="line"><span class="string">[ 1.,  2.,  3.,  4.],</span></span><br><span class="line"><span class="string">        [13., 14., 15., 16.]]), </span></span><br><span class="line"><span class="string">tensor([</span></span><br><span class="line"><span class="string">[ 5.,  6.,  7.,  8.],</span></span><br><span class="line"><span class="string">        [17., 18., 19., 20.]]), </span></span><br><span class="line"><span class="string">tensor([</span></span><br><span class="line"><span class="string">[ 9., 10., 11., 12.],</span></span><br><span class="line"><span class="string">        [21., 22., 23., 24.]])) </span></span><br><span class="line"><span class="string">删除dim = 1, 把size[1] = 3的tensor拆成了3个tensor</span></span><br><span class="line"><span class="string">不要记这个： 因为dim0为z轴， dim1为x轴， dim2为y轴，所以删除dim1就是删除x轴，最后得到的就是yOz平面</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><h6 id="cat-stack"><a class="markdownIt-Anchor" href="#cat-stack"></a> cat、stack</h6><blockquote><p>通过关键字dim指定按哪个维度拼接</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">x = torch.randint(<span class="number">1</span>, <span class="number">100</span>, size=(<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line">print(x)</span><br><span class="line">y = torch.randint(<span class="number">1</span>, <span class="number">100</span>, size=(<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line">print(y)</span><br><span class="line">res = torch.cat((x, y), dim = <span class="number">1</span>)</span><br><span class="line">print(res)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">tensor([[71, 56, 44],</span></span><br><span class="line"><span class="string">        [64, 30, 87]])</span></span><br><span class="line"><span class="string">tensor([[39, 56, 63],</span></span><br><span class="line"><span class="string">        [68, 28, 65]])</span></span><br><span class="line"><span class="string">tensor([[71, 56, 44, 39, 56, 63],</span></span><br><span class="line"><span class="string">        [64, 30, 87, 68, 28, 65]])</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加强高维理解</span></span><br><span class="line">x = torch.randint(<span class="number">1</span>, <span class="number">100</span>, size=(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line">print(x)</span><br><span class="line">y = torch.randint(<span class="number">1</span>, <span class="number">100</span>, size=(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line">print(y)</span><br><span class="line">res = torch.cat((x, y), dim = <span class="number">1</span>)</span><br><span class="line">print(res)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([[[81, 79, 10,  8],</span></span><br><span class="line"><span class="string">         [47, 30, 48, 35],</span></span><br><span class="line"><span class="string">         [10, 57, 68, 88]],</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        [[33, 51, 60, 97],</span></span><br><span class="line"><span class="string">         [27, 14, 83, 51],</span></span><br><span class="line"><span class="string">         [51, 54, 79, 65]]])</span></span><br><span class="line"><span class="string">tensor([[[85,  9, 95, 95],</span></span><br><span class="line"><span class="string">         [29, 99, 12,  8],</span></span><br><span class="line"><span class="string">         [32,  8,  3, 84]],</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        [[13, 24, 46, 20],</span></span><br><span class="line"><span class="string">         [86, 83, 72, 10],</span></span><br><span class="line"><span class="string">         [76, 33, 79, 48]]])</span></span><br><span class="line"><span class="string">tensor([[[81, 79, 10,  8],</span></span><br><span class="line"><span class="string">         [47, 30, 48, 35],</span></span><br><span class="line"><span class="string">         [10, 57, 68, 88],</span></span><br><span class="line"><span class="string">         [85,  9, 95, 95],</span></span><br><span class="line"><span class="string">         [29, 99, 12,  8],</span></span><br><span class="line"><span class="string">         [32,  8,  3, 84]],</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        [[33, 51, 60, 97],</span></span><br><span class="line"><span class="string">         [27, 14, 83, 51],</span></span><br><span class="line"><span class="string">         [51, 54, 79, 65],</span></span><br><span class="line"><span class="string">         [13, 24, 46, 20],</span></span><br><span class="line"><span class="string">         [86, 83, 72, 10],</span></span><br><span class="line"><span class="string">         [76, 33, 79, 48]]]) torch.Size([2, 6, 4])</span></span><br><span class="line"><span class="string">dim=1即沿元素为3的方向上延伸，所以结果变成了6</span></span><br><span class="line"><span class="string">不要记：也可以理解为沿x轴方向</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><p>官方文档： <a href="https://pytorch.org/docs/stable/generated/torch.cat.html?highlight=cat#torch.cat" target="_blank" rel="noopener">https://pytorch.org/docs/stable/generated/torch.cat.html?highlight=cat#torch.cat</a></p><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3><h4 id="正确理解姿势"><a class="markdownIt-Anchor" href="#正确理解姿势"></a> 正确理解姿势</h4><p>dim是指tensor在shape上的顺序(可以这么理解)，如x的shape是２ｘ３ｘ４，也就是[2, 3, 4]。故可以这样一一对应来。<br>比如dim = 1就是按具有3个元素的那个轴操作，从而不用死记硬背那些dim = 0是对列操作还是对行操作了。</p><h4 id="强记三维"><a class="markdownIt-Anchor" href="#强记三维"></a> 强记三维</h4><p><img src="/2020/12/05/理解科学计算中的dim参数/3%E7%BB%B4.png" alt="3维"></p><p>但还是不提倡强记，因为一旦高维就理解不了了。</p><h2 id="附"><a class="markdownIt-Anchor" href="#附"></a> 附：</h2><h3 id="关于size的设置"><a class="markdownIt-Anchor" href="#关于size的设置"></a> 关于size的设置</h3><p>在ones、rand等函数上，size = (2,3,4)，我们在C++数组中<code>int arr[x][y][z]</code>的理解是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mo>∗</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">2*3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>然后z为4， 但实际上在科学运算中size = (2,3,4)的矩阵是有4个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>3</mn><mo>∗</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">3*4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span>的矩阵叠加而成，这边是要区分的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = np.random.randint(<span class="number">1</span>, <span class="number">100</span>, [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">array([[[<span class="number">26</span>, <span class="number">36</span>, <span class="number">31</span>, <span class="number">21</span>],</span><br><span class="line">        [<span class="number">74</span>, <span class="number">59</span>, <span class="number">79</span>, <span class="number">32</span>],</span><br><span class="line">        [<span class="number">77</span>, <span class="number">94</span>, <span class="number">81</span>, <span class="number">32</span>]],</span><br><span class="line"></span><br><span class="line">       [[<span class="number">72</span>, <span class="number">76</span>, <span class="number">85</span>, <span class="number">93</span>],</span><br><span class="line">        [<span class="number">66</span>, <span class="number">34</span>, <span class="number">80</span>, <span class="number">12</span>],</span><br><span class="line">        [<span class="number">99</span>, <span class="number">17</span>, <span class="number">98</span>, <span class="number">23</span>]]])</span><br><span class="line"></span><br><span class="line">x = torch.randint(<span class="number">1</span>, <span class="number">100</span>, size=(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line">print(x)</span><br><span class="line">print(x[<span class="number">1</span>][<span class="number">2</span>][<span class="number">3</span>])<span class="comment"># 高度索引为1的, 在x = 2, y = 3的元素就是76</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([[[63, 54, 57, 17],</span></span><br><span class="line"><span class="string">         [78, 64, 76, 44],</span></span><br><span class="line"><span class="string">         [96,  3, 59, 37]],</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        [[86,  3, 92, 84],</span></span><br><span class="line"><span class="string">         [89, 36,  8, 79],</span></span><br><span class="line"><span class="string">         [10, 87, 15, 76]]])</span></span><br><span class="line"><span class="string">tensor(76)</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line">x = torch.randint(<span class="number">1</span>, <span class="number">100</span>, size=(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>))</span><br><span class="line">print(x)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([[[[29, 50],</span></span><br><span class="line"><span class="string">          [50, 69],</span></span><br><span class="line"><span class="string">          [95, 70],</span></span><br><span class="line"><span class="string">          [21, 35]],</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         [[58, 65],</span></span><br><span class="line"><span class="string">          [15, 53],</span></span><br><span class="line"><span class="string">          [96, 25],</span></span><br><span class="line"><span class="string">          [11, 75]],</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         [[12, 71],</span></span><br><span class="line"><span class="string">          [36, 12],</span></span><br><span class="line"><span class="string">          [71, 92],</span></span><br><span class="line"><span class="string">          [87, 47]]],</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        [[[43, 89],</span></span><br><span class="line"><span class="string">          [88, 22],</span></span><br><span class="line"><span class="string">          [61, 56],</span></span><br><span class="line"><span class="string">          [47, 97]],</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         [[71,  7],</span></span><br><span class="line"><span class="string">          [44, 88],</span></span><br><span class="line"><span class="string">          [54, 32],</span></span><br><span class="line"><span class="string">          [15, 65]],</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         [[96, 22],</span></span><br><span class="line"><span class="string">          [90, 78],</span></span><br><span class="line"><span class="string">          [30, 85],</span></span><br><span class="line"><span class="string">          [65, 57]]]])</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><h3 id="关于如何看图"><a class="markdownIt-Anchor" href="#关于如何看图"></a> 关于如何看图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">res = np.uint8(np.random.rand(<span class="number">5</span>,<span class="number">5</span>,<span class="number">3</span>) * <span class="number">255</span>)</span><br><span class="line">print(res)</span><br><span class="line">plt.imshow(res)</span><br><span class="line">plt.show()</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">[[[ 19 228 231]</span></span><br><span class="line"><span class="string">  [106  28 252]</span></span><br><span class="line"><span class="string">  [191  98 139]</span></span><br><span class="line"><span class="string">  [171  71 202]</span></span><br><span class="line"><span class="string">  [105 101  93]]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> [[155 232 228]</span></span><br><span class="line"><span class="string">  [ 89 119  13]</span></span><br><span class="line"><span class="string">  [142 158 200]</span></span><br><span class="line"><span class="string">  [226 169  55]</span></span><br><span class="line"><span class="string">  [137 187 249]]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> [[202 217  96]</span></span><br><span class="line"><span class="string">  [214  44 133]</span></span><br><span class="line"><span class="string">  [144 253 213]</span></span><br><span class="line"><span class="string">  [ 82   4  28]</span></span><br><span class="line"><span class="string">  [172 242 238]]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> [[106 103  68]</span></span><br><span class="line"><span class="string">  [236 252  63]</span></span><br><span class="line"><span class="string">  [ 53  49  66]</span></span><br><span class="line"><span class="string">  [ 48 121  62]</span></span><br><span class="line"><span class="string">  [ 64  61 209]]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> [[158  80 221]</span></span><br><span class="line"><span class="string">  [220  12 199]</span></span><br><span class="line"><span class="string">  [214  40   3]</span></span><br><span class="line"><span class="string">  [169 142 144]</span></span><br><span class="line"><span class="string">  [140 112 148]]]</span></span><br><span class="line"><span class="string">  """</span></span><br></pre></td></tr></table></figure><p>画图效果如下：</p><p><img src="/2020/12/05/理解科学计算中的dim参数/%E5%9B%BE.png" alt="图"></p><p>可以得到的结果是针对<code>np.random.rand(5,5,3)</code>来说，三个通道被列成了三列，因此每一列就是一个通道。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">res = np.uint8(np.random.rand(<span class="number">5</span>,<span class="number">5</span>,<span class="number">3</span>) * <span class="number">255</span>)</span><br><span class="line">[[[ <span class="number">19</span> <span class="number">228</span> <span class="number">231</span>]</span><br><span class="line">  [<span class="number">106</span>  <span class="number">28</span> <span class="number">252</span>]</span><br><span class="line">  [<span class="number">191</span>  <span class="number">98</span> <span class="number">139</span>]</span><br><span class="line">  [<span class="number">171</span>  <span class="number">71</span> <span class="number">202</span>]</span><br><span class="line">  [<span class="number">105</span> <span class="number">101</span>  <span class="number">93</span>]]</span><br><span class="line">  </span><br><span class="line">res = np.uint8(np.random.rand(<span class="number">5</span>,<span class="number">6</span>,<span class="number">3</span>) * <span class="number">255</span>)</span><br><span class="line">[[[<span class="number">217</span> <span class="number">210</span> <span class="number">138</span>]</span><br><span class="line">  [  <span class="number">1</span> <span class="number">148</span>  <span class="number">10</span>]</span><br><span class="line">  [ <span class="number">25</span> <span class="number">231</span> <span class="number">128</span>]</span><br><span class="line">  [<span class="number">158</span> <span class="number">216</span>  <span class="number">73</span>]</span><br><span class="line">  [<span class="number">220</span> <span class="number">208</span> <span class="number">165</span>]</span><br><span class="line">  [ <span class="number">73</span> <span class="number">119</span> <span class="number">122</span>]]</span><br><span class="line"><span class="comment"># 单元中竖着的行数表示了图片的长，可以看到横着的长是6</span></span><br><span class="line"><span class="comment"># 而有多少个单元就以为着图片的宽， 可以看到竖着的宽是5==&gt; 所以第几个单元意味着第几行</span></span><br><span class="line"><span class="comment"># 所以[0][5][0]=73标志着右上角那一块绿色的第一个通道的值</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 可以设置后再绘图看看是不是右上角的图块变成白色的了</span></span><br><span class="line">res[<span class="number">0</span>][<span class="number">5</span>][<span class="number">0</span>] = res[<span class="number">0</span>][<span class="number">5</span>][<span class="number">1</span>] = res[<span class="number">0</span>][<span class="number">5</span>][<span class="number">2</span>] = <span class="number">255</span></span><br><span class="line">print(res[<span class="number">0</span>][<span class="number">5</span>][<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>总结： RGB图像的shape：(H, W, C)</p><h3 id="pytorchapi"><a class="markdownIt-Anchor" href="#pytorchapi"></a> pytorchAPI:</h3><p><a href="https://pytorch.org/docs/stable/torch.html#torch.arange" target="_blank" rel="noopener">https://pytorch.org/docs/stable/torch.html#torch.arange</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;😄理解numpy中array和pytorch中tensor的操作是开始科学运算的第一步!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先明白维度的感念：&lt;/p&gt;
&lt;h2 id=&quot;维度&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; h
      
    
    </summary>
    
    
      <category term="计算机基础知识" scheme="https://nymrli.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
      <category term="ML" scheme="https://nymrli.top/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>Lets learn 设计模式</title>
    <link href="https://nymrli.top/2020/12/03/Lets-learn-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>https://nymrli.top/2020/12/03/Lets-learn-设计模式/</id>
    <published>2020-12-03T03:36:53.000Z</published>
    <updated>2020-12-11T12:59:17.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>《研磨设计模式》和《设计模式就该这样学：基于经典框架源码和真实业务场景》的读书笔记</p></blockquote><h2 id="设计模式是什么"><a class="markdownIt-Anchor" href="#设计模式是什么"></a> 设计模式是什么？</h2><p>模式：从字面上理解，模，就是<u>模型、模板</u>的意思；式，就是方式、方法的意思。综合起来，所谓模式就是：可以作为模型或模板的方式或方法。再简单点说就是可以用来作为样板的方式或方法，类似于大家所熟悉的范例。</p><p>所以设计模式就是设计方面的模板，具体定义为：是指在软件开发中，<strong>经过验证的</strong>，用于解决在<strong>特定环境</strong>下、<strong>重复出现</strong>的、特定问题的<strong>解决方案</strong>。</p><h3 id="每个设计模式的构成如下"><a class="markdownIt-Anchor" href="#每个设计模式的构成如下"></a> 每个设计模式的构成如下：</h3><p>1、模式名称：模式的一个好记的名字</p><p>2、环境和问题：描述在什么环境下，出现什么特定的问题</p><p>3、解决方案：描述如何解决问题</p><p>4、效果：描述应用模式后的效果，以及可能带来的问题</p><h2 id="设计模式分类"><a class="markdownIt-Anchor" href="#设计模式分类"></a> 设计模式分类：</h2><p>为了缩小范围，我们仅讨论Java设计模式，也就是GoF著作中的23种设计模式，对于这23种设计模式，GoF把它们分为三类。</p><ul><li>创建型模式：抽象了对象实例化过程，用来帮助创建对象的实例。<ul><li>简单工厂模式</li><li>单例模式</li><li>工厂方法模式</li><li>抽象工厂模式</li><li>生成器模式</li><li>原型模式</li></ul></li><li>结构型模式：描述如何组合类和对象以获得更大的结构。<ul><li>外观模式</li><li>适配器模式</li><li>代理模式</li><li>组合模式</li><li>享元模式</li><li>装饰模式</li><li>桥接模式</li></ul></li><li>行为型模式：描述算法和对象间职责的分配。<ul><li>中介模式</li><li>观察者模式</li><li>命令模式</li><li>迭代器模式</li><li>模板模式</li><li>策略模式</li><li>状态模式</li><li>备忘录模式</li><li>解释器模式</li><li>责任链模式</li><li>访问者模式</li></ul></li></ul><p>《<strong>设计模式就该这样学：基于经典框架源码和真实业务场景</strong>》中提到了新的设计模式：</p><ul><li>对象池模式</li><li>规格模式</li><li>空对象模式</li><li>雇工模式</li></ul><h2 id="java中的面向接口编程"><a class="markdownIt-Anchor" href="#java中的面向接口编程"></a> JAVA中的面向接口编程</h2><h3 id="1java中接口的概念"><a class="markdownIt-Anchor" href="#1java中接口的概念"></a> 1.Java中接口的概念</h3><p>在Java中接口是一种特殊的抽象类，跟一般的抽象类相比，接口里面的所有方法都是抽象方法，接口里面的所有属性都是常量。也就是说，接口里面只有方法定义而没有任何方法实现。</p><h3 id="2接口用来干什么"><a class="markdownIt-Anchor" href="#2接口用来干什么"></a> 2.接口用来干什么</h3><p>通常用接口来定义实现类的外观，也就是实现类的行为定义，用来约束实现类的行为。接口就相当于一份契约，根据外部应用需要的功能，约定了实现类应该要实现的功能，但是具体的实现类除了实现接口约定的功能外，还可以根据需要实现其他一些功能，这是允许的，也就是说实现类的功能包含但不仅限于接口约束的功能。<br>通过使用接口，可以实现不相关类的相同行为，而不需考虑这些类之间的层次关系，接口就是实现类对外的外观。</p><h3 id="3接口的思想"><a class="markdownIt-Anchor" href="#3接口的思想"></a> 3.接口的思想</h3><p>根据接口的作用和用途，浓缩下来，<strong>接口的思想就是“封装隔离”</strong>。<br>通常提到的封装是指对数据的封装，但是这里的封装是指“对被隔离体的行为的封装”，或者是“对被隔离体的职责的封装”；而隔离指的是外部调用和内部实现，外部调用只能通过接口进行调用，外部调用是不知道内部具体实现的，也就是说外部调用和内部实现是被接口隔离开的。</p><h3 id="4使用接口的好处"><a class="markdownIt-Anchor" href="#4使用接口的好处"></a> 4.使用接口的好处</h3><p>由于外部调用和内部实现被接口隔离开了，那么只要接口不变，内部实现的变化就不会影响到外部应用，从而使得系统更灵活，具有更好的扩展性和可维护性，这也就是所谓“接口是系统可插拔性的保证”这句话的意思。</p><h3 id="5接口和抽象类的选择"><a class="markdownIt-Anchor" href="#5接口和抽象类的选择"></a> 5.接口和抽象类的选择</h3><p>既然接口是一种特殊的抽象类，那么在开发中，何时选用接口？何时选用抽象类呢？<br>对于它们的选择，在开发中是一个很重要的问题，特别总结两句话给大家：</p><ul><li>优先选用接口</li><li>在既要定义子类的行为，又要为子类提供公共的功能时应选择抽象类。</li></ul><h2 id="设计原则"><a class="markdownIt-Anchor" href="#设计原则"></a> 设计原则</h2><blockquote><p>面向对象的分析设计有很多原则，这些原则大多从<u>思想层面</u>给我们指出了面向对象分析设计的正确<u>方向</u>，是我们进行面向对象分析设计时应该尽力遵守的<u>准则</u>。而设计模式已经是针对某个场景下某些问题的某个解决方案。也就是说这些设计原则是思想上的指导，而<u>设计模式</u>是<u>实现上的手段</u>，因此设计模式也应该遵守这些原则，换句话说，设计模式就是这些设计原则的一些具体体现。</p></blockquote><h3 id="常见的面向对象设计原则solid原则"><a class="markdownIt-Anchor" href="#常见的面向对象设计原则solid原则"></a> 常见的面向对象设计原则——SOLID原则</h3><h4 id="单一职责原则srpsingle-responsibility-principle"><a class="markdownIt-Anchor" href="#单一职责原则srpsingle-responsibility-principle"></a> 单一职责原则SRP（Single Responsibility Principle）</h4><p>所谓单一职责原则，指的是，一个类应该仅有一个引起它变化的原因。总体来说就是一个class、interface、method只负责一项职责。<br>这里变化的原因就是所说的“职责”，如果一个类有多个引起它变化的原因，那么也就意味着这个类有多个职责，再进一步说，就是把多个职责耦合在一起了。<br>这会造成职责的相互影响，可能一个职责的变化，会影响到其他职责的实现，甚至引起其他职责随着变化，这种设计是很脆弱的。<br>这个原则看起来是最简单和最好理解的，但是实际上是很难完全做到的，难点在于如何区分“职责”。这是个没有标准量化的东西，哪些算职责、到底这个职责有多大的粒度、这个职责如何细化等。<em>因此，在实际开发中，这个原则也是最容易违反的</em>。</p><p><strong>▲一句话总结</strong>：一个类只干一件事，从而便于立即额，提高代码可读性</p><h4 id="开放-关闭原则ocpopen-closed-principle"><a class="markdownIt-Anchor" href="#开放-关闭原则ocpopen-closed-principle"></a> 开放-关闭原则OCP（Open-Closed Principle）</h4><blockquote><p>所谓开放-关闭原则，指的是，一个类应该对扩展开放，对修改关闭。一般也被简称为开闭原则，开闭原则是设计中非常核心的一个原则。</p><p>OCP的核心思想是面对抽象编程，强调用抽象构建框架，用实现拓展细节，从而额提高软件系统的可复用性和可维护性。</p></blockquote><p>开闭原则要求的是，类的行为是可以扩展的，而且是在不修改已有代码的情况下进行扩展，也不必改动已有的源代码或者二进制代码。<br>看起来好像是矛盾的，怎么样才能实现呢？<br>实现开闭原则的关键就在于合理地抽象、分离出变化与不变化的部分，为<u>变化的部分预留下可扩展的方式</u>，比如，<u>钩子方法或是动态组合对象</u>等。</p><p>这个原则看起来也很简单。但事实上，一个系统要全部做到遵守开闭原则，几乎是不可能的，也没这个必要。适度的抽象可以提高系统的灵活性，使其可扩展、可维护，但是过度地抽象，会大大增加系统的复杂程度。应该在需要改变的地方应用开闭原则就可以了，而不用到处使用，从而陷入过度设计。</p><p><strong>▲一句话总结</strong>：对扩展开放，对修改关闭，从而降低维护带来的新风险</p><h4 id="里氏替换原则lspliskov-substitution-principle"><a class="markdownIt-Anchor" href="#里氏替换原则lspliskov-substitution-principle"></a> 里氏替换原则LSP（Liskov Substitution Principle）</h4><p>所谓里氏替换原则，指的是，子类型<strong>必须能够</strong>替换掉它们的父类型。这很明显是一种多态的使用情况，它可以避免在多态的应用中，出现某些隐蔽的错误。</p><blockquote><p>这条原则的定义是比较抽象的，可以理解为</p><ol><li>一个软件实体如果使用一个父类，则一定适用于其子类，即要求所有引用父类的地方必须能透明地使用子类对象，子类能够代替父类对象，而程序逻辑不变。</li><li>子类可以拓展父类的功能，但不能改变父类原有的功能，根据这个理解，我们可以将DIP定义总结如下：<ol><li>子类可以实现父类的抽象方法，但不能覆盖父类的非抽象方法</li><li>子类可以增加自己特有的方法</li><li>当子类的方法重载父类的方法时，方法的前置条件（入参）要比父类的更宽松</li><li>当子类的方法实现父类的方法时（重写、重载或实现抽象方法），方法的后置条件（输出、返回值）要比父类的更严格或相等</li></ol></li></ol></blockquote><p><strong>▲一句话总结</strong>：子类重写方法功能改变，不应该影响父类方法的含义，从而防止继承泛滥</p><h4 id="依赖倒置原则dipdependence-inversion-principle"><a class="markdownIt-Anchor" href="#依赖倒置原则dipdependence-inversion-principle"></a> 依赖倒置原则DIP（Dependence Inversion Principle）</h4><p>所谓依赖倒置原则，指的是，要依赖于抽象，不要依赖于具体类。要做到依赖倒置，典型的应该做到：</p><ul><li>高层模块不应该依赖于底层模块，二者都应该依赖于抽象。</li><li>抽象不应该依赖于具体实现，具体实现应该依赖于抽象。</li></ul><p>很多人觉得，层次化调用的时候，应该是高层调用“底层所拥有的接口”，这是一种典型的误解。事实上，一般高层模块包含对业务功能的处理和业务策略选择，应该被重用，是高层模块去影响底层的具体实现。<br>因此，这个底层的接口应该是由高层提出的，然后由底层实现的。也就是说底层的接口的所有权在高层模块，因此是一种所有权的倒置。<br>倒置接口所有权，这就是著名的Hollywood（好莱坞）原则：不要找我们，我们会联系你。</p><p><strong>一句话总结</strong>：高层不应该依赖底层，从而更利用代码结构的省级扩展</p><h4 id="接口隔离原则ispinterface-segregation-principle"><a class="markdownIt-Anchor" href="#接口隔离原则ispinterface-segregation-principle"></a> 接口隔离原则ISP（Interface Segregation Principle）</h4><blockquote><p>指用多个专门的接口，而不使用单一的总接口，客户端不应该依赖它不需要的接口（不需要的接口对客户来说不可见）。</p><p>这个原则告诉我们的注意点为：</p><ul><li>一个雷对另一个类的依赖应该建立在最小接口上</li><li>建立单一接口，不要建立庞大臃肿的接口</li><li>尽量细化接口，接口中的方法越少越好（适量少）</li></ul><p>这些“高聚合、低耦合”要求的设计思想，使得类具有很好的可读性、可扩展性和可维护性。</p></blockquote><p>所谓接口隔离原则，指的是，不应该强迫客户依赖于他们不用的方法。<br>这个原则用来处理那些比较“庞大”的接口，这种接口通常会有较多的操作声明，涉及到很多的职责。客户在使用这样的接口的时候，通常会有很多他不需要的方法，这些方法对于客户来讲，就是一种接口污染，相当于强迫用户在一大堆“垃圾方法”中去寻找他需要的方法。<br>因此，这样的接口应该被分离，应该按照不同的客户需要来分离成为针对客户的接口。<u>这样的接口中，只包含客户需要的操作声明</u>，这样既方便了客户的使用，也可以避免因误用接口而导致的错误。</p><p>分离接口的方式，除了直接进行代码分离之外，还可以使用委托来分离接口，在能够支持多重继承的语言中，还可以采用多重继承的方式进行分离。</p><p><strong>▲一句话总结</strong>：一个接口只干一件事，从而功能解耦，高聚合、低耦合</p><hr><p>demo：针对动物Animal接口，显然需要将飞的、游的隔离开，因此需要针对不同动物的行为来设计不同的接口。</p><p><img src="/2020/12/03/Lets-learn-设计模式/ISP.jpg" alt="ISP"></p><h3 id="其他一些设计原则"><a class="markdownIt-Anchor" href="#其他一些设计原则"></a> 其他一些设计原则</h3><h4 id="最少知道原则lkpleast-knowledge-principle迪米特原则lod"><a class="markdownIt-Anchor" href="#最少知道原则lkpleast-knowledge-principle迪米特原则lod"></a> 最少知道原则LKP（Least Knowledge Principle）——迪米特原则LoD</h4><blockquote><p>指一个对象应该对其他对象保持最少的了解，尽量降低类与类之间的耦合。强调之和朋友交流、不和陌生人说话，出现在成员变量、方法的输入、输出参数中的类可以被称为成员朋友类，出现在方法体内部的类不属于朋友类。</p></blockquote><p>这个原则用来指导我们在设计系统的时候，应该尽量减少对象之间的交互，对象只和自己的朋友谈话，<u>也就是只和自己的朋友交互</u>，从而松散类之间的耦合。通过松散类之间的耦合来降低类之间的相互依赖，这样在修改系统的某一个部分的时候，就不会影响其他的部分，从而使得系统具有更好的可维护性。</p><p>那么究竟哪些对象才能被当作朋友呢？最少知识原则提供了一些指导。</p><ul><li>当前对象本身。</li><li>通过方法的参数传递进来的对象。</li><li>当前对象所创建的对象。——成员变量</li><li>当前对象的实例变量所引用的对象。——成员变量</li><li>方法内所创建或实例化的对象。 —&gt; ???</li></ul><p>请注意！！！1-5条的意思是，<mark>如果某对象是调用其他方法的返回结果，不要调用该对象的方法！</mark>即要求我们只调用以下范围的方法：</p><p>（1）该对象本身；<br>（2）被当作方法的<strong>参数</strong>而传递进来的对象；<br>（3）此方法所<strong>创建或实例化</strong>的任何对象；<br>（4）对象的任何组件；</p><p>总之，最少知识原则要求我们的方法调用必须保持在一定的界限范围之内，尽量减少对象的依赖关系。</p><p><strong>▲一句话总结</strong>：不该知道的不要知道，从而减少代码臃肿</p><h4 id="合成复用原则"><a class="markdownIt-Anchor" href="#合成复用原则"></a> 合成复用原则</h4><blockquote><p>尽量使用对象组合或对象聚合的方式来实现代码复用，而不是继承关系达到代码复用的目的。</p></blockquote><p><strong>▲一句话总结</strong>：尽量使用组合实现代码复用而不是用继承，从而降低代码耦合</p><p>除了上面提到的这些原则，还有一些大家都熟知的原则，比如：</p><ul><li>面向接口编程；</li><li>优先使用组合，而非继承。</li></ul><p>当然也还有很多大家不是很熟悉的原则，比如：</p><ul><li>一个类需要的数据应该隐藏在类的内部；</li><li>类之间应该零耦合，或者只有传导耦合，换句话说，类之间要么没有关系，要么只使用另一个类的接口提供的操作；</li><li>在水平方向上尽可能统一地分布系统功能；</li></ul><h1 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h1><p>Github图说设计模式: <a href="https://design-patterns.readthedocs.io/zh_CN/latest/creational_patterns/simple_factory.html" target="_blank" rel="noopener">https://design-patterns.readthedocs.io/zh_CN/latest/creational_patterns/simple_factory.html</a></p><p><a href="http://www.cnblogs.com/zishengY/p/8869823.html" target="_blank" rel="noopener">设计模式就该这么学：以微信订阅号来讲观察者模式(第三篇)</a></p><p><a href="http://www.cnblogs.com/zishengY/p/7056948.html" target="_blank" rel="noopener">观察者模式实际应用：监听线程，意外退出线程后自动重启</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;《研磨设计模式》和《设计模式就该这样学：基于经典框架源码和真实业务场景》的读书笔记&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;设计模式是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#设计模式是什么&quot;&gt;&lt;/
      
    
    </summary>
    
    
      <category term="计算机基础知识" scheme="https://nymrli.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>玩玩油猴脚本Tampermonkey</title>
    <link href="https://nymrli.top/2020/12/01/%E7%8E%A9%E7%8E%A9%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC/"/>
    <id>https://nymrli.top/2020/12/01/玩玩油猴脚本/</id>
    <published>2020-12-01T07:32:53.000Z</published>
    <updated>2020-12-01T12:19:48.468Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>由于在研究如何优化网盘直链下载助手**<a href="https://github.com/ziyuanshu/baidupan" target="_blank" rel="noopener">baidupan</a><strong>，如何将直链的结果提取出来供IDM批量下载。由于</strong><a href="https://github.com/ziyuanshu/baidupan" target="_blank" rel="noopener">baidupan</a>**是用油猴脚本写的，因此借机学习一下。</p></blockquote><blockquote></blockquote><h2 id="greasy-fork"><a class="markdownIt-Anchor" href="#greasy-fork"></a> <a href="https://greasyfork.org/zh-CN/" target="_blank" rel="noopener">Greasy Fork</a></h2><blockquote><p>这里是一个提供用户脚本的网站。</p></blockquote><h2 id="tampermonkey"><a class="markdownIt-Anchor" href="#tampermonkey"></a> <a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo" target="_blank" rel="noopener">Tampermonkey</a></h2><blockquote><p>其为浏览器插件，目前主流浏览器皆支持，油猴叫法来源：「油猴」是从「Greasemonkey」来的。「Greasemonkey」最初是运行在Firefox浏览器中的脚本，「Tampermonkey」在Google Chrome浏览器上实现了几乎相同的功能，所以也被中文用户称之为「油猴」。</p></blockquote><h3 id="新建"><a class="markdownIt-Anchor" href="#新建"></a> 新建：</h3><p><img src="/2020/12/01/玩玩油猴脚本/E:%5Chexo%5Csource_posts%5C%E7%8E%A9%E7%8E%A9%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%5C%E6%96%B0%E5%BB%BA.jpg" alt="新建"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         New Userscript</span></span><br><span class="line"><span class="comment">// @namespace    http://tampermonkey.net/</span></span><br><span class="line"><span class="comment">// @version      0.1</span></span><br><span class="line"><span class="comment">// @description  try to take over the world!</span></span><br><span class="line"><span class="comment">// @author       You</span></span><br><span class="line"><span class="comment">// @match        https://www.1949la.com/post/10351.html</span></span><br><span class="line"><span class="comment">// @grant        none</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="meta">    'use strict'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Your code here...</span></span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h2 id=""><a class="markdownIt-Anchor" href="#"></a> </h2><h3 id="脚本编写方法"><a class="markdownIt-Anchor" href="#脚本编写方法"></a> 脚本编写方法</h3><h4 id="注释功能注释"><a class="markdownIt-Anchor" href="#注释功能注释"></a> 注释——功能注释</h4><p>首先来看看脚本的内容，上面是一大排注释，这些注释可以非常有用的，它表明了脚本的各个属性。下面来简单介绍一下。</p><table><thead><tr><th>属性名</th><th>作用</th></tr></thead><tbody><tr><td>name</td><td>油猴脚本的名字</td></tr><tr><td>namespace</td><td>命名空间，类似于Java的包名，用来区分相同名称的脚本，一般写成作者名字或者网址就可以了</td></tr><tr><td>version</td><td>脚本版本，油猴脚本的更新会读取这个版本号</td></tr><tr><td>description</td><td>描述，用来告诉用户这个脚本是干什么用的</td></tr><tr><td>author</td><td>作者名字</td></tr><tr><td>match</td><td>只有匹配的网址才会执行对应的脚本，例如<code>*</code>、<code>http://*</code>、<code>http://www.baidu.com/*</code>等，参见<a href="https://developer.chrome.com/extensions/match_patterns" target="_blank" rel="noopener">谷歌开发者文档</a></td></tr><tr><td>grant</td><td><strong>指定脚本运行所需权限</strong>，如果脚本拥有相应的权限，就可以调用油猴扩展提供的API与浏览器进行交互。如果设置为<code>none</code>的话，则不使用沙箱环境，脚本会直接运行在网页的环境中，这时候无法使用大部分油猴扩展的API。如果不指定的话，油猴会默认添加几个最常用的API</td></tr><tr><td>require</td><td>如果脚本依赖其他js库的话，可以使用require指令，在运行脚本之前先加载其他库，常见用法是加载jquery</td></tr><tr><td>connect</td><td>当用户使用<a href="https://www.tampermonkey.net/documentation.php?version=4.9&amp;ext=dhdg&amp;show=dhdg#GM_xmlhttpRequest" target="_blank" rel="noopener">GM_xmlhttpRequest</a>请求远程数据的时候，需要使用connect指定允许访问的域名，支持域名、子域名、IP地址以及<code>*</code>通配符</td></tr><tr><td>updateURL</td><td>脚本更新网址，当油猴扩展检查更新的时候，会尝试从这个网址下载脚本，然后比对版本号确认是否更新</td></tr></tbody></table><p>grant中几个常用的权限：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// @grant GM_setValue</span></span><br><span class="line"><span class="comment">// @grant GM_getValue</span></span><br><span class="line"><span class="comment">// @grant GM_setClipboard</span></span><br></pre></td></tr></table></figure><p>注意， match写法由于支持通配符，可以写的通用些:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// @match        *://10.10.244.11/a70.htm*</span></span><br><span class="line"><span class="comment">// @match        *://p.njupt.edu.cn/a70.htm*</span></span><br></pre></td></tr></table></figure><h4 id="脚本权限"><a class="markdownIt-Anchor" href="#脚本权限"></a> 脚本权限</h4><p>下面简单介绍一下grant指令那里可以填写的一些权限，详情请查看<a href="https://www.tampermonkey.net/documentation.php" target="_blank" rel="noopener">油猴脚本文档</a>。这里就简单介绍几个常用的，可以调用的函数全部以GM_作为开头。</p><table><thead><tr><th>权限名</th><th>功能</th></tr></thead><tbody><tr><td>unsafeWindow</td><td>允许脚本可以完整访问原始页面，包括原始页面的脚本和变量。</td></tr><tr><td>GM_getValue(name,defaultValue)</td><td>从油猴扩展的存储中访问数据。可以设置默认值，在没成功获取到数据的时候当做初始值。如果保存的是日期等类型的话，取出来的数据会变成文本，需要自己转换一下。</td></tr><tr><td>GM_setValue(name,value)</td><td>将数据保存到存储中</td></tr><tr><td>GM_xmlhttpRequest(details)</td><td><strong>异步访问网页数据</strong>的API，这个方法比较复杂，有大量参数和回调，详情请参考官方文档。</td></tr><tr><td>GM_setClipboard(data, info)</td><td>将数据复制到剪贴板中，第一个参数是要复制的数据，第二个参数是MIME类型，用于指定复制的数据类型。</td></tr><tr><td>GM_log(message)</td><td>将日志打印到控制台中，可以使用F12开发者工具查看。</td></tr><tr><td>GM_addStyle(css)</td><td>像网页中添加自己的样式表。</td></tr><tr><td>GM_notification(details, ondone), GM_notification(text, title, image, onclick)</td><td>设置网页通知，请参考文档获取用法。</td></tr><tr><td>GM_openInTab(url, loadInBackground)</td><td>在浏览器中打开网页，可以设置是否在后台打开等几个选项</td></tr></tbody></table><p>还有一些API没有介绍，请大家直接查看官方文档吧。</p><h5 id="gm_xmlhttprequest-demo"><a class="markdownIt-Anchor" href="#gm_xmlhttprequest-demo"></a> GM_xmlhttpRequest DEMO：</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">GM_xmlhttpRequest(&#123;</span><br><span class="line">    method: <span class="string">"POST"</span>,</span><br><span class="line">    url: url,</span><br><span class="line">    headers: &#123;</span><br><span class="line">        <span class="string">"Content-Type"</span>: <span class="string">"application/x-www-form-urlencoded;charset=utf-8"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    data: form_data,</span><br><span class="line">    onload: <span class="function"><span class="keyword">function</span>(<span class="params">response</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"请求成功"</span>);</span><br><span class="line">        <span class="keyword">let</span> success = <span class="string">"认证成功页"</span>;</span><br><span class="line">        <span class="keyword">let</span> resp = response.responseText;</span><br><span class="line">        <span class="keyword">let</span> flag = resp.indexOf(success);</span><br><span class="line">        <span class="keyword">if</span> (flag === <span class="number">-1</span>) &#123;</span><br><span class="line">            do_login_old(username, password);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//alert("登录成功");</span></span><br><span class="line">            <span class="built_in">window</span>.location.href = <span class="string">"https://cn.bing.com/"</span>; <span class="comment">//避免重复登录导致瞬间三个设备同时登录的状态</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    onerror: <span class="function"><span class="keyword">function</span>(<span class="params">response</span>) </span>&#123;</span><br><span class="line">        do_login_old(username, password);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="mycode"><a class="markdownIt-Anchor" href="#mycode"></a> MyCode</h4><blockquote><p>我的第一个脚本，简简单单打开自己的个人博客吧，修改如下</p><ul><li><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;   <span class="comment">// @match        https://www.baidu.com</span></span><br><span class="line">&gt;   <span class="comment">// @grant GM_openInTab</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ul></blockquote><blockquote><ul><li><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;       <span class="keyword">const</span> URL = <span class="string">"https://nymrli.top"</span>;</span><br><span class="line">&gt;       GM_openInTab(URL, <span class="literal">true</span>)</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ul></blockquote><blockquote><p>访问百度的时候就会在当前session中打开我的个人博客了，(URL, true)不会切换到URL上</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         New Userscript</span></span><br><span class="line"><span class="comment">// @namespace    http://tampermonkey.net/</span></span><br><span class="line"><span class="comment">// @version      0.1</span></span><br><span class="line"><span class="comment">// @description  try to take over the world!</span></span><br><span class="line"><span class="comment">// @author       Mrli</span></span><br><span class="line"><span class="comment">// @match        https://www.baidu.com</span></span><br><span class="line"><span class="comment">// @grant GM_openInTab</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="meta">    'use strict'</span>;</span><br><span class="line">    <span class="keyword">const</span> URL = <span class="string">"https://nymrli.top"</span>;</span><br><span class="line">    GM_openInTab(URL, <span class="literal">true</span>);<span class="comment">// 打开URL后当前tab不变; false会切换当前tab为URL页面</span></span><br><span class="line">    <span class="comment">//     GM_openInTab(URL, &#123;incognito :true &#125;);   options中貌似有有限级, 加了incognito后,insert会失效</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Your code here...</span></span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h5 id="bilibili倍速"><a class="markdownIt-Anchor" href="#bilibili倍速"></a> Bilibili倍速</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         BilibiliFast</span></span><br><span class="line"><span class="comment">// @namespace    http://tampermonkey.net/</span></span><br><span class="line"><span class="comment">// @version      0.1</span></span><br><span class="line"><span class="comment">// @description  try to take over the world!</span></span><br><span class="line"><span class="comment">// @author       You</span></span><br><span class="line"><span class="comment">// @match        https://www.bilibili.com/video/*</span></span><br><span class="line"><span class="comment">// @require      https://code.jquery.com/jquery-2.1.4.min.js</span></span><br><span class="line"><span class="comment">// @grant        none</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="meta">    'use strict'</span>;</span><br><span class="line">    <span class="comment">// Your code here...</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"导入成功"</span>);</span><br><span class="line">    $(<span class="string">"body"</span>).append(<span class="string">`&lt;div id='video_set' style="position:fixed; right:10px; top:10px; z-index:9999; background:red"&gt;</span></span><br><span class="line"><span class="string">             &lt;input id="setPlay" value=1 type="number" style="padding:10px;"&gt;</span></span><br><span class="line"><span class="string">       &lt;/div&gt;`</span></span><br><span class="line">       );</span><br><span class="line">    <span class="comment">// $(document).append()会报错Cannot read property 'createDocumentFragment' of undefined</span></span><br><span class="line"></span><br><span class="line">    $(<span class="built_in">document</span>).on(<span class="string">"change"</span>, <span class="string">"#video_set #setPlay"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">             <span class="built_in">console</span>.log(<span class="keyword">this</span>.value);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">this</span>.value &lt;= <span class="number">16</span>)&#123;</span><br><span class="line">                <span class="built_in">document</span>.querySelector(<span class="string">'video'</span>).playbackRate=<span class="keyword">this</span>.value;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                alert(<span class="string">"最大为16"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h3 id="学习baidupan源码"><a class="markdownIt-Anchor" href="#学习baidupan源码"></a> <strong>学习<a href="https://github.com/ziyuanshu/baidupan" target="_blank" rel="noopener">baidupan</a>源码</strong></h3><p>学到新东西：SweetAlert2 漂亮可定制的 JavaScript 弹窗</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// @require           https://cdn.jsdelivr.net/npm/sweetalert2@9</span></span><br><span class="line"><span class="comment">// 基础语法：</span></span><br><span class="line">Swal.fire(&#123;</span><br><span class="line">title: <span class="string">"是否删除"</span>,</span><br><span class="line">text: <span class="string">"是否删除？一旦提交，无法恢复！"</span>,</span><br><span class="line">icon: <span class="string">"warning"</span>,</span><br><span class="line">showCancelButton: <span class="literal">true</span>,</span><br><span class="line">confirmButtonColor: <span class="string">"#DD6B55"</span>,</span><br><span class="line">confirmButtonText: <span class="string">"确定"</span>,</span><br><span class="line">cancelButtonText: <span class="string">"取消"</span></span><br><span class="line">&#125;).then(<span class="function">(<span class="params">isConfirm</span>) =&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 是否成功在then里面用if判断</span></span><br><span class="line"><span class="keyword">if</span> (isConfirm.value) &#123;</span><br><span class="line">Swal.fire(<span class="string">"删除成功"</span>, <span class="string">"成功"</span>, <span class="string">"success"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">Swal.fire(<span class="string">"取消操作"</span>, <span class="string">"点击了取消"</span>, <span class="string">"error"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>来源于checkVersion</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkUpdate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    setValue(<span class="string">'up'</span>,<span class="number">0</span>)</span><br><span class="line">    GM_xmlhttpRequest(&#123;</span><br><span class="line">        method: <span class="string">"GET"</span>,</span><br><span class="line">        url: <span class="string">`https://api.baiduyun.wiki/update?ver=<span class="subst">$&#123;version&#125;</span>`</span>,</span><br><span class="line">        responseType: <span class="string">'json'</span>,</span><br><span class="line">        onload: <span class="function"><span class="keyword">function</span> (<span class="params">r</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">let</span> res = r.response</span><br><span class="line">            setValue(<span class="string">'lastest_version'</span>, res.version)</span><br><span class="line">            userAgent = res.ua</span><br><span class="line">            ids = res.ids</span><br><span class="line">            <span class="keyword">if</span> (res.vcode === <span class="number">200</span> &amp;&amp; compareVersion(res.version,version)) &#123;</span><br><span class="line">                setValue(<span class="string">'up'</span>,<span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (res.scode != getValue(<span class="string">'scode'</span>)) &#123;</span><br><span class="line">                <span class="keyword">let</span> dom = $(<span class="string">'&lt;div&gt;&lt;img style="width: 250px;margin-bottom: 10px;" src="https://img.tool22.com/image/5f365d403c89f.jpg"&gt;&lt;input class="swal2-input" id="scode" type="text" placeholder="请输入暗号，可扫描上方二维码免费获取!"&gt;&lt;/div&gt;'</span>)</span><br><span class="line">                Swal.fire(&#123;</span><br><span class="line">                    title: <span class="string">"初次使用请输入暗号"</span>,</span><br><span class="line">                    html: dom[<span class="number">0</span>],</span><br><span class="line">                    allowOutsideClick: <span class="literal">false</span>,</span><br><span class="line">                    confirmButtonText: <span class="string">'确定'</span></span><br><span class="line">                &#125;).then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (res.scode == $(<span class="string">'#scode'</span>).val()) &#123;</span><br><span class="line">                        setValue(<span class="string">'scode'</span>, res.scode)</span><br><span class="line">                        setValue(<span class="string">'init'</span>, <span class="number">1</span>)</span><br><span class="line">                        Toast.fire(&#123;</span><br><span class="line">                            icon: <span class="string">'success'</span>,</span><br><span class="line">                            text: <span class="string">'暗号正确，正在初始化中。。。'</span>,</span><br><span class="line">                        &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                            history.go(<span class="number">0</span>)<span class="comment">// go() 方法可加载历史列表中的某个具体的页面。（-1上一个页面，1前进一个页面, 0就是当前页面)</span></span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        setValue(<span class="string">'init'</span>, <span class="number">0</span>)</span><br><span class="line">                        Swal.fire(&#123;</span><br><span class="line">                            title: <span class="string">"🔺🔺🔺"</span>,</span><br><span class="line">                            text: <span class="string">'暗号不正确，请通过微信扫码免费获取'</span>,</span><br><span class="line">                            imageUrl: <span class="string">'https://img.tool22.com/image/5f365d403c89f.jpg'</span>,</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                loadPanhelper()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将console.log输出分组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clog</span>(<span class="params">c1, c2, c3</span>) </span>&#123;</span><br><span class="line">    c1 = c1 ? c1 : <span class="string">''</span></span><br><span class="line">    c2 = c2 ? c2 : <span class="string">''</span></span><br><span class="line">    c3 = c3 ? c3 : <span class="string">''</span></span><br><span class="line">    <span class="built_in">console</span>.group(<span class="string">'[网盘直链下载助手]'</span>)<span class="comment">// 分组</span></span><br><span class="line">    <span class="built_in">console</span>.log(c1, c2, c3)</span><br><span class="line">    <span class="built_in">console</span>.groupEnd()      <span class="comment">// 要想将其他内容显示在外面得取消分组</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="程序的逻辑"><a class="markdownIt-Anchor" href="#程序的逻辑"></a> 程序的逻辑</h4><ul><li><p>开始:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(() =&gt; &#123;</span><br><span class="line">    <span class="comment">//阻止在其他网站运行</span></span><br><span class="line">    <span class="keyword">if</span> (hostname.match(<span class="regexp">/(pan|yun).baidu.com/i</span>)) &#123;</span><br><span class="line">        <span class="keyword">let</span> plugin = <span class="keyword">new</span> PanPlugin()</span><br><span class="line">        plugin.init()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>进行检查更新-&gt;创建菜单</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">PanPlugin</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    clog(<span class="string">'RPC：'</span>, ariaRPC)</span><br><span class="line">    <span class="keyword">this</span>.init = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        main()</span><br><span class="line">        addGMStyle()</span><br><span class="line">        checkUpdate()</span><br><span class="line">        <span class="keyword">if</span> (getValue(<span class="string">'SETTING_H'</span>)) createHelp()</span><br><span class="line">        createMenu()</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>主要的应用是在checkUpdate中的loadPanhelper完成的，其会根据参数创建PanHelper(网盘页面的下载助手)或PanShareHelper(分享页面的下载助手)对象， 显然PanHelper就是我们最想分析的</li></ul></li></ul><h4 id="panhelper逻辑"><a class="markdownIt-Anchor" href="#panhelper逻辑"></a> PanHelper逻辑</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">PanHelper</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> yunData, sign, timestamp, bdstoken, logid, fid_list</span><br><span class="line">    <span class="keyword">let</span> fileList = [], selectFileList = [], batchLinkList = [], batchLinkListAll = [], linkList = []</span><br><span class="line">    <span class="keyword">let</span> dialog, searchKey</span><br><span class="line">    <span class="keyword">let</span> panAPIUrl = location.protocol + <span class="string">"//"</span> + location.host + <span class="string">"/api/"</span></span><br><span class="line">    <span class="keyword">let</span> restAPIUrl = location.protocol + <span class="string">"//pcs.baidu.com/rest/2.0/pcs/"</span></span><br><span class="line">    <span class="keyword">let</span> clientAPIUrl = location.protocol + <span class="string">"//pan.baidu.com/rest/2.0/"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.init = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        yunData = unsafeWindow.yunData</span><br><span class="line">        <span class="keyword">if</span> (yunData === <span class="literal">undefined</span>) &#123;</span><br><span class="line">            clog(<span class="string">'初始化信息:'</span>, yunData)</span><br><span class="line">            clog(<span class="string">'页面未正常加载，或者百度已经更新！'</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        initVar()</span><br><span class="line">        registerEventListener()</span><br><span class="line">        addButton()</span><br><span class="line">        createIframe()</span><br><span class="line">        dialog = <span class="keyword">new</span> Dialog(&#123;<span class="attr">addCopy</span>: <span class="literal">true</span>&#125;)</span><br><span class="line">        clog(<span class="string">'下载助手加载成功！当前版本：'</span>, version)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>最核心的逻辑：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//我的网盘 - 获取PCS下载地址</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPCSBatchLink</span>(<span class="params">callback</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> fsids = []</span><br><span class="line">    $.each(selectFileList, (index, element) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (element.isdir == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        fsids.push(element.fs_id)</span><br><span class="line">    &#125;)</span><br><span class="line">    fsids = <span class="built_in">encodeURIComponent</span>(<span class="built_in">JSON</span>.stringify(fsids))</span><br><span class="line">    <span class="keyword">let</span> link = clientAPIUrl + <span class="string">`xpan/multimedia?method=filemetas&amp;access_token=undefined&amp;fsids=<span class="subst">$&#123;fsids&#125;</span>&amp;dlink=1`</span></span><br><span class="line">    GM_xmlhttpRequest(&#123;</span><br><span class="line">        method: <span class="string">"GET"</span>,</span><br><span class="line">        responseType: <span class="string">'json'</span>,</span><br><span class="line">        headers: &#123;<span class="string">"User-Agent"</span>: userAgent&#125;,</span><br><span class="line">        url: link,</span><br><span class="line">        onload: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> response = res.response</span><br><span class="line">            <span class="keyword">if</span> (response.errno === <span class="number">0</span>) &#123;</span><br><span class="line">                callback(response.list)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h2><h3 id="官方文档"><a class="markdownIt-Anchor" href="#官方文档"></a> <a href="https://www.tampermonkey.net/documentation.php#GM_openInTab" target="_blank" rel="noopener">官方文档</a></h3><h3 id="tampermonkey油猴用户脚本api文档-教程"><a class="markdownIt-Anchor" href="#tampermonkey油猴用户脚本api文档-教程"></a> <a href="https://www.1949la.com/post/10351.html" target="_blank" rel="noopener">Tampermonkey油猴用户脚本API文档-教程</a></h3><h3 id="脚本debug建议"><a class="markdownIt-Anchor" href="#脚本debug建议"></a> 脚本debug建议</h3><h4 id="jquery使用"><a class="markdownIt-Anchor" href="#jquery使用"></a> jquery使用</h4><p>踩了几天坑，最后总结一下编写油猴脚本的一点步骤。首先要思考脚本的实现方式，需要用到什么API和权限，然后填写好脚本的注释信息。</p><p>然后将功能封装成函数的形式，最后在脚本末尾调用实现的函数。写的差不多的时候复制到浏览器中尝试运行。</p><p>遇到困难的时候，可能需要直接在F12开发者工具里进行调试。<u>有些网页不用jQuery，为了方便，我们需要自己将jQuery导入到页面中，可以将下面的代码复制到浏览器控制台中。</u></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> jq = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">jq.src = <span class="string">"https://cdn.staticfile.org/jquery/3.4.1/jquery.min.js"</span>;</span><br><span class="line"><span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>].appendChild(jq);</span><br></pre></td></tr></table></figure><h4 id="debug方法"><a class="markdownIt-Anchor" href="#debug方法"></a> debug方法：</h4><p>第一种方法就是最原始的打印日志，可以利用<code>console.log</code>和<code>GM_log</code>来将关键信息打印出来，上面的脚本就是我靠打印日志一点点发现各种参数错误的。说实话这种办法有点笨。</p><p>第二种就是利用浏览器的调试功能(推荐)，在脚本需要调试的地方插入<code>debugger;</code>语句，然后在打开F12开发者工具的情况下刷新页面，就会发现网页已经暂停在相应位置上。这样就可以利用F12开发者工具进行单步调试、监视变量等操作了。</p><h3 id="将文章同步复制到csdn和思否编辑器的脚本demo"><a class="markdownIt-Anchor" href="#将文章同步复制到csdn和思否编辑器的脚本demo"></a> 将文章同步复制到Csdn和思否编辑器的脚本demo：</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         copy_jianshu_to_csdn_and_segmentfault</span></span><br><span class="line"><span class="comment">// @namespace    https://github.com/techstay/myscripts</span></span><br><span class="line"><span class="comment">// @version      0.1</span></span><br><span class="line"><span class="comment">// @description  将简书文章复制到csdn和思否编辑器中</span></span><br><span class="line"><span class="comment">// @author       techstay</span></span><br><span class="line"><span class="comment">// @match        https://editor.csdn.net/md/</span></span><br><span class="line"><span class="comment">// @match https://segmentfault.com/write</span></span><br><span class="line"><span class="comment">// @match https://www.jianshu.com/writer*</span></span><br><span class="line"><span class="comment">// @require      https://cdn.staticfile.org/jquery/3.4.1/jquery.min.js</span></span><br><span class="line"><span class="comment">// @require      https://cdn.bootcss.com/jqueryui/1.12.1/jquery-ui.min.js</span></span><br><span class="line"><span class="comment">// @grant GM_setValue</span></span><br><span class="line"><span class="comment">// @grant GM_getValue</span></span><br><span class="line"><span class="comment">// @grant GM_deleteValue</span></span><br><span class="line"><span class="comment">// @grant unsafeWindow</span></span><br><span class="line"><span class="comment">// @grant GM_setClipboard</span></span><br><span class="line"><span class="comment">// @grant window.close</span></span><br><span class="line"><span class="comment">// @grant window.focus</span></span><br><span class="line"><span class="comment">// @grant GM_openInTab</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="meta">    'use strict'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> SF_URL = <span class="string">'https://segmentfault.com/write'</span></span><br><span class="line">    <span class="keyword">const</span> CSDN_URL = <span class="string">'https://editor.csdn.net/md/'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> SF_TITLE = <span class="string">'sf_title'</span></span><br><span class="line">    <span class="keyword">const</span> SF_CONTENT = <span class="string">'sf_content'</span></span><br><span class="line">    <span class="keyword">const</span> CSDN_TITLE = <span class="string">'csdn_title'</span></span><br><span class="line">    <span class="keyword">const</span> CSDN_CONTENT = <span class="string">'csdn_content'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">saveArticle</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        GM_setValue(CSDN_TITLE, $(<span class="string">'._24i7u'</span>).val())</span><br><span class="line">        GM_setValue(CSDN_CONTENT, $(<span class="string">'#arthur-editor'</span>).val())</span><br><span class="line">        GM_setValue(SF_TITLE, $(<span class="string">'._24i7u'</span>).val())</span><br><span class="line">        GM_setValue(SF_CONTENT, $(<span class="string">'#arthur-editor'</span>).val())</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">copyToCsdn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> title = GM_getValue(CSDN_TITLE, <span class="string">''</span>)</span><br><span class="line">        <span class="keyword">var</span> content = GM_getValue(CSDN_CONTENT, <span class="string">''</span>)</span><br><span class="line">        <span class="keyword">if</span> (title != <span class="string">''</span> &amp;&amp; content != <span class="string">''</span>) &#123;</span><br><span class="line">            $(<span class="string">'.article-bar__title'</span>).delay(<span class="number">2000</span>).queue(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">'.article-bar__title'</span>).val(title)</span><br><span class="line">                $(<span class="string">'.editor__inner'</span>).text(content)</span><br><span class="line">                GM_deleteValue(CSDN_TITLE)</span><br><span class="line">                GM_deleteValue(CSDN_CONTENT)</span><br><span class="line">                $(<span class="keyword">this</span>).dequeue()</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">copyToSegmentFault</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> title = GM_getValue(SF_TITLE, <span class="string">''</span>)</span><br><span class="line">            <span class="keyword">var</span> content = GM_getValue(SF_CONTENT, <span class="string">''</span>)</span><br><span class="line">            <span class="keyword">if</span> (title != <span class="string">''</span> &amp;&amp; content != <span class="string">''</span>) &#123;</span><br><span class="line">                $(<span class="string">'#title'</span>).delay(<span class="number">2000</span>).queue(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    $(<span class="string">'#title'</span>).val(title)</span><br><span class="line">                    GM_setClipboard(content, <span class="string">'text'</span>)</span><br><span class="line">                    GM_deleteValue(SF_TITLE)</span><br><span class="line">                    GM_deleteValue(SF_CONTENT)</span><br><span class="line">                    $(<span class="keyword">this</span>).dequeue()</span><br><span class="line">                &#125;)</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">addCopyButton</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">'body'</span>).append(<span class="string">'&lt;div id="copyToCS"&gt;双击复制到CSDN和思否&lt;/div&gt;'</span>)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).css(<span class="string">'width'</span>, <span class="string">'200px'</span>)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).css(<span class="string">'position'</span>, <span class="string">'absolute'</span>)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).css(<span class="string">'top'</span>, <span class="string">'70px'</span>)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).css(<span class="string">'left'</span>, <span class="string">'350px'</span>)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).css(<span class="string">'background-color'</span>, <span class="string">'#28a745'</span>)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).css(<span class="string">'color'</span>, <span class="string">'white'</span>)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).css(<span class="string">'font-size'</span>, <span class="string">'large'</span>)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).css(<span class="string">'z-index'</span>, <span class="number">100</span>)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).css(<span class="string">'border-radius'</span>, <span class="string">'25px'</span>)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).css(<span class="string">'text-align'</span>, <span class="string">'center'</span>)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).dblclick(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            saveArticle()</span><br><span class="line">            GM_openInTab(SF_URL, <span class="literal">true</span>)</span><br><span class="line">            GM_openInTab(CSDN_URL, <span class="literal">true</span>)</span><br><span class="line">            <span class="comment">// GM_openInTab(url, options)在新标签页打开URL。options可选的值：</span></span><br><span class="line">            <span class="comment">// active ：新标签页获得焦点; insert：新标签页在当前页面之后添加; setParent：当新标签页关闭后，焦点给回当前页面 ; incognito: 新标签页在隐身模式或私有模式窗口打开. </span></span><br><span class="line">            <span class="comment">// options可以写成&#123; active: true, insert: true, setParent :true &#125;</span></span><br><span class="line">            <span class="comment">// GM_openInTab(url, loadInBackground)：loadInBackground 可以是 Boolean 类型，如果是 true，则当前 tab 不变，如果是 false，则当前 tab 变为新打开的 tab.  当前tab就是当前标签页(显示的页面)</span></span><br><span class="line">        &#125;)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).draggable()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">window</span>.location.href.startsWith(<span class="string">'https://www.jianshu.com'</span>)) &#123;</span><br><span class="line">            addCopyButton()</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">window</span>.location.href.startsWith(SF_URL)) &#123;</span><br><span class="line">            copyToSegmentFault()</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">window</span>.location.href.startsWith(CSDN_URL)) &#123;</span><br><span class="line">            copyToCsdn()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>▲推荐：<a href="https://blog.csdn.net/u011054333/article/details/104101806" target="_blank" rel="noopener">油猴脚本编写教程</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;由于在研究如何优化网盘直链下载助手**&lt;a href=&quot;https://github.com/ziyuanshu/baidupan&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;baidupan&lt;/a&gt;&lt;strong&gt;，如何将直链
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>浙大2020春夏-人工智能习题3——AIforOthello</title>
    <link href="https://nymrli.top/2020/12/01/%E6%B5%99%E5%A4%A72020%E6%98%A5%E5%A4%8F-%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B9%A0%E9%A2%981%E2%80%94%E2%80%94AIforOthello/"/>
    <id>https://nymrli.top/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/</id>
    <published>2020-12-01T04:02:33.000Z</published>
    <updated>2020-12-11T03:17:16.417Z</updated>
    
    <content type="html"><![CDATA[<h2 id="something-about-othello"><a class="markdownIt-Anchor" href="#something-about-othello"></a> something about Othello</h2><h3 id="黑白棋规则"><a class="markdownIt-Anchor" href="#黑白棋规则"></a> 黑白棋规则</h3><p>传统的黑白棋棋盘由 8 x 8 方格组成。开局时，棋盘中央的4格先置黑白相间的4颗棋子 (详见下图)，并由<strong>黑子先行</strong>。</p><p>首步由黑子先下；下子时；新子必须与棋盘上任一己方棋子形成一条或多条 (横、竖、斜) 直线，并夹着对方棋子；由新子及旧子连成的直线之间，必须存有一颗或以上对方的棋子。如图，黑子开局时之可行棋步有以下4格:</p><p>双方交替下子；倘若任何一方没有棋步可行，则其必须将下子权利相认予对手；另在双方均无子可下的情况下，游戏自动结束。</p><p>游戏结束后，拥子较多一方为胜；倘若双方棋数相同的，则为和局。</p><h3 id="黑白棋基本策略"><a class="markdownIt-Anchor" href="#黑白棋基本策略"></a> 黑白棋基本策略</h3><h4 id="占角子及固定子"><a class="markdownIt-Anchor" href="#占角子及固定子"></a> 占角子及固定子</h4><blockquote><p>按照黑白棋的玩法，其中一子落在佔角处的，该棋子将无法再被翻转。</p></blockquote><h4 id="危险方块"><a class="markdownIt-Anchor" href="#危险方块"></a> 危险方块</h4><p>在棋盘上，棋子下在某些方块中，比起其它下子位置更为安全。档游戏开始，一般建议尽量将棋子下于棋盘 4 x 4格的中心范围内 (下图以半透明白子显示)；且应避免将棋子下于靠近边角的方块内(下图以半透明黑子显示)，棋子落于靠近边角的方块中，会让对手更容易占据边角相邻的位置。</p><p><img src="https://www.eothello.com/images/basic_strategy_othello_2.png" alt="Basic strategy - danger zones"></p><h4 id="行动力"><a class="markdownIt-Anchor" href="#行动力"></a> 行动力</h4><p>初学者的普遍错误一般在开盘后<u>不断占子</u>，但在黑白棋中这并<u>不是一个好的策略</u>。<strong>较好的策略为专注于限制对方的落子选项，而交易进入这种策略的方法为占少子</strong>。在下面的例子中，白子虽然只有一颗棋子，但其可轻而易具的在4步内赢得整盘棋。</p><p>from : <a href="https://www.eothello.com/" target="_blank" rel="noopener">https://www.eothello.com/</a></p><p>较为强悍的othello AI: <a href="https://playpager.com/play-reversi/index.html" target="_blank" rel="noopener">https://playpager.com/play-reversi/index.html</a></p><h2 id="ai-for-othello-coding"><a class="markdownIt-Anchor" href="#ai-for-othello-coding"></a> AI for Othello Coding</h2><h3 id="search-before-coding"><a class="markdownIt-Anchor" href="#search-before-coding"></a> search before Coding：</h3><ul><li><a href="https://github.com/Unispac" target="_blank" rel="noopener">Unispac</a>/<strong><a href="https://github.com/Unispac/Alpha-Othello" target="_blank" rel="noopener">Alpha-Othello</a></strong>——浙大学长的（集成了很多Agent）</li><li><a href="https://github.com/YuMu0" target="_blank" rel="noopener">YuMu0</a>/<strong><a href="https://github.com/YuMu0/ReversiAI" target="_blank" rel="noopener">ReversiAI</a></strong>——博弈树、α-β剪枝（有UI；单文件，结构有点差）</li><li><a href="https://github.com/1011497938" target="_blank" rel="noopener">1011497938</a>/<strong><a href="https://github.com/1011497938/Othello" target="_blank" rel="noopener">Othello</a></strong>——MCTS、Q-learning（在浙大学长的基础上增加了几类agent）</li><li><a href="https://github.com/im0qianqian" target="_blank" rel="noopener">im0qianqian</a>/<strong><a href="https://github.com/im0qianqian/Reversi-based-RL" target="_blank" rel="noopener">Reversi-based-RL</a></strong>——毕设，文档说明：<a href="https://www.dreamwings.cn/reversi/3013.html" target="_blank" rel="noopener">https://www.dreamwings.cn/reversi/3013.html</a></li><li><a href="https://github.com/faded53222" target="_blank" rel="noopener">faded53222</a>/<strong><a href="https://github.com/faded53222/Othello" target="_blank" rel="noopener">Othello</a></strong>——B站用户</li></ul><hr><h2 id="mycode"><a class="markdownIt-Anchor" href="#mycode"></a> MyCode</h2><blockquote><p>部分借鉴了<a href="https://github.com/int8/monte-carlo-tree-search" target="_blank" rel="noopener">tic-tac-toe井字棋MCTS</a>的代码框架</p></blockquote><p>MSCT-target： Start：从可行位置进行树探索 -&gt; End：一个价值比较高的action</p><p><mark>代码中容易忘记的是，所有的board在rollout的时候都应该保存的临时变量，即确保node的self.board是不变的；board设计的时候，不要限定死color（move），这样可选择性更好</mark></p><p>虽然加上了corner，但是对站中级还是赢少输多， 看了下比赛棋盘，发现对corner的限制并不奏效，希望能找到更好的方法吧。</p><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/mct-seq.png" alt="mct-seq"></p><h3 id="战力"><a class="markdownIt-Anchor" href="#战力"></a> 战力</h3><h4 id="basic"><a class="markdownIt-Anchor" href="#basic"></a> basic</h4><h5 id="初级win"><a class="markdownIt-Anchor" href="#初级win"></a> 初级WIN</h5><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/E:%5Chexo%5Csource_posts%5CAI-for-Othello%5Cbasic_%E5%88%9D%E7%BA%A7win-%E4%B8%AD%E7%BA%A7Lost%5C%E5%88%9D%E7%BA%A7%5C12.png" alt="12"></p><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/E:%5Chexo%5Csource_posts%5CAI-for-Othello%5Cbasic_%E5%88%9D%E7%BA%A7win-%E4%B8%AD%E7%BA%A7Lost%5C%E5%88%9D%E7%BA%A7%5C21.png" alt="21"></p><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/E:%5Chexo%5Csource_posts%5CAI-for-Othello%5Cbasic_%E5%88%9D%E7%BA%A7win-%E4%B8%AD%E7%BA%A7Lost%5C%E5%88%9D%E7%BA%A7%5C22.png" alt="22"></p><h5 id="中级loss"><a class="markdownIt-Anchor" href="#中级loss"></a> 中级LOSS：</h5><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/E:%5Chexo%5Csource_posts%5CAI-for-Othello%5Cbasic_%E5%88%9D%E7%BA%A7win-%E4%B8%AD%E7%BA%A7Lost%5C%E4%B8%AD%E7%BA%A7%5C11.png" alt="11"></p><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/E:%5Chexo%5Csource_posts%5CAI-for-Othello%5Cbasic_%E5%88%9D%E7%BA%A7win-%E4%B8%AD%E7%BA%A7Lost%5C%E4%B8%AD%E7%BA%A7%5C12.png" alt="12"></p><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/E:%5Chexo%5Csource_posts%5CAI-for-Othello%5Cbasic_%E5%88%9D%E7%BA%A7win-%E4%B8%AD%E7%BA%A7Lost%5C%E4%B8%AD%E7%BA%A7%5C21.png" alt="21"></p><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/E:%5Chexo%5Csource_posts%5CAI-for-Othello%5Cbasic_%E5%88%9D%E7%BA%A7win-%E4%B8%AD%E7%BA%A7Lost%5C%E4%B8%AD%E7%BA%A7%5C22.png" alt="22"></p><h4 id="加上corner"><a class="markdownIt-Anchor" href="#加上corner"></a> 加上corner：</h4><h5 id="中级tie"><a class="markdownIt-Anchor" href="#中级tie"></a> 中级tie</h5><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/E:%5Chexo%5Csource_posts%5CAI-for-Othello%5C%E5%8A%A0%E4%B8%8Acorner%5C11.png" alt="11"></p><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/E:%5Chexo%5Csource_posts%5CAI-for-Othello%5C%E5%8A%A0%E4%B8%8Acorner%5C12.png" alt="12"></p><h5 id="中级win"><a class="markdownIt-Anchor" href="#中级win"></a> 中级WIN</h5><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/E:%5Chexo%5Csource_posts%5CAI-for-Othello%5C%E5%8A%A0%E4%B8%8Acorner%5C21.png" alt="21"></p><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/E:%5Chexo%5Csource_posts%5CAI-for-Othello%5C%E5%8A%A0%E4%B8%8Acorner%5C22.png" alt="22"></p><h4 id="高级"><a class="markdownIt-Anchor" href="#高级"></a> 高级：</h4><h2 id="时间安排"><a class="markdownIt-Anchor" href="#时间安排"></a> 时间安排</h2><p>2020/12/2 上网冲浪，搜集相关资料，看了<a href="https://github.com/Unispac" target="_blank" rel="noopener">Unispac</a>/**<a href="https://github.com/Unispac/Alpha-Othello" target="_blank" rel="noopener">Alpha-Othello</a>**的设计报告。</p><p>2020/12/4 结合<a href="https://github.com/1011497938/Othello" target="_blank" rel="noopener">代码</a>和[视频](<a href="https://www.bilibili.com/video/BV1JD4y1Q7mV?from=search&amp;seid=6045698802301050730" target="_blank" rel="noopener">AI如何下棋？直观了解蒙特卡洛树搜索MCTS！！！</a>理了遍MCTS的原理， 列出了大致的框架， 明天开始编写逻辑代码。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;something-about-othello&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#something-about-othello&quot;&gt;&lt;/a&gt; something about Othello&lt;/h2&gt;
&lt;h3 id=&quot;黑白棋规
      
    
    </summary>
    
    
      <category term="ZJU" scheme="https://nymrli.top/tags/ZJU/"/>
    
      <category term="ML" scheme="https://nymrli.top/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>fork curlconverter for Better</title>
    <link href="https://nymrli.top/2020/12/01/fork-curlconverter-for-Better/"/>
    <id>https://nymrli.top/2020/12/01/fork-curlconverter-for-Better/</id>
    <published>2020-12-01T02:43:34.000Z</published>
    <updated>2020-12-01T04:00:56.428Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>终于12月了，又是一个月初，定个flag，pr一个Gitcode</p><p>由于之前写Python爬虫的时候，从<a href="https://github.com/NickCarneiro/curlconverter" target="_blank" rel="noopener">curlconverter</a>受惠很多，并且看到<a href="https://github.com/NickCarneiro/curlconverter/issues/22" target="_blank" rel="noopener">issue #22: Add generator for Java</a>中有Java版本的需求还未完成，所以目标就是完成JAVA for curl</p></blockquote><p>curlconverter提供了一个网页版： <a href="https://curl.trillworks.com/%EF%BC%8C" target="_blank" rel="noopener">https://curl.trillworks.com/，</a> 其实其本质上也是用js完成的，功能如README中所写：</p><h2 id="readme"><a class="markdownIt-Anchor" href="#readme"></a> README</h2><h3 id="install"><a class="markdownIt-Anchor" href="#install"></a> Install</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save curlconverter</span><br></pre></td></tr></table></figure><h3 id="usage"><a class="markdownIt-Anchor" href="#usage"></a> Usage</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> curlconverter = <span class="built_in">require</span>(<span class="string">'curlconverter'</span>);</span><br><span class="line"></span><br><span class="line">curlconverter.toPython(<span class="string">"curl 'http://en.wikipedia.org/' -H 'Accept-Encoding: gzip, deflate, sdch' -H 'Accept-Language: en-US,en;q=0.8' -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8' -H 'Referer: http://www.wikipedia.org/' -H 'Cookie: GeoIP=US:Albuquerque:35.1241:-106.7675:v4; uls-previous-languages=%5B%22en%22%5D; mediaWiki.user.sessionId=VaHaeVW3m0ymvx9kacwshZIDkv8zgF9y; centralnotice_buckets_by_campaign=%7B%22C14_enUS_dsk_lw_FR%22%3A%7B%22val%22%3A%220%22%2C%22start%22%3A1412172000%2C%22end%22%3A1422576000%7D%2C%22C14_en5C_dec_dsk_FR%22%3A%7B%22val%22%3A3%2C%22start%22%3A1417514400%2C%22end%22%3A1425290400%7D%2C%22C14_en5C_bkup_dsk_FR%22%3A%7B%22val%22%3A1%2C%22start%22%3A1417428000%2C%22end%22%3A1425290400%7D%7D; centralnotice_bannercount_fr12=22; centralnotice_bannercount_fr12-wait=14' -H 'Connection: keep-alive' --compressed"</span>);</span><br></pre></td></tr></table></figure><p>Returns a string of Python code like:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">cookies = &#123;</span><br><span class="line">    <span class="string">'GeoIP'</span>: <span class="string">'US:Albuquerque:35.1241:-106.7675:v4'</span>,</span><br><span class="line">    <span class="string">'uls-previous-languages'</span>: <span class="string">'%5B%22en%22%5D'</span>,</span><br><span class="line">    <span class="string">'mediaWiki.user.sessionId'</span>: <span class="string">'VaHaeVW3m0ymvx9kacwshZIDkv8zgF9y'</span>,</span><br><span class="line">    <span class="string">'centralnotice_buckets_by_campaign'</span>: <span class="string">'%7B%22C14_enUS_dsk_lw_FR%22%3A%7B%22val%22%3A%220%22%2C%22start%22%3A1412172000%2C%22end%22%3A1422576000%7D%2C%22C14_en5C_dec_dsk_FR%22%3A%7B%22val%22%3A3%2C%22start%22%3A1417514400%2C%22end%22%3A1425290400%7D%2C%22C14_en5C_bkup_dsk_FR%22%3A%7B%22val%22%3A1%2C%22start%22%3A1417428000%2C%22end%22%3A1425290400%7D%7D'</span>,</span><br><span class="line">    <span class="string">'centralnotice_bannercount_fr12'</span>: <span class="string">'22'</span>,</span><br><span class="line">    <span class="string">'centralnotice_bannercount_fr12-wait'</span>: <span class="string">'14'</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, sdch'</span>,</span><br><span class="line">    <span class="string">'Accept-Language'</span>: <span class="string">'en-US,en;q=0.8'</span>,</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'</span>,</span><br><span class="line">    <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span>,</span><br><span class="line">    <span class="string">'Referer'</span>: <span class="string">'http://www.wikipedia.org/'</span>,</span><br><span class="line">    <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response = requests.get(<span class="string">'http://en.wikipedia.org/'</span>, headers=headers, cookies=cookies)</span><br></pre></td></tr></table></figure><p>想要参加开发，最重要的就是看清master提出的contributing要求：</p><h3 id="contributing"><a class="markdownIt-Anchor" href="#contributing"></a> Contributing</h3><blockquote><p>I’d rather write programs to write programs than write programs.</p><p>Dick Sites, Digital Equipment Corporation, September 1985</p></blockquote><p>Make sure you’re running node 12 or greater. The test suite will fail on older versions of node.</p><p>If you add a new generator, make sure to update the list of supported languages in <a href="https://github.com/NickCarneiro/curlconverter/blob/master/bin/cli.js" target="_blank" rel="noopener">cli.js</a> or else it won’t be accessible from the command line. Further, you’ll want to update test.js and index.js for your new generator to make it part of the testing.</p><p>If you want to add new functionality, start with a test.</p><ul><li>Create a file containing the curl command in <code>fixtures/curl_commands</code> with a descriptive filename like <code>post_with_headers.txt</code></li><li>Create a file containing the output in <code>fixtures/python_output/</code> with a matching filename (but different extension) like <code>post_with_headers.py</code></li><li>Run tests with <code>npm test</code>.</li><li>If your filenames match correctly, you should see one failing test. Fix it by modifying the parser in <code>util.js</code> or the generators in <code>generators/</code></li></ul><p>The parser generates a generic data structure consumed by code generator functions.</p><p>You can run a specific test with this command:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node test.js --test=test_name</span><br></pre></td></tr></table></figure><p>where “test_name” is a file (without extension) in <code>fixtures/curl_commands</code></p><p>You can run a specific test with this command:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node test.js --language=R</span><br></pre></td></tr></table></figure><p>I recommend setting this up with a debugger so you can see exactly what the parser is passing to the generator. Here’s my Intellij run configuration for a single test:</p><p>Before submitting a PR, please check that your JS code conforms to the code style enforced by <a href="https://standardjs.com/" target="_blank" rel="noopener">standardjs</a>. Use the following to fix your code if it doesn’t:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ standard --fix my_file.js</span><br></pre></td></tr></table></figure><p>If you get stuck, please reach out via email. I am always willing to hop on a google hangout and pair program.</p><h4 id="翻译"><a class="markdownIt-Anchor" href="#翻译"></a> 翻译：</h4><blockquote><p>相比写程序，我更愿意写出能写程序的程序。——Dick Sites, Digital Equipment Corporation, September 1985</p></blockquote><p>确保你正在运行node 12或更高版本。测试套件在旧版本的node上会失败。</p><p>如果你添加了一个新的生成器，请确保更新cli.js中的支持语言列表，否则它将无法从命令行访问。此外，你还要为你的新生成器更新test.js和index.js，使其成为测试的一部分。</p><p>如果您想添加新功能，请从测试开始。</p><ul><li>在<code>fixtures/curl_commands</code>中创建一个包含curl命令的文件，文件名为post_with_headers.txt。</li><li>在<code>fixtures/python_output/</code>中创建一个包含输出的文件，并使用一个匹配的文件名（但不同的扩展名），比如<code>post_with_headers.py</code>。</li><li>用<code>npm test</code>运行测试。</li><li>如果您的文件名正确匹配，您应该看到一个失败的测试。通过修改<code>util.js</code>中的解析器或<code>generators/</code>中的生成器来解决。</li></ul><p>解析器需要生成一个通用数据结构给代码生成器函数。</p><p>你可以用这个命令运行一个特定的测试。<code>node test.js --test=test_name</code>， 其中 &quot;test_name &quot;是<code>fixtures/curl_commands</code>中的一个文件（没有扩展名）。</p><p>你可以用这个命令运行一个特定的测试。<code>node test.js --language=R</code>，我建议用调试器来设置，这样你就可以看到解析器传递给生成器的具体内容。这是我的Intellij运行配置，用于单次测试。</p><p><img src="https://github.com/NickCarneiro/curlconverter/raw/master/docs/intellijconfig.png" alt="Screenshot of intellij debug configuration"></p><p>在提交PR之前，请检查您的JS代码是否符合standardjs执行的代码风格。如果不符合的话，请使用下面的方法来修正你的代码。<code>$ standard --fix my_file.js.</code></p><p>如果你遇到困难，请通过电子邮件联系我。我总是愿意跳上google上线、校验程序。</p><hr><h2 id="分析其他contributor的pr"><a class="markdownIt-Anchor" href="#分析其他contributor的pr"></a> 分析其他contributor的PR</h2><h3 id="dainisgorbunovs"><a class="markdownIt-Anchor" href="#dainisgorbunovs"></a> <strong><a href="https://github.com/DainisGorbunovs" target="_blank" rel="noopener">DainisGorbunovs</a></strong></h3><ul><li>PR说明：<a href="https://github.com/NickCarneiro/curlconverter/pull/154" target="_blank" rel="noopener">https://github.com/NickCarneiro/curlconverter/pull/154</a><ul><li>Thanks / what I found helpful：<ul><li>可以使用nc -l 3000，然后在另一个标签页中 curl -X POST <a href="http://localhost:3000" target="_blank" rel="noopener">http://localhost:3000</a> --data “hello=world” (感谢 @NickCarneiro)</li><li>可以使用Wireshark来检查（抓包）</li><li>可以使用<strong>httpbin</strong>服务（用途：个人感觉是将curl结果跟generate结果对比）</li></ul></li></ul></li><li>commit详情：<a href="https://github.com/DainisGorbunovs/curlconverter/commit/5cfedbf595177aa912b78f0fde05f15da81f11f9" target="_blank" rel="noopener">https://github.com/DainisGorbunovs/curlconverter/commit/5cfedbf595177aa912b78f0fde05f15da81f11f9</a></li></ul><hr><h2 id="java-for-curl"><a class="markdownIt-Anchor" href="#java-for-curl"></a> JAVA for Curl</h2><h3 id="http库选取"><a class="markdownIt-Anchor" href="#http库选取"></a> http库选取</h3><blockquote><p>在2016年的时候**<a href="https://github.com/NickCarneiro" target="_blank" rel="noopener">NickCarneiro</a>**就<a href="https://github.com/NickCarneiro/curlconverter/issues/22" target="_blank" rel="noopener">Add generator for Java #22</a>提出增加JAVA版本， 但无奈JAVA较为繁琐，并且没有像Python的requests一样好用的库，因此现在都还未有JAVA版本</p><blockquote><p>Java is super popular and super verbose, making it a good candidate for curlconverter.<br>We need to find out if there is some modern library for sending http requests. Please advise.</p></blockquote></blockquote><h4 id="1-httpclient"><a class="markdownIt-Anchor" href="#1-httpclient"></a> 1、HttpClient</h4><blockquote><p>HttpClient：代码复杂，还得操心资源回收等。代码很复杂，冗余代码多，不建议直接使用。</p></blockquote><h5 id="httpclient使用介绍"><a class="markdownIt-Anchor" href="#httpclient使用介绍"></a> HttpClient使用介绍</h5><p>使用HttpClient发送请求主要分为以下几步骤：</p><ul><li>创建 CloseableHttpClient对象或CloseableHttpAsyncClient对象，前者同步，后者为异步</li><li>创建Http请求对象</li><li>调用execute方法执行请求，如果是异步请求在执行之前需调用start方法</li></ul><ol><li>java原生HttpURLConnection</li><li>apache HttpClient3.1</li><li>apache httpClient4.5</li></ol><p>上述见：<a href="https://www.cnblogs.com/hhhshct/p/8523697.html" target="_blank" rel="noopener">java实现HTTP请求的三种方式</a>—— 有代码demo</p><h4 id="2-okhttp"><a class="markdownIt-Anchor" href="#2-okhttp"></a> 2、okhttp</h4><blockquote><p>okhttp：OkHttp是一个高效的HTTP客户端，允许所有同一个主机地址的请求共享同一个socket连接；连接池减少请求延时；透明的GZIP压缩减少响应数据的大小；缓存响应内容，避免一些完全重复的请求</p></blockquote><p>OkHttp使用</p><p>使用OkHttp发送请求主要分为以下几步骤：</p><ul><li>创建OkHttpClient对象</li><li>创建Request对象</li><li>将Request 对象封装为Call</li><li>通过Call 来执行同步或异步请求，调用execute方法同步执行，调用enqueue方法异步执行</li></ul><h4 id="3-resttemplate"><a class="markdownIt-Anchor" href="#3-resttemplate"></a> 3、RestTemplate</h4><blockquote><p>RestTemplate： 是 Spring 提供的用于访问Rest服务的客户端， RestTemplate 提供了多种便捷访问远程Http服务的方法,能够大大提高客户端的编写效率。</p></blockquote><p><a href="https://www.cnblogs.com/zk-blog/p/12465951.html" target="_blank" rel="noopener">https://www.cnblogs.com/zk-blog/p/12465951.html</a></p><h4 id="4http-request"><a class="markdownIt-Anchor" href="#4http-request"></a> 4.<strong><a href="https://github.com/kevinsawicki/http-request" target="_blank" rel="noopener">http-request</a></strong></h4><blockquote><p>在我们日常工作中，我们需要经常和第三方接口进行交互通信，很多时候我们都是使用http协议进行交互，java原生自带对http的支持（<code>java.net.*</code>），但是使用起来不太方便，除此之外，用的最多的就是apache httpclient工具包。但是个人使用这么久而言，感觉不管是原生的抑或是httpclient，使用起来都不太顺手，也略显复杂</p></blockquote><p>文章见： <a href="https://www.jianshu.com/p/e955b01e2e16" target="_blank" rel="noopener">JAVA http请求工具类http-request</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;终于12月了，又是一个月初，定个flag，pr一个Gitcode&lt;/p&gt;
&lt;p&gt;由于之前写Python爬虫的时候，从&lt;a href=&quot;https://github.com/NickCarneiro/curlconverter&quot; target=&quot;_b
      
    
    </summary>
    
    
      <category term="GitCode" scheme="https://nymrli.top/tags/GitCode/"/>
    
  </entry>
  
  <entry>
    <title>github中各配置文件</title>
    <link href="https://nymrli.top/2020/11/29/github%E4%B8%AD%E5%90%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <id>https://nymrli.top/2020/11/29/github中各配置文件/</id>
    <published>2020-11-29T10:10:04.000Z</published>
    <updated>2020-12-19T13:33:33.298Z</updated>
    
    <content type="html"><![CDATA[<h3 id="pre-commit-configyaml"><a class="markdownIt-Anchor" href="#pre-commit-configyaml"></a> <a href="https://github.com/shidenggui/easyquotation/blob/master/.pre-commit-config.yaml" target="_blank" rel="noopener">.pre-commit-config.yaml</a></h3><blockquote><p>来源：<strong><a href="https://github.com/shidenggui/easyquotation" target="_blank" rel="noopener">easyquotation</a></strong>，项目中有makefile和.pre-commit-config.yaml、<a href="https://github.com/shidenggui/easyquotation/blob/master/.coveragerc" target="_blank" rel="noopener">.coveragerc</a>、<a href="https://github.com/shidenggui/easyquotation/blob/master/.pylintrc" target="_blank" rel="noopener">.pylintrc</a>三个比较新奇的。</p><ul><li><p>makefile一般都在c工程中看到， 这边作者使用是代替了一些编译工作，类似sh脚本的作用。跟setup区别：makefile提供给开发者提交代码时使用；setup当做三方库直接调用</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;   init:</span><br><span class="line">&gt;   pip install pipenv</span><br><span class="line">&gt;   pipenv install --dev</span><br><span class="line">&gt;   pipenv run pre-commit install</span><br><span class="line">&gt;   @echo &amp;&amp; echo use <span class="string">"pipenv shell"</span> to access virtual env</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ul></blockquote><blockquote></blockquote><p>Git钩子脚本对于<strong>在提交代码审查之前识别简单问题</strong>很有用。我们在每次<u>提交时都运行钩子</u>，以<u>自动指出代码中的问题</u>，例如缺少分号，尾随空白和调试语句。通过在代码审阅之前指出这些问题，代码审阅者可以专注于更改的体系结构，而不会浪费琐碎的样式问题。</p><p>在此介绍的pre-commit只是git hook的一部分， git hook分客户端和服务端的，pre-commit属于客户端的。</p><p>使用教程：<a href="https://blog.csdn.net/wuheshi/article/details/104628747/" target="_blank" rel="noopener">项目管理：代码检查 pre-commit 使用详解</a>： PIP安装-&gt;配置(在项目的根目录创建一个.pre-commit-config.yaml 文件)-&gt;<code>pre-commit install</code>把pre-commit安装到了项目.git的hook目录下面-&gt;Done(之后我们在执行git commit 的时候就会先调用这个文件，当然还可以在git操作的很多步骤前面做一些工作)</p><h3 id="travisyml"><a class="markdownIt-Anchor" href="#travisyml"></a> <a href="https://github.com/shidenggui/easyquotation/blob/master/.travis.yml" target="_blank" rel="noopener">.travis.yml</a></h3><h3 id="gitignore"><a class="markdownIt-Anchor" href="#gitignore"></a> .gitignore</h3><blockquote><p>在提交git commit的时候选择性忽略的配置文件</p></blockquote><p>有各种语言的模板，至于具体的文件，可以自己修改细节。</p><h3 id="gitkeep"><a class="markdownIt-Anchor" href="#gitkeep"></a> .gitkeep</h3><blockquote><p>大家可能在很多的开源项目中都看到过.gitkeep这个文件，文件内没有任何内容，一个空空的文件。</p></blockquote><p>那这个类型文件的作用到底是啥呢？这要从git不允许追踪(track)或者说提交一个空的文件夹说起，git本身是不允许提交一个空文件夹的，所有就有了.gitkeep的存在，可以把它看作是一个占位符，当然了，你也可以使用 .nofile或者其他的占位符，自行决定。</p><p>当然了，业内人员已经习惯使用.gitkeep，已经达成了共识，所以我们尽量还是使用.gitkeep。</p><h2 id="代码规范与风格"><a class="markdownIt-Anchor" href="#代码规范与风格"></a> 代码规范与风格</h2><h3 id="pylintrc"><a class="markdownIt-Anchor" href="#pylintrc"></a> <a href="https://github.com/shidenggui/easyquotation/blob/master/.pylintrc" target="_blank" rel="noopener">.pylintrc</a></h3><blockquote><p>Pylint 是一个 Python 代码分析工具，它分析 Python 代码中的错误，查找不符合代码风格标准（Pylint 默认使用的代码风格是 PEP 8，具体信息，请参阅参考资料）和有潜在问题的代码。</p></blockquote><p>跟.gitignore差不多，有模板。</p><h3 id="flake8"><a class="markdownIt-Anchor" href="#flake8"></a> <a href="https://github.com/nonebot/aiocqhttp/blob/master/.flake8" target="_blank" rel="noopener">.flake8</a></h3><p>请使用 Flake8 确保代码符合规范：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flake8 --config .flake8</span><br></pre></td></tr></table></figure><h3 id="styleyapf"><a class="markdownIt-Anchor" href="#styleyapf"></a> <a href="https://github.com/nonebot/aiocqhttp/blob/master/.style.yapf" target="_blank" rel="noopener">.style.yapf</a></h3><p>请使用 YAPF 对代码进行格式下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yapf --style .style.yapf --in-place --recursive aiocqhttp scripts demo.py</span><br></pre></td></tr></table></figure><h3 id="coveragerc"><a class="markdownIt-Anchor" href="#coveragerc"></a> <a href="https://github.com/shidenggui/easyquotation/blob/master/.coveragerc" target="_blank" rel="noopener">.coveragerc</a></h3><blockquote><p>Python用来查看测试中覆盖率的配置文件，如果衡量单元测试对相应代码的测试重量，覆盖率是一个必要非充分条件，因此统计代码的覆盖率，检视单测是否充分，就尤为的重要。这里针对python-unittest的单测的覆盖率coverage进行使用说明与分析.</p></blockquote><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[run]</span></span><br><span class="line"><span class="attr">branch</span> = <span class="literal">True</span></span><br><span class="line"><span class="attr">include</span> = easyquotation/*# 项目名称xxx</span><br><span class="line"><span class="attr">omit</span> = tests/*# 忽略的目录</span><br><span class="line"></span><br><span class="line"><span class="section">[report]</span></span><br><span class="line"><span class="attr">fail_under</span> = -<span class="number">1</span></span><br></pre></td></tr></table></figure><p>官方文档： <a href="https://coverage.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener">https://coverage.readthedocs.io/en/latest/index.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;pre-commit-configyaml&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#pre-commit-configyaml&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/shidenggui/easyqu
      
    
    </summary>
    
    
      <category term="git" scheme="https://nymrli.top/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>《漫画机器学习入门》大关真之——读书笔记</title>
    <link href="https://nymrli.top/2020/11/28/%E3%80%8A%E6%BC%AB%E7%94%BB%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8%E3%80%8B%E5%A4%A7%E5%85%B3%E7%9C%9F%E4%B9%8B%E2%80%94%E2%80%94%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>https://nymrli.top/2020/11/28/《漫画机器学习入门》大关真之——读书笔记/</id>
    <published>2020-11-28T13:39:01.000Z</published>
    <updated>2020-11-28T13:40:38.925Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漫画机器学习入门总结"><a class="markdownIt-Anchor" href="#漫画机器学习入门总结"></a> 《漫画机器学习入门》总结</h1><p>机器学习是指计算机通过不断地处理数据并修正算法和参数来学习各种规则， 从而不断改进模型而得到更优化的算法。书中主要讲解了玻尔兹曼机的机器学习</p><h3 id="谁是世界上最美丽的人"><a class="markdownIt-Anchor" href="#谁是世界上最美丽的人"></a> <a href="https://blog.csdn.net/weixin_41513917/article/details/102646458#%E7%9F%A5%E8%AF%86%E7%82%B9" target="_blank" rel="noopener">谁是世界上最美丽的人？</a></h3><ol><li><p>****特征量****就是如每一个人的年龄，眼睛大小； 特征向量就是每个人的特征量放到一起，特征向量是表达特征的一个数组</p></li><li><p>误差函数： 在美丽程度这个问题上， 误差函数就是—— 计算“美丽程度”的实际输出与给定的理想输出之间的差值</p></li><li><p>最优化问题：  最小化误差函数，其实是一个求解最优化问题：我们的任务就是要找到没有误差或者误差小到满足要求的最适合的模型。这就要通过调节模型中的参数，使误差函数值尽量小，这就是求解（参数）最优化问题。</p><ol><li>微分：稍微拉动一点摇杆，确认误差是否变小。这种操作叫做<strong>微分</strong>。</li><li>梯度下降法： 一直拉到误差不再减少，直到误差值保持不变或者反而有所上升时为止。希望不停地调整权重，使得误差一直在朝着减小的方向前进。这种调整误差的方法叫<strong>梯度下降法</strong>。</li><li><img src="https://img-blog.csdnimg.cn/20191021100811994.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTUxMzkxNw==,size_16,color_FFFFFF,t_70" alt=""></li></ol></li><li><p>回归就是：建立模型—拟合—微调</p></li><li><p>机器学习是寻找输入数据与输出数据之间关系(model-&gt;function map)的一门学问。</p></li><li><p>每一个特征量都很重要，但是不同特征量的重要程度是不同的，所以需要寻找特征的权重矩阵</p></li><li><p>训练数据和测试数据： 学习和测试是机器学习的两项基本任务。 (1)好的算法很重要； (2)要将获得的数据分为训练用数据和测试用数据；(3)仅仅匹配训练用数据是不行的——仅仅满足训练用数据叫overfit过拟合，如果连训练数据都不符合叫underfit欠拟合</p></li><li><p>验证的方法：交叉验证：将所有的数据分成4组， 每组中1份数据用于测试，3份用于训练</p></li><li><p>复杂化模型——寻找新的特征值：sigmoid 函数：当发现检测的结果不太好，王后想把模型变得更复杂一些。王后尝试将原始的特征量组合起来获得新的特征量，再加权求输出，却发现因为只有乘法和加法的情况这种<strong>线性特性</strong>，与之前并没有本质区别。因此，引入了sigmoid函数，这个非线性函数。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>−</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">sig(x) = \frac{1}{1-e^{-x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p><img src="https://img-blog.csdnimg.cn/2019102111070935.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTUxMzkxNw==,size_16,color_FFFFFF,t_70" alt=""></p><p>加权组合，构成新的特征值： 如果我们把将特征量组合，新增加5个特征量的话（如图），摇杆的数量就变成了原来的5倍。</p><p>多层神经网络：在单层神经网络的基础上，增加一层非线性变换，结构上也就多了一个中间的曾，就是多层神经网络。</p></li><li><p>只由输入到输出方向进行信息的传递，被称为正向型神经网络； 而双方向都能够进行信息交换的结构被称为双向型神经网络。双向型神经网络典型代表是Hopfield一处的，玻尔兹曼机也是基于这种神经网络。 双向信息处理模式不同于淡出的正向信息处理， 它可以有多个输出结果， 而且从这些输出结果中它可以回忆起以前记忆过的信息，因此也被叫做联想记忆。</p></li><li><p>模型越复杂，网络就越纠缠，拉动一根线就会对整个网络产生较大的影响。反过来，网络中任何一根线又会连接很多其他的线，拉它的时候也会受到很大限制，甚至拉不动。 距离输出层越近的摇杆越容易搬动，这是有梯度的结果。因为搬动一下离输出很近的摇杆，它的效果能够很方便地传递给输出。离输出越远，梯度越难计算，越难调整。===&gt;BP算法， 以及最好不要使用Sigmod函数， 因为容易梯度消失， 可以换用tanh或者reLU（观察函数的微分结果）</p></li><li><p><strong>dropout</strong>：为了防止过度学习， 需要掌握平衡， 做出取舍：  适当地选取一定比例的特征量，剩下的全部舍弃不用。</p></li><li><p>批量学习与在线学习：</p><p><strong>批量学习（batch learning）</strong>：将全部数据收集齐了之后一起作为训练用数据使用，这叫做批量学习（batch learning）</p><p><strong>在线学习（online learning）</strong>:与此相对的，随着数据不断地获取而逐步进行的学习则称为在线学习（online learning）</p><p>现在批量学习也在改进，有些地方与在线学习差不多， 如使用概率梯度下降法：</p><p><img src="https://img-blog.csdnimg.cn/20191021170700902.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTUxMzkxNw==,size_16,color_FFFFFF,t_70" alt=""></p><p>（采用概率的方式去分组，也叫随机选择，就是不能利用某种故意的特定意图去分组）</p><p>当利用概率分组后，对每一组数据进行训练，动一下摇杆看误差如何变化，然后再向误差变小的方向搬动摇杆，这就是概率梯度下降法。（通过适当地概率计算，让参数或左或右地跳动着变化）</p><p>这种算法考虑的是，与其冲着预先规定好的方向一直走下去，倒不如是不是地左看看，右看看。这样反倒更容易找到隐藏的近路。</p><p>在线学习和随机梯度下降法的优势在于， 可以捕捉灵光霎现的机会， 增加了跳脱鞍点的可能性。</p></li></ol><h3 id="粮食问题"><a class="markdownIt-Anchor" href="#粮食问题"></a> 粮食问题</h3><ol><li><p>感知机perceptron(弗兰克·罗森布拉特)和支持向量机SVM(Vladmir N.Vapnik)</p><p>感知机：移动分割超平面进行数据分类。感知机的缺点：非线性模型处理不好</p><p>支持向量机：使分割超平面处于一种非常“好”的状态，即所有数据点尽量都远离分割超平面，因此能够更好的识别并且<strong>使得安全裕量最大</strong></p></li><li><p><strong>矩阵的秩</strong>：= 模式的种类， 一个模式以一行向量表示。<u>矩阵中两行的规律相似，应该属于同一种模式</u>。假设数据中存在某些模式，那么在矩阵中一定会存在某一行的数值代表该模式，其他的某一行代表另一种模式。</p><p>如果模式能够从可见数据中推演出来，通过对可见数据做有效处理，就能够推测出不可见的那部分数据，这其实是一种无监督学习：希望能够完美地补充矩阵中空白的数据，并能够预测出新的模式。（计算机从大量数据中通过自己的分析来找出规律，叫做无监督学习）</p></li><li><h3 id="预测方面有监督无监督的不同"><a class="markdownIt-Anchor" href="#预测方面有监督无监督的不同"></a> 预测方面有监督/无监督的不同 ：</h3><p>从数据中学到东西，这一点是一致的。之后，在是否进行预测这一点上是不同的。<br>有监督学习是希望计算机越来越聪明并逐渐能够代替人的某些工作。<br>无监督学习，是希望计算机从特征量中选择出我们容易理解的某种模式，将模式分成若干或者某种形式的分类。</p></li><li><p><strong>稀疏化</strong>：有些算法会将不重要的特征量的权重直接设定为0，舍弃一些不重要的东西， 导致矩阵中产生很多0， 这种矩阵将稀疏矩阵。</p></li><li><p><strong>非负矩阵分解（ Nonnegative Matrix Factor ）</strong>： 非负，指在计算的时候不使用负值，也就是只做加法运算。就像用钢笔描绘人脸，先有眼睛，鼻子，再加上嘴等等。这些都是一个一个添加的。（非负好比用钢笔作画不能删除， 而普通作画是用铅笔， 所以可以有负值）</p><p>如果也用减法，就像用铅笔，还可以用橡皮擦去一些地方。</p></li></ol><h3 id="基于玻尔兹曼机器学习的图像处理方法"><a class="markdownIt-Anchor" href="#基于玻尔兹曼机器学习的图像处理方法"></a> 基于玻尔兹曼机器学习的图像处理方法</h3><blockquote><p>首先要明确的一点是， 图片是由像素组成的。每一个像素到底是呈现数模颜色，这是由数据来决定的。</p></blockquote><ol><li><p><strong>玻尔兹曼机器学习</strong>:将图像的颜色数据输入到玻尔兹曼机中，计算机通过分析这些数据，就可以得到实际图像的特征，各像素点显示某种颜色的概率，以及<strong>相邻像素间的关系</strong>。这种过程叫做玻尔兹曼机器学习。</p></li><li><p><strong>似然度</strong>： 相似的程度。 机器学习的目的要么是让误差值最小，要么是让似然度最大</p></li><li><p><strong>采样</strong>：将实际提供的数据输入到玻尔兹曼机后， 模型会输出伪数据（重构数据）， 这个自身不断<strong>产生数据</strong>的过程就叫做采样 sampling</p><p>玻尔兹曼机器学习在进行时，采用马尔科夫蒙特卡罗方法，来逐一考虑相邻像素之间的关系，来完成双向型神经网络的信息流动。这是一种在整个网络结构中的循环，<u>在这一过程中还要不断地采集大量的重构数据。很费时间</u>。==&gt; 替代算法是，单纯考虑由相邻像素传送过来的信息，<strong>平均场近似法</strong></p><p><img src="/2020/11/28/《漫画机器学习入门》大关真之——读书笔记/hexo/source/_posts/%E6%BC%AB%E7%94%BB%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8%E5%A4%A7%E5%85%B3%E7%9C%9F%E4%B9%8B%E2%80%94%E2%80%94%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/1.jpg" alt="平均近场法"></p></li><li><p>中间结果包含每一个像素颜色的变化过程，也能够构成中间过程的许多图像。这些中间产生的图像数据就是重构数据， 也可以叫做伪数据。其实核心就是“依据临近像素的数据， 在现有的参数值情况下， 预测中心像素的颜色值”</p></li><li><p>机器学习与统计力学： 我们在研究原子和分子的时候， 位置、运动扽信息是分析研究的对象， 但是统计力学有趣的地方是利用统计学理论去获取事物整体的特征。类比机器学习， 就像我们并不去计较每一个颗粒的位置和速度， 对于机器学习我们也是希望得到大量数据间的整体组合信息， 这种整体组合信息在最优化问题求解时就是推到出函数模型</p></li><li><p>可见变量、隐含变量：在图像中， 每一个像素颜色的数值时可以直接读取的， 这一部分就叫做可见变量。由可见变量之间关联关系构成的新变量称为隐含变量， 从而可以建立出眼睛、鼻子等部件， 从而将利用各个部件就可以将图像分成各个部分了。 利用上述方式就可以以“开关”的形式来操作了，通过像素和开关之间的关系就可以决定在可见变量一侧表示出什么， 这种方法认为可见变量之间没有任何关系， 各个开关之间也没有关联。只考虑开关与像素之间的关系， 叫做受限玻尔兹曼机（RBM）， 有较好的特性， 如一定条件下的独立性</p></li><li><p><strong>变分原理</strong>：物理学中， 指自然界中静止实物的一个普遍适用的数学定律，也称最小作用原理。比如在确定了物体的起点和终点后， 通过动能和势能之差就能计算出最短路径。</p></li><li><p><strong>对比散度算法</strong>：将实际的颜色数据与建立的模型采集到的伪数据进行比较， 我们希望能够从中找到某些有用的东西。</p></li><li><p><img src="https://img-blog.csdnimg.cn/20191022114125126.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTUxMzkxNw==,size_16,color_FFFFFF,t_70" alt=""></p><p>深度玻尔兹曼机将图像数据作为输入， 内部作为隐含变量的各种开关来决定到底输出什么图像， 因此为了能够对应不同的图像， 建立数量巨大的复杂的隐含变量时非常必要的——深度玻尔兹曼机的目的时<strong>学习图像中隐含的特征</strong>， 知道了图像中拥有的特征可以就可以返回来看可见变量中是否有猫和狗了——传统机器学习和深度学习的区别也在于此， 传统机器学习需要自己手动提取特征（特征工程）， 而神经网络可以自己提取特征。</p></li><li><p>受限玻尔兹曼机是两层神经网络。包含输入层，隐藏层，输出层</p></li><li><p>预训练： ①运用在无监督学习中， 不告诉model特征有哪些 ②用预训练网络做微调：一般图片分类的神经网络每一类别的图片量级至少在5000-10000左右，如果没有这么多图片，（使用数据增强的方法后也不够），此时就需要用预训练网络了（在几十万张图片训练集上获得较好效果的图片多分类器）。然后用我们现有的图片在这个预训练网络的基础上继续训练， 利用现有的图片继续训练就是为了让网络重新适应现有的图片训练集， 这种适应过程往往比从头训练一个网络更快更好， 这种方法跟迁移学习的思想很像。</p></li><li><p>自我符号化（在无监督学习中具有代表性）：吧收到的输入信号原原本本地返回来。</p></li></ol><p><img src="/2020/11/28/《漫画机器学习入门》大关真之——读书笔记/hexo/source/_posts/%E6%BC%AB%E7%94%BB%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8%E5%A4%A7%E5%85%B3%E7%9C%9F%E4%B9%8B%E2%80%94%E2%80%94%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E8%87%AA%E6%88%91%E7%AC%A6%E5%8F%B7%E5%8C%96.jpg" alt="自我符号化"></p><p>注意， 左右知识结构上的复制，权值是不一样的。这些权值是需要进行调整后才能满足右边的“输入”等于左边输入的。在这个调整权值的过程中，输入数据所隐含的特征就可以被挖掘出来了。<mark>&gt;从而使得中间层具有能够反映输入数据中特征的能力。</mark>&gt; 中间层的自我符号化训练其实也是提取特征的过程</p><ol start="13"><li><p>卷积神经网络：</p><blockquote><p>在处理图像时已有已知的神经网络可以利用了——卷积神经网络。</p></blockquote><p><strong>卷积</strong>：卷积是利用了，人在看见图像识别图像时并不需要将所有的细小像素全部看清的特征而设计的。卷积就是在某种程度上将临近的像素组合起来形成新的特征量，然后利用卷积结果进行分析</p><p><strong>池化</strong>：在图片中即使模糊我们也能通过模糊的影像大致判断出—&gt;数据即使有些差异也能够得出同样的结果。因此可以利用卷积将特征进行排序，将相近的特征进行比较并选用其中的最大值或平均值，叫做池化</p><p>▲通过卷积和池化操作，神经网络从而可以将图像中的特征量自动地提取出来了。</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;漫画机器学习入门总结&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#漫画机器学习入门总结&quot;&gt;&lt;/a&gt; 《漫画机器学习入门》总结&lt;/h1&gt;
&lt;p&gt;机器学习是指计算机通过不断地处理数据并修正算法和参数来学习各种规则， 从而不断改进模型而得到
      
    
    </summary>
    
    
      <category term="机器学习" scheme="https://nymrli.top/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="读书笔记" scheme="https://nymrli.top/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>学会Latex写作</title>
    <link href="https://nymrli.top/2020/11/28/%E7%86%9F%E6%82%89Latex%E5%86%99%E4%BD%9C/"/>
    <id>https://nymrli.top/2020/11/28/熟悉Latex写作/</id>
    <published>2020-11-28T11:55:06.000Z</published>
    <updated>2020-11-28T13:44:50.548Z</updated>
    
    <content type="html"><![CDATA[<p>首先开始的便是文档定义:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\documentclass[bachelor]&#123;njupthesis&#125;</span><br><span class="line">% \documentclass[option]&#123;class&#125;</span><br><span class="line">% class有article, proc, minimal, book, slides</span><br><span class="line">% option: a4paper(纸张大小)、10pt(字体大小)、fleqn(行间公式对齐方式)、leqno(行间公式的编号对齐方式)、onecolumn(单栏)、titlepage(文档标题后另起一页)</span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure><p>查看： <a href="https://blog.csdn.net/wei_love_2017/article/details/86617235" target="_blank" rel="noopener">https://blog.csdn.net/wei_love_2017/article/details/86617235</a></p><blockquote><p>可以看到这边的documentclass是自定义的，原因是因为这个使用的是郭学长做的毕设latex模板， 因此借此机会也学习下Latex的模板制作， 主要是cls文件的编写</p></blockquote><h2 id="cls文件是什么"><a class="markdownIt-Anchor" href="#cls文件是什么"></a> cls文件是什么？</h2><p>LaTex中常见的文件格式有.tex, .bib, .cls, .sty, .bbl等。</p><ul><li>.tex文件也就是我们写文档内容的文件；</li><li>.bib是使用bibligraphy方式导入参考文献时，写参考文献的文档；.bbl是其编译之后形成的文件;</li><li>.sty是包文件，通常使用<code>\usepackage</code>导；</li><li>.cls是类文件，通过文档最前面的<code>\documentclass</code>命令导入</li></ul><h2 id="cls文件怎么写的"><a class="markdownIt-Anchor" href="#cls文件怎么写的"></a> cls文件怎么写的？</h2><p>cls文件可以分为四部分，我暂且分别称之为<strong>声明、宏定义、输入数据处理以及其他</strong>四部分</p><ol><li><p>所谓<strong>声明</strong>，只是说明了编译cls文件需要什么样的TeX格式以及本cls文件可以提供什么内容，基本上是万年不变的，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\ProvidesClass&#123;resume&#125;[Mylatex] % 其中，[ ]中的内容可以随便填写呀~</span><br><span class="line">\NeedsTeXFormat&#123;LaTeX2e&#125;</span><br></pre></td></tr></table></figure></li><li><p>第二部分，<strong>宏定义</strong>，这部分内容则是各取所需了，如果有需要，可以在此进行简单的定义，我在此定义了两个\newif，用于判断中文简历和英文简历：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\newif\ifChinese</span><br><span class="line">\newif\ifEnglish</span><br></pre></td></tr></table></figure></li><li><p>第三部分，<strong>处理输入数据</strong>，也就是上文提到的<code>\documentclass[a4paer,12pt]{article}</code>中的a4paper和12pt这两条数据<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">   ```latex</span><br><span class="line">   \DeclareOption&#123;zh&#125;&#123;\Chinesetrue\Englishfalse&#125;</span><br><span class="line">   \DeclareOption&#123;en&#125;&#123;\Chinesefalse\Englishtrue&#125;</span><br><span class="line">   \DeclareOption*&#123;%</span><br><span class="line">     \PassOptionsToClass&#123;\CurrentOption&#125;&#123;article&#125;</span><br><span class="line">   &#125;</span><br><span class="line">   \ProcessOptions\relax</span><br><span class="line">   \LoadClass&#123;article&#125;</span><br><span class="line">   % 对于zh，我进行的操作是将\Chinese这个变量设为true，\English这个变量设为false，以便在后续使用第二部分定义的\if，</span><br><span class="line">   % 第三条语句为将初zh, en之外的其余参数传至article类，供article类进行处理，最后呢，就是加载继承的article类；——如郭学长njupthesis所做的处理为: \LoadClass[12pt, openany, twoside]&#123;book&#125;</span><br><span class="line">   ```</span><br><span class="line"></span><br><span class="line">4. 第四部分，会先导入需要用到的包，之后将上面的零散语句贴上去。在tex文件中，导入包通常使用\usepackage命令，但是在cls中，一般要使用\RequirePackage的方式将其导入，如：</span><br><span class="line"></span><br><span class="line">   ```latex</span><br><span class="line">   % Customize the section headers</span><br><span class="line">   \RequirePackage&#123;titlesec&#125;</span><br><span class="line">   % footnote</span><br><span class="line">   \RequirePackage&#123;fancyhdr&#125;</span><br><span class="line">   % Set the margins</span><br><span class="line">   \RequirePackage[margin=0.5in]&#123;geometry&#125;</span><br><span class="line">   </span><br><span class="line">   \RequirePackage[T1]&#123;fontenc&#125;</span><br><span class="line">   ```</span><br><span class="line"></span><br><span class="line">最后，在.tex文件中通过`\documentclass&#123;Mylatex&#125;`来使用该cls文件即可</span><br></pre></td></tr></table></figure></p></li></ol><p>查看：<a href="https://zhuanlan.zhihu.com/p/77537952" target="_blank" rel="noopener">【LaTex】cls文件编写和使用入门</a></p><h3 id="providesclass"><a class="markdownIt-Anchor" href="#providesclass"></a> <code>\ProvidesClass</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\ProvidesClass&#123;njupthesis&#125;</span><br><span class="line">\LoadClass[12pt, openany, twoside]&#123;book&#125;</span><br></pre></td></tr></table></figure><ul><li>ProvidesClass为定义出的模板class名</li><li>LoadClass为documentclass中原先指定的参数</li></ul><p><code>\DeclareOption</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\DeclareOption&#123;bachelor&#125;&#123;</span><br><span class="line">  \renewcommand&#123;\chinesedegreename&#125;&#123;本科&#125;</span><br><span class="line">  \renewcommand&#123;\chinesebooktitle&#125;&#123;本科生毕业设计（论文）&#125;</span><br><span class="line">  \renewcommand&#123;\englishbooktitle&#125;&#123;Bachelor Thesis&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于<code>\documentclass</code>的option设置</p><h3 id="newcommand"><a class="markdownIt-Anchor" href="#newcommand"></a> <code>\newcommand</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">% 姓名的字体较大，且加粗，实现方式：</span><br><span class="line">\newcommand&#123;\name&#125;[1]&#123;</span><br><span class="line">\huge &#123;\textbf&#123;#1&#125;&#125;</span><br><span class="line">&#125;</span><br><span class="line">% tex中调用方式为: \name&#123;Zhang San&#125;</span><br><span class="line"></span><br><span class="line">\newcommand&#123;\wanted&#125;[1]&#123;</span><br><span class="line">\normalsize &#123;\textbf&#123;申请职位：&#125;&#125; #1</span><br><span class="line">% \textbf 为加粗</span><br><span class="line">% \normalsize 为设置常规字号</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">\newcommand&#123;\address&#125;[1]&#123;</span><br><span class="line">\normalsize</span><br><span class="line">\raisebox&#123;-3pt&#125;&#123;\includegraphics[height=#1]&#123;#2&#125;&#125; #3</span><br><span class="line">% \includegraphics 为插图的命令: \includegraphics[选项]&#123;文件&#125;</span><br><span class="line">% \raisebox: 升高或者降低text盒子: \raisebox&#123;上移量&#125;[高度][深度]&#123;文本&#125;</span><br><span class="line">        % #1表示要显示图标的高度</span><br><span class="line">        % #2表示图标文件完整路径</span><br><span class="line">        % #3表示图标后要显示的文字</span><br><span class="line">&#125;</span><br><span class="line">% tex中调用方式为: \address&#123;12pt&#125;&#123;add.png&#125;&#123;Nanjing, China&#125;</span><br><span class="line"></span><br><span class="line">\newcommand&#123;\edusubsection&#125;[3]&#123;</span><br><span class="line">\subsection&#123;\textbf&#123;#1&#125; \hfill #2&#125; </span><br><span class="line">% \sunsection 预设了较大的字体</span><br><span class="line">% \hfill 设置弹性长度</span><br><span class="line">\vspace&#123;-4pt&#125;</span><br><span class="line">% \vspace&#123;宽度大小&#125; 设置垂直间距</span><br><span class="line">&#123;\normalfont\normalsize #3&#125;</span><br><span class="line">\vspace&#123;-10pt&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后一个<code>\edusubsection</code>的效果图</p><p><img src="https://pic1.zhimg.com/80/v2-b88d54b9b7564a56660c4d40582da598_720w.png" alt=""></p><p>分析下语法：<code>\newcommand</code>为自定义命令: <code>\newcommand{&lt;自命名指令&gt;}[&lt;参数个数&gt;][&lt;首参数默认值&gt;]{&lt;具体的定义行为&gt;}</code></p><p>注：</p><ul><li>命令只能由字母组成，不用以\end{}结尾</li><li>取参数时，从1开始索引</li></ul><p>p.s. <code>\renewcommand</code>重新定义已有命令， 语法跟<code>\newcommand</code>相同</p><hr><h3 id="declarecaptionformat"><a class="markdownIt-Anchor" href="#declarecaptionformat"></a> <code>\DeclareCaptionFormat</code></h3><blockquote><p>设置题目标题格式</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">\DeclareCaptionFormat&#123;algrule&#125;&#123;%</span><br><span class="line">  &#123;\@hangfrom&#123;#1#2&#125;%</span><br><span class="line">     \doublespacing</span><br><span class="line">     \small</span><br><span class="line">     \advance\caption@parindent\hangindent</span><br><span class="line">     \advance\caption@hangindent\hangindent</span><br><span class="line">     \caption@@par#3\par&#125;%</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="graphicspath"><a class="markdownIt-Anchor" href="#graphicspath"></a> <code>\graphicspath</code></h3><blockquote><p>设置图片路径</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\graphicspath&#123;&#123;./pic/&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="titleformat"><a class="markdownIt-Anchor" href="#titleformat"></a> <code>\titleformat</code></h3><blockquote><p>设置各个title格式</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">\titleformat&#123;\chapter&#125;[block]</span><br><span class="line">  &#123;\centering\fontsize&#123;15pt&#125;&#123;15pt&#125;\selectfont\heiti\thispagestyle&#123;fancy&#125;&#125;&#123;\thechapter&#125;&#123;2pc&#125;&#123;&#125;</span><br><span class="line"></span><br><span class="line">\titleformat&#123;\section&#125;[block]</span><br><span class="line">  &#123;\fontsize&#123;14pt&#125;&#123;14pt&#125;\selectfont\heiti&#125;</span><br><span class="line">  &#123;\thesection&#125;&#123;7pt&#125;&#123;&#125;</span><br><span class="line"></span><br><span class="line">\titleformat&#123;\subsection&#125;[block]</span><br><span class="line">  &#123;\fontsize&#123;14pt&#125;&#123;14pt&#125;\selectfont\heiti&#125;</span><br><span class="line">  &#123;\thesubsection&#125;&#123;7pt&#125;&#123;&#125;</span><br><span class="line"></span><br><span class="line">\titleformat&#123;\subsubsection&#125;[block]</span><br><span class="line">  &#123;\fontsize&#123;12pt&#125;&#123;12pt&#125;\selectfont\heiti&#125;</span><br><span class="line">  &#123;\thesubsubsection&#125;&#123;6pt&#125;&#123;&#125;</span><br></pre></td></tr></table></figure><p><code>\newtheorem</code></p><p><code>\newtheorem{theorem}{Theorem}[Chapter]</code></p><h3 id="引用"><a class="markdownIt-Anchor" href="#引用"></a> 引用</h3><h4 id="citing"><a class="markdownIt-Anchor" href="#citing"></a> <code>\citing</code></h4><blockquote><p>设置引用</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">当代生活\citing&#123;pedregosa2011scikit&#125;是严肃文学大师的作品。</span><br></pre></td></tr></table></figure><h4 id="bibliography"><a class="markdownIt-Anchor" href="#bibliography"></a> <code>\bibliography</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\bibliographystyle&#123;IEEEtran&#125;% 按照IEEEtran.bst的样式引用</span><br><span class="line">\bibliography&#123;cog&#125;% 引用文件制定为cog.bib</span><br></pre></td></tr></table></figure><h3 id="newenvironment"><a class="markdownIt-Anchor" href="#newenvironment"></a> <code>\newenvironment</code></h3><p><code>\newenvironment{新环境名称}[参数个数][参数默认值]{开始部分定义}{结束部分定义}</code>、<code>\renewenvironment{新环境名称}[参数个数][参数默认值]{开始部分定义}{结束部分定义}</code></p><p>其中参数的用法和\newcommand 相同，最多允许9个参数，顺序使用#1、#2等引用参数。如果没有使用参数，则[0]可以省略。假设myenv环境的调用如下：<code>\begin{myenv}{arg_1}…{arg_k}</code></p><p>则可以在“开始部分定义”中使用#1，…#k来引用参数，这是newenvironment传递参数的方式。需要特别注意的是，newenvironment的参数只有在“开始部分定义”中才能使用，即“结束部分定义”中的代码无法获取参数。因此，如果要在“结束部分定义”中使用新环境的参数，必须在“开始部分定义”中保存到寄存器中，比如通过\newsavebox 和\sbox 等命令。</p><p>举例：</p><p>先看一个简单的文章“摘要”（Abstract）的例子：假设，摘要的标题—摘要（Abstract）两个字加粗居中显示，正文使用quote格式，完整的示例文件参见2。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">\documentclass&#123;article&#125;</span><br><span class="line">\pagestyle&#123;empty&#125;</span><br><span class="line">\setlength\textwidth&#123;3in&#125;%限制文本宽度使得较少的文字就容易看出断行的效果</span><br><span class="line">\newenvironment&#123;Abstract&#125;&#123;</span><br><span class="line">\begin&#123;center&#125;\normalfont\bfseries Abstract\end&#123;center&#125;</span><br><span class="line">\begin&#123;quote&#125;\par</span><br><span class="line">&#125;%开始部分定义</span><br><span class="line">&#123;\end&#123;quote&#125;&#125;%结束部分定义</span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line">\begin&#123;Abstract&#125;</span><br><span class="line">This abstract explain the approach userd to solve the problems at hand.</span><br><span class="line">\end&#123;Abstract&#125;</span><br><span class="line">Some text following the abstract. Some text following the abstract. Some text following the abstract.</span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure><h2 id="njupthesis"><a class="markdownIt-Anchor" href="#njupthesis"></a> njupthesis</h2><h3 id="makecover-封面"><a class="markdownIt-Anchor" href="#makecover-封面"></a> <code>\makecover</code> 封面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">\newcommand&#123;\makecover&#125;&#123;</span><br><span class="line">\thispagestyle&#123;empty&#125;</span><br><span class="line">\setlength&#123;\extrarowheight&#125;&#123;36pt&#125;</span><br><span class="line">\begin&#123;center&#125;</span><br><span class="line">  \fontsize&#123;36pt&#125;&#123;36pt&#125;\selectfont&#123;\heiti 南京邮电大学 \\ 毕&#123;&#125;业&#123;&#125;设&#123;&#125;计（论&#123;&#125;文）\\&#125;</span><br><span class="line">  \vspace&#123;2cm&#125;</span><br><span class="line">  </span><br><span class="line">  \begin&#123;tabular&#125;&#123;&gt;&#123;\fontsize&#123;16pt&#125;&#123;16pt&#125;\kaiti&#125;l</span><br><span class="line">      &gt;&#123;\centering\arraybackslash\fontsize&#123;15pt&#125;&#123;15pt&#125; \kaiti&#125;</span><br><span class="line">      p&#123;11.53cm&#125;&#125;</span><br><span class="line">    题\chinesespace\chinesespace 目&#123;&#125;&#123;&#125; &amp; \thetitle \\</span><br><span class="line">    \cline&#123;2-2&#125;</span><br><span class="line">    专\chinesespace\chinesespace 业&#123;&#125;&#123;&#125; &amp; \themajor \\</span><br><span class="line">    \cline&#123;2-2&#125;</span><br><span class="line">    学生姓名&#123;&#125;&#123;&#125; &amp; \theauthor   \\</span><br><span class="line">    \cline&#123;2-2&#125;</span><br><span class="line">    班级学号&#123;&#125;&#123;&#125; &amp; &#123;\large \thestudentid&#125; \\</span><br><span class="line">    \cline&#123;2-2&#125;</span><br><span class="line">    指导老师&#123;&#125;&#123;&#125; &amp; \theadvisor \\</span><br><span class="line">    \cline&#123;2-2&#125;</span><br><span class="line">    指导单位&#123;&#125;&#123;&#125; &amp; \theschool \\</span><br><span class="line">    \cline&#123;2-2&#125;</span><br><span class="line">  \end&#123;tabular&#125;</span><br><span class="line">  </span><br><span class="line">\vspace&#123;5cm&#125;</span><br><span class="line"></span><br><span class="line">\fontsize&#123;16pt&#125;&#123;16pt&#125;\selectfont&#123;\kaiti 日期：\quad \thebegindate &#123;&#125; 至\hspace&#123;.5pc&#125; \thefinishdate \\&#125;</span><br><span class="line">\end&#123;center&#125;</span><br><span class="line"></span><br><span class="line">\newpage</span><br><span class="line">\thispagestyle&#123;empty&#125;</span><br><span class="line"></span><br><span class="line">\noindent</span><br><span class="line"></span><br><span class="line">\begin&#123;center&#125;</span><br><span class="line">  \fontsize&#123;16pt&#125;&#123;16pt&#125;\selectfont&#123;\heiti</span><br><span class="line">    毕业设计（论文）原创性声明</span><br><span class="line">  &#125; \\[48bp]</span><br><span class="line">\end&#123;center&#125;</span><br><span class="line"></span><br><span class="line">\begin&#123;spacing&#125;&#123;2.0&#125;</span><br><span class="line">郑重声明：所提交的毕业设计（论文），是本人在导师指导下，独立进行研究工作所取得的成果。除文中已注明引用的内容外，本毕业设计（论文）不包含任何其他个人或集体已经发表或撰写过的作品成果。对本研究做出过重要贡献的个人和集体，均已在文中以明确方式标明并表示了谢意。\\ \\ </span><br><span class="line"></span><br><span class="line">\hspace*&#123;7cm&#125; 论文作者签名：</span><br><span class="line"></span><br><span class="line">\hspace*&#123;7cm&#125; 日期：\quad\quad 年\quad\quad 月\quad\quad 日</span><br><span class="line">\end&#123;spacing&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\newpage</span><br><span class="line">\setcounter&#123;page&#125;&#123;0&#125;</span><br><span class="line">\setcounter&#123;pseudopage&#125;&#123;0&#125;</span><br><span class="line">\setlength&#123;\extrarowheight&#125;&#123;5pt&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="thesistableofcontents-目录"><a class="markdownIt-Anchor" href="#thesistableofcontents-目录"></a> <code>\thesistableofcontents</code> 目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">% TODO: 更改目录样式</span><br><span class="line"></span><br><span class="line">\newcommand&#123;\thesistableofcontents&#125;&#123;</span><br><span class="line">  \pdfbookmark&#123;目录&#125;&#123;toc&#125;</span><br><span class="line">  \tableofcontents</span><br><span class="line">  \thispagestyle&#123;empty&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="thesisappendix-附录"><a class="markdownIt-Anchor" href="#thesisappendix-附录"></a> <code>\thesisappendix</code> 附录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">\newcommand&#123;\thesisappendix&#125;&#123;</span><br><span class="line">  \chapter*&#123;附\chinesespace\chinesespace 录&#125;</span><br><span class="line">    \setcounter&#123;section&#125;&#123;0&#125;</span><br><span class="line">    \addcontentsline&#123;toc&#125;&#123;chapter&#125;&#123;附录&#125;</span><br><span class="line">    \markboth&#123;附录&#125;&#123;附录&#125;</span><br><span class="line">    \thispagestyle&#123;fancy&#125;</span><br><span class="line">    \renewcommand&#123;\theequation&#125;&#123;a-\arabic&#123;equation&#125;&#125;</span><br><span class="line">    \renewcommand&#123;\thetable&#125;&#123;a-\arabic&#123;table&#125;&#125;</span><br><span class="line">    \renewcommand&#123;\thefigure&#125;&#123;a-\arabic&#123;figure&#125;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="thesisacknowledgement-致谢"><a class="markdownIt-Anchor" href="#thesisacknowledgement-致谢"></a> <code>\thesisacknowledgement</code> 致谢</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">\newcommand&#123;\thesisacknowledgement&#125;&#123;</span><br><span class="line">  \renewcommand\thesection&#123;\arabic&#123;section&#125;&#125;</span><br><span class="line">  \addtocontents&#123;toc&#125;&#123;\protect\setcounter&#123;tocdepth&#125;&#123;0&#125;&#125;</span><br><span class="line">  \setcounter&#123;section&#125;&#123;0&#125;</span><br><span class="line">  \chapter*&#123;致\chinesespace\chinesespace 谢&#125;</span><br><span class="line">  \addcontentsline&#123;toc&#125;&#123;chapter&#125;&#123;致谢&#125;</span><br><span class="line">  \markboth&#123;致谢&#125;&#123;致谢&#125;</span><br><span class="line">  \thispagestyle&#123;fancy&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="thesischapterexordium-章绪论"><a class="markdownIt-Anchor" href="#thesischapterexordium-章绪论"></a> <code>\thesischapterexordium</code>  章绪论</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">\newcommand&#123;\thesischapterexordium&#125;&#123;</span><br><span class="line">  \newpage</span><br><span class="line">  \addtocontents&#123;toc&#125;&#123;\protect\setcounter&#123;tocdepth&#125;&#123;2&#125;&#125;</span><br><span class="line">  \standardhead</span><br><span class="line">  \pagenumbering&#123;arabic&#125;</span><br><span class="line">  \setcounter&#123;page&#125;&#123;1&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="thesisloadbibliography-reference引用"><a class="markdownIt-Anchor" href="#thesisloadbibliography-reference引用"></a> <code>\thesisloadbibliography</code> reference引用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">\newcommand&#123;\thesisloadbibliography&#125;[2][]&#123;</span><br><span class="line">  \ifthenelse&#123;</span><br><span class="line">      \equal&#123;#1&#125;&#123;nocite&#125;</span><br><span class="line">    &#125;&#123;</span><br><span class="line">      \nocite&#123;*&#125;</span><br><span class="line">    &#125;&#123;&#125;</span><br><span class="line">  \bibliographystyle&#123;njupthesis&#125;</span><br><span class="line">  \bibliography&#123;#2&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结：</h1><ul><li><code>{}</code>中的大多为具体内容， <code>[]</code>中的大多为option选项设置</li><li><code>\newcommand{\xxx}</code>相当于一个宏定义替换， 在tex中直接使用指令<code>\xxxx</code>即可；<code>\newenvironment{xxx}{}</code>相对而言复杂一点，在tex中需要用<code>\begin{xxx} ... \end{xxx}</code></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先开始的便是文档定义:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/
      
    
    </summary>
    
    
      <category term="计算机基础知识" scheme="https://nymrli.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>深度学习+Pytorch学习笔记</title>
    <link href="https://nymrli.top/2020/11/28/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-Pytorch%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>https://nymrli.top/2020/11/28/深度学习-Pytorch读书笔记/</id>
    <published>2020-11-28T03:24:12.000Z</published>
    <updated>2020-12-13T11:46:02.866Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在课程设计实验周里总共读了3本书， 《深度学习算法实践》、《深度学习框架PyTorch快速开发与实战》、《PyTorch深度学习入门》。 其中《深度学习算法实践》、《深度学习框架PyTorch快速开发与实战》比较失望，质量比较差；《PyTorch深度学习入门》的代码质量高一点，但需要理论辅助，由于事先看了李宏毅老师的深度学习，因此还算容易入手。</p></blockquote><h1 id="深度学习框架pytorch快速开发与实战"><a class="markdownIt-Anchor" href="#深度学习框架pytorch快速开发与实战"></a> 《深度学习框架PyTorch快速开发与实战》</h1><p>网上关于《深度学习框架PyTorch快速开发与实战》的评价：</p><blockquote><h2 id="关于作者"><a class="markdownIt-Anchor" href="#关于作者"></a> 关于作者</h2><ul><li>作者一共三个，在封面内侧有简单的介绍, 三个作者的简绍里没有“深度学习”相关的内容（请注意书名）.单从这本书的作者介绍来说，这几个作者是很不专业的，换言之，这几个人可能未必够资格写这么一本书（就事论事，没有任何不尊重人的意思）</li><li>代码质量差到离谱<ul><li>PyTorch版本问题（这个是技术相关书籍都会遇到的问题，可以接受）</li><li>代码不全，照着书上的代码敲下来，会发现莫名其妙就少了一部分</li></ul></li></ul></blockquote><p>我第一本代码书看的就是这本， 当时觉得还行， 但在看完《PyTorch深度学习入门》后打算也敲下这本书的代码，结果发现给的样例代码很多都跑不过，并且初看时对每个函数的详细介绍现在看来可能是因为没东西写了，内容非常重复。</p><p>▲.以后选书还是得看下作者是否相关专业</p><h3 id="常用距离公式"><a class="markdownIt-Anchor" href="#常用距离公式"></a> 常用距离公式</h3><p>（1）闵可夫斯基距离<br>闵可夫斯基距离（Mlinkowski distance）是衡量数值点之间距离的一种非常常见的方法。<br>闵可夫斯基距离定义为：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow><mo fence="true">(</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msup><mrow><mo fence="true">∣</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub><mo fence="true">∣</mo></mrow><mi>p</mi></msup><mo fence="true">)</mo></mrow><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mi>p</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\left(\sum_{i=1}^{n}\left|x_{i}-y_{i}\right|^{p}\right)^{1 / p}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3819020000000002em;vertical-align:-0.29971000000000003em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-3.2029000000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.082192em;"><span style="top:-3.257192em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">/</span><span class="mord mathdefault mtight">p</span></span></span></span></span></span></span></span></span></span></span></span></p><p>该距离最常用的p是2和1，前者是欧几里得距离（Euclidean distance），后者是曼哈顿距离（Manhattan distance）。当p趋近于无穷大时，闵可夫斯基距离转化成切比雪夫距离（Chebyshev distance）：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>p</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></msub><msup><mrow><mo fence="true">(</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mrow><mo fence="true">∣</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub><mo fence="true">∣</mo></mrow><mi>p</mi><mo fence="true">)</mo></mrow><mfrac><mn>1</mn><mi>p</mi></mfrac></msup><mo>=</mo><msubsup><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mrow><mo fence="true">∣</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">\lim _{p \rightarrow \infty}\left(\sum_{i=1}^{n}\left|x_{i}-y_{i}\right| p\right)^{\frac{1}{p}}=\max _{i=1}^{n}\left|x_{i}-y_{i}\right|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4479220000000002em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.148212em;"><span style="top:-3.5571919999999997em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.48288571428571425em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.008664em;vertical-align:-0.258664em;"></span><span class="mop"><span class="mop">max</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.441336em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span></p><p>（2）马氏距离（Mahalanobis distance）是由印度统计学家马哈拉诺比斯（PC.Mahalanobis）提出的，表示数据的协方差距离。它是一种有效地计算两个未知样本集的相似度的方法。与欧氏距离不同的是它考虑各种特性之间的联系（例如：一条关于身高的信息会带来一条关于体重的信息，因为两者是有关联的。），并且是尺度无关的（Scale-invariant），即独立于测量尺度。对于一个均值为u，协方差矩阵为的多变量向量，其马氏距离为（x-u）Z（-1）（xu）。</p><p>（3）余弦相似度，又称为余弦相似性。通过计算两个向量的夹角余弦值来评估它们的相似度。<br>假设向量a、b的坐标分别为（×1，y1）、（×2，y2）。则：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mo>=</mo><mfrac><mrow><mi>a</mi><mo>∙</mo><mi>b</mi></mrow><mrow><mi mathvariant="normal">∥</mi><mi>a</mi><mi mathvariant="normal">∥</mi><mi mathvariant="normal">∥</mi><mi>b</mi><mi mathvariant="normal">∥</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\cos \theta=\frac{a \bullet b}{\|a\|\|b\|}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.400108em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∥</span><span class="mord mathdefault mtight">a</span><span class="mord mtight">∥</span><span class="mord mtight">∥</span><span class="mord mathdefault mtight">b</span><span class="mord mtight">∥</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mbin mtight">∙</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h3 id="数据标准化处理"><a class="markdownIt-Anchor" href="#数据标准化处理"></a> 数据标准化处理</h3><p>数据标准化（归一化）处理，是为了消除指标之间的量纲影响，以解决数据指标之间的可比性。原始数据经过数据标准化处理后，各指标处于同一数量级，适合进行综合对比评价。标准化就是一种对样本数据在不同维度上进行一个伸缩变化，也就是不改变原始数据的信息（分布）。这样的好处就是在进行特征提取时，忽略掉不同特征之间的一个度量，而保留样本在各个维度上的信息（分布）。</p><p>a.Min-Max标准化（Min-Max Normalization）也称为离差标准化，是对原始数据的线性变换，使结果值映射到[0, 1]之间。转换函数如下：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>X</mi><mo>∗</mo></msup><mo>=</mo><mfrac><mrow><mi>X</mi><mo>−</mo><mi>min</mi><mo>⁡</mo></mrow><mrow><mi>max</mi><mo>⁡</mo><mo>−</mo><mi>min</mi><mo>⁡</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">X^{*}=\frac{X-\min }{\max -\min }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.275662em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">max</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight">−</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mop mtight">min</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">X</span><span class="mbin mtight">−</span><span class="mop mtight">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。这种方法有个缺陷就是当有新数据加入时，可能导致max和min的变化，需要重新定义。</p><p>b.Z-score标准化方法<br>这种方法给予原始数据的均值（mean）和标准差（standard deviation）进行数据的标准化。经过处理的数据符合标准正态分布，即均值为0，标准差为1，转化函数为X*= \frac{X-μ}{σ}，其中u为所有样本数据的均值，σ为所有样本数据的标准差。</p><h3 id="正则化"><a class="markdownIt-Anchor" href="#正则化"></a> 正则化</h3><p>为了防止过拟合现象，我们加入了正则化项，常用的有 L1范数和 L2范数。<br>常用的向量的范数如下。<br>L0范数：||x||0为x向量各个非零元素的个数。<br>L1范数：||x||1为x向量各个元素绝对值之和，也叫“稀疏规则算子”（Lasso Regularization）。<br>L2范数：||x||2为 x 向量各个元素平方和的1/2次方，L2范数又称Euclidean范数或者Frobenius范数。在回归里面，有人把有它的回归叫“岭回归”（Ridge Regression），有人也叫它“权值衰减（Weight Decay）”。<br>Lp范数：||x||为x向量各个元素绝对值p次方和的1/p次方 […]</p><h3 id="成本函数优化函数"><a class="markdownIt-Anchor" href="#成本函数优化函数"></a> 成本函数（优化函数）</h3><p>在训练神经网络时，必须评估网络输出的正确性。众所周知，预期上正确的训练输出数据和实际的训练输出是可比拟的。成本函数便是测量实际和训练输出之间的差异。实际和预期输出之间的零成本将意味着训练神经网络成为可能。<br><strong>BGD即Batch Gradient Descent</strong>。在训练中，每一步迭代都使用训练集的所有内容。也就是利用现有参数对训练集中的每一个输入生成一个估计输出，然后跟实际输出比较，统计所有误差，求平均以后得到平均误差，以此来作为更新参数的依据。<br>由于每一步都利用了训练集中的所有数据，因此当损失函数达到最小值以后，能够保证此时计算出的梯度为0，换句话说，就是能够收敛。因此，使用BGD时不需要逐渐减小学习速率。由于每一步都要使用所有数据，因此随着数据集的增大，运行速度会越来越慢。在批量梯度下降法中，因为每次都遍历了完整的训练集，其能保证结果为全局最优，但是也因为我们需要对每个参数求偏导，且在对每个参数求偏导的过程中还需要对训练集遍历一次，当训练集很大时，这个计算量是惊人的！<br>所以，为了提高速度，减少计算量，提出了SGD随机梯度下降的方法，该方法每次随机选取一个样本进行梯度计算，大大降低了计算成本。<strong>SGD全名Stochastic Gradient Descent</strong>，即随机梯度下降。即随机抽取一批样本，以此为根据来更新参数。随机梯度下降算法和批量梯度下降的不同点在于其梯度是根据随机选取的训练集样本来决定的，其每次对theta的更新，都是针对单个样本数据，并没有遍历完整的参数。当样本数据很大时，可能到迭代完成，也只不过遍历了样本中的一小部分。因此，其速度较快，但是其每次的优化方向不一定是全局最优的，但最终的结果是在全局最优解的附近。</p><p><strong>Momentum Momentum</strong><br>借用了物理中的动量概念，即前几次的梯度也会参与运算。<br>为了表示动量，引入了一个新的变量v（velocity）。v是之前的梯度的累加，但是每回合都有一定的衰减。前后梯度方向一致时，能够加速学习。前后梯度方向不一致时，能够抑制震荡。<br>Nesterov Momentum这是对之前的Momentum的一种改进，大概思路就是，先对参数进行估计，然后使用估计后的参数来计算误差。</p><p><strong>AdaGrad AdaGrad</strong><br>可以自动变更学习速率，只需要设定一个全局的学习速率，但是这并非是实际学习速率，实际的速率是与以往参数的模之和的开方成反比的。<br>它能够实现学习率的自动更改。如果这次梯度大，那么学习速率衰减就快一些；如果这次梯度小，那么学习速率衰减就慢一些。但仍然要设置一个变量。<br>经验表明，在普通算法中也许效果不错，但在深度学习中，深度过深时会造成训练提前结束。</p><p><strong>RMSProp</strong><br>RMSProp 通过引入一个衰减系数r，让r每回合都衰减一定比例，类似于Momentum中的做法。相比于AdaGrad，这种方法很好地解决了深度学习中过早结束的问题。</p><h1 id="pytorch深度学习入门"><a class="markdownIt-Anchor" href="#pytorch深度学习入门"></a> 《PyTorch深度学习入门》</h1><p>入门coding：</p><h2 id="线性回归代码"><a class="markdownIt-Anchor" href="#线性回归代码"></a> 线性回归代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Produce_X</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="comment"># 增加一维全1给bias</span></span><br><span class="line">    x0 = torch.ones( x.numpy().size)</span><br><span class="line">    <span class="comment"># dim = 0, 添加行； dim = 1, 添加列</span></span><br><span class="line">    X = torch.stack( (x, x0), dim = <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> X</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x = torch.Tensor([ <span class="number">1.4</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">16</span>, <span class="number">21</span> ])</span><br><span class="line">y = torch.Tensor( [<span class="number">14.4</span>, <span class="number">29.6</span>, <span class="number">62</span>, <span class="number">85.5</span>, <span class="number">113.4</span>])</span><br><span class="line"></span><br><span class="line">X = Produce_X(x)</span><br><span class="line"></span><br><span class="line">inputs = X</span><br><span class="line">targets = y</span><br><span class="line">w = torch.rand(<span class="number">2</span>, requires_grad = <span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(outputs, loss)</span>:</span></span><br><span class="line">    plt.cla()</span><br><span class="line">    plt.scatter( x.numpy(), y.numpy() )</span><br><span class="line">    plt.plot( x.numpy(), outputs.data.numpy(), <span class="string">'r-'</span>, lw = <span class="number">5</span>)</span><br><span class="line">    plt.text(<span class="number">0.5</span>, <span class="number">0</span>, <span class="string">'loss=%s'</span> % (loss.item()), fontdict = &#123;</span><br><span class="line">        <span class="string">'size'</span>:<span class="number">20</span>, </span><br><span class="line">        <span class="string">'color'</span>:<span class="string">'red'</span></span><br><span class="line">    &#125;)</span><br><span class="line">    plt.pause(<span class="number">0.05</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">train</span><span class="params">(epochs = <span class="number">1</span>, lr = <span class="number">0.01</span>)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> ep <span class="keyword">in</span> range(epochs):</span><br><span class="line">        outputs = inputs.mv(w)</span><br><span class="line">        print(outputs.size())</span><br><span class="line">        print(targets.shape)</span><br><span class="line">        loss = (outputs - targets).pow(<span class="number">2</span>).sum()</span><br><span class="line">        loss.backward()</span><br><span class="line">        w.data = w.data - lr * w.grad</span><br><span class="line">        w.grad.zero_()<span class="comment">#更新完grad后, 必须清空grad, 否则会累加</span></span><br><span class="line"><span class="comment">#         if epochs % 80 == 0:</span></span><br><span class="line"><span class="comment">#             draw(outputs, loss)</span></span><br><span class="line">    <span class="keyword">return</span> w, loss</span><br><span class="line"></span><br><span class="line">w, loss = train(<span class="number">1</span>, lr = <span class="number">1e-4</span>)</span><br><span class="line">print(<span class="string">"final loss:"</span>, loss.item())</span><br><span class="line">print(<span class="string">"weights:"</span>, w.data)</span><br></pre></td></tr></table></figure><h2 id="人工神经元-线性回归"><a class="markdownIt-Anchor" href="#人工神经元-线性回归"></a> 人工神经元-线性回归</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Produce_X</span><span class="params">(x)</span>:</span></span><br><span class="line">x0 = torch.ones(x.numpy().size) <span class="comment">#用ones产生初始值为1，大小与x相同的向量</span></span><br><span class="line">X = torch.stack((x,x0),dim=<span class="number">1</span>)   <span class="comment">#stack函数将两个向量拼合</span></span><br><span class="line"><span class="keyword">return</span> X</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x = torch.linspace(<span class="number">-3</span>,<span class="number">3</span>,<span class="number">100000</span>)<span class="comment">#用linspace产生（-3，3）区间内的100000个点</span></span><br><span class="line">X = Produce_X(x)</span><br><span class="line">y = x +<span class="number">1.2</span>*torch.rand(x.size())<span class="comment">#假设真实函数是y=x，我们在上面增加一些误差，更加符合实际情况</span></span><br><span class="line">w = torch.rand(<span class="number">2</span>) <span class="comment">#定义权重w的变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意这边的x是x， 而不是X， X是神经网络的输入， 被加上了bias的</span></span><br><span class="line">plt.scatter(x.numpy(),y.numpy(),s=<span class="number">0.001</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">CUDA = torch.cuda.is_available()</span><br><span class="line"><span class="keyword">if</span> CUDA:</span><br><span class="line">    inputs = X.cuda()</span><br><span class="line">    targets = Y.cuda()</span><br><span class="line">    w = w.cuda()</span><br><span class="line">    w.requires_grad = <span class="keyword">True</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    inputs = X</span><br><span class="line">    targets = Y</span><br><span class="line">    w = w</span><br><span class="line">    w.requires_grad = Truue</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(outputs, loss)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> CUDA:</span><br><span class="line">        outputs = outputs.cpu()</span><br><span class="line">    plt.cla()</span><br><span class="line">    plt.scatter( x.numpy(), y.numpy() )</span><br><span class="line">    plt.plot( x.numpy(), outputs.data.numpy(), <span class="string">'r-'</span>, lw = <span class="number">5</span>)</span><br><span class="line">    plt.text(<span class="number">0.5</span>, <span class="number">0</span>, <span class="string">'loss=%s'</span> % (loss.item()), fontdict = &#123;</span><br><span class="line">        <span class="string">'size'</span>:<span class="number">20</span>, </span><br><span class="line">        <span class="string">'color'</span>:<span class="string">'red'</span></span><br><span class="line">    &#125;)</span><br><span class="line">    plt.pause(<span class="number">0.05</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">train</span><span class="params">(epochs = <span class="number">1</span>, lr = <span class="number">0.01</span>)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> ep <span class="keyword">in</span> range(epochs):</span><br><span class="line">        outputs = inputs.mv(w)</span><br><span class="line">        loss = (outputs - targets).pow(<span class="number">2</span>).sum()</span><br><span class="line">        loss.backward()</span><br><span class="line">        w.data = w.data - lr * w.grad</span><br><span class="line">        w.grad.zero_()<span class="comment">#更新完grad后, 必须清空grad, 否则会累加</span></span><br><span class="line"><span class="comment">#         if epochs % 80 == 0:</span></span><br><span class="line"><span class="comment">#             draw(outputs, loss)</span></span><br><span class="line">    <span class="keyword">return</span> w, loss</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> perf_counter</span><br><span class="line">start = perf_counter()</span><br><span class="line">w, loss = train(<span class="number">1000</span>, lr = <span class="number">1e-4</span>)</span><br><span class="line">finish = perf_counter()</span><br><span class="line">t = finish - start</span><br><span class="line">print(<span class="string">"计算时间:"</span>, t)</span><br><span class="line">print(<span class="string">"final loss:"</span>, loss.item())</span><br><span class="line">print(<span class="string">"w:"</span>, w.data)</span><br><span class="line">print(type(loss))</span><br></pre></td></tr></table></figure><h3 id="人工神经元-线性回归-module"><a class="markdownIt-Anchor" href="#人工神经元-线性回归-module"></a> 人工神经元-线性回归-module</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn,optim</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> perf_counter</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> Any</span><br><span class="line"></span><br><span class="line">x = torch.unsqueeze(torch.linspace(<span class="number">-3</span>, <span class="number">3</span>, <span class="number">1000</span>), dim = <span class="number">1</span>)</span><br><span class="line">y = x + <span class="number">1.2</span> * torch.rand(x.size())</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LR</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        super(LR, self).__init__()</span><br><span class="line">        self.liner = nn.Linear(<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x: Any)</span>:</span></span><br><span class="line">        out = self.liner(x)</span><br><span class="line">        <span class="keyword">return</span> out</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果支持CUDA，则采用CUDA加速</span></span><br><span class="line">CUDA = torch.cuda.is_available()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> CUDA:</span><br><span class="line">    LR_model = LR().cuda()</span><br><span class="line">    inputs = x.cuda()</span><br><span class="line">    target = y.cuda()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    LR_model = LR()</span><br><span class="line">    inputs = x</span><br><span class="line">    target = y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">criterion = nn.MSELoss()</span><br><span class="line">optimizer = optim.SGD(LR_model.parameters(), lr=<span class="number">1e-4</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(output, loss)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> CUDA:</span><br><span class="line">        output = output.cpu()</span><br><span class="line">    plt.cla()</span><br><span class="line">    plt.scatter(x.numpy(), y.numpy(), marker=<span class="string">'.'</span>)</span><br><span class="line">    plt.plot(x.numpy(), output.data.numpy(), <span class="string">'r-'</span>, lw=<span class="number">5</span>)</span><br><span class="line">    plt.text(<span class="number">0.5</span>, <span class="number">0</span>, <span class="string">'Loss=%.8s'</span> % (loss.item()), fontdict=&#123;<span class="string">'size'</span>: <span class="number">20</span>, <span class="string">'color'</span>: <span class="string">'red'</span>&#125;)</span><br><span class="line">    plt.pause(<span class="number">0.005</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">train</span><span class="params">(model, criterion, optimizer, epochs)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> ep <span class="keyword">in</span> range(epochs):</span><br><span class="line">        output = model(inputs)</span><br><span class="line">        loss = criterion(output, target)</span><br><span class="line">        optimizer.zero_grad()<span class="comment"># 清空权重的grad</span></span><br><span class="line">        loss.backward()<span class="comment"># 计算梯度</span></span><br><span class="line">        optimizer.step()<span class="comment"># 利用梯度更新权重</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ep % <span class="number">80</span> == <span class="number">0</span>:</span><br><span class="line">            draw(output, loss)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> model, loss</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">start = perf_counter()</span><br><span class="line">LR_model,loss = train(LR_model,criterion,optimizer,<span class="number">10000</span>)</span><br><span class="line">finish = perf_counter()</span><br><span class="line">time = finish-start</span><br><span class="line">print(<span class="string">"计算时间:%s"</span> % time)</span><br><span class="line">print(<span class="string">"final loss:"</span>,loss.item())</span><br><span class="line">print(<span class="string">"weights:"</span>,list(LR_model.parameters()))</span><br></pre></td></tr></table></figure><h2 id="非线性回归"><a class="markdownIt-Anchor" href="#非线性回归"></a> 非线性回归</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn, optim</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> perf_counter</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> Any</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(output, loss)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> CUDA:</span><br><span class="line">        output = output.cpu()</span><br><span class="line">    plt.cla()</span><br><span class="line">    plt.scatter(x.numpy(), y.numpy(), marker=<span class="string">'.'</span>)</span><br><span class="line">    plt.plot(x.numpy(), output.data.numpy(), <span class="string">'r-'</span>, lw=<span class="number">5</span>)</span><br><span class="line">    plt.text(<span class="number">-2</span>, <span class="number">-10</span>, <span class="string">'Loss=%.6s'</span> % (loss.item()), fontdict=&#123;<span class="string">'size'</span>: <span class="number">20</span>, <span class="string">'color'</span>: <span class="string">'red'</span>&#125;)</span><br><span class="line">    plt.pause(<span class="number">0.005</span>)</span><br><span class="line"></span><br><span class="line">x = torch.unsqueeze(torch.linspace(<span class="number">-3</span>, <span class="number">3</span>, <span class="number">1000</span>), dim=<span class="number">1</span>)</span><br><span class="line">y = x.pow(<span class="number">3</span>) + <span class="number">0.3</span> * torch.rand(x.size())</span><br><span class="line"></span><br><span class="line">plt.scatter(x.numpy(), y.numpy())</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Net</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, input_feature, num_hidden, outpus)</span>:</span></span><br><span class="line">        super(Net, self).__init__()</span><br><span class="line">        self.hidden = nn.Linear(input_feature, num_hidden)</span><br><span class="line">        self.out = nn.Linear(num_hidden, outpus)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        x = nn.functional.relu(self.hidden(x))</span><br><span class="line">        x = self.out(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果支持CUDA，则采用CUDA加速</span></span><br><span class="line">CUDA = torch.cuda.is_available()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> CUDA:</span><br><span class="line">    net = Net(input_feature= <span class="number">1</span>, num_hidden= <span class="number">20</span>, outpus= <span class="number">1</span>).cuda()</span><br><span class="line">    inputs = x.cuda()</span><br><span class="line">    target = y.cuda()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    net = Net(input_feature= <span class="number">1</span>, num_hidden= <span class="number">20</span>, outpus= <span class="number">1</span>)</span><br><span class="line">    inputs = x</span><br><span class="line">    target = y</span><br><span class="line"></span><br><span class="line">criterion = nn.MSELoss()</span><br><span class="line">optimizer = optim.SGD(net.parameters(), lr=<span class="number">0.01</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">train</span><span class="params">(model, criterion, optimizer, epochs)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> ep <span class="keyword">in</span> range(epochs):</span><br><span class="line">        output = model(inputs)</span><br><span class="line">        loss = criterion(output, target)</span><br><span class="line"></span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        loss.backward()</span><br><span class="line">        optimizer.step()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ep % <span class="number">80</span> == <span class="number">0</span>:</span><br><span class="line">            draw(output, loss)</span><br><span class="line">    <span class="keyword">return</span> model, loss</span><br><span class="line"></span><br><span class="line">net, loss = train(net, criterion, optimizer, <span class="number">1</span>)</span><br><span class="line">print(type(loss))</span><br><span class="line">print(<span class="string">"final loss:"</span>, loss.item())</span><br></pre></td></tr></table></figure><h2 id="分类问题"><a class="markdownIt-Anchor" href="#分类问题"></a> 分类问题</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn, optim</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> perf_counter</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(output)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> CUDA:</span><br><span class="line">        output=output.cpu()</span><br><span class="line">    plt.cla()</span><br><span class="line">    <span class="comment"># torch.max[0]是取max的值， [1]是取索引值</span></span><br><span class="line">    output = torch.max((output), <span class="number">1</span>)[<span class="number">1</span>]</span><br><span class="line">    pred_y = output.data.numpy().squeeze()</span><br><span class="line">    target_y = y.numpy()</span><br><span class="line">    plt.scatter(x.numpy()[:, <span class="number">0</span>], x.numpy()[:, <span class="number">1</span>], c=pred_y, s=<span class="number">10</span>, lw=<span class="number">0</span>, cmap=<span class="string">'RdYlGn'</span>)</span><br><span class="line">    accuracy = sum(pred_y == target_y)/<span class="number">1000.0</span></span><br><span class="line">    plt.text(<span class="number">1.5</span>, <span class="number">-4</span>, <span class="string">'Accuracy=%s'</span> % (accuracy), fontdict=&#123;<span class="string">'size'</span>: <span class="number">20</span>, <span class="string">'color'</span>:  <span class="string">'red'</span>&#125;)</span><br><span class="line">    plt.pause(<span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">N = <span class="number">500</span></span><br><span class="line">cluster = torch.ones(N, <span class="number">2</span>)</span><br><span class="line"><span class="comment"># mean, std的正态分布</span></span><br><span class="line">data0 = torch.normal(<span class="number">4</span> * cluster, <span class="number">2</span>)</span><br><span class="line">data1 = torch.normal(<span class="number">-4</span> * cluster, <span class="number">2</span>)</span><br><span class="line">label0 = torch.zeros(N)</span><br><span class="line">label1 = torch.ones(N)</span><br><span class="line"></span><br><span class="line">x = torch.cat((data0, data1), ).type(torch.FloatTensor)</span><br><span class="line">y = torch.cat((label0, label1), ).type(torch.LongTensor)</span><br><span class="line">plt.scatter(x.numpy()[:, <span class="number">0</span>], x.numpy()[:, <span class="number">1</span>], c = y, s=<span class="number">10</span>, lw=<span class="number">0</span>, cmap=<span class="string">'RdYlGn'</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Net</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        super(Net, self).__init__()</span><br><span class="line">        self.linear = nn.Linear(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        x = self.linear(x)</span><br><span class="line">        x = torch.sigmoid(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">CUDA = torch.cuda.is_available()</span><br><span class="line"><span class="keyword">if</span> CUDA:</span><br><span class="line">    net = Net().cuda()</span><br><span class="line">    inputs = x.cuda()</span><br><span class="line">    targets = y.cuda()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    net = Net()</span><br><span class="line">    inputs = x</span><br><span class="line">    targets = y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">train</span><span class="params">(model, criterion, optimizer, epochs)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> ep <span class="keyword">in</span> range(epochs):</span><br><span class="line">        outputs = model(inputs)</span><br><span class="line">        loss = criterion(outputs, targets)</span><br><span class="line"></span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        loss.backward()</span><br><span class="line">        optimizer.step()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ep % <span class="number">80</span> == <span class="number">0</span>:</span><br><span class="line">            draw(outputs)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># return model, loss</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">optimizer = optim.SGD(net.parameters(), lr=<span class="number">0.02</span>)</span><br><span class="line">criterion = nn.CrossEntropyLoss()</span><br><span class="line">train(net, criterion, optimizer, <span class="number">1000</span>)</span><br></pre></td></tr></table></figure><ul><li>torch.randn(5,2)是标准正态分布取（5,2）数</li><li>data0 = torch.normal(4 * cluster, 2) , 第一个参数是mean, 第二个是std, 维度根据传入的tensor参数决定</li><li>torch.norm() 是求范数</li></ul><h2 id="多分类"><a class="markdownIt-Anchor" href="#多分类"></a> 多分类</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn, optim</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(output)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> CUDA:</span><br><span class="line">        output=output.cpu()</span><br><span class="line">    plt.cla()</span><br><span class="line">    output = torch.max((output), <span class="number">1</span>)[<span class="number">1</span>]</span><br><span class="line">    pred_y = output.data.numpy().squeeze()</span><br><span class="line">    target_y = y.numpy()</span><br><span class="line">    plt.scatter(x.numpy()[:, <span class="number">0</span>], x.numpy()[:, <span class="number">1</span>], c=pred_y, s=<span class="number">10</span>, lw=<span class="number">0</span>, cmap=<span class="string">'RdYlGn'</span>)</span><br><span class="line">    accuracy = sum(pred_y == target_y)/<span class="number">1500.0</span></span><br><span class="line">    plt.text(<span class="number">0.5</span>, <span class="number">-6</span>, <span class="string">'Accuracy=%.6s'</span> % (accuracy), fontdict=&#123;<span class="string">'size'</span>: <span class="number">20</span>, <span class="string">'color'</span>:  <span class="string">'red'</span>&#125;)</span><br><span class="line">    plt.pause(<span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line">N = <span class="number">500</span></span><br><span class="line">cluster = torch.ones(N, <span class="number">2</span>)  <span class="comment"># 2是两个维度： x, y</span></span><br><span class="line">data0 = torch.normal(<span class="number">4</span>*cluster, <span class="number">2</span>)</span><br><span class="line">data1 = torch.normal(<span class="number">-4</span>*cluster, <span class="number">1</span>)</span><br><span class="line">data2 = torch.normal(<span class="number">-8</span>*cluster, <span class="number">1</span>)</span><br><span class="line">label0 = torch.zeros(N)</span><br><span class="line">label1 = torch.ones(N)</span><br><span class="line">label2 = label1 * <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x = torch.cat((data0, data1, data2), ).type(torch.FloatTensor)</span><br><span class="line">y = torch.cat((label0, label1, label2), ).type(torch.LongTensor)</span><br><span class="line"></span><br><span class="line">plt.scatter(x.numpy()[:, <span class="number">0</span>], x.numpy()[:, <span class="number">1</span>], c=y.numpy(), s=<span class="number">10</span>, lw=<span class="number">0</span>, cmap=<span class="string">'RdYlGn'</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Net</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, input_feature, num_hidden, outputs)</span>:</span></span><br><span class="line">        super(Net, self).__init__()</span><br><span class="line">        self.hidden = nn.Linear(input_feature, num_hidden)</span><br><span class="line">        self.out = nn.Linear(num_hidden, outputs)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x )</span>:</span></span><br><span class="line">        x = F.relu( self.hidden(x) )</span><br><span class="line">        x = F.softmax(self.out(x))</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">CUDA = torch.cuda.is_available()</span><br><span class="line"><span class="keyword">if</span> CUDA:</span><br><span class="line">    net = Net(input_feature=<span class="number">2</span>, num_hidden=<span class="number">20</span>,outputs=<span class="number">3</span>).cuda()</span><br><span class="line">    inputs = x.cuda()</span><br><span class="line">    target = y.cuda()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    net = Net(input_feature=<span class="number">2</span>, num_hidden=<span class="number">20</span>,outputs=<span class="number">3</span>)</span><br><span class="line">    inputs = x</span><br><span class="line">    target = y</span><br><span class="line"></span><br><span class="line">optimizer = optim.SGD(net.parameters(), lr=<span class="number">0.02</span>)</span><br><span class="line">criterion = nn.CrossEntropyLoss()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">train</span><span class="params">(model, criterion, optimizer, epochs)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> ep <span class="keyword">in</span> range(epochs):</span><br><span class="line">        outputs = model(inputs)</span><br><span class="line">        loss = criterion(outputs, target)</span><br><span class="line"></span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        loss.backward()</span><br><span class="line">        optimizer.step()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ep % <span class="number">80</span> == <span class="number">0</span>:</span><br><span class="line">            draw(outputs)</span><br><span class="line"></span><br><span class="line">train(net, criterion, optimizer, <span class="number">10000</span>)</span><br></pre></td></tr></table></figure><h2 id="lenet-mnist手写识别"><a class="markdownIt-Anchor" href="#lenet-mnist手写识别"></a> LeNet-MNIST手写识别</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn, optim</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> datasets, transforms</span><br><span class="line"><span class="comment"># 加载torchvision， 是专门做图形处理的一个库， datasets为加载数据集， transforms做图形预处理</span></span><br><span class="line"><span class="comment"># torch.utils.data.DataLoader做数据加载</span></span><br><span class="line"></span><br><span class="line">transform = transforms.Compose([</span><br><span class="line">    transforms.ToTensor(),                          <span class="comment"># 将数据转成tensor对象</span></span><br><span class="line">    transforms.Normalize((<span class="number">0.1307</span>,), (<span class="number">0.3081</span>,))      <span class="comment"># 将数据做归一化处理</span></span><br><span class="line">])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载并存储路径， 加载训练集or测试集、是否自动下载、指定数据预处理方式</span></span><br><span class="line">trainset = datasets.MNIST(<span class="string">'data'</span>, train=<span class="keyword">True</span>, download=<span class="keyword">True</span>, transform=transform)</span><br><span class="line">testset = datasets.MNIST(<span class="string">'data'</span>, train=<span class="keyword">False</span>, download=<span class="keyword">True</span>, transform=transform)</span><br><span class="line"><span class="comment"># 下载下来的raw文件夹包含了数据和标签，processsed文件夹中为处理后的数据</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LeNet</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="comment"># 定义Net的初始化函数，本函数定义了神经网络的基本结构</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 继承父类的初始化方法，即先运行nn.Module的初始化函数</span></span><br><span class="line">        super(LeNet, self).__init__()</span><br><span class="line">        <span class="comment"># C1卷积层：输入1张灰度图片，输出6张特征图，卷积核5x5</span></span><br><span class="line">        self.c1 = nn.Conv2d(<span class="number">1</span>, <span class="number">6</span>, (<span class="number">5</span>, <span class="number">5</span>))</span><br><span class="line">        <span class="comment"># C3卷积层：输入6张特征图，输出16张特征图，卷积核5x5</span></span><br><span class="line">        self.c3 = nn.Conv2d(<span class="number">6</span>, <span class="number">16</span>, <span class="number">5</span>)</span><br><span class="line">        <span class="comment"># 全连接层S4-&gt;C5：从S4到C5是全连接，S4层中16*4*4个节点全连接到C5层的120个节点上</span></span><br><span class="line">        self.fc1 = nn.Linear(<span class="number">16</span> * <span class="number">4</span> * <span class="number">4</span>, <span class="number">120</span>)</span><br><span class="line">        <span class="comment"># 全连接层C5-&gt;F6：C5层的120个节点全连接到F6的84个节点上</span></span><br><span class="line">        self.fc2 = nn.Linear(<span class="number">120</span>, <span class="number">84</span>)</span><br><span class="line">        <span class="comment"># 全连接层F6-&gt;OUTPUT：F6层的84个节点全连接到OUTPUT层的10个节点上，10个节点的输出代表着0到9的不同分值。</span></span><br><span class="line">        self.fc3 = nn.Linear(<span class="number">84</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 定义向前传播函数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="comment"># 输入的灰度图片x经过c1的卷积之后得到6张特征图，然后使用relu函数，增强网络的非线性拟合能力，接着使用2x2窗口的最大池化，然后更新到x</span></span><br><span class="line">        x = F.max_pool2d(F.relu(self.c1(x)), <span class="number">2</span>)</span><br><span class="line">        <span class="comment"># 输入x经过c3的卷积之后由原来的6张特征图变成16张特征图，经过relu函数，并使用最大池化后将结果更新到x</span></span><br><span class="line">        x = F.max_pool2d(F.relu(self.c3(x)), <span class="number">2</span>)</span><br><span class="line">        <span class="comment"># 使用view函数将张量x（S4）变形成一维向量形式，总特征数不变，**为全连接层做准备**</span></span><br><span class="line">        x = x.view(<span class="number">-1</span>, self.num_flat_features(x))</span><br><span class="line">        <span class="comment"># 输入S4经过全连接层fc1，再经过relu，更新到x</span></span><br><span class="line">        x = F.relu(self.fc1(x))</span><br><span class="line">        <span class="comment"># 输入C5经过全连接层fc2，再经过relu，更新到x</span></span><br><span class="line">        x = F.relu(self.fc2(x))</span><br><span class="line">        <span class="comment"># 输入F6经过全连接层fc3，更新到x</span></span><br><span class="line">        x = self.fc3(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算张量x的总特征量</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">num_flat_features</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="comment"># 由于默认批量输入，第零维度的batch剔除</span></span><br><span class="line">        size = x.size()[<span class="number">1</span>:]</span><br><span class="line">        num_features = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> size:</span><br><span class="line">            num_features *= s</span><br><span class="line">        <span class="keyword">return</span> num_features</span><br><span class="line"></span><br><span class="line">CUDA = torch.cuda.is_available()</span><br><span class="line"><span class="keyword">if</span> CUDA:</span><br><span class="line">    lenet = LeNet().cuda()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    lenet = LeNet()</span><br><span class="line"></span><br><span class="line">criterion = nn.CrossEntropyLoss()</span><br><span class="line">optimizer = optim.SGD(lenet.parameters(), lr=<span class="number">0.001</span>, momentum=<span class="number">0.9</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用数据加载工具来加载训练数据, batch_size表示一次性加载的数据量， shuffle表示遍历不同批次数据时打乱顺序， num_workers表示用n个子进程来加载数据</span></span><br><span class="line"><span class="comment"># 后来把workers改成2还是出错，直到最后把workers改成0才不出错。电脑不行啊！当报错时应该考虑一下是不是设置的太大或者不支持多线程进行操作。</span></span><br><span class="line">trainloader = torch.utils.data.DataLoader(trainset, batch_size=<span class="number">4</span>, shuffle=<span class="keyword">True</span>, num_workers=<span class="number">0</span>)</span><br><span class="line">testloader = torch.utils.data.DataLoader(testset, batch_size=<span class="number">4</span>, shuffle=<span class="keyword">False</span>, num_workers=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">train</span><span class="params">(model, criterion, optimizer, epochs=<span class="number">1</span>)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> epoch <span class="keyword">in</span> range(epochs):</span><br><span class="line">        running_loss = <span class="number">0.0</span></span><br><span class="line">        <span class="keyword">for</span> i, data <span class="keyword">in</span> enumerate(trainloader, <span class="number">0</span>):</span><br><span class="line">            inputs, labels = data</span><br><span class="line">            <span class="keyword">if</span> CUDA:</span><br><span class="line">                inputs, labels = inputs.cuda(), labels.cuda()</span><br><span class="line">            optimizer.zero_grad()</span><br><span class="line">            outputs = model(inputs)</span><br><span class="line"></span><br><span class="line">            loss = criterion(outputs, labels)</span><br><span class="line">            loss.backward()</span><br><span class="line">            optimizer.step()</span><br><span class="line"></span><br><span class="line">            running_loss += loss.item()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> i % <span class="number">1000</span> == <span class="number">999</span>:</span><br><span class="line">                print(<span class="string">'[Epoch:%d, Batch:%5d] Loss: %.3f'</span> % (epoch + <span class="number">1</span>, i + <span class="number">1</span>, running_loss / <span class="number">1000</span>))</span><br><span class="line">                running_loss = <span class="number">0.0</span></span><br><span class="line">    print(<span class="string">'Finished Training'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(testloader, model)</span>:</span></span><br><span class="line">    correct = <span class="number">0</span></span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> testloader:</span><br><span class="line">        images, labels = data</span><br><span class="line">        <span class="keyword">if</span> CUDA:</span><br><span class="line">            images = images.cuda()</span><br><span class="line">            labels = labels.cuda()</span><br><span class="line">        outputs = model(images)</span><br><span class="line">        _, predicted = torch.max(outputs.data, <span class="number">1</span>)</span><br><span class="line">        total += labels.size(<span class="number">0</span>)</span><br><span class="line">        correct += (predicted == labels).sum()</span><br><span class="line">    print(<span class="string">'Accuracy on the test set: %d %%'</span> % (<span class="number">100</span> * correct / total))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_param</span><span class="params">(model, path)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(path):</span><br><span class="line">        model.load_state_dict(torch.load(path))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_param</span><span class="params">(model, path)</span>:</span></span><br><span class="line">    torch.save(model.state_dict(), path)</span><br><span class="line"></span><br><span class="line">load_param(lenet, <span class="string">'model.pkl'</span>)</span><br><span class="line">train(lenet, criterion, optimizer, epochs=<span class="number">2</span>)</span><br><span class="line">save_param(lenet, <span class="string">'model.pkl'</span>)</span><br><span class="line">test(testloader, lenet)</span><br></pre></td></tr></table></figure><p><code>model.eval()</code>是让model变成训练模式， 这主要是因为dropout和batch normalization的操作在训练和测试是不一样的</p><h2 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h2><h3 id="torchsizeshape-numpynarraysizeshape-区别"><a class="markdownIt-Anchor" href="#torchsizeshape-numpynarraysizeshape-区别"></a> Torch.size()/shape, numpy.narray.size/shape 区别</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># a = np.array([[1,2,3],[2,1,3]])</span></span><br><span class="line"><span class="comment"># print(a.shape, a.size)</span></span><br><span class="line"><span class="comment"># (2, 3) 6</span></span><br><span class="line"></span><br><span class="line">a = torch.Tensor([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>]])</span><br><span class="line">print(a.shape, a.size())</span><br><span class="line"><span class="comment"># torch.Size([2, 3]) torch.Size([2, 3])</span></span><br></pre></td></tr></table></figure><h3 id="unsqueeze用法"><a class="markdownIt-Anchor" href="#unsqueeze用法"></a> unsqueeze用法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = torch.linspace(<span class="number">-3</span>, <span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line">print(a, a.size())</span><br><span class="line"></span><br><span class="line">b = torch.unsqueeze(a, dim = <span class="number">1</span>)</span><br><span class="line">print(b, b.size())</span><br></pre></td></tr></table></figure><h3 id="关于求微分-autograd-variable"><a class="markdownIt-Anchor" href="#关于求微分-autograd-variable"></a> 关于求微分-&gt;autograd-&gt;Variable</h3><p>之前书上提供的代码需要求grad的时都是把tensor的requires_grad属性手动置为True(requires_grad默认为False的)， 而实际上需要求grad的tensor已经被封装成了可以自动求微分的Variable类型(from torch.autograd import Variable)`</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">CUDA = torch.cuda.is_available()</span><br><span class="line"><span class="keyword">if</span> CUDA:</span><br><span class="line">    inputs = X.cuda()</span><br><span class="line">    targets = Y.cuda()</span><br><span class="line">    w = w.cuda()</span><br><span class="line">    w.requires_grad = <span class="keyword">True</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    inputs = X</span><br><span class="line">    targets = Y</span><br><span class="line">    w = w</span><br><span class="line">    w.requires_grad = <span class="keyword">True</span></span><br></pre></td></tr></table></figure><p>(variable)的理解， pytorch中的变量variable有三个属性，分别是data表示变量中的具体值， grad表示这个变量反向传播的梯度，这个的计算方式下面有专门的一个演示程序， grad_fn表示是通过什么操作得到这个变量的例如( 加减乘除、卷积、反置卷积)</p><p><img src="https://img-blog.csdnimg.cn/20190628093314464.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzc2Nzgx,size_16,color_FFFFFF,t_70" alt=""></p><p>然后定义一个tensor(张量)，以及将tensor(张量)转化成variable(变量)。之所以需要将tensor转化成variable是因为<strong>pytorch中tensor(张量)只能放在CPU上运算</strong>，而(variable)变量是可以用GPU进行加速计算的。 所以说这就是为什么pytorch加载图像的时候一般都会使用(variable)变量. 下面一段代码演示的是tensor和variable(变量)之间的转化。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 然后定义pytorch中的tensor 并将tensor转化成Variable的形式</span></span><br><span class="line">x_tensor = torch.ones(<span class="number">3</span>)</span><br><span class="line">print(<span class="string">'张量的类型以及具体值:\n'</span>, type(x_tensor), x_tensor)</span><br><span class="line">x_var = Variable(x_tensor, requires_grad = <span class="keyword">True</span>)</span><br><span class="line">print(<span class="string">'变量的类型以及具体的值:\n'</span>, type(x_var), x_var)</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">张量的类型以及具体值:</span></span><br><span class="line"><span class="string"> &lt;class 'torch.Tensor'&gt; tensor([1., 1., 1.])</span></span><br><span class="line"><span class="string">变量的类型以及具体的值:</span></span><br><span class="line"><span class="string"> &lt;class 'torch.Tensor'&gt; tensor([1., 1., 1.], requires_grad=True)</span></span><br><span class="line"><span class="string"> '''</span></span><br><span class="line"><span class="comment"># 可以看到这边多了一个requires_grad的属性</span></span><br></pre></td></tr></table></figure><p>Tensor也可以通过x_tensor.data来获得值，因此比较下来两者的区别就是requires_grad为True、False的关系</p><p>摘自： <a href="https://blog.csdn.net/qq_41776781/article/details/93967961" target="_blank" rel="noopener">https://blog.csdn.net/qq_41776781/article/details/93967961</a></p><h1 id="深度学习算法实践"><a class="markdownIt-Anchor" href="#深度学习算法实践"></a> 《深度学习算法实践》</h1><blockquote><p>这本书应该是我大二见到过最多的书了， 但说实话看完也比较一般， 比较多介绍的是深度学习应用介绍。</p></blockquote><p><img src="https://wkphoto.cdn.bcebos.com/500fd9f9d72a60597d613fca2534349b023bbae9.jpg" alt=""></p><h1 id="pytorch深度学习实战从新手小白到数据科学家"><a class="markdownIt-Anchor" href="#pytorch深度学习实战从新手小白到数据科学家"></a> 《Pytorch深度学习实战：从新手小白到数据科学家》</h1><blockquote><p>这本书感觉也不错，即介绍了torch也介绍了不少pandas和sklearn</p></blockquote><p><img src="http://download.broadview.com.cn/LargeCover/2008631ab948eca71305" alt="Pytorchæ·±åº¦å­¦ä¹ å®æï¼ä»æ°æå°ç½å°æ°æ®ç§å­¦å®¶"></p><h2 id="pytorch的核心概念"><a class="markdownIt-Anchor" href="#pytorch的核心概念"></a> PyTorch的核心概念</h2><blockquote><p>本节主要介绍PyTorch的基本概念（如Tensor 和Variable）、自动微分和PyTorch的核心模块。</p></blockquote><h3 id="131pytorch的基本概念"><a class="markdownIt-Anchor" href="#131pytorch的基本概念"></a> 1.3.1PyTorch的基本概念</h3><p>和其他深度学习框架一样，PyTorch在实现过程中也提出了自己的概念，包括张量，PyTorch中的张量用Tensor表示。初学者可能不知道张量是什么。其实，张量可以简单地理解为一个多维数组，类似于NumPy中的narray对象。<br>多维数组可以用相册来形象地解释。假设小米有相册A，相册A包含N张图片，每张图片的宽度为那、高度为H。由于是彩色图片，在计算机中用RGB三通道表示（所有颜色都可以用红、景、蓝三原色按照不同的比例调配出来，红、绿、蓝三通道不同的像素亮度值叠加在一起就呈现出不同的颜色，所以整张图片呈现出彩色），所以通道数为3。.<br>PyTorch采用四维数组表示这个相册，形如[N, W,H, C]，其中C表示通道数。这种多维数组表示的好处可以从计算机组成原理说起，现代计算机都是多核多处理器的，支持多线程和多进程，非常适合矩库的并行计算，而且计算一批数据和计算一个数据的调度时间是差不多的，因此科学计算往往都是基于矩阵的计算，并且会指定一个适当的Batch。例如，PyTorch视觉处理中通常将Bah指定为4、128或256，这也是为了充分利用计算机资源而考虑的。基于张量的乘法运算如图18所示。<br>张量就是多维数组，并且提供了CPU设备和GPU设备的支持。如果机器上有GPU设备，就可以在Tr上调用cuda方法，将Tensor的数据加载到GPU设备中运行，提升运行速度。张最上提供了很多有用的方法，这些方法和Numpy中的方法类似，使用过NmPy的读者肯定会觉得这些方法既眼熟又亲切。</p><p>创健张量需要借助tensor提供的Tensor方法或from_numpy方法。理论上可以创建任意维度的多为数组，但最常用的Tensor补超过五维。</p><p>除了维度，还可以指定每个维度上的SIZE，如a = torch.Tensor(3, 4, 5, 8)，表示创建了一个思维数组，因为Tensor有4个参数，每个参数表示对应维度的大小。因此，变量a可以表示Batch书为3、宽度为4。高度为5，通道数为8的特征图（Feature Map图像卷积运算产生的中间特征）</p><p>除了一二维以外，还有<strong>三维立方体</strong>：将多个二维矩阵叠加在一起就可以形成三维立方体。三维Tensor 常用于表示图片数据[width，height，channel]。四维多立方体：常见于批量的图片数据，如之前介细的相册就是多张图片的叠加，最常见的形式为[batch, width, height, channel]。五维：表示多个四维tensor相加，常见于视频数据，视频按帧数划分，如50fps（帧/s），表现形式为[frames, batch, width, height, channel]</p><h3 id="variable"><a class="markdownIt-Anchor" href="#variable"></a> Variable</h3><p>PyTorch中另外一个和Tensor相关的概念是Variable变量。Variable是对Tensor的封装，是一种特殊的张量，位于torch.autograd自动微分模块中，是为实现自动微分而提出的一种特殊的数据结构。<u>在PyTorch0.4.1之前的版本中，Variable的应用非常广泛</u>。但是到<strong>PyTorch1.0之后，这个数据结构被标注为deprecated</strong>，表示已经过时，并且Variable中的grad和grad_fm等属性也被转移到Tensor中，这个改变进一步精简了接口。由于市面上还存在大量老版本的代码，所以本书也对Variable进行简单介绍。创建Variable需要借助 torch.autograd中提供的Variable方法，它接收Tensor类型的参数。下面通过 Float Tensor 创建 Variable。</p><h3 id="算子有哪些"><a class="markdownIt-Anchor" href="#算子有哪些"></a> 算子有哪些</h3><p><img src="/2020/11/28/深度学习-Pytorch读书笔记/%E5%B8%B8%E8%A7%81%E7%AE%97%E5%AD%90.jpg" alt="常见算子"></p><h2 id="pytorch的核心模块"><a class="markdownIt-Anchor" href="#pytorch的核心模块"></a> PyTorch的核心模块</h2><p>任何好的软件系统必定是经过精心设计和抽象的，PyTorch脱胎于2012年使用La语言编写的To山项目，该项目无论是计算架构设计还是扩展性都是一流的，特别是动态图更是让人耳目一新。<br>pyTorch将系统的实现抽象为不同的模块，最核心的模块是Tensor，它是整个动态图的基础，自动微分及反向传播都需要借助该模块。Torch为创建Tensor提供了多种方法，如torchrandn、torcth.randint等，Tensor上实现了大量的方法，如sum、argmin、argmax等。Tensor也是torch模块构建网络的核心，网络构建好之后通过网络的parameters方法可以获取网络的所有参数，并且可以通过遍历这些参数对象改变requires_grad 属性来达到冻结参数的目的，这在迁移学习中特别有用。<strong>torch.nn模块通过functional子模块</strong>提供了大量方法，如conv、ReLU、polling、softmax等。这些方法在网络的forward中调用，结果输出值由torch.nn.xxxLos损失函数计算损失。<strong>torch.nn模块</strong>中提供了很多可选的<strong>损失函数</strong>，如MSELoss、CrossEntropyLoss等，将损失传递给优化模块，<strong>torch.optim优化模块</strong>提供了大量的优化器，常见的有SGD、Adam等。优化器会根据损失计算并更新梯度，达到优化的目的，最终将更新 parameters。PyTorch的核心模块如图1.14所示。</p><p><img src="/2020/11/28/深度学习-Pytorch读书笔记/pytorch%E6%A0%B8%E5%BF%83%E6%A8%A1%E5%9D%97.jpg" alt="pytorch核心模块"></p><h1 id="附录-2"><a class="markdownIt-Anchor" href="#附录-2"></a> 附录</h1><h2 id="保存模型断点"><a class="markdownIt-Anchor" href="#保存模型断点"></a> 保存模型断点：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 存模型参数写法：</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_checkpoint</span><span class="params">(self, folder=<span class="string">'checkpoint'</span>, filename=<span class="string">'checkpoint.pth.tar'</span>)</span>:</span></span><br><span class="line">        filepath = os.path.join(folder, filename)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(folder):</span><br><span class="line">            print(<span class="string">"Checkpoint Directory does not exist! Making directory &#123;&#125;"</span>.format(folder))</span><br><span class="line">            os.mkdir(folder)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"Checkpoint Directory exists! "</span>)</span><br><span class="line">        torch.save(&#123;</span><br><span class="line">            <span class="string">'state_dict'</span> : self.nnet.state_dict(),</span><br><span class="line">        &#125;, filepath)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">load_checkpoint</span><span class="params">(self, folder=<span class="string">'checkpoint'</span>, filename=<span class="string">'checkpoint.pth.tar'</span>)</span>:</span></span><br><span class="line">        filepath = os.path.join(folder, filename)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(filepath):</span><br><span class="line">            <span class="keyword">raise</span>(<span class="string">"No model in path &#123;&#125;"</span>.format(filepath))</span><br><span class="line">        map_location = <span class="keyword">None</span> <span class="keyword">if</span> args.cuda <span class="keyword">else</span> <span class="string">'cpu'</span></span><br><span class="line">        checkpoint = torch.load(filepath, map_location=map_location)</span><br><span class="line">        self.nnet.load_state_dict(checkpoint[<span class="string">'state_dict'</span>])</span><br><span class="line"><span class="comment"># 存整个模型</span></span><br><span class="line"><span class="keyword">if</span> j % <span class="number">10</span> ==<span class="number">0</span> <span class="keyword">and</span> loss &lt; loss_value:</span><br><span class="line">    torch.save(model, <span class="string">"model.cpkt"</span>)</span><br><span class="line">    loss_value = loss</span><br></pre></td></tr></table></figure><p>注意点： PIL能show的图片格式不能是tensor，只能是numpy的array，所以需要可视化的话得转换一下。</p><h2 id="10分钟快速入门pytorch-1"><a class="markdownIt-Anchor" href="#10分钟快速入门pytorch-1"></a> 10分钟快速入门PyTorch (1)</h2><p><a href="https://zhuanlan.zhihu.com/p/26893755" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/26893755</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;在课程设计实验周里总共读了3本书， 《深度学习算法实践》、《深度学习框架PyTorch快速开发与实战》、《PyTorch深度学习入门》。 其中《深度学习算法实践》、《深度学习框架PyTorch快速开发与实战》比较失望，质量比较差；《PyTorch深
      
    
    </summary>
    
    
      <category term="机器学习" scheme="https://nymrli.top/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="读书笔记" scheme="https://nymrli.top/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Linux服务器同步时钟</title>
    <link href="https://nymrli.top/2020/11/22/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%90%8C%E6%AD%A5%E6%97%B6%E9%92%9F/"/>
    <id>https://nymrli.top/2020/11/22/Linux服务器同步时钟/</id>
    <published>2020-11-22T04:49:35.000Z</published>
    <updated>2020-11-22T04:50:08.208Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a class="markdownIt-Anchor" href="#"></a> </h2><blockquote><p>因为今天在集群193跑程序的时候发现时间不同步, 因此想想把集群的时间全部同步一下</p></blockquote><ol><li><p>在Linux中设置系统时间，可以用date命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看时间</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> date</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改时间</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> date -s <span class="string">"20140225 20:16:00"</span>  <span class="comment">#yyyymmdd hh:mm:ss</span></span></span><br></pre></td></tr></table></figure></li><li><p>Linux硬件时间的设置</p></li></ol><p>硬件时间的设置，可以用hwclock或者clock命令。两者基本相同，只用一个就行，只不过clock命令除了支持x86硬件体系外，还支持Alpha硬件体系。</p><ol start="3"><li>系统时间和硬件时间的同步</li></ol><p>同步系统时间和硬件时间，可以使用hwclock命令。</p><p><strong>4. 不同机器之间的时间同步</strong></p><p>为了避免主机时间因为长期运行下所导致的时间偏差，进行时间同步（synchronize）的工作是非常必要的。Linux系统下，一般使用ntp服务器来同步不同机器的时间。一台机器，可以同时是ntp服务端和ntp客户端。在生产系统中，推荐使用像DNS服务器一样分层的时间服务器来同步时间。</p><p>不同机器间同步时间，可以使用ntpdate命令，也可以使用ntpd服务。==&gt;▲. 注意两个不能同时使用: 如果使用了ntpd后还是用ntpdate会报错<code>ntpdate[39462]: the NTP socket is in use, exiting</code>, 要查询ntp的状态，用ntpq命令，比如看目前是否和ntp server同步，用<code>ntpq -p</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">     remote           refid      st t when poll reach   delay   offset  jitter</span><br><span class="line">==============================================================================</span><br><span class="line"> 0.ubuntu.pool.n .POOL.          16 p    -   64    0    0.000    0.000   0.000</span><br><span class="line"> 1.ubuntu.pool.n .POOL.          16 p    -   64    0    0.000    0.000   0.000</span><br><span class="line"> 2.ubuntu.pool.n .POOL.          16 p    -   64    0    0.000    0.000   0.000</span><br><span class="line"> 3.ubuntu.pool.n .POOL.          16 p    -   64    0    0.000    0.000   0.000</span><br><span class="line"> ntp.ubuntu.com  .POOL.          16 p    -   64    0    0.000    0.000   0.000</span><br><span class="line"> ntp1.ams1.nl.le 130.133.1.10     2 u    1   64    1  305.632  -43.387   0.146</span><br><span class="line">*120.25.115.20   10.137.53.7      2 u    1   64    1   29.425   -1.059   0.410</span><br><span class="line"> 203.107.6.88    100.107.25.114   2 u    1   64    1   32.056   -2.093   0.257</span><br><span class="line"> ntp.xtom.nl     84.199.11.211    2 u    1   64    1  175.286   -6.179   0.210</span><br><span class="line"> 94.130.49.186 ( 195.13.23.5      3 u    2   64    1  212.348  -17.943   0.561</span><br><span class="line"> tock.ntp.infoma .GPS.            1 u    2   64    1  239.693  -11.135   0.175</span><br><span class="line"> 119.28.206.193  100.122.36.196   2 u    -   64    1   41.525   -4.034   0.002</span><br></pre></td></tr></table></figure><p>可以看到*号标出的就是集群正在同步的时钟服务器: 120.25.115.20是阿里云</p><p>由于不能同时使用， 而ntpdate的稳定性不好， 因此ntpdate用来一次性同步时间（或者ntpdate+cron组合）、或者用ntpdate同步一次时间后，持续用ntpd服务器来同步。</p><p>下面使用ntpdate来同步时间：使用ntpdate前, 先将ntpd关闭: <code>service ntpd stop</code>或<code>sudo systemctl stop ntp</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">  /usr/sbin/ntpdate  time.stdtime.gov.tw</span></span><br><span class="line">Error : Temporary failure in name resolution</span><br><span class="line">29 Oct 14:18:59 ntpdate[25327]: can't find host time.stdtime.gov.tw</span><br><span class="line">29 Oct 14:18:59 ntpdate[25327]: no servers can be used, exiting</span><br></pre></td></tr></table></figure><p>确认防火墙没有问题后，执行域名解析，发现失败</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> nslookup  time.stdtime.gov.tw</span></span><br><span class="line">;; connection timed out; no servers could be reached</span><br></pre></td></tr></table></figure><p>尝试ping外网，以确认能正常连到外网，连网正常</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ping 8.8.8.8</span></span><br><span class="line">PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.</span><br><span class="line">64 bytes from 8.8.8.8: icmp_seq=1 ttl=53 time=1.48 ms</span><br><span class="line">64 bytes from 8.8.8.8: icmp_seq=2 ttl=53 time=1.40 ms</span><br><span class="line">--- 8.8.8.8 ping statistics ---</span><br><span class="line">2 packets transmitted, 2 received, 0% packet loss, time 1000ms</span><br><span class="line">rtt min/avg/max/mdev = 1.404/1.445/1.487/0.056 ms</span><br></pre></td></tr></table></figure><p>于是修改DNS文件, /etc/resolv.conf, 虽然这边提示不要手动修改, 但是临时改掉是没问题的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Dynamic resolv.conf(5) file <span class="keyword">for</span> glibc resolver(3) generated by resolvconf(8)</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN</span></span><br><span class="line"><span class="meta">#</span><span class="bash">nameserver 127.0.1.1</span></span><br><span class="line">nameserver 8.8.8.8</span><br></pre></td></tr></table></figure><p>修改后，再次执行时间同步，ok鸟！</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apollo3d@apollo15:~/cl/Python_project/cplm/Min38$ sudo ntpdate ntp1.aliyun.com</span><br><span class="line">21 Nov 23:04:25 ntpdate[40285]: adjust time server 120.25.115.20 offset 0.002194 se</span><br></pre></td></tr></table></figure><p>除了阿里云的还有pool.ntp.org可以用来同步。</p><p>▲但是同步之后时间还是不太对， 于是观察时区， 发现集群两台电脑上其实只是时区是不同的， 同步的服务器都是一样的阿里云的。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apollo3d@apollo2:~$ date</span><br><span class="line">2020年 11月 22日 星期日 12:14:11 CST</span><br><span class="line"></span><br><span class="line">apollo3d@apollo15:~/cl/Python_project/cplm/Min38$ date</span><br><span class="line">Sat Nov 21 23:14:01 EST 2020</span><br></pre></td></tr></table></figure><p>发现一个是EST和CST。网上查询得知 EST代表英国时间, CST代表北京时间, EDT：指美国东部夏令时间</p><p>那么现在只要改成北京时间的时区CST就可以了，修改如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# mv /etc/localtime /etc/localtime.bak</span><br><span class="line">[root@localhost ~]# ln -s /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime</span><br><span class="line">[root@localhost ~]# date</span><br></pre></td></tr></table></figure><p>但是发现两台语言不一样, 一个是中文, 一个是英文, 猜测是操作系统中英版导致的: 输出环境变量:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">apollo3d@apollo2:~$ date</span><br><span class="line">2020年 11月 22日 星期日 12:14:11 CST</span><br><span class="line"><span class="meta">$</span><span class="bash"> env</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 可以看到时区是中国</span></span><br><span class="line">HOME=/home/apollo3d</span><br><span class="line">LOGNAME=apollo3d</span><br><span class="line">LESSCLOSE=/usr/bin/lesspipe %s %s</span><br><span class="line">LC_TIME=zh_CN.UTF-8</span><br><span class="line">LC_NAME=zh_CN.UTF-8</span><br><span class="line">_=/usr/bin/env</span><br><span class="line"></span><br><span class="line">apollo3d@apollo15:~/cl/Python_project/cplm/Min38$ date</span><br><span class="line">Sat Nov 21 23:14:01 EST 2020</span><br><span class="line"><span class="meta">$</span><span class="bash"> env</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 可以看到语言是en_US, 但是没设置时区</span></span><br><span class="line">MAIL=/var/mail/apollo3d</span><br><span class="line">PWD=/home/apollo3d/cl/Python_project/cplm/Min38</span><br><span class="line">JAVA_HOME=/home/apollo3d/Apollo_Rescue/jdk1.8.0_161</span><br><span class="line">LANG=en_US.UTF-8</span><br><span class="line">HOME=/home/apollo3d</span><br><span class="line">SUDO_COMMAND=/bin/su</span><br></pre></td></tr></table></figure><p>因此可以修改LANG:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/sysconfig/i18n</span></span><br><span class="line">LANG="en_US.UTF-8"改为LANG="zh_CN.GB2312"</span><br></pre></td></tr></table></figure><p>再运行我的Python脚本的时候发现竟然报错了: ValueError: Timezone offset does not match system offset: -18000 != 28800. Please, check your config files.</p><p>因为系统时区和代码运行时区不一样导致。解决办法：在创建BlockingScheduler对象时指定上海的时区<code>scheduler = BlockingScheduler(timezone=&quot;Asia/Shanghai&quot;)</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#&quot;&gt;&lt;/a&gt; &lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;因为今天在集群193跑程序的时候发现时间不同步, 因此想想把集群的时间全部同步一下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;

      
    
    </summary>
    
    
      <category term="Linux" scheme="https://nymrli.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>李宏毅机器学习_摘要</title>
    <link href="https://nymrli.top/2020/11/17/%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E6%91%98%E8%A6%81/"/>
    <id>https://nymrli.top/2020/11/17/李宏毅机器学习-摘要/</id>
    <published>2020-11-17T12:36:05.000Z</published>
    <updated>2020-12-20T14:35:08.357Z</updated>
    
    <content type="html"><![CDATA[<h2 id="p3regression-case-study"><a class="markdownIt-Anchor" href="#p3regression-case-study"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=3" target="_blank" rel="noopener">P3Regression - Case Study</a></h2><h3 id="regularization解决overfittingl2正则化解决过拟合问题"><a class="markdownIt-Anchor" href="#regularization解决overfittingl2正则化解决过拟合问题"></a> regularization解决overfitting(L2正则化解决过拟合问题)</h3><p><img src="/2020/11/17/李宏毅机器学习-摘要/2_%E6%AD%A3%E5%88%99%E5%8C%96.jpg" alt="2_正则化"></p><blockquote><p>regularization可以使曲线变得更加smooth，training data上的error变大，但是 testing data上的error变小。有关regularization的具体原理说明详见下一部分</p></blockquote><p>原来的loss function只考虑了prediction的error，即$$\sum_{i}<sup>{n}\left(\hat{y}</sup>{i}-\left(b+\sum_{j} w_{j} x_{j}\right)\right)^{2}$$；而regularization则是在原来的loss function的基础上加上了一项$$\lambda \sum\left(w_{i}\right)^{2}$$，就是把这个model里面所有的Wi的平方和用λ加权(其中i代表遍历n个training data，j代表遍历model的每一项)</p><p>也就是说，*<em>我们期待参数w i w_i*w*<em>i*越小甚至接近于0的function，为什么呢？</em></em></p><p>因为参数值接近0的function，是比较平滑的；所谓的平滑的意思是，当今天的输入有变化的时候，output对输入的变化是比较不敏感的。举例来说，对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mi>b</mi><mo>+</mo><mo>∑</mo><msub><mi>w</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y=b+\sum w_{i} x_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>这个model，当input变化Δ x，output的变化就是，$$w_{i} \Delta x_{i}$$也就是说，如果w越i小越接近0的话，<u>输出对输入就越不sensitive敏感</u>，我们的function就是一个越平滑的function；说到这里你会发现，我们之前没有把bias——b这个参数考虑进去的原因是<strong>bias的大小跟function的平滑程度是没有关系的</strong>，bias值的大小只是把function上下移动而已</p><p><strong>那为什么我们喜欢比较平滑的function呢？</strong></p><p>如果我们有一个比较平滑的function，由于输出对输入是不敏感的，测试的时候，一些noises噪声对这个平滑的function的影响就会比较小，而给我们一个比较好的结果</p><p><strong>注：这里的λ需要我们手动去调整以取得最好的值</strong></p><p>λ值越大代表考虑smooth的那个regularization那一项的影响力越大，我们找到的function就越平滑</p><p>观察下图可知，当我们的λ越大的时候，在training data上得到的error其实是越大的，但是这件事情是非常合理的，因为当λ越大的时候，我们就越倾向于考虑w的值而越少考虑error的大小；但是有趣的是，虽然在training data上得到的error越大，但是在testing data上得到的error可能会是比较小的</p><p>我们喜欢比较平滑的function，因为它对noise不那么sensitive；但是我们又不喜欢太平滑的function，因为它就失去了对data拟合的能力；而function的平滑程度，就需要通过调整λ来决定，就像下图中，当λ=100时，在testing data上的error最小，因此我们选择λ=100</p><h2 id="p4basic-concept"><a class="markdownIt-Anchor" href="#p4basic-concept"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=4" target="_blank" rel="noopener">P4Basic Concept</a></h2><h3 id="bias和variance"><a class="markdownIt-Anchor" href="#bias和variance"></a> bias和variance</h3><p><img src="/2020/11/17/李宏毅机器学习-摘要/bias%E5%92%8Cvariance.jpg" alt="bias和variance"></p><p>bias表示离靶心的距离, 而variance表示散布情况</p><p><img src="/2020/11/17/李宏毅机器学习-摘要/%E5%87%BD%E6%95%B0%E6%90%9C%E7%B4%A2%E7%A9%BA%E9%97%B41.jpg" alt="函数搜索空间1"></p><p><img src="/2020/11/17/李宏毅机器学习-摘要/%E5%87%BD%E6%95%B0%E6%90%9C%E7%B4%A2%E7%A9%BA%E9%97%B4.jpg" alt="函数搜索空间"></p><p>图中所示，只有足够大的函数搜索空间，才能找到正确的“靶心”，因此就需要吧模型设计得足够复杂。而复杂模型需要大数据来降低方差， 因此需要大量的数据防止过拟合</p><p><img src="/2020/11/17/李宏毅机器学习-摘要/%E6%8B%9F%E5%90%88%E6%83%85%E5%86%B5.jpg" alt="拟合情况"></p><p>如果来自variance的误差很大， 那么就是过拟合； 如果来自bias的误差很大，那么就是欠拟合（underfitting）</p><p><img src="/2020/11/17/李宏毅机器学习-摘要/%E6%8B%9F%E5%90%88%E5%A4%84%E7%90%86.jpg" alt="拟合处理"></p><p>bias大： 如果无法fit训练数据, 证明是欠拟合;如果能fit训练数据，但是在测试数据上有较大的误差，那么就是过拟合——做法：增大特征or增大次项</p><p>variance大： 更多的数据（数据增强）or 正则化</p><p><img src="/2020/11/17/李宏毅机器学习-摘要/variance%E6%8B%9F%E5%90%88%E5%A4%84%E7%90%86.jpg" alt="variance拟合处理"></p><h3 id="交叉验证"><a class="markdownIt-Anchor" href="#交叉验证"></a> 交叉验证：</h3><p><img src="/2020/11/17/李宏毅机器学习-摘要/P4%5C%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81.jpg" alt="交叉验证"></p><p>在trainingset训练后,虽然在公开的测试集上表示良好,但是private testing set不好的话, 则还是比较糟糕的模型。因此在判断一个模型的好坏的时候， 可以将trainingSet进行交叉验证</p><p><img src="/2020/11/17/李宏毅机器学习-摘要/P4%5CcrossValidation.jpg" alt="crossValidation"></p><p>非常不建议因为在public testing set上表现不好而反过来重新选择trainingSet的模型， 因为这相当于在训练的时候吧testing也考虑在内了， 违背了设计的初衷，并且这样的结果在private testing set上也会表现不好。</p><h4 id="n-fold-cross-validation-十折交叉验证"><a class="markdownIt-Anchor" href="#n-fold-cross-validation-十折交叉验证"></a> N-fold cross validation （十折交叉验证）</h4><p>如果不相信某一个trainset的结果的话， 那就分很多trainset</p><p><img src="/2020/11/17/李宏毅机器学习-摘要/P4%5CcrossValidation.jpg" alt="crossValidation"></p><h2 id="5-p5gradient-descent"><a class="markdownIt-Anchor" href="#5-p5gradient-descent"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=5" target="_blank" rel="noopener">5. P5Gradient Descent</a></h2><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>θ</mi><mo>∗</mo></msup><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><mi>θ</mi></munder><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\theta^{*}=\arg \min _{\theta} L(\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.738696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.5021079999999998em;vertical-align:-0.7521079999999999em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.047892em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7521079999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span></span></p><p>L: loss function<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span> : parameters(上标表示第几组参数, 下标表示这组参数中的第几个参数)</p><p><img src="/2020/11/17/李宏毅机器学习-摘要/P5%5ClossRate.jpg" alt="lossRate"></p><p>当参数有很多个的时候(&gt;3)，其实我们很难做到将<u>loss随每个参数的变化可视化出来(因为最多只能可视化出三维的图像，也就只能可视化三维参数</u>)，但是我们可以把update的次数作为唯一的一个参数，将loss随着update的增加而变化的趋势给可视化出来(上图右半部分)</p><p>所以做gradient descent一个很重要的事情是，要把不同的learning rate下，loss随update次数的变化曲线给可视化出来，它可以提醒你该如何调整当前的learning rate的大小，直到出现稳定下降的曲线</p><p><strong>总结：梯度下降法指的是函数值loss随梯度下降的方向减小</strong></p><h3 id="adaptive-learning-rates"><a class="markdownIt-Anchor" href="#adaptive-learning-rates"></a> Adaptive Learning rates</h3><p>显然这样手动地去调整learning rates很麻烦，因此我们需要有一些自动调整learning rates的方法</p><h5 id="最基本-最简单的大原则是learning-rate通常是随着参数的update越来越小的"><a class="markdownIt-Anchor" href="#最基本-最简单的大原则是learning-rate通常是随着参数的update越来越小的"></a> 最基本、最简单的大原则是：learning rate通常是随着参数的update越来越小的</h5><p>因为在起始点的时候，通常是离最低点是比较远的，这时候步伐就要跨大一点；而经过几次update以后，会比较靠近目标，这时候就应该减小learning rate，让它能够收敛在最低点的地方</p><h5 id="adagrad"><a class="markdownIt-Anchor" href="#adagrad"></a> Adagrad</h5><blockquote><p>Divide the learning rate of each parameter by the root mean square(方均根) of its previous derivatives</p></blockquote><p>Adagrad就是将不同参数的learning rate分开考虑的一种算法(adagrad算法update到后面速度会越来越慢，当然这只是adaptive算法中最简单的一种)</p><h3 id="stochastic-gradicent-descent"><a class="markdownIt-Anchor" href="#stochastic-gradicent-descent"></a> Stochastic Gradicent Descent</h3><p>随机梯度下降的方法可以让训练更快速，传统的gradient descent的思路是<u>看完所有的样本点</u>之后再构建loss function，然后去update参数；而stochastic gradient descent的做法是，<u>看到一个样本点就update一次</u>，因此它的loss function不是所有样本点的error平方和，而是这个随机样本点的error平方</p><h3 id="feature-scaling"><a class="markdownIt-Anchor" href="#feature-scaling"></a> Feature Scaling</h3><h5 id="概念介绍"><a class="markdownIt-Anchor" href="#概念介绍"></a> 概念介绍</h5><p>特征缩放，当多个特征的分布范围很不一样时，最好将这些不同feature的范围缩放成一样</p><p><img src="/2020/11/17/李宏毅机器学习-摘要/P5%5Cscaling.jpg" alt="scaling"></p><h5 id="对gradient-decent的帮助"><a class="markdownIt-Anchor" href="#对gradient-decent的帮助"></a> 对gradient decent的帮助</h5><p>之前我们做的demo已经表明了，对于这种长椭圆形的error surface，如果不使用Adagrad之类的方法，是很难搞定它的，因为在像w1和w2这样不同的参数方向上，会需要不同的learning rate，用相同的lr很难达到最低点</p><p>如果有scale的话，loss在参数w1、w2平面上的投影就是一个正圆形，update参数会比较容易</p><p>而且gradient descent的每次update并不都是向着最低点走的，每次update的方向是顺着等高线的方向(梯度gradient下降的方向)，而不是径直走向最低点；但是当经过对input的scale使loss的投影是一个正圆的话，不管在这个区域的哪一个点，它都会向着圆心走。因此feature scaling对参数update的效率是有帮助的</p><h5 id="scaling-method"><a class="markdownIt-Anchor" href="#scaling-method"></a> scaling method:</h5><p>z-score:</p><p>归一化</p><h3 id="gradient-descent数学理论"><a class="markdownIt-Anchor" href="#gradient-descent数学理论"></a> gradient descent数学理论</h3><p><img src="/2020/11/17/李宏毅机器学习-摘要/P5%5CGS%E6%95%B0%E5%AD%A6%E7%90%86%E8%AE%BA1.jpg" alt="GS数学理论1"></p><p><img src="/2020/11/17/李宏毅机器学习-摘要/P5%5CGS%E6%95%B0%E5%AD%A6%E7%90%86%E8%AE%BA2.jpg" alt="GS数学理论2"></p><p>注意 learning rate需要设置好, 否则Δθ不为0, 则泰勒近似不成立。</p><h4 id="gradient-descent的限制"><a class="markdownIt-Anchor" href="#gradient-descent的限制"></a> gradient descent的限制</h4><p>▲gradient descent的限制是，它在gradient即微分值接近于0的地方就会停下来，而这个地方不一定是global minima，它可能是local minima，可能是saddle point<strong>鞍点</strong>，甚至可能是一个loss很高的plateau平缓高原</p><h2 id="6-p10classification_1"><a class="markdownIt-Anchor" href="#6-p10classification_1"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=10" target="_blank" rel="noopener">6. P10Classification_1</a></h2><p>特征、特征向量是什么？</p><blockquote><p><strong>要想把一个东西当做计算机能理解的function的input，就需要把它数值化</strong></p></blockquote><p>特性数值化：用一组数字来描述一只宝可梦的特性， 比如用一组数字表示它有多强(total strong)、它的生命值(HP)、它的攻击力(Attack)、它的防御力(Defense)、它的特殊攻击力(Special Attack)、它的特殊攻击的防御力(Special defend)、它的速度(Speed)，以皮卡丘为例，我们可以用以上七种特性的数值就是特征量， 而多个特征量所组成的vector就是特征向量</p><hr><p>我们希望蓝色的这些属于class 1的宝可梦，input到Regression的model，output越接近1越好；红色的属于class 2的宝可梦，input到Regression的model，output越接近-1越好。如果使用回归来硬解分类问题的话， 异常值影响比较大。 异常值则远远大于1， 跟目标不一致</p><p>Regression的output是连续性质的数值，而classification要求的output是离散性质的点，我们很难找到一个Regression的function使大部分样本点的output都集中在某几个离散的点附近</p><p>因此，<strong>Regression定义model好坏的定义方式对classification来说是不适用的</strong></p><h4 id="solutiongenerative-model朴素贝叶斯分类器"><a class="markdownIt-Anchor" href="#solutiongenerative-model朴素贝叶斯分类器"></a> Solution：Generative model——朴素贝叶斯分类器</h4><p>![function](李宏毅机器学习-摘要/P6 classification\function.jpg)</p><p>我们可以把loss function定义成<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>L</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∑</mo><mi>n</mi></msub><mi>δ</mi><mrow><mo fence="true">(</mo><mi>f</mi><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mi mathvariant="normal">≠</mi><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\hat{L}(f)=\sum_{n} \delta\left(f\left(x^{n}\right) \neq \hat{y}^{n}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.19677em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">L</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;">^</span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>，即这个model在所有的training data上predict预测错误的次数，也就是说分类错误的次数越少，这个function表现得就越好</p><p><strong>贝叶斯公式=单条路径概率/所有路径概率和</strong></p><p>![beyas](李宏毅机器学习-摘要/P6 classification\beyas.jpg)</p><p>这一整套想法叫做<strong>Generative model</strong>(生成模型)，为什么叫它Generative model呢？因为有这个model的话，就可以拿它来generate生成x(如果你可以计算出每一个x出现的概率，就可以用这个distribution分布来生成x、sample x出来)</p><p>现在的问题是，怎么得到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mrow><mo fence="true">(</mo><mi>x</mi><mo>∣</mo><msub><mi>C</mi><mn>1</mn></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">P\left(x \mid C_{1}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mrow><mo fence="true">(</mo><mi>x</mi><mo>∣</mo><msub><mi>C</mi><mn>2</mn></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">P\left(x \mid C_{2}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 的值==&gt; 认为数据服从 高斯分布</p><h4 id="高斯分布"><a class="markdownIt-Anchor" href="#高斯分布"></a> 高斯分布</h4><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>μ</mi><mo separator="true">,</mo><mi mathvariant="normal">Σ</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mo stretchy="false">(</mo><mn>2</mn><mi>π</mi><msup><mo stretchy="false">)</mo><mrow><mi>D</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup></mrow></mfrac><mfrac><mn>1</mn><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">Σ</mi><msup><mi mathvariant="normal">∣</mi><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup></mrow></mfrac><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">{</mo><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>μ</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup><msup><mi mathvariant="normal">Σ</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>μ</mi><mo stretchy="false">)</mo><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">f_{\mu, \Sigma}(x)=\frac{1}{(2 \pi)^{D / 2}} \frac{1}{|\Sigma|^{1 / 2}} \exp \left\{-\frac{1}{2}(x-\mu)^{T} \Sigma^{-1}(x-\mu)\right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">μ</span><span class="mpunct mtight">,</span><span class="mord mtight">Σ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.410425em;vertical-align:-0.560425em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.614575em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8220357142857143em;"><span style="top:-2.8220357142857138em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.560425em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.614575em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mtight">Σ</span><span class="mord mtight"><span class="mord mtight">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8220357142857143em;"><span style="top:-2.8220357142857138em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.560425em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">{</span></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">μ</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">}</span></span></span></span></span></span></p><p>假设海龟的vector是[103 45]，虽然这个点在已有的数据里并没有出现过，但是不可以认为它出现的概率为0，我们需要用已有的数据去估测海龟出现的可能性</p><p>你可以想象说这已有的79只水系宝可梦的data其实只是冰山一角，假定水系神奇宝贝的Defense和SP Defense是从一个Gaussian的distribution里面sample出来的，下图只是采样了79个点之后得到的分布，但是从高斯分布里采样出海龟这个点的几率并不是0，那从这79个已有的点，怎么找到那个Gaussian distribution函数呢？</p><h4 id="最大似然估计_参数估计"><a class="markdownIt-Anchor" href="#最大似然估计_参数估计"></a> 最大似然估计_参数估计</h4><p>那接下来的问题就是怎么去找出这个Gaussian，<strong>只需要去估测出这个Gaussian的均值和协方差即可</strong></p><p>估测和的方法就是极大似然估计法(Maximum Likelihood)，极大似然估计的思想是，找出最特殊的那对u和covariance，从它们<u>共同决定的高斯函数</u>中再次采样出79个点，使”得到的分布情况与当前已知79点的分布情况相同“这件事情发生的可能性最大===&gt;最大似然估计</p><blockquote><p>根据sample样本, 求得使出现<strong>该样本组合可能性最大</strong>(所以是每一个点产生的概率相乘)的那组<strong>参数</strong></p></blockquote><p>![最大似然估计](李宏毅机器学习-摘要/P6 classification\最大似然估计.jpg)</p><p>![估计出参数](李宏毅机器学习-摘要/P6 classification\估计出参数.jpg)</p><p>预测：</p><p>![预测](李宏毅机器学习-摘要/P6 classification\预测.jpg)</p><p>===&gt; 训练结束：再把testing data上得到的结果可视化出来，即右下角的图，发现分的不是太好，正确率才是47%我们之前用的只是Defense和SP Defense这两个参数，在二维空间上得到的效果不太好，但实际上一开始就提到了宝可梦总共是有6个features的，也许在二维空间上它们是重叠在一起的，但是在六维空间上看它们也许会分得很好，每一个宝可梦都是六维空间中的一个点，于是我们的是一个6-dim的vector，则是一个6*6的matrix，发现得到的准确率也才64%，这个分类器表现得很糟糕，是否有办法将它改进的更好？</p><h4 id="modifying-model"><a class="markdownIt-Anchor" href="#modifying-model"></a> Modifying Model</h4><p>其实之前使用的model是不常见的，你是不会经常看到给每一个Gaussian都有自己的mean和covariance，比如我们的class 1用的是u1和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Σ</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\Sigma_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，class 2用的是u2和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Σ</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\Sigma_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，比较常见的做法是，<strong>不同的class可以share同一个cocovariance matrix</strong></p><p>其实variance是跟input的feature size的平方成正比的，所以当feature的数量很大的时候，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Σ</mi></mrow><annotation encoding="application/x-tex">\Sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Σ</span></span></span></span>大小的增长是可以非常快的，在这种情况下，给不同的Gaussian以不同的covariance matrix，会造成model的参数太多，而参数多会导致该model的variance过大，出现overfitting的现象，因此对不同的class使用同一个covariance matrix，可以有效减少参数</p><h3 id="案例总结"><a class="markdownIt-Anchor" href="#案例总结"></a> 案例总结</h3><blockquote><p>回顾几率模型</p></blockquote><p>machine learning可以概况为以下三个step</p><p>![threeSteps](李宏毅机器学习-摘要/P6 classification\threeSteps.jpg)</p><p>![threeSteps笔记](李宏毅机器学习-摘要/P6 classification\threeSteps笔记.jpg)</p><hr><p>![概率分布](李宏毅机器学习-摘要/P6 classification\概率分布.jpg)</p><p>选择的概率分布为经验之谈： 可以选择任意你喜欢的， 但是最后还是得看效果： 如果你选择的是简单的分布函数(参数比较少)，那你的bias就大，variance就小；如果你选择复杂的分布函数，那你的bias就小，variance就大，那你就可以用data set来判断一下，用什么样的Probability distribution作为model是比较好的</p><p>朴素贝叶斯：</p><p>这里每一个dimension的分布函数都是一维的Gaussian distribution，如果这样假设的话，等于是说，原来那多维度的Gaussian，它的covariance matrix变成是diagonal(对角的)，在不是对角线的地方，值都是0，这样就可以更加减少需要的参数量，就可以得到一个更简单的model</p><p>我们把上述这种方法叫做<strong>Naive Bayes Classifier(朴素贝叶斯分类法)</strong>，如果<u>真的明确了所有的feature之间是相互独立的，是不相关的，使用朴素贝叶斯分类法的performance是会很好的</u>，如果这个假设是不成立的，那么Naive bayes classfier的bias就会很大，它就不是一个好的classifier(朴素贝叶斯分类法本质就是减少参数)</p><p>当然这个例子里如果使用这样的model，得到的结果也不理想，因为各种feature之间的covariance还是必要的，比如战斗力和防御力它们之间是正相关的，covariance不能等于0</p><p>总之，寻找model总的原则是，尽量减少不必要的参数，但是必然的参数绝对不能少</p><p>那怎么去<strong>选择分布函数</strong>呢？有很多时候凭直觉就可以看出来，比如宝可梦有某个feature是binary的，它代表的是：是或不是，这个时候就不太可能是高斯分布了，而很有可能是伯努利分布(两点分布)</p><h4 id="analysis-posterior-probability分析后置概率的表达式"><a class="markdownIt-Anchor" href="#analysis-posterior-probability分析后置概率的表达式"></a> Analysis Posterior Probability分析后置概率的表达式</h4><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/posterior-probability.png" alt="img"></p><p><a href="https://sakura-gh.github.io/ML-notes/ML-notes-html/6_Classification.html" target="_blank" rel="noopener">上面的推导过程</a>可能比较复杂，但是得到的最终结果还是比较好的：(当和共用一个时，经过化简相消z就变成了一个linear的function，x的系数是一个vector w，后面的一大串数字其实就是一个常数项b)</p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/z-final.png" alt="img"></p><p><strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mrow><mo fence="true">(</mo><msub><mi>C</mi><mn>1</mn></msub><mo>∣</mo><mi>x</mi><mo fence="true">)</mo></mrow><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P\left(C_{1} \mid x\right)=\sigma(w \cdot x+b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">x</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span>这个式子就解释了，当class 1和class 2共用的时候，它们之间的boundary会是linear的</strong></p><h2 id="7-p11logistic-regression"><a class="markdownIt-Anchor" href="#7-p11logistic-regression"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=11" target="_blank" rel="noopener">7. P11Logistic Regression</a></h2><h3 id="three-steps-of-machine-learning"><a class="markdownIt-Anchor" href="#three-steps-of-machine-learning"></a> Three Steps of machine learning</h3><h4 id="step-1function-set"><a class="markdownIt-Anchor" href="#step-1function-set"></a> Step 1：function set</h4><p>这里的function set就是Logistic Regression——逻辑回归</p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/activation-function.png" alt="img"></p><h4 id="step-2goodness-of-a-function"><a class="markdownIt-Anchor" href="#step-2goodness-of-a-function"></a> Step 2：Goodness of a function</h4><p>现在我们有N笔Training data，每一笔data都要标注它是属于哪一个class</p><p>假设这些Training data是从我们定义的posterior Probability中产生的(后置概率，某种意义上就是概率密度函数)，而w和b就决定了这个posterior Probability，那我们就可以去计算某一组w和b去产生这N笔Training data的概率，利用<u>极大似然估计</u>的思想，最好的那组参数就是有最大可能性产生当前N笔Training data分布的和</p><p>似然函数只需要将每一个点产生的概率相乘即可，注意，这里假定是二元分类，class 2的概率为1减去class 1的概率. <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_{w, b}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>为x为C1种类的概率, 则在二元分类中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">( 1 - f_{w, b}(x) )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/likelihood.png" alt="img"></p><p>由于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(w, b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span> 是乘积项的形式, 为了方便计算, 我们将上式做个变换: (注意这边的L(w,b) 是最大似然函数, 而不是Loss function)</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="2em"><msup><mi>w</mi><mo>∗</mo></msup><mo separator="true">,</mo><msup><mi>b</mi><mo>∗</mo></msup><mo>=</mo><mi>arg</mi><mo>⁡</mo><msub><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>arg</mi><mo>⁡</mo><msub><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><mo>−</mo><mi>ln</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>ln</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mi>ln</mi><mo>⁡</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mn>1</mn></msup><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"><mo>−</mo><mi>ln</mi><mo>⁡</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo fence="true">)</mo></mrow></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"><mo>−</mo><mi>ln</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mn>3</mn></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"><mo>−</mo><mo>…</mo></mspace></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}\qquad w^{*}, b^{*}=\arg \max _{w, b} L(w, b)=\arg \min _{w, b}(-\ln L(w, b)) \\-\ln L(w, b)=-\ln f_{w, b}\left(x^{1}\right) \\\quad-\ln f_{w, b}\left(x^{2}\right) \\\quad-\ln \left(1-f_{w, b}\left(x^{3}\right)\right) \\\quad-\ldots\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.029999999999999em;vertical-align:-2.7649999999999997em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.265em;"><span style="top:-5.425em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:2em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">max</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">min</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mclose">)</span></span></span><span style="top:-4.215em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span><span style="top:-3.005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span><span style="top:-1.7950000000000006em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span><span style="top:-0.5950000000000004em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7649999999999997em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p>由于class 1和class 2的概率表达式不统一，上面的式子无法写成统一的形式, 为了统一格式, 这里将Logistic Regression里的所有Training data都打上0和1的标签, 即output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\hat{y}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 代表class <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">1,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span></span></span></span> output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\hat{y}=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 代表class <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">2,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mpunct">,</span></span></span></span> 于是上式进一步改写成:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo>−</mo><mi>ln</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>−</mo><mrow><mo fence="true">[</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mn>1</mn></msup><mi>ln</mi><mo>⁡</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mn>1</mn></msup><mo fence="true">)</mo></mrow><mo>+</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mn>1</mn></msup><mo fence="true">)</mo></mrow><mi>ln</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mn>1</mn></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>−</mo><mrow><mo fence="true">[</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mn>2</mn></msup><mi>ln</mi><mo>⁡</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo fence="true">)</mo></mrow><mo>+</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mn>2</mn></msup><mo fence="true">)</mo></mrow><mi>ln</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>−</mo><mrow><mo fence="true">[</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mn>3</mn></msup><mi>ln</mi><mo>⁡</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mn>3</mn></msup><mo fence="true">)</mo></mrow><mo>+</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mn>3</mn></msup><mo fence="true">)</mo></mrow><mi>ln</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mn>3</mn></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>−</mo><mo>…</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}-\ln L(w, b)=&amp;-\left[\hat{y}^{1} \ln f_{w, b}\left(x^{1}\right)+\left(1-\hat{y}^{1}\right) \ln \left(1-f_{w, b}\left(x^{1}\right)\right)\right] \\&amp;-\left[\hat{y}^{2} \ln f_{w, b}\left(x^{2}\right)+\left(1-\hat{y}^{2}\right) \ln \left(1-f_{w, b}\left(x^{2}\right)\right)\right] \\&amp;-\left[\hat{y}^{3} \ln f_{w, b}\left(x^{3}\right)+\left(1-\hat{y}^{3}\right) \ln \left(1-f_{w, b}\left(x^{3}\right)\right)\right] \\&amp;-\ldots\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.072324em;vertical-align:-2.786162em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.286162em;"><span style="top:-5.422054em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span><span style="top:-3.897946em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-2.373838em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-0.8738380000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.786162em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.286162em;"><span style="top:-5.422054em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span><span style="top:-3.897946em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span><span style="top:-2.373838em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span><span style="top:-0.8738380000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner">…</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.786162em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>现在已经有了统一的格式, 我们就可以把要minimize的对象写成一个summation的形式:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mi>ln</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mi>n</mi></munder><mo>−</mo><mrow><mo fence="true">[</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mi>ln</mi><mo>⁡</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo>+</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mo fence="true">)</mo></mrow><mi>ln</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">-\ln L(w, b)=\sum_{n}-\left[\hat{y}^{n} \ln f_{w, b}\left(x^{n}\right)+\left(1-\hat{y}^{n}\right) \ln \left(1-f_{w, b}\left(x^{n}\right)\right)\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.3000100000000003em;vertical-align:-1.250005em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.250005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span></span></p><p>这里表示第n个样本点，表示第n个样本点的class标签(1表示class 1,0表示class 2)，最终这个summation的形式，里面其实是两个<strong>Bernouli distribution(两点分布)的cross entropy(交叉熵)</strong></p><h5 id="交叉熵"><a class="markdownIt-Anchor" href="#交叉熵"></a> 交叉熵</h5><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/cross-entropy.png" alt="img"></p><p>假设有如上图所示的两个distribution p和q，它们的交叉商就是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><mi>q</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><msub><mo>∑</mo><mi>x</mi></msub><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>ln</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">H(p, q)=-\sum_{x} p(x) \ln (q(x)),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> 这也就是之前的 推导中在 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mi>ln</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">-\ln L(w, b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span> 前加一个负号的原因</p><p><u>cross entropy交叉嫡的含义是表达这两个distribution有多接近, 如果p和q这两个distribution一模一样的话, 那 它们算出来的cross entropy就是0(详细解释在“信息论&quot;中)</u>, 而这里 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">f\left(x^{n}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 表示function的output, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\hat{y}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> 表示预期 的 target, 因此交叉嫡实际上表达的是希望这个function的output和它的target越接近越好<br>总之, 我们要找的参数实际上就是:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>w</mi><mo>∗</mo></msup><mo separator="true">,</mo><msup><mi>b</mi><mo>∗</mo></msup><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></munder><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></munder><mrow><mo fence="true">(</mo><mo>−</mo><mi>ln</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mi>n</mi></munder><mo>−</mo><mrow><mo fence="true">[</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mi>ln</mi><mo>⁡</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo>+</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mo fence="true">)</mo></mrow><mi>ln</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow></mrow><annotation encoding="application/x-tex">w^{*}, b^{*}=\arg \max _{w, b} L(w, b)=\arg \min _{w, b}\left(-\ln L(w, b)=\sum_{n}-\left[\hat{y}^{n} \ln f_{w, b}\left(x^{n}\right)+\left(1-\hat{y}^{n}\right) \ln \left(1-f_{w, b}\left(x^{n}\right)\right)\right]\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.933136em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.638216em;vertical-align:-0.8882159999999999em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43055999999999994em;"><span style="top:-2.0478920000000005em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8882159999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.0478920000000005em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8882159999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.250005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h4 id="step-3find-the-best-function"><a class="markdownIt-Anchor" href="#step-3find-the-best-function"></a> step 3：Find the best function</h4><p>实际上就是去找到使loss function即交叉嫡之和最小的那组参数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>w</mi><mo>∗</mo></msup><mo separator="true">,</mo><msup><mi>b</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">w^{*}, b^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span></span></span></span> 就行了， 这里用gradient descent的方法进 行运算就Ok<br>这里sigmoid function的微分可以直接作为公式记下来: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>σ</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\frac{\partial \sigma(z)}{\partial z}=\sigma(z)(1-\sigma(z)),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> sigmoid和它的微分的图像如 下:</p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/sigmoid.png" alt="img"></p><p>先计算 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mi>ln</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∑</mo><mi>n</mi></msub><mo>−</mo><mrow><mo fence="true">[</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mi>ln</mi><mo>⁡</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo>+</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mo fence="true">)</mo></mrow><mi>ln</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">-\ln L(w, b)=\sum_{n}-\left[\hat{y}^{n} \ln f_{w, b}\left(x^{n}\right)+\left(1-\hat{y}^{n}\right) \ln \left(1-f_{w, b}\left(x^{n}\right)\right)\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span> 对 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的偏微分 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3em;vertical-align:-0.19444em;"></span><span class="mpunct">,</span></span></span></span> 这里 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\hat{y}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>−</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1-\hat{y}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> 是常数先不用管它，只需要分别求出 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>n</mi><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">lnf_{w, b}\left(x^{n}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ln</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\ln \left(1-f_{w, b}\left(x^{n}\right)\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 对 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的偏微分即可，整体推导过程如下：</p><p><img src="/2020/11/17/李宏毅机器学习-摘要/P11%5C%E4%BA%A4%E5%8F%89%E7%86%B5.jpg" alt="交叉熵"></p><p>将得到的式子进行进一步化简，可得：</p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/logistic-simple.png" alt="img"></p><p>梯度:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>θ</mi><mo>∗</mo></msup><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><mi>θ</mi></munder><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\theta^{*}=\arg \min _{\theta} L(\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.738696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.5021079999999998em;vertical-align:-0.7521079999999999em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.047892em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7521079999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span></span></p><p>L: loss function<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span> : parameters(上标表示第几组参数, 下标表示这组参数中的第几个参数)</p><p>正好跟gradient descent的目标一致, 因此可以直接用gradient descent来找到最好的参数θ</p><p>梯度更新公式: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">Δ</mi><msub><mi>θ</mi><mn>1</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">Δ</mi><msub><mi>θ</mi><mn>2</mn></msub></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mo>−</mo><mi>η</mi><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>u</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>v</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mo>&gt;</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>θ</mi><mn>1</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>θ</mi><mn>2</mn></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>−</mo><mi>η</mi><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>u</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>v</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>−</mo><mi>η</mi><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>θ</mi><mn>1</mn></msub></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>θ</mi><mi>z</mi></msub></mrow></mfrac></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\left[\begin{array}{l}\Delta \theta_{1} \\ \Delta \theta_{2}\end{array}\right]=-\eta\left[\begin{array}{l}u \\ v\end{array}\right]=&gt;\left[\begin{array}{l}\theta_{1} \\ \theta_{2}\end{array}\right]=\left[\begin{array}{l}a \\ b\end{array}\right]-\eta\left[\begin{array}{l}u \\ v\end{array}\right]=\left[\begin{array}{l}a \\ b\end{array}\right]-\eta\left[\begin{array}{l}\frac{\partial L(a, b)}{\partial \theta_{1}} \\ \frac{\partial L(a, b)}{\partial \theta_{z}}\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">u</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">u</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7050999999999998em;"><span style="top:-3.7051em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">L</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">a</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">L</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">a</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2050999999999998em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span></span></span></span> or <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>θ</mi><mi>i</mi></msup><mo>=</mo><msup><mi>θ</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mi>η</mi><mi mathvariant="normal">∇</mi><mi>L</mi><mrow><mo fence="true">(</mo><msup><mi>θ</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\theta^{i}=\theta^{i-1}-\eta \nabla L\left(\theta^{i-1}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.907994em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mord">∇</span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></p><p>我们发现最终的结果竟然异常的简洁，gradient descent每次update只需要做：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub><mo>=</mo><msub><mi>w</mi><mi>i</mi></msub><mo>−</mo><mi>η</mi><mo stretchy="false">(</mo><msub><mo>∑</mo><mi>n</mi></msub><mo>−</mo><mrow><mo fence="true">(</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mo>−</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><msubsup><mi>x</mi><mi>i</mi><mi>n</mi></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">w_{i}=w_{i}-\eta (\sum_{n}-\left(\hat{y}^{n}-f_{w, b}\left(x^{n}\right)\right) x_{i}^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mopen">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>那这个式子到底代表着什么意思呢? 现在你的update取决于三件事:</p><ul><li>learning rate, 是你自己设定的</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋅</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\cdot x_{i},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.63889em;vertical-align:-0.19444em;"></span><span class="mord">⋅</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 来自于data</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mo>−</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\hat{y}^{n}-f_{w, b}\left(x^{n}\right),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span></span></span></span> 代表function的output跟理想target的差距有多大, 如果离目标越远, update的步伐就要越 大</li></ul><h3 id="logistic-regression-vs-linear-regression"><a class="markdownIt-Anchor" href="#logistic-regression-vs-linear-regression"></a> Logistic Regression V.s. Linear Regression</h3><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/logistic-linear-regression.png" alt="img"></p><h5 id="compare-in-step1"><a class="markdownIt-Anchor" href="#compare-in-step1"></a> compare in step1</h5><ul><li>Logistic Regression是把每一个feature <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 加权求和, 加上bias, 再通过sigmoid function, 当做function的 output</li><li>因为Logistic Regression的output是通过sigmoid function产生的, 因此一定是介于0 1之间; 而linear Regression的output并没有通过sigmoid function, 所以它可以是任何值</li></ul><h5 id="compare-in-step2"><a class="markdownIt-Anchor" href="#compare-in-step2"></a> compare in step2</h5><p>在Logistic Regression中，我们定义的loss function, 即要去minimize的对象, 是所有example(样本点)的 output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">(</mo><mi>f</mi><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\left(f\left(x^{n}\right)\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> )和实际target <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">(</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\left(\hat{y}^{n}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 在Bernoulli distribution(两点分布)下的<strong>cross entropy(交叉嫡)总和</strong></p><p>交叉嫡的描述：这里把 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">f\left(x^{n}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\hat{y}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> 各自看做是一个Bernoulli distribution(两点分布)，那它们的cross entropy <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mrow><mo fence="true">(</mo><mi>f</mi><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo separator="true">,</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo>=</mo><mo>−</mo><mrow><mo fence="true">[</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mi>ln</mi><mo>⁡</mo><mi>f</mi><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo>+</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mo fence="true">)</mo></mrow><mi>ln</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><mi>f</mi><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">l\left(f\left(x^{n}\right), \hat{y}^{n}\right)=-\left[\hat{y}^{n} \ln f\left(x^{n}\right)+\left(1-\hat{y}^{n}\right) \ln \left(1-f\left(x^{n}\right)\right)\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span> 之和, 就是我们要去minimize的对象, 直观来讲, 就<br>是希望function的output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">f\left(x^{n}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 和它的target <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\hat{y}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> 越接近越好</p><p>注：这里的“看做&quot;只是为了方便理解和计算，并不是真的做出它们是两点分布的假设<br>而在linear Regression中, loss function的定义相对比较简单, 就是单纯的function的output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">(</mo><mi>f</mi><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\left(f\left(x^{n}\right)\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 和实际 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">target</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\operatorname{target}\left(\hat{y}^{n}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">t</span><span class="mord mathrm">a</span><span class="mord mathrm">r</span><span class="mord mathrm" style="margin-right:0.01389em;">g</span><span class="mord mathrm">e</span><span class="mord mathrm">t</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 在<strong>数值上的平方和的均值</strong><br>这里可能会有一个疑惑, 为什么Logistic Regression的loss function不能像linear Regression一样用square error 来表示呢? 后面会有进一步的解释</p><h5 id="compare-in-step3"><a class="markdownIt-Anchor" href="#compare-in-step3"></a> compare in step3</h5><p>神奇的是，<u>Logistic Regression和linear Regression的update的方式是一模一样的</u>，唯一不一样的是，Logistic Regression的target 和output 都必须是在0和1之间的，而linear Regression的target和output的范围可以是任意值</p><h3 id="logistic-regression-square-error"><a class="markdownIt-Anchor" href="#logistic-regression-square-error"></a> Logistic Regression + Square error？</h3><blockquote><p>先说结论, 在分类问题中Square error不合适, cross entropy适合于分类问题</p></blockquote><p>Square error求微分情况:</p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/logistic-square.png" alt="img"></p><p>现在会遇到一个问题：如果第n个点的目标target是class <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">1,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span></span></span></span> 则 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup><mo>=</mo><mn>1</mn><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\hat{y}^{n}=1,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span></span></span></span> 此时如果function的output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">f_{w, b}\left(x^{n}\right)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 的话, 说明现在离target很接近了, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi mathvariant="normal">丶</mi><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">f_{w, b}(x)-\hat{y} 丶 \bar{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mord cjk_fallback">丶</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;">ˉ</span></span></span></span></span></span></span></span></span> 一项是0, 于是得到的微分 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mi>i</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial L}{\partial w_{i}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.325208em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 会变成0，这件事情是很合理的; 但是当function的output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">f_{w, b}\left(x^{n}\right)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 的时候, 说明离target还很遥远, 但是由于在step3中求出来的update表达 式中有一个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>x</mi><mi>n</mi></msup><mo fence="true">)</mo></mrow><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">f_{w, b}\left(x^{n}\right),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span></span></span></span> 因此这个时候也会导致得到的微分 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mi>i</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial L}{\partial w_{i}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.325208em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 变成0==&gt;简而言之, 微分的结果不便于下一步的gradient descent<br>如果举class 2的例子，得到的结果与class 1是一样的<br>如果我们把参数的变化对total loss作图的话, loss function选择cross entropy或square error, 参数的变化跟 loss的变化情况可视化出来如下所示：(黑色的是cross entropy, 红色的是square error)</p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/cross-entropy-vs-square-error.png" alt="img"></p><p>假设中心点就是距离目标很近的地方，<u>如果是cross entropy的话，距离目标越远，微分值就越大，参数update的时候变化量就越大，迈出去的步伐也就越大</u></p><p>但当你选择square error的时候，过程就会很卡，<u>因为距离目标远的时候，微分也是非常小的，移动的速度是非常慢的</u>，我们之前提到过，实际操作的时候，当gradient接近于0的时候，其实就很有可能会停下来，因此使用square error很有可能在一开始的时候就卡住不动了，而且这里也不能随意地增大learning rate，因为在做gradient descent的时候，你的gradient接近于0，有可能离target很近也有可能很远，因此不知道learning rate应该设大还是设小</p><p>综上，尽管square error可以使用，但是会出现update十分缓慢的现象，而使用cross entropy可以让你的Training更顺利</p><h3 id="discriminative-vs-generative"><a class="markdownIt-Anchor" href="#discriminative-vs-generative"></a> Discriminative v.s. Generative</h3><h4 id="same-model-but-different-currency"><a class="markdownIt-Anchor" href="#same-model-but-different-currency"></a> same model but different currency</h4><p>Logistic Regression的方法，我们把它称之为discriminative的方法；而我们用Gaussian来描述posterior Probability这件事，我们称之为Generative的方法,</p><p>实际上它们用的model(function set)是一模一样的, 都是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mrow><mo fence="true">(</mo><msub><mi>C</mi><mn>1</mn></msub><mo>∣</mo><mi>x</mi><mo fence="true">)</mo></mrow><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">P\left(C_{1} \mid x\right)=\sigma(w \cdot x+b),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">x</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> 如果是用Logistic Regression 的话, 可以用gradient descent的方法直接去把b和W找出来; 如果是用Generative model的话，我们要先去算 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>u</mi><mn>2</mn></msub><mo separator="true">,</mo><msup><mi mathvariant="normal">Σ</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mspace width="1em"></mspace></mrow><annotation encoding="application/x-tex">u_{1}, u_{2}, \Sigma^{-1} \quad</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span></span></span></span> 然后算出b和w</p><p>区别在于: 是否有假设?</p><p>你会发现用这两种方法得到的b和w是不同的，尽管我们的function set是同一个，但是由于做了不同的假设，最终从同样的Training data里找出来的参数会是不一样的</p><p>在Logistic Regression里面，我们<strong>没有做任何实质性的假设</strong>，没有对Probability distribution有任何的描述，我们就是单纯地去找b和w(推导过程中的假设只是便于理解和计算，对实际结果没有影响)</p><p>而在Generative model里面，我们对Probability distribution是<strong>有实质性的假设</strong>的，之前我们假设的是Gaussian(高斯分布)，甚至假设在相互独立的前提下是否可以是naive bayes(朴素贝叶斯)，根据这些假设我们才找到最终的b和w</p><p>例子: <a href="https://sakura-gh.github.io/ML-notes/ML-notes-html/7_Logistic-Regression.html" target="_blank" rel="noopener">https://sakura-gh.github.io/ML-notes/ML-notes-html/7_Logistic-Regression.html</a></p><p>所以，<strong>Generative model和discriminative model的差别就在于，Generative的model它有做了某些假设，假设你的data来自于某个概率模型；而Discriminative的model是完全不作任何假设的, 完全根据数据说话</strong></p><blockquote><p>Generative model做的事情就是脑补，它会自己去想象一些事情，于是会做出一个和我们人类直觉想法不太一样的判断结果，就像toy example里，我们做了naive bayes这样一个假设(事实上我们并不知道这两个feature是否相互独立)，于是Naive bayes会在class 2里并没有出现过两个feature都是1的样本点的前提下，自己去脑补有这样的点</p><p>通常脑补不是一件好的事情，因为你给你的data强加了一些它并没有告诉你的属性，但是在data很少的情况下，脑补也是有用的，discriminative model并不是在所有的情况下都可以赢过Generative model，discriminative model是十分依赖于data的，当data数量不足或是data本身的label就有一些问题，那Generative model做一些脑补和假设，反而可以把data的不足或是有问题部分的影响给降到最低</p></blockquote><hr><h3 id="conclusion"><a class="markdownIt-Anchor" href="#conclusion"></a> Conclusion</h3><p>对于分类的问题(主要是二元分类)，我们一般有两种方法去处理问题，一种是Generative的方法，另一种是Discriminative的方法，注意到分类问题的model都是从贝叶斯方程出发的，即</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>P</mi><mrow><mo fence="true">(</mo><msub><mi>C</mi><mi>i</mi></msub><mo>∣</mo><mi>x</mi><mo fence="true">)</mo></mrow><mo>=</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mfrac><mrow><mi>P</mi><mrow><mo fence="true">(</mo><msub><mi>C</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mi>P</mi><mrow><mo fence="true">(</mo><mi>x</mi><mo>∣</mo><msub><mi>C</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow></mrow><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>P</mi><mrow><mo fence="true">(</mo><msub><mi>C</mi><mi>j</mi></msub><mo fence="true">)</mo></mrow><mi>P</mi><mrow><mo fence="true">(</mo><mi>x</mi><mo>∣</mo><msub><mi>C</mi><mi>j</mi></msub><mo fence="true">)</mo></mrow></mrow></mfrac><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mrow><mo fence="true">(</mo><mi>b</mi><mo>+</mo><munder><mo>∑</mo><mi>k</mi></munder><msub><mi>w</mi><mi>k</mi></msub><msub><mi>x</mi><mi>k</mi></msub><mo fence="true">)</mo></mrow></mrow></msup></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} P\left(C_{i} \mid x\right)=&amp; \frac{P\left(C_{i}\right) P\left(x \mid C_{i}\right)}{\sum_{j=1}^{n} P\left(C_{j}\right) P\left(x \mid C_{j}\right)}(1) \\ &amp;=\sigma(z)=\frac{1}{1+e^{-z}}=\frac{1}{1+e^{-\left(b+\sum_{k} w_{k} x_{k}\right)}} \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.55963em;vertical-align:-2.529815em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.029815em;"><span style="top:-5.029815em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">x</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span><span style="top:-2.278265em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.529815em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.029815em;"><span style="top:-5.029815em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.305708em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1301100000000002em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span><span style="top:-2.278265em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.697331em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.1100000000000003em;"><span class="pstrut" style="height:3.1077500000000002em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.10775em;"><span style="top:-3.4102500000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight delimcenter" style="top:0.07500000000000001em;"><span class="mtight">(</span></span><span class="mord mathdefault mtight">b</span><span class="mbin mtight">+</span><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1745899999999999em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32143857142857146em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span><span class="mclose sizing reset-size3 size6 mtight delimcenter" style="top:0.07500000000000001em;"><span class="mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.33775em;"><span class="pstrut" style="height:3.1077500000000002em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7847500000000003em;"><span class="pstrut" style="height:3.1077500000000002em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.08108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.529815em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>Generative model的好处是，它对data的依赖并没有像discriminative model那么严重，在data数量少或者data本身就存在noise的情况下受到的影响会更小，而它还可以做到Prior部分与class-dependent部分分开处理，如果可以借助其他方式提高Prior model的准确率，对整一个model是有所帮助的(比如前面提到的语音辨识)</p><p>而Discriminative model的好处是，在data充足的情况下，它训练出来的model的准确率一般是比Generative model要来的高的</p><h3 id="multi-class-classification"><a class="markdownIt-Anchor" href="#multi-class-classification"></a> Multi-class Classification</h3><h4 id="softmax"><a class="markdownIt-Anchor" href="#softmax"></a> softmax</h4><blockquote><p>softmax的意思是对最大值做强化，因为在做第一步的时候，对取exponential会使大的值和小的值之间的差距被拉得更开，也就是强化大的值</p></blockquote><h5 id="limitation-of-logistic-regression"><a class="markdownIt-Anchor" href="#limitation-of-logistic-regression"></a> Limitation of Logistic Regression</h5><p>Logistic Regression其实有很强的限制，给出下图的例子中的Training data，想要用Logistic Regression对它进行分类，其实是做不到的, 如<strong>异或</strong></p><h5 id="feature-transformation"><a class="markdownIt-Anchor" href="#feature-transformation"></a> Feature Transformation</h5><p>如果坚持要用Logistic Regression的话，有一招叫做<strong>Feature Transformation</strong>，原来的feature分布不好划分，那我们可以将之转化以后，找一个比较好的feature space，让Logistic Regression能够处理</p><p>但麻烦的是，我们并不知道怎么做feature Transformation，如果在这上面花费太多的时间就得不偿失了，于是我们会希望这个Transformation是机器自己产生的，怎么让机器自己产生呢？<strong>我们可以让很多Logistic Regression cascade(连接)起来</strong></p><p>我们让一个input x的两个feature <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">x_{1}, x_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 经过两个Logistic Regression的transform, 得到<strong>新的feature</strong> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>x</mi><mn>1</mn><mo mathvariant="normal">′</mo></msubsup><mo separator="true">,</mo><msubsup><mi>x</mi><mn>2</mn><mo mathvariant="normal">′</mo></msubsup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">x_{1}^{\prime}, x_{2}^{\prime},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 在 这个新的feature space上, class 1和class 2是可以用一条直线分开的, 那么最后只要再接另外一个Logistic Regression的model(对它来说, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>x</mi><mn>1</mn><mo mathvariant="normal">′</mo></msubsup><mo separator="true">,</mo><msubsup><mi>x</mi><mn>2</mn><mo mathvariant="normal">′</mo></msubsup></mrow><annotation encoding="application/x-tex">x_{1}^{\prime}, x_{2}^{\prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span> 才是每一个样本点的&quot;feature&quot;, 而不是原先的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo fence="true">)</mo></mrow><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\left.x_{1}, x_{2}\right),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span></span></span></span> 它根据新的 feature, 就可以把class 1和class 2分开</p><h3 id="powerful-cascading-logistic-regression"><a class="markdownIt-Anchor" href="#powerful-cascading-logistic-regression"></a> Powerful Cascading Logistic Regression</h3><p>通过上面的例子，我们发现，多个Logistic Regression连接起来会产生powerful的效果，<strong>我们把每一个Logistic Regression叫做一个neuron(神经元)，把这些Logistic Regression串起来所形成的network，就叫做Neural Network，就是类神经网路，这个东西就是Deep Learning！</strong></p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/powerful-network.png" alt="img"></p><h2 id="8-p12-brief-introduction-of-deep-learning"><a class="markdownIt-Anchor" href="#8-p12-brief-introduction-of-deep-learning"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=12" target="_blank" rel="noopener">8. P12 Brief Introduction of Deep Learning</a></h2><h3 id="ups-and-downs-of-deep-learning"><a class="markdownIt-Anchor" href="#ups-and-downs-of-deep-learning"></a> Ups and downs of Deep Learning</h3><ul><li>1958：Perceptron(linear model)，感知机的提出<ul><li>和Logistic Regression类似，只是少了sigmoid的部分</li></ul></li><li>1969：Perceptron has limitation，from MIT</li><li>1980s：Multi-layer Perceptron，多层感知机<ul><li>和今天的DNN很像</li></ul></li><li>1986：Backpropagation，反向传播<ul><li>Hinton propose的Backpropagation</li><li>存在problem：通常超过3个layer的neural network，就train不出好的结果</li></ul></li><li>、1989: 1 hidden layer is “good enough”，why deep？<ul><li>有人提出一个理论：只要neural network有一个hidden layer，它就可以model出任何的function，所以根本没有必要叠加很多个hidden layer，所以Multi-layer Perceptron的方法又坏掉了，这段时间Multi-layer Perceptron这个东西是受到抵制的</li></ul></li><li>2006：RBM initialization(breakthrough)：Restricted Boltzmann Machine，受限玻尔兹曼机<ul><li>Deep learning -&gt; another Multi-layer Perceptron ？在当时看来，它们的不同之处在于在做gradient descent的时候选取初始值的方法如果是用RBM，那就是Deep learning；如果没有用RBM，就是传统的Multi-layer Perceptron</li><li>那实际上呢，RBM用的不是neural network base的方法，而是graphical model，后来大家试验得多了发现RBM并没有什么太大的帮助，因此现在基本上没有人使用RBM做initialization了</li><li>RBM最大的贡献是，它让大家重新对Deep learning这个model有了兴趣(石头汤的故事)</li></ul></li><li>2009：GPU加速的发现</li><li>2011：start to be popular in speech recognition，语音识别领域</li><li>2012：win ILSVRC image competition，Deep learning开始在图像领域流行开来</li></ul><p>实际上，<u>Deep learning跟machine learning一样，也是“大象放进冰箱”的三个步骤</u>：</p><p>在Deep learning的step1里define的那个function，就是neural network</p><p><img src="/2020/11/17/李宏毅机器学习-摘要/P12%5CDLhistory.jpg" alt="DLhistory"></p><h3 id="neural-network"><a class="markdownIt-Anchor" href="#neural-network"></a> Neural Network</h3><h4 id="concept"><a class="markdownIt-Anchor" href="#concept"></a> concept</h4><p>把多个Logistic Regression前后connect在一起，然后把一个Logistic Regression称之为neuron，整个称之为neural network</p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/neural-network.png" alt="img"></p><p>我们可以用不同的方法连接这些neuron，就可以得到不同的structure，neural network里的每一个Logistic Regression都有自己的weight和bias，这些weight和bias集合起来，就是这个network的parameter，我们用来描述</p><h3 id="network-structure"><a class="markdownIt-Anchor" href="#network-structure"></a> Network Structure</h3><p>如果一个<strong>neural network</strong>的参数weight和bias已知的话，它就是一个<strong>function</strong>，它的<strong>input</strong>是一个vector，<strong>output</strong>是另一个vector，这个vector里面放的是<strong>样本点的feature</strong>，vector的dimension就是feature的个数</p><ul><li>input的地方，叫做<strong>input layer</strong>，输入层(严格来说input layer其实不是一个layer，它跟其他layer不一样，不是由neuron所组成的)</li><li>output的地方，叫做<strong>output layer</strong>，输出层</li><li>其余的地方，叫做<strong>hidden layer</strong>，隐藏层</li><li>激活函数: 每一个neuron里面的sigmoid function，在Deep Learning中被称为<strong>activation function</strong>(激励函数)，事实上它不见得一定是sigmoid function，还可以是其他function(sigmoid function是从Logistic Regression迁移过来的，现在已经较少在Deep learning里使用了)</li></ul><p>★.network structure+neuron该如何连接在一起的含义: 其实是define了一个function set(model)</p><h3 id="feedforward-network"><a class="markdownIt-Anchor" href="#feedforward-network"></a> <strong>Feedforward network</strong></h3><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/layers.png" alt="img"></p><p>▲.全连接: 因为layer和layer之间，<strong>所有的neuron都是两两连接</strong>，所以它叫Fully connected的network；因为现在传递的方向是从layer 1-&gt;2-&gt;3，由后往前传，所以它叫做Feedforward network</p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/output-layer.png" alt="img"></p><h4 id="output-layer"><a class="markdownIt-Anchor" href="#output-layer"></a> Output Layer</h4><p>我们可以把hidden layers这部分，看做是一个<strong>feature extractor(特征提取器)</strong>，这个feature extractor就replace了我们之前手动做feature engineering，feature transformation这些事情，经过这个feature extractor得到的就可以被当作一组新的feature</p><p>output layer做的事情，其实就是把它当做一个<strong>Multi-class classifier</strong>，它是拿经过feature extractor转换后的那一组比较好的feature(能够被很好地separate)进行分类的，由于我们把output layer看做是一个Multi-class classifier，所以我们会在最后一个layer加上<strong>softmax</strong></p><h3 id="整个手写体识别分析"><a class="markdownIt-Anchor" href="#整个手写体识别分析"></a> 整个手写体识别分析:</h3><p>我们唯一需要的就是一个<strong>function</strong>，这个function的input是一个256的vector，<strong>output是一个10维的vector</strong>，这个function就是neural network(这里我们用简单的Feedforward network)</p><p>input固定为256维(图片)，output固定为10维的feedforward neural network，实际上这个network structure就已经确定了一个function set(model)的形状，在这个function set里的每一个function都可以拿来做手写数字识别，接下来我们要做的事情是用gradient descent去计算出一组参数，挑一个最适合拿来做手写数字识别的function</p><p><strong>注：input、output的dimension，加上network structure，就可以确定一个model的形状，前两个是容易知道的，而决定这个network的structure则是整个Deep Learning中最为关键的步骤</strong></p><p>所以这里很重要的一件事情是，我们要对network structure进行design，之前在做Logistic Regression或者是linear Regression的时候，我们对model的structure是没有什么好设计的，但是对neural network来说，我们现在已知的constraint只有input是256维，output是10维，而中间要有几个hidden layer，每个layer要有几个neuron，都是需要我们自己去设计的，它们近乎是决定了function set长什么样子</p><p>如果你的network structure设计的很差，这个function set里面根本就没有好的function，那就会像大海捞针一样，结果针并不在海里(滑稽</p><h4 id="step-1neural-network"><a class="markdownIt-Anchor" href="#step-1neural-network"></a> Step 1：Neural Network</h4><p><img src="/2020/11/17/李宏毅机器学习-摘要/P12%5C%E6%89%8B%E5%86%99%E4%BD%93-network.jpg" alt="手写体-network"></p><p>intput输入为16*16的图片(256维) --&gt;经过神经网络(函数) --&gt; 输出10维的vector --&gt; 经过softmax函数选出可能性最大的结果输出-output</p><h4 id="step-2goodness-of-function"><a class="markdownIt-Anchor" href="#step-2goodness-of-function"></a> Step 2：Goodness of function</h4><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/loss-for-example.png" alt="img"></p><p>input这张image的256个pixel，通过这个neural network之后，会得到一个output，称之为y；而从这张image的label中转化而来的target，称之为，有了output 和target 之后，要做的事情是计算它们之间的<strong>cross entropy(交叉熵)</strong>，这个做法跟我们之前做Multi-class classification的时候是一模一样的—&gt; 分类问题多使用交叉熵</p><p>Cross Entropy <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>:</mo><mi>l</mi><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mn>10</mn></msubsup><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">: l(y, \hat{y})=-\sum_{i=1}^{10} \hat{y}_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.253718em;vertical-align:-0.29971000000000003em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>lny<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mrow></mrow><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46166399999999996em;vertical-align:-0.15em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><h4 id="step-3pick-the-best-function"><a class="markdownIt-Anchor" href="#step-3pick-the-best-function"></a> Step 3：Pick the best function</h4><p>接下来就去调整参数，让这个cross entropy越小越好，当然整个training data里面不会只有一笔data，你需要把所有data的cross entropy都sum起来, 得到一个total loss <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><msup><mi>l</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">L=\sum_{n=1}^{N} l^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> （所有case的Cross Entropy  ）, 得到loss function之后你要做的事情是找一组network的parameters：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>θ</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">\theta^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span></span></span></span>。它可以minimize这个total loss，这组parameter对应的function就是我们最终训练好的model</p><p>老规矩：我们使用<strong>Gradient Descent</strong>来优化total loss来获得model。实际上在deep learning里面用gradient descent，跟在linear regression里面使用完全没有什么差别，只是function和parameter变得更复杂了而已，其他事情都是一模一样的。</p><p>但是相比在liner model中求导还是比较轻松的， 在network中的function式子到底是长什么样子呢？==&gt; 需要用到反向传播—&gt;但是人工计算是比较复杂的, 因此有了pytorch, tensorflow等微分toolkit可以来计算Backpropagation</p><h3 id="design-network-structure-vs-feature-engineering网络结构设计-vs-特征工程"><a class="markdownIt-Anchor" href="#design-network-structure-vs-feature-engineering网络结构设计-vs-特征工程"></a> Design network structure V.s. Feature Engineering(网络结构设计 vs 特征工程)</h3><blockquote><p>deep learning: 通过network 找到一组合适的param来训练, 让机器自动学会如何提取特征==&gt;获得model<br>传统方法: 通过古圣先贤的先验知识对信息进行特征提取和分析==&gt;获得model</p></blockquote><p>其实network structure的design是一件蛮难的事情，我们到底要怎么决定layer的数目和每一个layer的neuron的数目呢？其实这个只能够凭着经验和直觉、多方面的尝试，有时候甚至会需要一些domain knowledge(专业领域的知识)，<u>从非deep learning的方法到deep learning的方法，并不是说machine learning比较简单，而是我们把一个问题转化成了另一个问题</u></p><p>原先非deep learning的model，要得到一个好的结果，往往需要做<strong>feature engineering(特征工程)</strong>，也就是做feature transform，然后找一组好的feature；一开始学习deep learning的时候，好像会觉得deep learning的layers之间也是在做feature transform，但实际上在做deep learning的时候，往往不需要一个好的feature ，比如说在做影像辨识的时候，你可以把所有的pixel直接丢进去，但是在过去做图像识别，你是需要对图像抽取出一些人定的feature出来的，这件事情就是feature transform，但是有了deep learning之后，你完全可以直接丢pixel进去硬做</p><p>但是，今天deep learning制造了一个新的问题，它所制造的问题就是，你需要去design network的structure，所以<strong>你的问题从本来的如何抽取feature==&gt;(转化成)怎么design network structure</strong>，所以deep learning是不是真的好用，取决于你觉得解决哪一个问题比较容易(如，以前做音频识别需要知道DFT些信号处理知识和方法，现在完全可以交给机器，让其自己学会DFT)</p><p>如果是影响辨识或者是语音辨识的话，design network structure可能比feature engineering要来的容易，因为，虽然我们人都会看、会听，但是这件事情，它太过潜意识了，它离我们意识的层次太远，我们无法意识到，我们到底是怎么做语音辨识这件事情，所以对人来说，你要抽一组好的feature，让机器可以很方便地用linear的方法做语音辨识，其实是很难的，<u>因为人根本就不知道好的feature到底长什么样子；所以还不如design一个network structure，或者是尝试各种network structure，让machine自己去找出好的feature，这件事情反而变得比较容易，对影像来说也是一样的</u></p><p>有这么一个说法：deep learning在NLP上面的performance并没有那么好。语音辨识和影像辨识这两个领域是最早开始用deep learning的，一用下去进步量就非常地惊人，比如错误率一下子就降低了20%这样，但是在NLP上，它的进步量似乎并没有那么惊人，甚至有很多做NLP的人，现在认为说deep learning不见得那么work，这个原因可能是，人在做NLP这件事情的时候，由于人在文字处理上是比较强的，比如叫你设计一个rule去detect一篇document是正面的情绪还是负面的情绪，你完全可以列表，列出一些正面情绪和负面情绪的词汇，然后看这个document里面正面情绪的词汇出现的百分比是多少，你可能就可以得到一个不错的结果。<u>所以NLP这个task，对人来说是比较容易设计rule的，你设计的那些ad-hoc(特别的)的rule，往往可以得到一个还不错的结果，这就是为什么deep learning相较于NLP传统的方法，觉得没有像其他领域一样进步得那么显著(但还是有一些进步的)</u>===&gt;简言之, 这个语言问题较为容易研究, 以及前人传统方法研究已经非常深入, 效果也较好, 因此机器学习并没有太多的提升</p><p>长久而言，可能文字处理中会有一些隐藏的资讯是人自己也不知道的，所以让机器自己去学这件事情，还是可以占到一些优势，只是眼下它跟传统方法的差异看起来并没有那么的惊人，但还是有进步的</p><h3 id="p15why-deep-"><a class="markdownIt-Anchor" href="#p15why-deep-"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=15" target="_blank" rel="noopener">P15Why Deep-</a></h3><p><img src="/2020/11/17/李宏毅机器学习-摘要/P12%5C%E6%B7%B1%E5%BA%A6%E8%BF%98%E6%98%AF%E5%AE%BD%E5%BA%A6.jpg" alt="深度还是宽度"></p><p>Q:参数变多,是变宽还是变深呢? 是不是暴力的方法呢?</p><p>A:</p><ul><li>论文比较相同参数, 深度效果好于宽度;</li><li>DNN结构一个很大的优势是，Modularization(模块化)，它用的是结构化的架构</li></ul><h4 id="modularization"><a class="markdownIt-Anchor" href="#modularization"></a> Modularization</h4><blockquote><p>就像写程序一样，shallow network实际上就是把所有的程序都写在了同一个main函数中，所以它去检测不同的class使用的方法是相互独立的；而deep network则是把整个任务分为了一个个小任务，每个小任务又可以不断细分下去，以形成modularization，就像下图一样</p><p>在DNN的架构中，实际上每一层layer里的neuron都像是在解决同一个级别的任务，它们的output作为下一层layer处理更高级别任务的数据来源，低层layer里的neuron做的是对不同小特征的检测，高层layer里的neuron则根据需要挑选低层neuron所抽取出来的不同小特征，去检测一个范围更大的特征；neuron就像是一个个classifier ，后面的classifier共享前面classifier的参数</p><p>这样做的好处是，低层的neuron输出的信息可以被高层不同的neuron重复使用，而并不需要像shallow network一样，每次在用到的时候都要重新去检测一遍，因此大大降低了程序的复杂度</p></blockquote><ul><li><p>理解效果：模组化： 如分类长发的女孩、长头发的男孩、短发的女孩、短发男孩。</p><p>​如果按照shallow network的想法，我们分别独立地train四个classifier(其实就相当于训练四个独立的model)，然后就可以解决这个分类的问题。但是显而易见的是长头发的男生样本会非常少，没有太多的training data，所以，你train出来的classifier就比较weak，去detect长头发男生的performance就比较差</p><p>![模组化](李宏毅机器学习-摘要/P12\模组化.jpg<img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/modularization3.png" alt="img"></p></li></ul><p>但其实我们的input并不是没有关联的，长头发的男生和长头发的女生都有一个共同的特征，就是长头发，因此如果我们分别<strong>独立地训练四个model作为分类器</strong>，实际上就是忽视了这个共同特征，也就是没有高效地用到data提供的全部信息，这恰恰是shallow network的弊端</p><p>而利用modularization的思想，使用deep network的架构，我们可以<strong>训练一个model作为分类器就可以完成所有的任务</strong>，我们可以把整个任务分为<strong>两个子任务</strong>：</p><ul><li>Classifier1：检测是男生或女生</li><li>Classifier2：检测是长头发或短头发</li></ul><p>虽然长头发的男生data很少，但长头发的人的data就很多，经过前面几层layer的特征抽取，就可以头发的data全部都丢给Classifier2，把男生或女生的data全部都丢给Classifier1，这样就真正做到了<strong>充分、高效地利用数据</strong>，最终的Classifier再根据Classifier1和Classifier2提供的信息给出四类人的分类结果</p><p>你会发现，经过层层layer的任务分解，其实每一个Classifier要做的事情都是比较简单的，又因为这种分层的、模组化的方式充分利用了data，并提高了信息利用的效率，所以只要用比较少的training data就可以把结果train好</p><p><img src="/2020/11/17/李宏毅机器学习-摘要/P12%5C%E6%A8%A1%E7%BB%84%E5%8C%961.jpg" alt="模组化1"></p><h4 id="deep-modularization"><a class="markdownIt-Anchor" href="#deep-modularization"></a> deep -&gt; modularization</h4><p>做modularization的好处是<strong>把原来比较复杂的问题变得简单</strong>，比如原来的任务是检测一个长头发的女生，但现在你的任务是检测长头发和检测性别，而当检测对象变简单的时候，就算training data没有那么多，我们也可以把这个task做好，并且<strong>所有的classifier都用同一组参数检测子特征</strong>，提高了参数使用效率，这就是modularization、这就是模块化的精神</p><p><strong>由于deep learning的deep就是在做modularization这件事，所以它需要的training data反而是比较少的</strong>，这可能会跟你的认知相反，AI=big data+deep learning，但deep learning其实是为了解决less data的问题才提出的</p><p>每一个neuron其实就是一个basic的classifier：</p><ul><li>第一层neuron，它是一个最basic的classifier，检测的是颜色、线条这样的小特征</li><li>第二层neuron是比较复杂的classifier，它用第一层basic的classifier的output当作input，也就是把第一层的classifier当作module，利用第一层得到的小特征分类出不同样式的花纹</li><li>而第三层的neuron又把第二层的neuron当作它module，利用第二层得到的特征分类出蜂窝、轮胎、人</li><li>以此类推</li></ul><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/modularization4.png" alt="img"></p><p>这边要强调的是，在做deep learning的时候，怎么做模块化这件事情是machine自动学到的，也就是说，第一层要检测什么特征、第二层要检测什么特征…这些都不是人为指定的，人只有定好有几层layer、每层layer有几个neuron，剩下的事情都是machine自己学到的</p><p>传统的机器学习算法，是人为地根据domain knowledge指定特征来进行提取，这种指定的提取方式，甚至是提取到的特征，也许并不是实际最优的，所以它的识别成功率并没有那么高；但是如果提取什么特征、怎么提取这件事让机器自己去学，它所提取的就会是那个最优解，因此识别成功率普遍会比人为指定要来的高</p><h4 id="conclusion-2"><a class="markdownIt-Anchor" href="#conclusion-2"></a> Conclusion</h4><p>Deep总结：</p><ul><li>考虑input之间的内在关联，所有的class用同一个model来做分类</li><li>modularization思想，复杂问题简单化，把检测复杂特征的<u>大任务</u>分割成检测简单特征的<u>小任务</u></li><li>所有的classifier使用同一组参数的子特征检测器，<u>共享检测到的子特征</u></li><li>不同的classifier会share部分的参数和data，效率高</li><li>联系logic circuit和剪纸画的例子</li><li>多层hidden layer对complex问题的处理上比较有优势</li></ul><h2 id="9-p13backpropagation"><a class="markdownIt-Anchor" href="#9-p13backpropagation"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=13" target="_blank" rel="noopener">9. P13Backpropagation</a></h2><p>Backpropagation是神经网络中用来做gradient descent的方法， 目的是使优化函数尽可能得变成我们想要的， 假设我们现在要处理的是分类任务，loss function为交叉熵， total loss为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><msup><mi>l</mi><mi>n</mi></msup><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(\theta)=\sum_{n=1}^{N} l^{n}(\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span></p><p>我们把training data里任意一个样本点 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">x^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> 代到neural network里面, 它会output一个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>y</mi><mi>n</mi></msup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">y^{n},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 我们把这个output跟样 本点本身的label标注的target <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\hat{y}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> 作cross entropy, 这个交叉嫡定义了output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>y</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">y^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> 与target <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\hat{y}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> 之间的距离 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>l</mi><mi>n</mi></msup><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">l^{n}(\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span>。 如果cross entropy比较大的话, 说明output和target之间距离很远, 这个network的parameter的loss是比较大 的, 反之则说明这组parameter是比较好的， 然后总和所有training data的cross entropy <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>l</mi><mi>n</mi></msup><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">l^{n}(\theta),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> 得到total loss <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">L(\theta),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> 这就是我们的loss function, 用这个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span> 对某一个参数w做偏微分, 表达式如下:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>l</mi><mi>n</mi></msup><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial L(\theta)}{\partial w}=\sum_{n=1}^{N} \frac{\partial l^{n}(\theta)}{\partial w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.113em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0954490000000003em;vertical-align:-1.267113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>这个表达式告诉我们, 只需要考虑如何计算对某一笔data的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>l</mi><mi>n</mi></msup><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\frac{\partial l^{n}(\theta)}{\partial w},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span></span> 再将所有training data的cross entropy对参数 w的偏微分累计求和, 就可以把total loss对某一个参数w的偏微分给计算出来。</p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/bp-loss.png" alt="img"></p><p>我们逐一分析，我们先考虑某一个neuron, 先拿出上图中被红色三角形圈住的neuron, 假设只有两个input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">x_{1}, x_{2},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 通过这个 neuron, 我们先得到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi><mo>=</mo><mi>b</mi><mo>+</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">z=b+w_{1} x_{1}+w_{2} x_{2},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 然后经过activation function从这个neuron中output出来, 作为后 续neuron的input, 再经过了非常非常多的事情以后, 会得到最终的output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">y_{1}, y_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br>现在的问题是这样： <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 该怎么算? 按照chain rule, 可以把它拆分成两项, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial w}=\frac{\partial z}{\partial w} \frac{\partial l}{\partial z},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span></span> 这两项分别去把它计算<br>出来。前面这一项是比较简单的, 后面这一项是比较复杂的<br>计算前面这一项 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial z}{\partial w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 的这个process, 我们称之为Forward pass; 而计算后面这项 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 的process, 我们称之为 Backward pass</p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/bp-forward-backward.png" alt="img"></p><h3 id="forward-pass"><a class="markdownIt-Anchor" href="#forward-pass"></a> Forward pass</h3><p>先考虑 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial z}{\partial w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 这一项, 完全可以秒算出来, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mn>1</mn></msub></mrow></mfrac><mo>=</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mn>2</mn></msub></mrow></mfrac><mo>=</mo><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\frac{\partial z}{\partial w_{1}}=x_{1}, \frac{\partial z}{\partial w_{2}}=x_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.325208em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.325208em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br>它的规律是这样的：<strong>求 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\frac{\partial z}{\partial w},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span></span> 就是看w前面连接的input是什么, 那微分后的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial z}{\partial w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 值就是什么</strong>，因此只要计算出 neural network里面每一个neuron的output就可以知道任意的z对W的偏微分</p><ul><li>比如input layer作为neuron的输入时，前面连接的是，所以微分值就是；前面连接的是，所以微分值就是</li><li>比如hidden layer作为neuron的输入时，那该neuron的input就是前一层neuron的output，于是的值就是前一层的z经过activation function之后输出的值(下图中的数据是假定activation function为sigmoid function得到的)</li></ul><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/forward-pass.png" alt="img"></p><h3 id="backward-pass"><a class="markdownIt-Anchor" href="#backward-pass"></a> Backward pass</h3><p>再考虑 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 这一项, 它是比较复杂的, 这里我们依旧假设activation function是sigmoid function</p><p><strong>公式推导</strong></p><p>我们的<u>z通过activation function得到a</u>, 这个neuron的output是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">a=\sigma(z),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> 接下来这个a会乘上某一个weight <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">w_{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 再加上其它一大堆的value得到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">z^{\prime},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 它是下一个neuron activation function的input, 然后a又会乘上另一个 weight <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mn>4</mn></msub><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">w_{4},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 再加上其它一雄value得到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">z^{\prime \prime},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 后面还会发生很多很多其他事情, 不过这里我们就只先考虑下一步会 发生什公事情:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z}=\frac{\partial a}{\partial z} \frac{\partial l}{\partial a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>这里的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial a}{\partial z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 实际上就是<u>1. activation function的微分(在这里就是sigmoid function的微分)</u>，接下来的问题是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 应该长 什么样子呢? a会影响 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">z^{\prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">z^{\prime \prime},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 而 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">z^{\prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow><annotation encoding="application/x-tex">z^{\prime \prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 会影响 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">l,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span></span></span></span> 所以通过chain rule可以得到</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow></mfrac><mo>+</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial a}=\frac{\partial z^{\prime}}{\partial a} \frac{\partial l}{\partial z^{\prime}}+\frac{\partial z^{\prime \prime}}{\partial a} \frac{\partial l}{\partial z^{\prime \prime}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.114892em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.428892em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6778919999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.114892em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.428892em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6778919999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>这里的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow></mfrac><mo>=</mo><msub><mi>w</mi><mn>3</mn></msub><mo separator="true">,</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow></mfrac><mo>=</mo><msub><mi>w</mi><mn>4</mn></msub><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\frac{\partial z^{\prime}}{\partial a}=w_{3}, \frac{\partial z^{\prime \prime}}{\partial a}=w_{4},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.31848em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.97348em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.31848em;vertical-align:-0.345em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.97348em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 那 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z^{\prime}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z^{\prime \prime}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 又该怎么算呢? 这里先假设我们已经通过某种方法把 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z^{\prime}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z^{\prime \prime}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 这两项给算出来了，然后回过头去就可以把 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 给轻易地算出来 ==&gt; 上面是个递归的过程，因此需要从output计算 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow></mfrac><mo>=</mo><msup><mi>σ</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mrow><mo fence="true">[</mo><msub><mi>w</mi><mn>3</mn></msub><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow></mfrac><mo>+</mo><msub><mi>w</mi><mn>4</mn></msub><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow></mfrac><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z}=\frac{\partial a}{\partial z} \frac{\partial l}{\partial a}=\sigma^{\prime}(z)\left[w_{3} \frac{\partial l}{\partial z^{\prime}}+w_{4} \frac{\partial l}{\partial z^{\prime \prime}}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6778919999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6778919999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/backward-pass.png" alt="img"></p><p>case 1: Output Layer<br>假设蓝色的这个neuron已经是hidden layer的最后一层了, 也就是说连接在 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">z^{\prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow><annotation encoding="application/x-tex">z^{\prime \prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 后的这两个红色的neuron已经 是output layer, 它的output就已经是整个network的output了, 这个时候计算就比较简单</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z^{\prime}}=\frac{\partial y_{1}}{\partial z^{\prime}} \frac{\partial l}{\partial y_{1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6778919999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25188em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6778919999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial y_{1}}{\partial z^{\prime}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.277216em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 就是output layer的<u>activation function (softmax) 对 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">z^{\prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 的偏微分</u><br>而 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial y_{1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3612159999999998em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 就是<u>loss function对 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">y_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的偏微分</u>, 它取决于你的loss function是怎么定义的, 也就是你的output和target之间是怎么 evaluate的, 你可以用cross entropy, 也可以用mean square error, 用不同的定义, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial y_{1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3612159999999998em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 的值就不一样<br>这个时候, 你就已经可以把l对 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">w_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">w_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的偏微分 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mn>1</mn></msub></mrow></mfrac><mo separator="true">,</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>u</mi><mn>2</mn></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial w_{1}}, \frac{\partial l}{\partial u_{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.325208em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 算出来了</p><p>另一个观点——反向计算的一句</p><p>这个式子还是蛮简单的, 然后, 我们可以从另外一个观点来看待这个式子<br>你可以想象说, 现在有另外一个neuron, 它不在我们原来的network里面, 在下图中它被画成三角形, 这个 neuron的input就是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z^{\prime}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mi>n</mi></msup></mrow></mfrac><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z^{n}},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5935428571428571em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span></span> 那input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z^{\prime}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 就乘上 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mn>3</mn></msub><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">w_{3},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z^{\prime \prime}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 就乘上 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mn>4</mn></msub><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">w_{4},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 它们两个相加再乘上activation<br>function的微分 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>σ</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\sigma^{\prime}(z),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> 就可以得到output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/backward-neuron.png" alt="img"></p><p>这张图描述了一个新的“neuron&quot;，它的含义跟图下方的表达式是一模一样的, 作这张图的目的是为了方便理解<br>值得注意的是, 这里的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>σ</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma^{\prime}(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span> 是一个constant常数, 它并不是一个function, 因为z其实在计算forward pass的时候 就已经被决定好了, z是一个固定的值<br>所以这个neuron其实跟我们之前看到的sigmoid function是不一样的, 它并不是把input通过一个non-linear进行 转换, 而是直接把input乘上一个constant <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>σ</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\sigma^{\prime}(z),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> 就得到了output, 因此这个neuron被画成三角形, 代表它跟我 们之前看到的圆形的neuron的运作方式是不一样的, 它是直接乘上一个constant(这里的三角形有点像电路里的运 算放大器op-amp, 它也是乘上一个constant)</p><p>知道 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">z^{\prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow><annotation encoding="application/x-tex">z^{\prime \prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 就可以知道 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">z,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mpunct">,</span></span></span></span> 知道 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">z_{a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">z_{b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 就可以知道 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><mo>…</mo><mo>…</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">z^{\prime}, \ldots \ldots,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span></span></span></span> 现在这个过程就可以反复进行下去, 直到找到output layer, 我们可以算出确切的值, 然后再一层一层反推回去<br>你可能会想说, 这个方法听起来挺让人崩溃的, 每次要算一个微分的值, 都要一路往后走, 一直走到network的 output, 如果写成表达式的话, 一层一层往后展开, 感觉会是一个很可怕的式子, 但是! 实际上并不是这个样子 做的<br>你只要换一个方向, 从output layer的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 开始算, 你就会发现它的运算量跟原来的network的Feedforward path 其实是一样的</p><p>▲注: 如果是正向做Backward pass的话, 实际上每次计算一个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span></span> 就需要把该neuron后面所有的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 都给计算一 遍, 会造成很多不必要的里复运算, 如果写成code的形式, 就<u>相当于调用了很多次里复的函数;</u> 而如果是反向做 Backward pass，实际上就是把这些调用函数的过程都变成调用“值&quot;的过程, 因此可以直接计算出结果, 而不需要 占用过多的堆栈空间</p><h3 id="summary"><a class="markdownIt-Anchor" href="#summary"></a> Summary</h3><p>最后，我们来总结一下Backpropagation是怎么做的</p><p><strong>Forward pass</strong>，每个neuron的activation function的output，就是它所连接的weight的</p><p><strong>Backward pass</strong>，建一个与原来方向相反的neural network，它的三角形neuron的output就是</p><p>把通过forward pass得到的和通过backward pass得到的乘起来就可以得到对的偏微分</p><p><img src="https://gitee.com/Sakura-gh/ML-notes/raw/master/img/bp-summary.png" alt="img"></p><h2 id="11-p17convolutional-neural-network"><a class="markdownIt-Anchor" href="#11-p17convolutional-neural-network"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=17" target="_blank" rel="noopener">11. P17Convolutional Neural Network</a></h2><p><a href="https://sakura-gh.github.io/ML-notes/ML-notes-html/11_Convolutional-Neural-Network-part1.html" target="_blank" rel="noopener">11_Convolutional Neural Network part1</a><br><a href="https://sakura-gh.github.io/ML-notes/ML-notes-html/12_Convolutional-Neural-Network-part2.html" target="_blank" rel="noopener">12_Convolutional Neural Network part2</a></p><h2 id="12-p14tips-for-training-dnn"><a class="markdownIt-Anchor" href="#12-p14tips-for-training-dnn"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=14" target="_blank" rel="noopener">12. P14Tips for Training DNN</a></h2><p>包含卷积层和池化层，主要用来识别位移、缩放及其他形式扭曲不变性的二维图形。特殊性特显在1.神经元之间的连接是非全连接的，2.同一层中某些神经元的连接权重是共享的（即相同的）==&gt;从而减少了权值的数量、降低了模型的复杂</p><h2 id="p13-recurrent-neural-network-part-i"><a class="markdownIt-Anchor" href="#p13-recurrent-neural-network-part-i"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=20" target="_blank" rel="noopener">P13. Recurrent Neural Network (Part I)</a></h2><h2 id="p14-recurrent-neural-network-part-ii"><a class="markdownIt-Anchor" href="#p14-recurrent-neural-network-part-ii"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=21" target="_blank" rel="noopener">P14. Recurrent Neural Network (Part II)</a></h2><h2 id="p22semi-supervised"><a class="markdownIt-Anchor" href="#p22semi-supervised"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=22" target="_blank" rel="noopener">P22Semi-supervised</a></h2><h2 id="p23unsupervised-learning-word-embedding"><a class="markdownIt-Anchor" href="#p23unsupervised-learning-word-embedding"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=23" target="_blank" rel="noopener">P23Unsupervised Learning - Word Embedding</a></h2><h2 id="p24explainable-ml-1_8"><a class="markdownIt-Anchor" href="#p24explainable-ml-1_8"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=24" target="_blank" rel="noopener">P24Explainable ML (1_8)</a></h2><h2 id="p33attack-ml-models-1_8"><a class="markdownIt-Anchor" href="#p33attack-ml-models-1_8"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=33" target="_blank" rel="noopener">P33Attack ML Models (1_8)</a></h2><h2 id="p43network-compression-1_6"><a class="markdownIt-Anchor" href="#p43network-compression-1_6"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=43" target="_blank" rel="noopener">P43Network Compression (1_6)</a></h2><h2 id="p51conditional-generation-by-rnn-attention"><a class="markdownIt-Anchor" href="#p51conditional-generation-by-rnn-attention"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=51" target="_blank" rel="noopener">P51Conditional Generation by RNN &amp; Attention</a></h2><h2 id="p52pointer-network"><a class="markdownIt-Anchor" href="#p52pointer-network"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=52" target="_blank" rel="noopener">P52Pointer Network</a></h2><h2 id="p53recursive"><a class="markdownIt-Anchor" href="#p53recursive"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=53" target="_blank" rel="noopener">P53Recursive</a></h2><h2 id="p54transformer"><a class="markdownIt-Anchor" href="#p54transformer"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=54" target="_blank" rel="noopener">P54Transformer</a></h2><h2 id="p56unsupervised-learning-linear-methods"><a class="markdownIt-Anchor" href="#p56unsupervised-learning-linear-methods"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=56" target="_blank" rel="noopener">P56Unsupervised Learning - Linear Methods</a></h2><h2 id="p57unsupervised-learning-neighbor-embedding"><a class="markdownIt-Anchor" href="#p57unsupervised-learning-neighbor-embedding"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=57" target="_blank" rel="noopener">P57Unsupervised Learning - Neighbor Embedding</a></h2><h2 id="p58unsupervised-learning-auto-encoder"><a class="markdownIt-Anchor" href="#p58unsupervised-learning-auto-encoder"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=58" target="_blank" rel="noopener">P58Unsupervised Learning - Auto-encoder</a></h2><blockquote><p>自编码模型（Auto-encoder AE），是一种无监督学习算法，使用了反向传播算法，让目标值等于输入值</p></blockquote><h2 id="p63elmo-bert-gpt"><a class="markdownIt-Anchor" href="#p63elmo-bert-gpt"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=63" target="_blank" rel="noopener">P63ELMO, BERT, GPT</a></h2><h2 id="p65anomaly-detection-1_7"><a class="markdownIt-Anchor" href="#p65anomaly-detection-1_7"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=65" target="_blank" rel="noopener">P65Anomaly Detection (1_7)</a></h2><h2 id="p72generative-adversarial-network1_10gan"><a class="markdownIt-Anchor" href="#p72generative-adversarial-network1_10gan"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=72" target="_blank" rel="noopener">P72Generative Adversarial Network(1_10)——GAN</a></h2><h2 id="p83transfer-learning"><a class="markdownIt-Anchor" href="#p83transfer-learning"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=83" target="_blank" rel="noopener">P83Transfer Learning</a></h2><h2 id="p86meta-learning-maml-1_9"><a class="markdownIt-Anchor" href="#p86meta-learning-maml-1_9"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=86" target="_blank" rel="noopener">P86Meta Learning – MAML (1_9)</a></h2><h2 id="p100life-long-learning-1_7"><a class="markdownIt-Anchor" href="#p100life-long-learning-1_7"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=100" target="_blank" rel="noopener">P100Life Long Learning (1_7)</a></h2><h2 id="p108deep-reinforcemen-learning3_1"><a class="markdownIt-Anchor" href="#p108deep-reinforcemen-learning3_1"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=108" target="_blank" rel="noopener">P108Deep Reinforcemen Learning(3_1)</a></h2><h2 id="p111rl-advanced-version_1_policy-gradient"><a class="markdownIt-Anchor" href="#p111rl-advanced-version_1_policy-gradient"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=111" target="_blank" rel="noopener">P111RL Advanced Version_1_Policy Gradient</a></h2><h1 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h1><h2 id="机器学习系列10-手写数字识别keras20"><a class="markdownIt-Anchor" href="#机器学习系列10-手写数字识别keras20"></a> <a href="https://blog.csdn.net/weixin_44406200/article/details/104328947" target="_blank" rel="noopener">机器学习系列10-手写数字识别(Keras2.0)</a> ——<a href="https://sakura-gh.github.io/ML-notes/ML-notes-html/10_Keras.html" target="_blank" rel="noopener">10_Keras</a></h2><h2 id="机器学习系列6-分类问题概率生成模型"><a class="markdownIt-Anchor" href="#机器学习系列6-分类问题概率生成模型"></a> <a href="https://blog.csdn.net/weixin_44406200/article/details/104272160" target="_blank" rel="noopener">机器学习系列6-分类问题(概率生成模型)</a></h2><h2 id="p16pytorch-tutorial"><a class="markdownIt-Anchor" href="#p16pytorch-tutorial"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=16" target="_blank" rel="noopener">P16PyTorch Tutorial</a></h2><h2 id="p8optimization-for-deep-learning-1_2-选学"><a class="markdownIt-Anchor" href="#p8optimization-for-deep-learning-1_2-选学"></a> <a href="https://www.bilibili.com/video/BV1JE411g7XF?p=8" target="_blank" rel="noopener">P8Optimization for Deep Learning (1_2) (选学)</a></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;p3regression-case-study&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#p3regression-case-study&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.bilibili.com/video/B
      
    
    </summary>
    
    
      <category term="机器学习" scheme="https://nymrli.top/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>JupyterHub搭建</title>
    <link href="https://nymrli.top/2020/11/15/JupyterHub%E6%90%AD%E5%BB%BA/"/>
    <id>https://nymrli.top/2020/11/15/JupyterHub搭建/</id>
    <published>2020-11-15T14:08:52.000Z</published>
    <updated>2020-11-20T05:59:09.392Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>之前搭建的JupyterLab逐渐被使用起来了, 单用户的模式还是不太方便, 因此准备用JupyterHub来做下用户隔离</p></blockquote><h2 id="1-安装nodejs和npm"><a class="markdownIt-Anchor" href="#1-安装nodejs和npm"></a> 1. 安装nodejs和npm</h2><p>按照<a href="https://gitee.com/mirrors/JupyterHub#installation" target="_blank" rel="noopener">JupyterLab官方教程</a>, 先是安装最新的nodejs和npm, 但是由于16.04的apt源安装的nodejs版本比较久, 因此在后面的安装中会有坑, 这边根据网上的教程手动安装最新的nodejs</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install -y nodejs</span></span><br></pre></td></tr></table></figure><p>安装成功后输入<code>node --version</code>看到有版本返回输出证明安装成功, 同时这种方式会同时安装npm, 同样<code>npm --version</code>测试npm安装成功</p><h2 id="2-安装"><a class="markdownIt-Anchor" href="#2-安装"></a> 2. 安装</h2><h3 id="21-安装虚拟环境"><a class="markdownIt-Anchor" href="#21-安装虚拟环境"></a> 2.1 安装虚拟环境</h3><p>由于我个人喜欢自己配置虚拟环境, 因此, 我先安装虚拟环境。但阿里云上的virtualenv太久不用，版本太老了， 出现了<code>使用virtualenv创建虚拟环境报错 error code 2</code>现象，因此通过</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install setuptools #安装setuptools</span><br><span class="line">sudo pip install --upgrade setuptools #更新setuptools到最新版本</span><br><span class="line">sudo pip install virtualenv #安装virtualenv</span><br><span class="line">sudo pip install --upgrade virtualenv   #更新virtualenv到最新版本</span><br></pre></td></tr></table></figure><p>来更新setuptools和virtualenv到最新的版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> virtualenv mlEnv</span></span><br></pre></td></tr></table></figure><h3 id="22-安装jupyterhub"><a class="markdownIt-Anchor" href="#22-安装jupyterhub"></a> 2.2 安装jupyterhub</h3><p>根据官方教程，有两种方式安装：pip 安装 ; conda安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> pip安装</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> python3 -m pip install jupyterhub</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo npm install -g configurable-http-proxy</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> python3 -m pip install notebook  <span class="comment"># needed if running the notebook servers locally</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> conda安装</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> conda install -c conda-forge jupyterhub  <span class="comment"># installs jupyterhub and proxy</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> conda install notebook  <span class="comment"># needed if running the notebook servers locally</span></span></span><br></pre></td></tr></table></figure><h4 id="221-问题1_虚拟环境"><a class="markdownIt-Anchor" href="#221-问题1_虚拟环境"></a> 2.2.1 问题1_虚拟环境</h4><p>但在安装过程中出现了以下报错</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ERROR: Could not install packages due to an EnvironmentError: [Errno 13] Permission denied: '/home/mrli/MLproject/mlEnv/lib/python3.5/site-packages/idna'</span><br><span class="line">Consider using the `--user` option or check the permissions.</span><br></pre></td></tr></table></figure><p>通过<code>which pip</code>可以看到我使用的pip正是虚拟环境下的pip, 同时提示中的site-packages文件夹也是存在的。便按照提示加上了–user， 但是出现了如下新报错<code>ERROR: Can not perform a '--user' install. User site-packages are not visible in this virtualenv.</code> (注意, 不用加sudo来保证权限, 应为加上sudo pip吧库安装到的路径是在root下的)</p><p>经过查询发现, 是因为整个虚拟环境下的权限不够, 因此需要加权<code>sudo chmod 777 -R mlEnv</code>=&gt;遂问题解决</p><p><a href="https://www.cnblogs.com/duaimili/p/10279067.html" target="_blank" rel="noopener">永久更改pip源和创建虚拟环境</a></p><h4 id="222-问题2_npm安装报错"><a class="markdownIt-Anchor" href="#222-问题2_npm安装报错"></a> 2.2.2 问题2_npm安装报错</h4><p>执行<code>sudo npm install -g configurable-http-proxy</code>时有如下报错<code>Error: EACCES: permission denied, access '/usr/lib/node_modules'</code>已经加上了sudo也无济于事。</p><p>==&gt; 通过node的npm无法安装（无法过墙），也可以用阿里的自己的cnpm进行安装<code>sudo npm install -g cnpm --registry=https://registry.npm.taobao.org</code>,然后再输入<code>sudo cnpm install -g configurable-http-proxy</code>–&gt;解决!</p><h2 id="3-测试安装成功"><a class="markdownIt-Anchor" href="#3-测试安装成功"></a> 3. 测试安装成功</h2><ol><li><code>jupyterhub -h</code>、 <code>configurable-http-proxy -h</code>查看是否有输出,</li><li><code>jupyterhub</code>然后在https://localhost:8000中查看</li></ol><h2 id="4-配置"><a class="markdownIt-Anchor" href="#4-配置"></a> 4. 配置</h2><h4 id="生成配置文件"><a class="markdownIt-Anchor" href="#生成配置文件"></a> 生成配置文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> jupyterhub --generate-config -f /etc/jupyterhub/jupyterhub_config.py</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> jupyterhub --generate-config <span class="comment"># 会在你的当前目录下生成一个jupyterhub_config.py文件, 我们在其中配置我们的网络和用户管理</span></span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">c.JupyterHub.ip = <span class="string">'192.168.2.4'</span><span class="comment"># 本机局域网的ip，记得是局域网</span></span><br><span class="line">c.JupyterHub.port = <span class="number">12443</span><span class="comment"># 指定服务端口</span></span><br><span class="line">c.Spawner.ip = <span class="string">'127.0.0.1'</span></span><br><span class="line">c.PAMAuthenticator.encoding = <span class="string">'utf8'</span></span><br><span class="line">c.Authenticator.whitelist = &#123;<span class="string">'root'</span>,<span class="string">'admin'</span>, <span class="string">'tv'</span>, <span class="string">'aiker'</span>&#125;  <span class="comment">#默认不能使用root登录，需要修改配置. 这里面需要将linux的用户名添加进入，这样该用户就可以通过浏览器利用linux的用户名和密码登录自己的账户，jupyterhub采用和linux系统相同的认证方式，所以我们不需要另外建立用户，只需要登录linux的用户和密码即可 ==&gt; 用户白名单的用户会自动添加，但无密. 需要修改密需要创建linux用户才能登录；</span></span><br><span class="line">c.LocalAuthenticator.create_system_users = <span class="keyword">True</span></span><br><span class="line">c.Authenticator.admin_users = &#123;<span class="string">'root'</span>, <span class="string">'admin'</span>&#125;<span class="comment"># 指定admin用户</span></span><br><span class="line">c.JupyterHub.authenticator_class = <span class="string">'dummyauthenticator.DummyAuthenticator'</span></span><br><span class="line">c.JupyterHub.statsd_prefix = <span class="string">'jupyterhub</span></span><br><span class="line"><span class="string">c.Spawner.notebook_dir = '</span>/volume1/study/<span class="string">' #jupyterhub自定义目录</span></span><br><span class="line"><span class="string">c.JupyterHub.statsd_prefix = '</span>jupyterhu<span class="string">b'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">c.JupyterHub.ssl_cert = '</span>/usr/syno/etc/certificate/_archive/xYa1nX/fullchain.pem<span class="string">'</span></span><br><span class="line"><span class="string">c.JupyterHub.ssl_key = '</span>/usr/syno/etc/certificate/_archive/xYa1nX/privkey.pem<span class="string">'</span></span><br></pre></td></tr></table></figure><p>默认情况下，要真正的实现分配用户账号，需要满足以下两点要求：</p><ol><li>c.Authenticator.whitelist 指定了用户名</li><li>在系统中创建了该用户（adduser / useradd）</li></ol><p>tips: 默认情况下，密码为系统中该用户对应的密码</p><p>用户管理<br>用户白名单的用户会自动添加，但无密码，需要修改密码才能登录；<br>新添加用户：useradd crxis -d /home/user/crxis -m<br>用户添加组：adduser crxis group1<br>修改用户密码：echo crxis:crxis|chpasswd</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">c.JupyterHub.admin_users = &#123;&apos;root&apos;, &apos;admin&apos;&#125;</span><br><span class="line">c.JupyterHub.bind_url = &apos;http://127.0.0.1:22223&apos;</span><br><span class="line">c.JupyterHub.hub_bind_url = &apos;http://127.0.0.1:22224&apos;</span><br><span class="line">c.JupyterHub.hub_port = 22225</span><br><span class="line">c.Authenticator.whitelist = &#123;&apos;root&apos;, &apos;mrli&apos;&#125;</span><br><span class="line">c.JupyterHub.hub_port = 22226</span><br></pre></td></tr></table></figure><h2 id="5-运行"><a class="markdownIt-Anchor" href="#5-运行"></a> 5. 运行</h2><p>在存放<code>jupyterhub_config.py</code>的文件夹下执行<code>jupyterhub</code>启动服务</p><p>配置查看: <a href="https://blog.51cto.com/m51cto/2370679%E2%80%94%E2%80%94GPU%E5%9D%91" target="_blank" rel="noopener">https://blog.51cto.com/m51cto/2370679——GPU坑</a>, 配置github登入</p><h2 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录:</h2><h3 id="修改pip默认源"><a class="markdownIt-Anchor" href="#修改pip默认源"></a> 修改pip默认源:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim ~/.pip/pip.conf <span class="comment"># 如果当前用户没有.pip文件夹, 则创建一个</span></span></span><br></pre></td></tr></table></figure><p>添加下列内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = http://pypi.douban.com/simple</span><br><span class="line">[install]</span><br><span class="line">use-mirrors =true</span><br><span class="line">mirrors =http://pypi.douban.com/simple/</span><br><span class="line">trusted-host =pypi.douban.com</span><br></pre></td></tr></table></figure><h3 id="linux上安装最新版的python"><a class="markdownIt-Anchor" href="#linux上安装最新版的python"></a> Linux上安装最新版的Python</h3><ol><li><p>查看 Python 的版本号：<code>python2 -V</code>, <code>python3 -V</code></p></li><li><p>下载3.x新版本</p><p>可以访问python的官方网站查看最新的python版本以及下载链接：<a href="https://www.python.org/downloads/%EF%BC%8C%E5%B0%86%E9%BC%A0%E6%A0%87%E7%A7%BB%E5%88%B0%E6%83%B3%E8%A6%81%E5%AE%98%E7%BD%91%E4%B8%8A%E6%83%B3%E8%A6%81%E4%B8%8B%E8%BD%BD%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7%E4%B8%8A%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80%EF%BC%8C%E4%BE%8B%E5%A6%82%E6%88%91%E9%9C%80%E8%A6%81%E5%9C%A8Linux%E4%B8%8B%E5%AE%89%E8%A3%85%EF%BC%8C%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E8%BF%99%E4%B8%AA%E9%93%BE%E6%8E%A5%EF%BC%9Ahttps://www.python.org/ftp/python/3.8.5/Python-3.8.5.tgz%EF%BC%88%E5%A6%82%E6%9E%9C%E6%83%B3%E8%A6%81%E4%B8%8B%E8%BD%BD%E5%85%B6%E4%BB%96%E7%89%88%E6%9C%AC%EF%BC%8C%E7%9B%B4%E6%8E%A5%E4%BF%AE%E6%94%B9%E7%89%88%E6%9C%AC%E5%8F%B7%E5%8D%B3%E5%8F%AF%EF%BC%89%E3%80%82%E6%89%BE%E5%88%B0%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80%E5%90%8E%EF%BC%8C%E5%9C%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%BE%93%E5%85%A5%EF%BC%9A" target="_blank" rel="noopener">https://www.python.org/downloads/，将鼠标移到想要官网上想要下载的版本号上就可以看到下载地址，例如我需要在Linux下安装，可以使用这个链接：https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tgz（如果想要下载其他版本，直接修改版本号即可）。找到下载地址后，在命令行输入：</a><code>wget https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tgz</code></p></li><li><p>下载完成后解压缩<code>tar -zxvf Python-3.8.5.tgz</code></p></li><li><p>下载完成后解压缩<code>cd Python-3.8.5/; ./configure</code>,</p></li></ol><p>由于使用3.8出现了virtualenv无法使用的情况, 因此需要对配置文件进行修改: 修改<code>Python-3.8.5/Modules</code>路径的<code>Setup</code>文件: <code>sudo vim Setup</code>:</p><p><img src="https://img-blog.csdnimg.cn/20190916154900762.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzIzODg5MDA5,size_16,color_FFFFFF,t_70" alt=""></p><ol start="5"><li>编译<code>sudo make; sudo make install</code></li></ol><p>但是发现修改后报错缺少xxssl.h的头文件,</p><ul><li><code>wget https://www.openssl.org/source/openssl-1.0.2h.tar.gz</code></li><li><code>tar zxf openssl-1.0.2h.tar.gz; cd openssl-1.0.2h</code></li><li><code>./config shared zlib; make depend</code></li><li><code>sudo make; sudo make install</code></li><li>检测是否安装成功: <code>openssl version -a</code></li></ul><p>▲.再次到python中make install, 报错: subprocess.CalledProcessError: Command ‘(‘lsb_release’, ‘-a’)’ returned non-zero exit status 1.</p><p>解决方法<br>find /usr/bin -name lsb_release<br>sudo rm -rf /usr/bin/lsb_release</p><p>此时再到Python/中make install即可</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;之前搭建的JupyterLab逐渐被使用起来了, 单用户的模式还是不太方便, 因此准备用JupyterHub来做下用户隔离&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-安装nodejs和npm&quot;&gt;&lt;a class=&quot;markdownIt
      
    
    </summary>
    
    
      <category term="环境配置" scheme="https://nymrli.top/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>GithubActions</title>
    <link href="https://nymrli.top/2020/11/12/GithubAction/"/>
    <id>https://nymrli.top/2020/11/12/GithubAction/</id>
    <published>2020-11-12T08:20:54.000Z</published>
    <updated>2020-11-12T09:35:54.644Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/features/actions" target="_blank" rel="noopener">GitHub Actions</a> 是 GitHub 的<a href="http://www.ruanyifeng.com/blog/2015/09/continuous-integration.html" target="_blank" rel="noopener">持续集成服务</a>，于2018年10月<a href="https://github.blog/changelog/2018-10-16-github-actions-limited-beta/" target="_blank" rel="noopener">推出</a>。</p></blockquote><h2 id="github-actions-是什么"><a class="markdownIt-Anchor" href="#github-actions-是什么"></a> GitHub Actions 是什么？</h2><p>大家知道，持续集成由很多操作组成，比如抓取代码、运行测试、登录远程服务器，发布到第三方服务等等。GitHub 把这些操作就称为 actions。</p><p>很多操作在不同项目里面是类似的，完全可以共享。GitHub 注意到了这一点，想出了一个很妙的点子，允许开发者把每个操作写成独立的脚本文件，存放到代码仓库，使得其他开发者可以引用。</p><p>如果你需要某个 action，不必自己写复杂的脚本，直接引用他人写好的 action 即可，整个持续集成过程，就变成了一个 actions 的组合。这就是 GitHub Actions 最特别的地方。</p><p>GitHub 做了一个<a href="https://github.com/marketplace?type=actions" target="_blank" rel="noopener">官方市场</a>，可以搜索到他人提交的 actions。另外，还有一个 <a href="https://github.com/sdras/awesome-actions" target="_blank" rel="noopener">awesome actions</a> 的仓库，也可以找到不少 action。</p><h2 id="基础名词概念"><a class="markdownIt-Anchor" href="#基础名词概念"></a> 基础名词概念</h2><p>GitHub Actions 有一些自己的术语。<br>（1）<strong>workflow</strong> （工作流程）：持续集成一次运行的过程，就是一个 workflow。<br>（2）<strong>job</strong> （任务）：一个 workflow 由一个或多个 jobs 构成，含义是一次持续集成的运行，可以完成多个任务。<br>（3）<strong>step</strong>（步骤）：每个 job 由多个 step 构成，一步步完成。<br>（4）<strong>action</strong> （动作）：每个 step 可以依次执行一个或多个命令（action）。</p><p><a href="http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html" target="_blank" rel="noopener">GitHub Actions阮一峰</a></p><p>具体内容说明:</p><ul><li>name自动构建的名字</li><li>on触发条件<ul><li>watch监视<ul><li>type:started 类型：点击了星标</li></ul></li><li>可以是数组： [push, pull_request]</li></ul></li><li>env环境变量</li><li>jobs任务</li><li>build工作的id</li><li>run-on工作运行的环境平台</li><li>if工作运行的判断</li><li>steps 包含一系列任务步骤<ul><li>name子任务名</li><li>uses 使用官方的一些action库完成一些操作</li><li>run 运行脚本</li><li>id运行id</li></ul></li></ul><h2 id="workflow-文件"><a class="markdownIt-Anchor" href="#workflow-文件"></a> workflow 文件</h2><p>GitHub Actions 的配置文件叫做 workflow 文件，存放在代码仓库的<code>.github/workflows</code>目录。</p><p>workflow 文件采用 <a href="http://www.ruanyifeng.com/blog/2016/07/yaml.html" target="_blank" rel="noopener">YAML 格式</a>，文件名可以任意取，但是后缀名统一为<code>.yml</code>，比如<code>foo.yml</code>。一个库可以有多个 workflow 文件。GitHub 只要发现<code>.github/workflows</code>目录里面有<code>.yml</code>文件，就会自动运行该文件。</p><hr><p>综上, Github actions配合GithubPages会非常方便</p><p><strong>什么是 GitHub Pages?</strong></p><p>打开 GitHub Pages 的首页我们会看到如下图所示：<br>他可以当做你或者你的项目的 Websites，那么我们可以知道 GitHub Pages 有两种最基本的用法：</p><ol><li>作为你自己（或者组织）的网站（访问地址示例：<a href="https://link.zhihu.com/?target=http%3A//username.github.io/" target="_blank" rel="noopener">http://username.github.io</a>）</li><li>作为你某一个项目的网站（访问地址示例：<a href="https://link.zhihu.com/?target=http%3A//username.github.io/projectname" target="_blank" rel="noopener">http://username.github.io/projectname</a>）</li><li>由于性能不太好, 因此最主要的用途是作为部署静态网页, 给demo展示: 做 demo 展示不同于做项目开发, 我们需要的是快速轻便的开发和部署, 而不是完备的一整套开发流程.</li></ol><p>Github pages 的好处</p><ol><li><strong>使用零成本:</strong> github pages 集成在 github 中, 直接和代码管理绑定在一起, 随着代码更新自动重新部署, 使用非常方便.</li><li><strong>免费:</strong> 免费提供 <a href="http://username.github.io" target="_blank" rel="noopener">username.github.io</a> 的域名, 免费的静态网站服务器.</li><li><strong>无数量限制:</strong> github pages 没有使用的数量限制, 每一个 github repository 都可以部署为一个静态网站.</li></ol><hr><h2 id="workflowdemo"><a class="markdownIt-Anchor" href="#workflowdemo"></a> workflowDemo</h2><h3 id="官方demo"><a class="markdownIt-Anchor" href="#官方demo"></a> 官方demo</h3><p>默认的生成模板: 会在仓库的<code>./github/workflows</code>目录下创建一个<code>.yml</code>的文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This is a basic workflow to help you get started with Actions</span></span><br><span class="line"></span><br><span class="line"><span class="attr">name:</span> <span class="string">CI</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Controls when the action will run. Triggers the workflow on push or pull request</span></span><br><span class="line"><span class="comment"># events but only for the main branch</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line"><span class="attr">  push:</span></span><br><span class="line"><span class="attr">    branches:</span> <span class="string">[</span> <span class="string">main</span> <span class="string">]</span></span><br><span class="line"><span class="attr">  pull_request:</span></span><br><span class="line"><span class="attr">    branches:</span> <span class="string">[</span> <span class="string">main</span> <span class="string">]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A workflow run is made up of one or more jobs that can run sequentially or in parallel</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="comment"># This workflow contains a single job called "build"——任务名</span></span><br><span class="line"><span class="attr">  build:</span></span><br><span class="line">    <span class="comment"># The type of runner that the job will run on</span></span><br><span class="line">    <span class="comment"># To set the operating system for your job, specify the operating system using runs-on: ubuntu-latest, ubuntu-18.04, or ubuntu-16.04、windows-latest or windows-2019、macos-latest or macos-10.15</span></span><br><span class="line"><span class="attr">    runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Steps represent a sequence of tasks that will be executed as part of the job</span></span><br><span class="line"><span class="attr">    steps:</span></span><br><span class="line">      <span class="comment"># Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it</span></span><br><span class="line">      <span class="comment"># 检出， 将代码从代码库中拉下来， 然后复制到本地的虚拟机上</span></span><br><span class="line"><span class="attr">      - uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># Runs a single command using the runners shell</span></span><br><span class="line">      <span class="comment"># 给操作——run, 起个操作名——name</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">Run</span> <span class="string">a</span> <span class="string">one-line</span> <span class="string">script</span></span><br><span class="line"><span class="attr">        run:</span> <span class="string">echo</span> <span class="string">Hello,</span> <span class="string">world!</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># Runs a set of commands using the runners shell</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">Run</span> <span class="string">a</span> <span class="string">multi-line</span> <span class="string">script</span></span><br><span class="line"><span class="attr">        run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          echo Add other actions to build,</span></span><br><span class="line"><span class="string">          echo test, and deploy your project.</span></span><br></pre></td></tr></table></figure><h3 id="bilibilitool的workflow"><a class="markdownIt-Anchor" href="#bilibilitool的workflow"></a> <strong><a href="https://github.com/RayWangQvQ/BiliBiliTool" target="_blank" rel="noopener">BiliBiliTool的workflow</a></strong></h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">bilibili-daily-task</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">  push:</span> <span class="comment"># push触发</span></span><br><span class="line"><span class="attr">    branches:</span> <span class="string">[</span> <span class="string">main</span> <span class="string">]</span></span><br><span class="line"><span class="attr">  workflow_dispatch:</span> <span class="comment"># 手动触发</span></span><br><span class="line"><span class="attr">  schedule:</span> <span class="comment"># 计划任务触发</span></span><br><span class="line"><span class="attr">    - cron:</span> <span class="string">'10 6 * * *'</span> <span class="comment"># cron表达式，Actions时区是UTC时间，所以要往前推8个小时,如上表示每天14点10分</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line"><span class="attr">  run-bilibili-tool:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    steps:</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 检出</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">Checkout</span></span><br><span class="line"><span class="attr">      uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      </span><br><span class="line">    <span class="comment"># 设置服务器时区为东八区 </span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">Set</span> <span class="string">time</span> <span class="string">zone</span></span><br><span class="line"><span class="attr">      run:</span> <span class="string">sudo</span> <span class="string">timedatectl</span> <span class="string">set-timezone</span> <span class="string">'Asia/Shanghai'</span></span><br><span class="line">      </span><br><span class="line">    <span class="comment"># .Net Core 环境</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">Setup</span> <span class="string">.NET</span> <span class="string">Core</span></span><br><span class="line"><span class="attr">      uses:</span> <span class="string">actions/setup-dotnet@v1</span></span><br><span class="line"><span class="attr">      with:</span></span><br><span class="line"><span class="attr">        dotnet-version:</span> <span class="number">3.1</span><span class="number">.301</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 安装依赖</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">Install</span> <span class="string">dependencies</span></span><br><span class="line"><span class="attr">      run:</span> <span class="string">dotnet</span> <span class="string">restore</span></span><br><span class="line">      </span><br><span class="line">    <span class="comment"># 构建应用</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">Build</span></span><br><span class="line"><span class="attr">      run:</span> <span class="string">dotnet</span> <span class="string">build</span> <span class="bullet">--configuration</span> <span class="string">Release</span> <span class="bullet">--no-restore</span></span><br><span class="line">       </span><br><span class="line">    <span class="comment"># 运行</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">Run</span></span><br><span class="line">      <span class="comment"># env是从仓库settings的secrets中取值</span></span><br><span class="line"><span class="attr">      env:</span></span><br><span class="line"><span class="attr">        userId:</span> <span class="string">$&#123;&#123;secrets.USERID&#125;&#125;</span></span><br><span class="line"><span class="attr">        sessData:</span> <span class="string">$&#123;&#123;secrets.SESSDATA&#125;&#125;</span></span><br><span class="line"><span class="attr">        biliJct:</span> <span class="string">$&#123;&#123;secrets.BILIJCT&#125;&#125;</span></span><br><span class="line"><span class="attr">        otherConfigs:</span> <span class="string">$&#123;&#123;secrets.OTHERCONFIGS&#125;&#125;</span></span><br><span class="line"><span class="attr">      run:</span> <span class="string">dotnet</span> <span class="string">run</span> <span class="bullet">-p</span> <span class="string">./src/Ray.BiliBiliTool.Console</span> <span class="bullet">-userId=$&#123;userId&#125;</span> <span class="bullet">-sessData=$&#123;sessData&#125;</span> <span class="bullet">-biliJct=$&#123;biliJct&#125;</span> <span class="bullet">-closeConsoleWhenEnd=1</span> <span class="string">$&#123;otherConfigs&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/features/actions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub Actions&lt;/a&gt; 是 GitHub 的&lt;a href=&quot;http://ww
      
    
    </summary>
    
    
      <category term="小白文" scheme="https://nymrli.top/tags/%E5%B0%8F%E7%99%BD%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>南邮校园网CSDN等部分网站图片无法加载解决方案</title>
    <link href="https://nymrli.top/2020/11/10/%E5%8D%97%E9%82%AE%E6%A0%A1%E5%9B%AD%E7%BD%91CSDN%E7%AD%89%E9%83%A8%E5%88%86%E7%BD%91%E7%AB%99%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://nymrli.top/2020/11/10/南邮校园网CSDN等部分网站图片无法加载解决方案/</id>
    <published>2020-11-10T10:14:56.000Z</published>
    <updated>2020-11-10T10:28:28.033Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题定位"><a class="markdownIt-Anchor" href="#问题定位"></a> 问题定位</h2><p>转自： <a href="https://blog.csdn.net/pamzerbhu/article/details/108549279" target="_blank" rel="noopener">https://blog.csdn.net/pamzerbhu/article/details/108549279</a></p><ul><li>用语言描述如下：<br>打开页面后页面加载正常，但是图片完全没有加载。但是挂全局代理是可以看到图片的。挂代理后如下所示：</li></ul><p><img src="/2020/11/10/南邮校园网CSDN等部分网站图片无法加载解决方案/%E5%9B%BE%E7%89%87.jpg" alt="图片"></p><ul><li>开始定位问题：</li><li>点击审查元素，接着找到我这张图的链接，直接用浏览器打开，报错<code>**NET::ERR_CERT_COMMON_NAME_INVALID**</code></li></ul><p><img src="https://img-blog.csdnimg.cn/20200912143542354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3BhbXplcmJodQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><ul><li>然后点击 高级–继续访问 <a href="http://img-blog.csdn.net" target="_blank" rel="noopener">img-blog.csdn.net</a> (不安全)</li><li>图片成功加载：<br><img src="https://img-blog.csdnimg.cn/20200912144157460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3BhbXplcmJodQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li></ul><p>好了，找到了问题。接下来就是面向搜索引擎的找方法时间。</p><p>经过查询发现是DNS的问题（或者可以打开cmd，然后输入ipconfig/all看DNS地址）：</p><p><img src="/2020/11/10/南邮校园网CSDN等部分网站图片无法加载解决方案/%E6%9F%A5%E7%9C%8B%E7%BD%91%E7%BB%9C%E5%B1%9E%E6%80%A7.jpg" alt="查看网络属性"></p><h2 id="解决方案"><a class="markdownIt-Anchor" href="#解决方案"></a> 解决方案</h2><p>我们尝试修改dns，并刷新。 <a href="https://jingyan.baidu.com/article/b87fe19e4e1faf5218356839.html" target="_blank" rel="noopener">修改教程点我</a>.</p><p><img src="/2020/11/10/南邮校园网CSDN等部分网站图片无法加载解决方案/%E4%BF%AE%E6%94%B9DNS.jpg" alt="修改DNS"></p><p>再次查看确认已经不再是坑爹的南邮DNS了。访问csdn发现一切正常。OK结束。</p><h2 id="err_cert_common_name_invalid"><a class="markdownIt-Anchor" href="#err_cert_common_name_invalid"></a> ERR_CERT_COMMON_NAME_INVALID</h2><p>实际上，可以认为，ERR_CERT_COMMON_NAME_INVALID就是用一个错误的域名访问了某个节点的https资源。导致这个错误的原因，基本是</p><ol><li>dns污染</li><li>host设置错误</li><li>官方更新了dns，但是dns缓存没有被更新，导致错误解析。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题定位&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#问题定位&quot;&gt;&lt;/a&gt; 问题定位&lt;/h2&gt;
&lt;p&gt;转自： &lt;a href=&quot;https://blog.csdn.net/pamzerbhu/article/details/10854
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>scrcpy+AutoJS</title>
    <link href="https://nymrli.top/2020/11/09/scrcpy-AutoJS/"/>
    <id>https://nymrli.top/2020/11/09/scrcpy-AutoJS/</id>
    <published>2020-11-09T03:26:19.000Z</published>
    <updated>2020-11-14T07:17:12.129Z</updated>
    
    <content type="html"><![CDATA[<h2 id="scrcpy简介"><a class="markdownIt-Anchor" href="#scrcpy简介"></a> scrcpy简介</h2><blockquote><p><strong>特点:</strong><br>利用电脑的键盘和鼠标可以控制手机。把 APK 文件拖拽到电脑窗口即可安装应用到手机，把普通文件拖拽到窗口即可复制到手机。<br>不需要在手机上安装任何应用。</p></blockquote><p>简单地来说，scrcpy就是通过adb调试的方式来将手机屏幕投到电脑上，并可以通过电脑控制您的Android设备。它可以通过USB连接，也可以通过Wifi连接（类似于隔空投屏），而且不需要任何root权限，不需要在手机里安装任何程序。scrcpy同时适用于GNU / Linux，Windows和macOS。</p><p>它的一些特性：</p><ul><li>亮度（原生，仅显示设备屏幕）</li><li>性能（30~60fps）</li><li>质量（1920×1080或以上）</li><li>低延迟（35~70ms）</li><li>启动时间短（显示第一张图像约1秒）</li><li>非侵入性（设备上没有安装任何东西）</li></ul><p>此项目为开源项目，Github地址：<a href="https://github.com/Genymobile/scrcpy" target="_blank" rel="noopener">Genymobile/scrcpy: Display and control your Android device</a></p><h3 id="使用scrcpy的要求"><a class="markdownIt-Anchor" href="#使用scrcpy的要求"></a> 使用scrcpy的要求</h3><ol><li>Android设备至少需要API 21（Android 5.0以上版本）;</li><li>确保在您的设备上启用了<a href="https://developer.android.com/studio/command-line/adb.html#Enabling" target="_blank" rel="noopener">adb调试</a>;</li><li>在某些设备上，您还需要启用<a href="https://github.com/Genymobile/scrcpy/issues/70#issuecomment-373286323" target="_blank" rel="noopener">其他选项</a>以使用键盘和鼠标控制它。</li></ol><p>adb调试的开启一般是多次点击手机系统版本，如我用的是MIUI10，开启方法是 “设置”-&gt;“我的设备”-&gt;“全部参数”-&gt;点击7下MIUI版本，开启“开发者选项”。然后在 “设置”-&gt;“更多设置”-&gt;“开发者选项” 中同时开启 <code>USB调试</code> 和 <code>USB调试(安全设置)</code>。</p><h3 id="使用说明"><a class="markdownIt-Anchor" href="#使用说明"></a> 使用说明</h3><blockquote><p>程序使用了Java语言，我们需要在电脑中搭建Java运行环境，参考：<a href="https://blog.csdn.net/sigmarising/article/details/80139287" target="_blank" rel="noopener">Windows10 配置 Java 开发环境</a></p></blockquote><h4 id="使用usb进行连接"><a class="markdownIt-Anchor" href="#使用usb进行连接"></a> 使用USB进行连接</h4><p>此方式推荐使用，相对更加流畅。</p><ol><li>手机通过USB连接到PC上，首次连接会弹出是否信任该电脑，点击始终信任即可。</li><li>运行<code>adb usb</code>查看是否连接成功</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\Github_Run\scrcpy-win64-v1.10&gt;adb usb</span><br><span class="line">restarting in USB mode</span><br></pre></td></tr></table></figure><ol start="3"><li>运行<code>scrcpy</code>即可。</li></ol><h4 id="使用无线连接"><a class="markdownIt-Anchor" href="#使用无线连接"></a> 使用无线连接</h4><blockquote><p>可参考官方文档：<a href="https://www.genymotion.com/blog/open-source-project-scrcpy-now-works-wirelessly/" target="_blank" rel="noopener">Open Source Project - Scrcpy now works wirelessly</a></p></blockquote><p>此连接方式更加方便快捷，若宽带速率高，使用效果更佳，使用方法也非常简单。</p><ol><li>确保PC和手机在同一Wifi中</li><li>手机先通过USB与PC相连</li><li>在PC上运行 adb tcpip 服务端口，如端口为5555</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\Github_Run\scrcpy-win64-v1.10&gt;adb tcpip 5555</span><br><span class="line">restarting in TCP mode port: 5555</span><br></pre></td></tr></table></figure><ol><li>拔下你的设备，断开USB连接</li><li>在PC上运行 adb connect 手机IP:服务端口（手机IP可通过手机的<code>状态信息</code>查看，或者登录路由器查看，一般以192.168开头）</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\Github_Run\scrcpy-win64-v1.10&gt;adb connect 192.168.0.4:5555</span><br><span class="line">connected to 192.168.0.4:5555</span><br></pre></td></tr></table></figure><ol start="3"><li>运行scrcpy，在cmd中输入<code>scrcpy.exe</code>即可</li></ol><p>注: 若要切换回USB模式：<code>adb usb</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 附调节比特率和分辨率</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> scrcpy --bit-rate 2M --max-size 800</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者简写</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> scrcpy -b2M -m800</span></span><br></pre></td></tr></table></figure><h2 id="autojs"><a class="markdownIt-Anchor" href="#autojs"></a> AutoJS</h2><blockquote><p>一个支持无障碍服务的Android平台上的JavaScript IDE，其发展目标是JsBox和Workflow。<br>Auto.js使用<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript" target="_blank" rel="noopener">JavaScript</a>作为脚本语言，目前使用<a href="https://developer.mozilla.org/zh-CN/docs/Mozilla/Projects/Rhino" target="_blank" rel="noopener">Rhino 1.7.7.2</a>作为脚本引擎，支持ES5与部分ES6特性。</p><p>官方教程: <a href="https://hyb1996.github.io/AutoJs-Docs/#/?id=autojs" target="_blank" rel="noopener">https://hyb1996.github.io/AutoJs-Docs/#/?id=autojs</a><br>使用教程视频: <a href="https://space.bilibili.com/21486893/video" target="_blank" rel="noopener"><strong>笔青居</strong></a></p></blockquote><h3 id="如何连接"><a class="markdownIt-Anchor" href="#如何连接"></a> 如何连接?</h3><p><strong>手机安装使用步骤：</strong></p><p>① 开启无障碍服务<br>② 音量上键停止脚本：当脚本处于无法停止的状态时，使用音量上键强制停止脚本。<br>③ 开启悬浮窗：<br>④ 连接手机(如果不习惯在手机上coding, 可以安装作者提供的VsCode插件, 在Vscode上编码: <a href="https://github.com/hyb1996/Auto.js-VSCode-Extension" target="_blank" rel="noopener">Auto.js-VSCodeExt</a>——插件的使用教程也非常简洁易懂， 在此就不重复了。</p><p><img src="/2020/11/09/scrcpy-AutoJS/%E8%BF%9E%E6%8E%A5Autojs.jpg" alt="连接Autojs"></p><p><img src="/2020/11/09/scrcpy-AutoJS/%E5%81%9C%E6%AD%A2%E8%84%9A%E6%9C%AC.jpg" alt="停止脚本"></p><h3 id="微信朋友圈点赞demo"><a class="markdownIt-Anchor" href="#微信朋友圈点赞demo"></a> 微信朋友圈点赞demo</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">comment = desc(<span class="string">"评论"</span>).findOne();</span><br><span class="line">log(comment);</span><br><span class="line">comment.click();</span><br><span class="line">sleep(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 由于"赞"控件的Clickable是false, 所以点击它的父控件</span></span><br><span class="line">praise = text(<span class="string">"赞"</span>).findOne();</span><br><span class="line">praiseParent = praise.parent();</span><br><span class="line">praiseParent.click();</span><br></pre></td></tr></table></figure><h2 id="js知识补充"><a class="markdownIt-Anchor" href="#js知识补充"></a> Js知识补充</h2><p><strong>作用域:</strong></p><blockquote><p>JS只有函数作用域和全局作用域</p></blockquote><ul><li><p>全局作用域: 如果是显性的写在全局的, 则变量的作用域为全局</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&gt; /*</span><br><span class="line">&gt; * 作用域</span><br><span class="line">&gt; *     - 作用域指一个变量的作用的范围</span><br><span class="line">&gt; *     - 在JS中一共有两种作用域：</span><br><span class="line">&gt; *         1.全局作用域</span><br><span class="line">&gt; *             - 直接编写在script标签中的JS代码，都在全局作用域</span><br><span class="line">&gt; *             - 全局作用域在页面打开时创建，在页面关闭时销毁</span><br><span class="line">&gt; *             - 在全局作用域中有一个全局对象window，</span><br><span class="line">&gt; *                 它代表的是一个浏览器的窗口，它由浏览器创建我们可以直接使用</span><br><span class="line">&gt; *             - 在全局作用域中：</span><br><span class="line">&gt; *                 创建的变量都会作为window对象的属性保存</span><br><span class="line">&gt; *                 创建的函数都会作为window对象的方法保存</span><br><span class="line">&gt; * 一切皆对象</span><br><span class="line">&gt; *             - 全局作用域中的变量都是全局变量，</span><br><span class="line">&gt; *                 在页面的任意的部分都可以访问的到</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote></li><li><p>块级作用域: {}为块, {}内即为块级作用域。但是注意<strong>JS没有块级作用域</strong>， 即块里声明的变量, 作用域实际为全局。—&gt;ES6 新增了<code>let</code>命令，用来声明局部变量。它的用法类似于<code>var</code>，但是所声明的变量，只在<code>let</code>命令所在的代码块内有效，而且有暂时性死区的约束。==&gt;ES6用新增的<code>let</code>，来声明块级作用域的变量。(let另一个特性: let变量不能重复声明–var可以, 以最后的为准, 效果跟python声明变量类似)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)&#123;&#125;</span><br><span class="line">log(i);<span class="comment">// 输出为10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)&#123;&#125;</span><br><span class="line">log(i);<span class="comment">// ReferenceError: "i" is not defined. ([remote]test.js#14)ReferenceError: "i" is not defined.</span></span><br></pre></td></tr></table></figure></li><li><p>函数作用域: 在函数内即为函数作用域， 如果不用var表明， 则声明的是全局变量。用var表明是局部变量</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; /*</span><br><span class="line">&gt; * 函数作用域</span><br><span class="line">&gt; *     - 调用函数时创建函数作用域，函数执行完毕以后，函数作用域销毁</span><br><span class="line">&gt; *     - 每调用一次函数就会创建一个新的函数作用域，他们之间是互相独立的</span><br><span class="line">&gt; *     - 在函数作用域中可以访问到全局作用域的变量</span><br><span class="line">&gt; *         在全局作用域中无法访问到函数作用域的变量</span><br><span class="line">&gt; *     - 当在函数作用域操作一个变量时，它会先在自身作用域中寻找，如果有就直接使用</span><br><span class="line">&gt; *         如果没有则向上一级作用域中寻找，直到找到全局作用域，</span><br><span class="line">&gt; *         如果全局作用域中依然没有找到，则会报错ReferenceError</span><br><span class="line">&gt; *     - 在函数中要访问全局变量可以使用window对象</span><br><span class="line">&gt; */</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    a = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> b = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test();</span><br><span class="line">log(a);<span class="comment">// 输出1</span></span><br><span class="line">log(b);<span class="comment">// ReferenceError: "b" is not defined. ([remote]test.js#19)ReferenceError: "b" is not defined.</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>数组</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]<span class="comment">// 第一种声明数组的方式</span></span><br><span class="line">a.push(<span class="number">4</span>)<span class="comment">// 往数组最后添加元素</span></span><br><span class="line">log(a);</span><br><span class="line">log(a.indexOf(<span class="number">2</span>));<span class="comment">// 找出某元素在数组中的索引</span></span><br><span class="line">a.pop();<span class="comment">// 弹出最后一个元素</span></span><br><span class="line">log(a);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">b = <span class="built_in">Array</span>();<span class="comment">// 第二种声明数组的方式</span></span><br><span class="line">log(b);</span><br></pre></td></tr></table></figure><p><strong>数据类型:</strong></p><ul><li>string、number、boolean、nullundefined</li><li>Object：Function、Array、Date</li></ul><p>可以使用typeof来查看对象的类型</p><p><strong>变量函数提前声明</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">* 变量的声明提前</span><br><span class="line">*     - 使用var关键字声明的变量，会在所有的代码执行之前被声明（但是不会赋值），</span><br><span class="line">*         但是如果声明变量时不使用var关键字，则变量不会被声明提前</span><br><span class="line">*</span><br><span class="line">* 函数的声明提前</span><br><span class="line">*     - 使用函数声明形式创建的函数 function 函数()&#123;&#125;</span><br><span class="line">*         它会在所有的代码执行之前就被创建，所以我们可以在函数声明前来调用函数</span><br><span class="line">*        使用函数表达式创建的函数，不会被声明提前，所以不能在声明前调用</span><br><span class="line">*/</span><br><span class="line">/*console.log(&quot;a = &quot;+a);</span><br><span class="line">情况1：使用 var a = 123; a是undefined，声明变量在此句之后，但var a 会使变量提前声明，</span><br><span class="line">情况2： 使用  a = 123;  a未找到，会报错，因为a未提前声明</span><br><span class="line">a = 123； 等价于  window.a = 123;</span><br><span class="line">var a = 123;*/   到了此句才赋值，等价于在所有代码之前 声明a  var a;  执行到此句再赋值 a=123;</span><br><span class="line"></span><br><span class="line">//fun();</span><br><span class="line">//函数声明，会被提前创建</span><br><span class="line">function fun()&#123;</span><br><span class="line">console.log(&quot;我是一个fun函数&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//函数表达式，不会被提前创建，此句只是提前声明了fun2，不知道是不是函数，可能是变量， undefined而在此次才开始赋值一个函数表达式</span><br><span class="line">var fun2 = function()&#123;</span><br><span class="line">console.log(&quot;我是fun2函数&quot;);</span><br><span class="line">&#125;;</span><br><span class="line">fun2();</span><br></pre></td></tr></table></figure><p><strong>Andriod开发知识：</strong></p><ul><li>packageName： 应用包名</li><li>applicationName: 应用名</li><li>currenetActivity: 当前页面</li></ul><hr><p>Js是单线程的, 在任务调度上，同步任务优先级最高， 微任务其次(new Promise)， 宏任务最后(setInterval, setTimeOut): <a href="https://www.bilibili.com/video/BV1NJ411W7wh?p=336" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1NJ411W7wh?p=336</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>( <span class="function">(<span class="params">resolve, reject</span>) =&gt;</span>&#123;</span><br><span class="line">    resolve();<span class="comment">// 调用resolve表示成功, 调用reject表示失败</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"yes"</span>)<span class="comment">// 第一个大括号里的都是同步任务, 优先级很高</span></span><br><span class="line">&#125;).then(<span class="function"><span class="params">value</span> =&gt;</span>&#123;<span class="comment">// 成功执行这个. 这个是微任务</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"成功"</span>)</span><br><span class="line">&#125;, reason =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"失败"</span>)<span class="comment">// 失败执行这个. 这个是微任务</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 输出结果: yes =&gt; 成功</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;scrcpy简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#scrcpy简介&quot;&gt;&lt;/a&gt; scrcpy简介&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;特点:&lt;/strong&gt;&lt;br&gt;
利用电脑的键盘和鼠标可以控制手机
      
    
    </summary>
    
    
  </entry>
  
</feed>
