<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mrli&#39;s Blog</title>
  
  <subtitle>别装作很努力，结局不会陪你演戏。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://nymrli.top/"/>
  <updated>2021-08-24T07:26:14.170Z</updated>
  <id>https://nymrli.top/</id>
  
  <author>
    <name>Mrli</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>学习画好架构图</title>
    <link href="https://nymrli.top/2021/08/24/%E5%AD%A6%E4%B9%A0%E7%94%BB%E5%A5%BD%E6%9E%B6%E6%9E%84%E5%9B%BE/"/>
    <id>https://nymrli.top/2021/08/24/学习画好架构图/</id>
    <published>2021-08-24T06:57:11.000Z</published>
    <updated>2021-08-24T07:26:14.170Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一图胜万语，做好一张架构图能让别人一眼就清晰地弄懂程序的功能与依赖，大大降低大家的理解成本和提升沟通效率。但作为新人而言，如何画出要点，提炼出核心概念是个有难度的事。</p></blockquote><h2 id="什么是架构"><a class="markdownIt-Anchor" href="#什么是架构"></a> <strong>什么是架构？</strong></h2><p>架构是结构和愿景，是对系统中的实体以及实体之间的关系所进行的抽象描述，是一系列的决策。</p><p>系统架构是概念的体现，是对物/信息的功能与形式元素之间的对应情况所做的分配，是对元素之间的关系以及元素同周边环境之间的关系所做的定义。</p><h2 id="什么是架构图"><a class="markdownIt-Anchor" href="#什么是架构图"></a> <strong>什么是架构图？</strong></h2><p>系统架构图是为了抽象地表示<u>软件系统</u>的<strong>整体轮廓</strong>和<u>各个组件</u>之间的相互关系和<strong>约束边界</strong>，以及软件系统的物理部署和软件系统的演进方向的<strong>整体视图</strong>。</p><h2 id="架构图的作用"><a class="markdownIt-Anchor" href="#架构图的作用"></a> <strong>架构图的作用</strong></h2><p>要让干系人理解、遵循架构决策，就需要把架构信息传递出去。架构图就是一个很好的载体。那么，画架构图是为了：</p><ul><li>解决沟通障碍</li><li>达成共识</li><li>减少歧义</li></ul><h2 id="架构核心要素"><a class="markdownIt-Anchor" href="#架构核心要素"></a> 架构核心要素</h2><p><img src="/2021/08/24/学习画好架构图/C:%5CUsers%5Cmrli%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210824152422270.png" alt="image-20210824152422270"></p><p>综合上述各种权威定义，软件系统的架构通常需要包含如下四类核心要素：</p><ul><li><strong>元素（elements）</strong>：将系统拆分为一组元素 - 模块、组件、结构体、子系统；</li><li><strong>关系（relationships）</strong>：不同元素之间的关系 - 交互、依赖 、继承、组合、聚合；</li><li><strong>属性（properties）</strong>：每个元素具备的属性 - 名称、职责、接口、实现限制等；</li><li><strong>原理（principles）</strong>：为什么这么设计 - 拆分依据、设计原则、决策原因等。</li></ul><h2 id="架构图分类"><a class="markdownIt-Anchor" href="#架构图分类"></a> <strong>架构图分类</strong></h2><p>搜集了很多资料，分类有很多，有一种比较流行的是4+1视图，分别为场景视图、逻辑视图、物理视图、处理流程视图和开发视图。</p><p>from：<a href="https://blog.csdn.net/wwd0501/article/details/105688895" target="_blank" rel="noopener">如何画好软件项目架构图？</a>， <a href="https://zhuanlan.zhihu.com/p/260068315" target="_blank" rel="noopener">架构制图：工具与方法论</a></p><h1 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h1><h2 id="五种常见软件架构"><a class="markdownIt-Anchor" href="#五种常见软件架构"></a> <a href="https://www.cnblogs.com/doit8791/p/9343826.html" target="_blank" rel="noopener">五种常见软件架构</a></h2><ul><li>分层架构</li><li>事件驱动架构</li><li>微核架构</li><li>微服务架构</li><li>云架构</li></ul><h2 id="架构图example"><a class="markdownIt-Anchor" href="#架构图example"></a> 架构图example：</h2><p><img src="/2021/08/24/学习画好架构图/C:%5CUsers%5Cmrli%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210824150755684.png" alt="image-20210824150755684"></p><hr><p><img src="https://i.loli.net/2021/08/24/x3g8pz7heaDvTXd.png" alt=""></p><hr><p><img src="https://i.loli.net/2021/08/24/uEUok8KXzWPen4f.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;一图胜万语，做好一张架构图能让别人一眼就清晰地弄懂程序的功能与依赖，大大降低大家的理解成本和提升沟通效率。但作为新人而言，如何画出要点，提炼出核心概念是个有难度的事。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;什么是架构&quot;&gt;&lt;a clas
      
    
    </summary>
    
    
      <category term="福利" scheme="https://nymrli.top/tags/%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>AOP学习</title>
    <link href="https://nymrli.top/2021/08/19/AOP%E5%AD%A6%E4%B9%A0/"/>
    <id>https://nymrli.top/2021/08/19/AOP学习/</id>
    <published>2021-08-19T08:35:08.000Z</published>
    <updated>2021-08-20T08:10:21.723Z</updated>
    
    <content type="html"><![CDATA[<h1 id="aop学习"><a class="markdownIt-Anchor" href="#aop学习"></a> AOP学习</h1><h2 id="aop"><a class="markdownIt-Anchor" href="#aop"></a> AOP</h2><h3 id="要素"><a class="markdownIt-Anchor" href="#要素"></a> 要素</h3><p><img src="/2021/08/19/AOP学习/E:%5Chexo%5Csource_posts%5CAOP%E5%AD%A6%E4%B9%A0%5C%E8%A6%81%E7%B4%A0.png" alt="要素"></p><ul><li>Aspect切面：是切入点和通知的抽象——切面则是横切关注点的抽象，与类相似，类是对物体特征的抽象，切面则是横切关注点抽象。</li><li>切入点PointCut：定义要拦截哪些类的哪些方法<ul><li>切入点表达式<code>@Pointcut(&quot;execution(* com.service.*.*(..))&quot;)</code><br>执行exectution后的第一个参数代表的是方法的修饰范围（public、private、protected）,第二个表示拦截的方法，第一个<code>*</code>表示所有类，第二个<code>*</code>表示所有的方法，括号中的…表示任意参数</li><li>常用的切入点表达式有：<ul><li><code>execution(public *(..))</code>执行所有公有方法</li><li><code>execution(* set(..))</code>执行所有set方法</li><li><code>execution(* com.service.*.*(..))</code>执行包下任意类的任意方法</li><li><code>execution(* com.service..*.*(..))</code>设定指定包及其子包的任意类的任意方法</li></ul></li></ul></li><li>通知Advice：定义了拦截之后要做什么</li><li>Target（目标对象）:被代理的目标对象</li><li>Weave（织入）:将切面应用到目标对象并生成代理对象的这个过程即为织入</li></ul><p>from: <a href="https://www.bilibili.com/video/BV1Lx411a73q" target="_blank" rel="noopener">程序员大神修炼秘籍 Spring AOP HelloWorld</a></p><h3 id="应用场景"><a class="markdownIt-Anchor" href="#应用场景"></a> 应用场景</h3><p><img src="/2021/08/19/AOP学习/E:%5Chexo%5Csource_posts%5CAOP%E5%AD%A6%E4%B9%A0%5C%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF.png" alt="应用场景"></p><h3 id="通知类型"><a class="markdownIt-Anchor" href="#通知类型"></a> 通知类型</h3><p><img src="/2021/08/19/AOP学习/E:%5Chexo%5Csource_posts%5CAOP%E5%AD%A6%E4%B9%A0%5C%E9%80%9A%E7%9F%A5%E7%B1%BB%E5%9E%8B.png" alt="通知类型"></p><h3 id="java中的aop"><a class="markdownIt-Anchor" href="#java中的aop"></a> JAVA中的AOP</h3><blockquote><p>应用最为广泛的主要包括AspectJ、Spring AOP和JBoss AOP等</p></blockquote><ul><li>AspectJ采用了源代码生成技术来实现AOP，静态织入的方式</li><li>Spring AOP和JBoss AOP在实现上属于动态织入的方式</li></ul><h3 id="demo-code"><a class="markdownIt-Anchor" href="#demo-code"></a> demo code:</h3><p><a href="https://www.bilibili.com/video/BV19f4y1i7ug?p=10" target="_blank" rel="noopener">B站最详细 Spring AOP+Spring 定时任务教程 【涨薪必备】带你一步一步搞定吃透Spring</a></p><h2 id="springaop"><a class="markdownIt-Anchor" href="#springaop"></a> SpringAOP</h2><ul><li><a href="https://www.bilibili.com/video/BV1aC4y1p7bF?p=8" target="_blank" rel="noopener">Spring技术自定义注解和Aop实现事务框架，阿里P7都要掌握的技术~</a>——结合Aop技术，实现注解分析</li><li><a href="https://www.bilibili.com/video/BV1me411s7KH?from=search&amp;seid=3776250925483313694" target="_blank" rel="noopener">一分钟学会自定义注解注入Spring IoC 容器</a>——将自定义注解修饰的类注入到Ioc容器中</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;aop学习&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#aop学习&quot;&gt;&lt;/a&gt; AOP学习&lt;/h1&gt;
&lt;h2 id=&quot;aop&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#aop&quot;&gt;&lt;/a&gt; AOP&lt;/h2
      
    
    </summary>
    
    
      <category term="java" scheme="https://nymrli.top/tags/java/"/>
    
      <category term="spring" scheme="https://nymrli.top/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>JWT使用学习</title>
    <link href="https://nymrli.top/2021/08/11/JWT%E4%BD%BF%E7%94%A8%E5%AD%A6%E4%B9%A0/"/>
    <id>https://nymrli.top/2021/08/11/JWT使用学习/</id>
    <published>2021-08-11T08:44:17.000Z</published>
    <updated>2021-08-18T07:28:18.866Z</updated>
    
    <content type="html"><![CDATA[<h1 id="jwt-json-web-token"><a class="markdownIt-Anchor" href="#jwt-json-web-token"></a> JWT: Json Web Token</h1><blockquote><ul><li>与普通Token一样都是访问资源的令牌，都可以记录用户信息，都是只有验证成功后才可以获取信息。</li><li>不同的是普通Token，服务端验证token信息时要进行数据库查询操作；JWT验证token信息就不用，在服务端使用<strong>密钥校验</strong>就可以，不用经过数据库查询。==》它是一个数字签名</li></ul></blockquote><h2 id="jwt信息组成"><a class="markdownIt-Anchor" href="#jwt信息组成"></a> JWT信息组成</h2><p>JSON Web Token由三部分组成，它们之间用圆点(.)连接。这三部分分别是：</p><ul><li><p>Header</p><ul><li>Header header典型的由两部分组成：token的类型（“JWT”）和算法名称（比如：HMAC SHA256或者RSA等等）。</li></ul></li><li><p>Payload</p><ul><li><p>Payload JWT的第二部分是payload，它包含声明（要求）。声明是关于实体(通常是用户)和其他数据的声明。声明有三种类型: registered, public 和 private。</p></li><li><ul><li><p>Registered claims : 这里有一组预定义的声明，它们不是强制的，但是推荐。比如：iss (issuer), exp (expiration time), sub (subject), aud (audience)等。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123; </span><br><span class="line">// 这部分是Registered claims</span><br><span class="line">  &quot;iss&quot;: &quot;Online JWT Builder&quot;,  // 该JWT的签发者</span><br><span class="line">  &quot;iat&quot;: 1416797419, // iat(issued at): 在什么时候签发的(UNIX时间)</span><br><span class="line">  &quot;exp&quot;: 1448333419,    // 什么时候过期，这里是一个Unix时间戳</span><br><span class="line">  &quot;aud&quot;: &quot;www.example.com&quot;,  // 接收该JWT的一方</span><br><span class="line">  &quot;sub&quot;: &quot;jrocket@example.com&quot;,  // 该JWT所面向的用户</span><br><span class="line">// 这部分是Public claims</span><br><span class="line">  &quot;GivenName&quot;: &quot;Johnny&quot;, </span><br><span class="line">  &quot;Surname&quot;: &quot;Rocket&quot;, </span><br><span class="line">  &quot;Email&quot;: &quot;jrocket@example.com&quot;, </span><br><span class="line">  &quot;Role&quot;: [ &quot;Manager&quot;, &quot;Project Administrator&quot; ] </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Public claims : 可以随意定义。</p></li><li><p>Private claims : 用于在同意使用它们的各方之间共享信息，并且不是注册的或公开的声明。 下面是一个例子：</p></li></ul></li></ul></li><li><p>Signature</p><ul><li>签名秘钥。 为了得到签名部分，你必须有编码过的header、编码过的payload、<strong>一个秘钥</strong>，签名算法是header中指定的那个，然对它们签名即可。</li></ul></li></ul><p>注： 不要在JWT的payload或header中放置敏感信息，除非它们是加密的。</p><p>然后对每一部分进行base64加密，再通过<code>.</code>组合即可得到JWT。 因此，一个典型的JWT看起来是这个样子的：<code>xxxxx.yyyyy.zzzzz</code></p><p><img src="https://i.loli.net/2021/08/18/7r9GzsDtQqXZUV1.png" alt=""></p><h2 id="jwt网络工作流程"><a class="markdownIt-Anchor" href="#jwt网络工作流程"></a> JWT网络工作流程</h2><p><img src="https://i.loli.net/2021/08/18/JjZHgVbdhwGtiFN.png" alt=""></p><img src="https://pic1.zhimg.com/80/v2-7789057d5744891fdf3366d7887ab6e8_1440w.jpg" style="zoom:50%;"><h2 id="使用场景"><a class="markdownIt-Anchor" href="#使用场景"></a> 使用场景：</h2><ul><li><p>Authorization (授权) : 这是使用JWT的最常见场景。一旦用户登录，后续每个请求都将包含JWT，允许用户访问该令牌允许的路由、服务和资源。<strong>单点登录</strong>是现在广泛使用的JWT的一个特性，因为它的开销很小，并且可以轻松地跨域使用。</p></li><li><p>Information Exchange (信息交换) : 对于安全的在各方之间传输信息而言，JSON Web Tokens无疑是一种很好的方式。因为JWT可以被签名，例如，用公钥/私钥对，你可以确定发送人就是它们所说的那个人。另外，由于签名是使用头和有效负载计算的，您还可以验证内容没有被篡改。</p><p><a href="https://jwt.io/" target="_blank" rel="noopener">https://jwt.io/</a></p></li></ul><h2 id="json-web-tokens是如何工作的"><a class="markdownIt-Anchor" href="#json-web-tokens是如何工作的"></a> JSON Web Tokens是如何工作的</h2><p>在认证的时候，当用户用他们的凭证成功登录以后，一个JSON Web Token将会被返回。此后，token就是用户凭证了，你必须非常小心以防止出现安全问题。一般而言，你保存令牌的时候不应该超过你所需要它的时间。</p><p>无论何时用户想要访问受保护的路由或者资源的时候，用户代理（通常是浏览器）都应该带上JWT，典型的，通常放在**Authorization header(授权头)**中，用Bearer schema。</p><p>服务器上的受保护的路由将会检查Authorization header中的JWT是否有效，如果有效，则用户可以访问受保护的资源。如果JWT包含足够多的必需的数据，那么就可以减少对某些操作的数据库查询的需要，尽管可能并不总是如此。</p><p>如果token是在授权头（Authorization header）中发送的，那么跨源资源共享(CORS)将不会成为问题，因为它不使用cookie。</p><p>这个token必须要在每次请求时传递给服务端，它应该保存在请求头里， 另外，服务端要支持<code>CORS(跨来源资源共享)</code>策略，一般我们在服务端这么做就可以了<code>Access-Control-Allow-Origin: *</code>。</p><h2 id="基于token的身份认证-与-基于服务器的身份认证-的区别"><a class="markdownIt-Anchor" href="#基于token的身份认证-与-基于服务器的身份认证-的区别"></a> 基于Token的身份认证 与 基于服务器的身份认证 的区别:</h2><p>基于服务器的身份认证方式存在一些问题：</p><ul><li>Sessions : 每次用户认证通过以后，服务器需要创建一条记录保存用户信息，通常是在内存中，随着认证通过的用户越来越多，服务器的在这里的开销就会越来越大。</li><li>Scalability : 由于Session是在内存中的，这就带来一些扩展性的问题。</li><li>CORS : 当我们想要扩展我们的应用，让我们的数据被多个移动设备使用时，我们必须考虑跨资源共享问题。当使用AJAX调用从另一个域名下获取资源时，我们可能会遇到禁止请求的问题。</li><li>CSRF : 用户很容易受到CSRF攻击。</li></ul><p><strong>JWT与Session的差异</strong></p><ul><li>它们都是存储用户信息；然而，Session是在服务器端的，客户端只有session id，而JWT是在客户端的。<ul><li>Session方式存储用户信息的最大问题在于要占用大量服务器内存，增加服务器的开销。而JWT方式将用户状态分散到了客户端中，可以明显减轻服务端的内存压力。</li></ul></li><li>基于Token的身份认证是无状态的，服务器或者Session中不会存储任何用户信息，即没有会话的概念</li></ul><p><strong>用Token的好处</strong></p><ul><li>无状态和可扩展性：Tokens存储在客户端。完全无状态，可扩展。我们的负载均衡器可以将用户传递到任意服务器，因为在任何地方都没有状态或会话信息。</li><li>安全：Token不是Cookie。（The token, not a cookie.）每次请求的时候Token都会被发送。而且，由于没有Cookie被发送，还有助于防止CSRF攻击。即使在你的实现中将token存储到客户端的Cookie中，这个Cookie也只是一种存储机制，而非身份认证机制。没有基于会话的信息可以操作，因为我们没有会话!</li><li>还有一点，token在一段时间以后会过期，这个时候用户需要重新登录。这有助于我们保持安全。还有一个概念叫token撤销，它允许我们根据相同的授权许可使特定的token甚至一组token无效。</li></ul><p><strong>JWT与OAuth的区别</strong></p><ul><li>OAuth2是一种授权框架 ，JWT是一种认证协议 -无论使用哪种方式切记用HTTPS来保证数据的安全性</li><li>OAuth2用在使用第三方账号登录的情况(比如使用weibo, qq, github登录某个app)，而JWT是用在前后端分离, 需要简单的对后台API进行保护时使用。</li></ul><h2 id="优点"><a class="markdownIt-Anchor" href="#优点"></a> 优点</h2><ul><li>因为json的通用性，所以JWT是可以进行跨语言支持的，像JAVA,JavaScript,NodeJS,PHP等很多语言都可以使用。</li><li>因为有了payload部分，所以JWT可以在自身存储一些其他业务逻辑所必要的非敏感信息。</li><li>便于传输，jwt的构成非常简单，字节占用很小，所以它是非常便于传输的。</li><li>它不需要在服务端保存会话信息, 所以它易于应用的扩展</li></ul><hr><p>from：<a href="https://zhuanlan.zhihu.com/p/86937325" target="_blank" rel="noopener">五分钟带你了解啥是JWT</a></p><h1 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h1><h2 id="几种常用的认证机制"><a class="markdownIt-Anchor" href="#几种常用的认证机制"></a> 几种常用的认证机制</h2><h3 id="http-basic-auth"><a class="markdownIt-Anchor" href="#http-basic-auth"></a> HTTP Basic Auth</h3><p>HTTP Basic Auth简单点说明就是每次请求API时都提供用户的username和password，简言之，Basic Auth是配合RESTful API 使用的最简单的认证方式，只需提供用户名密码即可，但由于有把用户名密码暴露给第三方客户端的风险，在生产环境下被使用的越来越少。因此，在开发对外开放的RESTful API时，尽量避免采用HTTP Basic Auth</p><h3 id="oauth"><a class="markdownIt-Anchor" href="#oauth"></a> OAuth</h3><p>OAuth（开放授权）是一个开放的授权标准，允许用户让第三方应用访问该用户在某一web服务上存储的私密的资源（如照片，视频，联系人列表），而无需将用户名和密码提供给第三方应用。</p><p>这种基于OAuth的认证机制适用于个人消费者类的互联网产品，如社交类APP等应用，但是不太适合拥有自有认证权限管理的企业应用；</p><h3 id="cookie-auth"><a class="markdownIt-Anchor" href="#cookie-auth"></a> Cookie Auth</h3><p>Cookie认证机制就是为一次请求认证在服务端创建一个Session对象，同时在客户端的浏览器端创建了一个Cookie对象；通过客户端带上来Cookie对象来与服务器端的session对象匹配来实现状态管理的。默认的，当我们关闭浏览器的时候，cookie会被删除。但可以通过修改cookie 的expire time使cookie在一定时间内有效；</p><h3 id="token-auth"><a class="markdownIt-Anchor" href="#token-auth"></a> Token Auth</h3><p>Token机制相对于Cookie机制又有什么好处呢？</p><ul><li><strong>支持跨域访问</strong>: Cookie是不允许垮域访问的，这一点对Token机制是不存在的，前提是传输的用户认证信息通过HTTP头传输.</li><li><strong>无状态(也称：服务端可扩展行)</strong>:Token机制在服务端不需要存储session信息，因为Token 自身包含了所有登录用户的信息，只需要在客户端的cookie或本地介质存储状态信息.</li><li><strong>更适用CDN</strong>: 可以通过内容分发网络请求你服务端的所有资料（如：javascript，HTML,图片等），而你的服务端只要提供API即可.</li><li><strong>去耦</strong>: 不需要绑定到一个特定的身份验证方案。Token可以在任何地方生成，只要在你的API被调用的时候，你可以进行Token生成调用即可.</li><li><strong>更适用于移动应用</strong>: 当你的客户端是一个原生平台（iOS, Android，Windows 8等）时，<u>Cookie是不被支持的</u>（你需要通过Cookie容器进行处理），这时采用Token认证机制就会简单得多。</li><li><strong>CSRF</strong>:因为不再依赖于Cookie，所以你就不需要考虑对CSRF（跨站请求伪造）的防范。</li><li><strong>性能</strong>: 一次网络往返时间（通过数据库查询session信息）总比做一次HMACSHA256计算 的Token验证和解析要费时得多.</li><li><strong>不需要为登录页面做特殊处理</strong>: 如果你使用Protractor 做功能测试的时候，不再需要为登录页面做特殊处理.</li><li><strong>基于标准化</strong>:你的API可以采用标准化的 JSON Web Token (JWT). 这个标准已经存在多个后端库（.NET, Ruby, Java,Python, PHP）和多家公司的支持（如：Firebase,Google, Microsoft）.</li></ul><img src="https://i.loli.net/2021/08/18/m5zEhtXnRAp78yB.png" style="zoom:50%;"><h3 id="json-webtoken-auth"><a class="markdownIt-Anchor" href="#json-webtoken-auth"></a> JSON WebToken Auth</h3><h2 id="使用java库来生成jwt"><a class="markdownIt-Anchor" href="#使用java库来生成jwt"></a> 使用java库来生成JWT</h2><h2 id="jjwt"><a class="markdownIt-Anchor" href="#jjwt"></a> JJWT</h2><h3 id="加密生成jwt"><a class="markdownIt-Anchor" href="#加密生成jwt"></a> 加密生成JWT</h3><p><img src="https://i.loli.net/2021/08/18/4JOiPv38VnYtxle.png" alt=""></p><h3 id="解密jwt"><a class="markdownIt-Anchor" href="#解密jwt"></a> 解密JWT</h3><p><img src="https://i.loli.net/2021/08/18/YnHBPeQo7MFU6xI.png" alt=""></p><h2 id="java-jwt"><a class="markdownIt-Anchor" href="#java-jwt"></a> JAVA JWT</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JWTUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 过期时间5分钟</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> EXPIRE_TIME = <span class="number">5</span>*<span class="number">60</span>*<span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 校验token是否正确</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token 密钥</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> secret 用户的密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 是否正确</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">verify</span><span class="params">(String token, String username, String secret)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Algorithm algorithm = Algorithm.HMAC256(secret);</span><br><span class="line">            JWTVerifier verifier = JWT.require(algorithm)</span><br><span class="line">                    .withClaim(<span class="string">"username"</span>, username)</span><br><span class="line">                    .build();</span><br><span class="line">            DecodedJWT jwt = verifier.verify(token);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception exception) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得token中的信息无需secret解密也能获得</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> token中包含的用户名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getUsername</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            DecodedJWT jwt = JWT.decode(token);</span><br><span class="line">            <span class="keyword">return</span> jwt.getClaim(<span class="string">"username"</span>).asString();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (JWTDecodeException e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成签名,5min后过期</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username 用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> secret 用户的密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 加密的token</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">sign</span><span class="params">(String username, String secret)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Date date = <span class="keyword">new</span> Date(System.currentTimeMillis()+EXPIRE_TIME);</span><br><span class="line">            Algorithm algorithm = Algorithm.HMAC256(secret);</span><br><span class="line">            <span class="comment">// 附带username信息</span></span><br><span class="line">            <span class="keyword">return</span> JWT.create()</span><br><span class="line">                    .withClaim(<span class="string">"username"</span>, username)</span><br><span class="line">                    .withExpiresAt(date)</span><br><span class="line">                    .sign(algorithm);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;jwt-json-web-token&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#jwt-json-web-token&quot;&gt;&lt;/a&gt; JWT: Json Web Token&lt;/h1&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;与普通T
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Shiro使用学习</title>
    <link href="https://nymrli.top/2021/08/11/Shiro%E4%BD%BF%E7%94%A8%E5%AD%A6%E4%B9%A0/"/>
    <id>https://nymrli.top/2021/08/11/Shiro使用学习/</id>
    <published>2021-08-11T07:39:08.000Z</published>
    <updated>2021-09-07T10:18:38.073Z</updated>
    
    <content type="html"><![CDATA[<p>Apache Shiro 是一个强大易用的 <a href="https://www.w3cschool.cn/java/" target="_blank" rel="noopener">Java</a> 安全框架，提供了<strong>认证</strong>、授权、<strong>加密</strong>和会话管理等功能（如下图），对于任何一个应用程序，Shiro 都可以提供全面的安全管理服务。并且相对于其他安全框架，Shiro 要简单的多。</p><p><img src="https://atts.w3cschool.cn/attachments/image/wk/shiro/1.png" alt=""></p><h2 id="shiro-的架构"><a class="markdownIt-Anchor" href="#shiro-的架构"></a> Shiro 的架构</h2><blockquote><p>从外部来看应该具有非常简单易于使用的 API，且 API 契约明确；从内部来看的话，其应该有一个可扩展的架构，即非常容易插入用户自定义实现，</p></blockquote><p>交互流程如下：</p><p><img src="https://atts.w3cschool.cn/attachments/image/wk/shiro/2.png" alt=""></p><p>应用代码直接交互的对象是 Subject，也就是说 Shiro 的对外 API 核心就是 Subject。</p><p><strong>Subject</strong>：主体，代表了当前 “用户”，这个用户不一定是一个具体的人，与当前应用交互的任何东西都是 Subject，如网络爬虫，机器人等；即一个抽象概念；所有 Subject 都绑定到 SecurityManager，与 Subject 的所有交互都会委托给 SecurityManager；可以把 Subject 认为是一个门面；SecurityManager 才是实际的执行者；</p><p><strong>SecurityManager</strong>：安全管理器；即所有与安全有关的操作都会与 SecurityManager 交互；且它管理着所有 Subject；可以看出它是 Shiro 的核心，它负责与后边介绍的其他组件进行交互，如果学习过 SpringMVC，你可以把它看成 DispatcherServlet 前端控制器；</p><p><strong>Realm</strong>：域，Shiro 从 Realm 获取安全数据（如用户、角色、权限），就是说 SecurityManager 要验证用户身份，那么它需要从 Realm 获取相应的用户进行比较以确定用户身份是否合法；也需要从 Realm 得到用户相应的角色 / 权限进行验证用户是否能进行操作；可以把 Realm 看成 DataSource，即安全数据源。</p><p>★也就是说对于我们而言，最简单的一个 Shiro 应用：</p><ol><li>应用代码通过 Subject 来进行认证和授权，而 Subject 又委托给 SecurityManager；</li><li><strong>我们需要</strong>给 Shiro 的 SecurityManager <strong>注入 Realm</strong>，从而让 SecurityManager 能得到合法的用户及其权限进行判断。</li></ol><p>具体的架构设计与组件：</p><p><img src="https://atts.w3cschool.cn/attachments/image/wk/shiro/3.png" alt=""></p><ul><li><strong>Subject</strong>：主体，可以看到主体可以是任何可以与应用交互的 “用户”；</li><li><strong>SecurityManager</strong>：相当于 SpringMVC 中的 DispatcherServlet 或者 Struts2 中的 FilterDispatcher；是 Shiro 的心脏；<u>所有具体的交互都通过 SecurityManager 进行控制</u>；它管理着所有 Subject、且负责进行认证和授权、及会话、缓存的管理。</li><li><strong>Authenticator</strong>：认证器，负责主体认证的，这是一个扩展点，如果用户觉得 Shiro 默认的不好，可以自定义实现；其需要认证策略（Authentication Strategy），即什么情况下算用户认证通过了；</li><li><strong>Authorizer</strong>：授权器，或者访问控制器，用来决定主体是否有权限进行相应的操作；即控制着用户能访问应用中的哪些功能；</li><li><strong>Realm</strong>：可以有 1 个或多个 Realm，可以认为是安全实体数据源，即用于获取安全实体的；可以是 JDBC 实现，也可以是 LDAP 实现，或者内存实现等等；由用户提供；注意：Shiro 不知道你的用户 / 权限存储在哪及以何种格式存储；所以我们一般在应用中都需要实现自己的 Realm；</li></ul><h2 id="realm"><a class="markdownIt-Anchor" href="#realm"></a> Realm</h2><p>Realm：域，<code>Shiro</code> 从 <code>Realm</code>获取安全数据（如用户、角色、权限），就是说 <code>SecurityManager</code> 要验证用户身份，那么它需要从 <code>Realm</code> 获取相应的用户进行比较以确定用户身份是否合法；也需要从 <code>Realm</code> 得到用户相应的角色 / 权限进行验证用户是否能进行操作；可以把 <code>Realm</code> 看成 <code>DataSource</code>，即安全数据源。</p><h2 id="身份验证"><a class="markdownIt-Anchor" href="#身份验证"></a> 身份验证</h2><blockquote><p>身份验证和授权是Shiro两个主要的功能。</p></blockquote><p><strong>身份验证</strong>，即在应用中谁能证明他就是他本人。一般提供如他们的身份 ID 一些标识信息来表明他就是他本人，如提供身份证，用户名 / 密码来证明。</p><p>在 shiro 中，用户需要提供 <code>principals</code> （身份）和 <code>credentials</code>（证明）给 shiro，从而应用能验证用户身份：</p><p><strong>principals</strong>：身份，即主体的标识属性，可以是任何东西，如用户名、邮箱等，唯一即可。一个主体可以有多个 <code>principals</code>，但只有一个 <code>Primary principals</code>，一般是用户名 / 密码 / 手机号。</p><p><strong>credentials</strong>：证明 / 凭证，即只有主体知道的安全值，如密码 / 数字证书等。</p><h3 id="身份认证流程"><a class="markdownIt-Anchor" href="#身份认证流程"></a> 身份认证流程</h3><p><img src="https://atts.w3cschool.cn/attachments/image/wk/shiro/4.png" alt=""></p><p>流程如下：</p><ol><li>首先调用 <code>Subject.login(token)</code> 进行登录，其会自动委托给 <code>Security Manager</code>，调用之前必须通过 <code>SecurityUtils.setSecurityManager()</code> 设置；</li><li><code>SecurityManager</code> 负责真正的身份验证逻辑；它会委托给 <code>Authenticator</code> 进行身份验证；</li><li><code>Authenticator</code> 才是真正的身份验证者，<code>Shiro API</code> 中核心的身份认证入口点，此处可以自定义插入自己的实现；</li><li><code>Authenticator</code> 可能会委托给相应的 <code>AuthenticationStrategy</code> 进行多 <code>Realm</code> 身份验证，默认 <code>ModularRealmAuthenticator</code> 会调用 <code>AuthenticationStrategy</code> 进行多 <code>Realm</code> 身份验证；</li><li><code>Authenticator</code>会把相应的 <code>token</code> 传入 <code>Realm</code>，从 <code>Realm</code> 获取身份验证信息，如果没有返回 / 抛出异常表示身份验证成功了。此处可以配置多个 <code>Realm</code>，将按照相应的顺序及策略进行访问。</li></ol><h2 id="授权"><a class="markdownIt-Anchor" href="#授权"></a> 授权</h2><p>from：</p><ul><li><a href="https://www.w3cschool.cn/shiro/co4m1if2.html" target="_blank" rel="noopener">w3cschool Shiro教程文档</a></li></ul><h1 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h1><h2 id="官方十分钟教程"><a class="markdownIt-Anchor" href="#官方十分钟教程"></a> <a href="http://shiro.apache.org/10-minute-tutorial.html" target="_blank" rel="noopener">官方十分钟教程</a>-独立程序篇</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.2.3&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;slf4j-simple&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.6.1&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Quickstart.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Quickstart</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">transient</span> Logger log = LoggerFactory.getLogger(Quickstart.class);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// The easiest way to create a Shiro SecurityManager with configured</span></span><br><span class="line">        <span class="comment">// realms, users, roles and permissions is to use the simple INI config.</span></span><br><span class="line">        <span class="comment">// We'll do that by using a factory that can ingest a .ini file and</span></span><br><span class="line">        <span class="comment">// return a SecurityManager instance:</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 这是最简单的方法通过配置去创建一个Shiro SecurityManager。</span></span><br><span class="line"><span class="comment">         * realms， users， roles 和 permissions都是通过这个简单的ini文件配置的</span></span><br><span class="line"><span class="comment">         * 我们通过使用工厂方式读取配置文件并获取一个SecurityManager实例</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">// Use the shiro.ini file at the root of the classpath</span></span><br><span class="line">        <span class="comment">// 使用classpaht根目录的shiro.ini文件</span></span><br><span class="line">        <span class="comment">// (file: and url: prefixes load from files and urls respectively):</span></span><br><span class="line">        <span class="comment">// file: 和url: 这两个前缀分别从files和urls加载的</span></span><br><span class="line">        IniSecurityManagerFactory factory = <span class="keyword">new</span> IniSecurityManagerFactory(<span class="string">"classpath:shiro.ini"</span>);</span><br><span class="line">        SecurityManager securityManager = factory.getInstance();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// for this simple example quickstart, make the SecurityManager</span></span><br><span class="line">        <span class="comment">// accessible as a JVM singleton.  Most applications wouldn't do this</span></span><br><span class="line">        <span class="comment">// and instead rely on their container configuration or web.xml for</span></span><br><span class="line">        <span class="comment">// webapps.  That is outside the scope of this simple quickstart, so</span></span><br><span class="line">        <span class="comment">// we'll just do the bare minimum so you can continue to get a feel</span></span><br><span class="line">        <span class="comment">// for things.</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * quickstart这个例子中，使用的SecurityManager是JVM单例的。许多应用程序不这样做。</span></span><br><span class="line"><span class="comment">         * 比如要配置web.xml等。但是不在quickstart范围内。</span></span><br><span class="line"><span class="comment">         * 我们只是最小限度的让你明白你在做什么。。。。。</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        SecurityUtils.setSecurityManager(securityManager);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Now that a simple Shiro environment is set up, let's see what you can do:</span></span><br><span class="line">        <span class="comment">// 现在一个简单的Shiro环境就已经设置好了</span></span><br><span class="line">        <span class="comment">// get the currently executing user:</span></span><br><span class="line">        <span class="comment">// 获取当前执行的用户</span></span><br><span class="line">        Subject currentUser = SecurityUtils.getSubject();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Do some stuff with a Session (no need for a web or EJB container!!!)</span></span><br><span class="line">        <span class="comment">// 用session做一些事，不需要web或者EJB容器就能使用session</span></span><br><span class="line">        Session session = currentUser.getSession();</span><br><span class="line">        session.setAttribute(<span class="string">"someKey"</span>, <span class="string">"aValue"</span>);</span><br><span class="line">        String value = (String) session.getAttribute(<span class="string">"someKey"</span>);</span><br><span class="line">        <span class="keyword">if</span> (value.equals(<span class="string">"aValue"</span>)) &#123;</span><br><span class="line">            log.info(<span class="string">"Retrieved the correct value! ["</span> + value + <span class="string">"]"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// let's login the current user so we can check against roles and permissions:</span></span><br><span class="line">        <span class="comment">// 用当前用户登录，检查角色和权限</span></span><br><span class="line">        <span class="keyword">if</span> (!currentUser.isAuthenticated()) &#123;</span><br><span class="line">            <span class="comment">// 设置当前用户的信息</span></span><br><span class="line"><span class="comment">//            UsernamePasswordToken token = new UsernamePasswordToken("presidentskroob", "vespa");</span></span><br><span class="line">            UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(<span class="string">"presidentskroob"</span>, <span class="string">"12345"</span>);</span><br><span class="line">            <span class="comment">// rememberMe功能</span></span><br><span class="line">            token.setRememberMe(<span class="keyword">true</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 登录</span></span><br><span class="line">                currentUser.login(token);</span><br><span class="line">                <span class="comment">// 登录失败的一些异常捕获</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (UnknownAccountException uae) &#123;</span><br><span class="line">                log.info(<span class="string">"There is no user with username of "</span> + token.getPrincipal());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IncorrectCredentialsException ice) &#123;</span><br><span class="line">                log.info(<span class="string">"Password for account "</span> + token.getPrincipal() + <span class="string">" was incorrect!"</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (LockedAccountException lae) &#123;</span><br><span class="line">                log.info(<span class="string">"The account for username "</span> + token.getPrincipal() + <span class="string">" is locked.  "</span> +</span><br><span class="line">                        <span class="string">"Please contact your administrator to unlock it."</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// ... catch more exceptions here (maybe custom ones specific to your application?</span></span><br><span class="line">            <span class="keyword">catch</span> (AuthenticationException ae) &#123;</span><br><span class="line">                <span class="comment">//unexpected condition?  error?</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//say who they are:</span></span><br><span class="line">        <span class="comment">//print their identifying principal (in this case, a username):</span></span><br><span class="line">        <span class="comment">// 获取当事人。。 这个例子就是username</span></span><br><span class="line">        log.info(<span class="string">"User ["</span> + currentUser.getPrincipal() + <span class="string">"] logged in successfully."</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//test a role:</span></span><br><span class="line">        <span class="comment">// 测试角色</span></span><br><span class="line">        <span class="keyword">if</span> (currentUser.hasRole(<span class="string">"schwartz"</span>)) &#123;</span><br><span class="line">            log.info(<span class="string">"May the Schwartz be with you!"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            log.info(<span class="string">"Hello, mere mortal."</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//test a typed permission (not instance-level)</span></span><br><span class="line">        <span class="comment">// 测试权限，不是实例级别</span></span><br><span class="line">        <span class="keyword">if</span> (currentUser.isPermitted(<span class="string">"lightsaber:wield"</span>)) &#123;</span><br><span class="line">            log.info(<span class="string">"You may use a lightsaber ring.  Use it wisely."</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            log.info(<span class="string">"Sorry, lightsaber rings are for schwartz masters only."</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//a (very powerful) Instance Level permission:</span></span><br><span class="line">        <span class="comment">// 实例级别</span></span><br><span class="line">        <span class="keyword">if</span> (currentUser.isPermitted(<span class="string">"winnebago:drive:eagle5"</span>)) &#123;</span><br><span class="line">            log.info(<span class="string">"You are permitted to 'drive' the winnebago with license plate (id) 'eagle5'.  "</span> +</span><br><span class="line">                    <span class="string">"Here are the keys - have fun!"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            log.info(<span class="string">"Sorry, you aren't allowed to drive the 'eagle5' winnebago!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//all done - log out!</span></span><br><span class="line">        <span class="comment">// 退出</span></span><br><span class="line">        currentUser.logout();</span><br><span class="line"></span><br><span class="line">        System.exit(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置文件 <code>shiro.ini</code>编写</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -----------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Users and their (optional) assigned roles</span></span><br><span class="line"><span class="comment"># username = password, role1, role2, ..., roleN</span></span><br><span class="line"><span class="comment"># -----------------------------------------------------------------------------</span></span><br><span class="line"><span class="section">[users]</span></span><br><span class="line"><span class="attr">root</span> = secret, admin</span><br><span class="line"><span class="attr">guest</span> = guest, guest</span><br><span class="line"><span class="attr">presidentskroob</span> = <span class="number">12345</span>, president</span><br><span class="line"><span class="attr">darkhelmet</span> = ludicrousspeed, darklord, schwartz</span><br><span class="line"><span class="attr">aihe</span> = aihe, goodguy, client</span><br><span class="line"></span><br><span class="line"><span class="comment"># -----------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Roles with assigned permissions</span></span><br><span class="line"><span class="comment"># roleName = perm1, perm2, ..., permN</span></span><br><span class="line"><span class="comment"># -----------------------------------------------------------------------------</span></span><br><span class="line"><span class="section">[roles]</span></span><br><span class="line"><span class="attr">admin</span> = *</span><br><span class="line"><span class="attr">client</span> = look:*</span><br><span class="line"><span class="attr">goodguy</span> = winnebago:drive:eagle5</span><br></pre></td></tr></table></figure><h2 id="springboot集成shrio"><a class="markdownIt-Anchor" href="#springboot集成shrio"></a> springboot集成shrio</h2><ol><li>定义自定的Realm： 重写supports、doGetAuthorizationInfo(AuthenticationToken auth)-&gt;AuthenticatingRealm【默认使用此方法进行用户名正确与否验证】、doGetAuthorizationInfo(PrincipalCollection principals) -&gt;AuthorizingRealm 【检测用户权限的时候调用】 ： 返回值都为AuthorizationInfo</li><li>自定义Shrio过滤器集： <code>preHandle</code> -&gt; <code>isAccessAllowed</code> -&gt; <code>executeLogin</code> -&gt;</li><li>配置ShiroConfiguration： 创建DefaultWebSecurityManager、ShiroFilterFactoryBean这两个类型的Bean</li><li>（可选）：定义自己的AuthenticationToken， 如JWTToken</li><li>在相应的接口上控制权限：注解声明式：@RequiresAuthentication、@RequiresRoles(“admin”)、@RequiresPermissions(logical = Logical.AND, value = {“view”, “edit”})、或者代码编程式：<code>Subject subject = SecurityUtils.getSubject(); if (subject.isAuthenticated())</code></li></ol><p>认证执行过程如下：</p><p><code>executeLogin</code>函数中的<code>getSubject(request, response).login(token);</code>会调用<code>this.securityManager.login(this, token);</code>从而触发认证器管理器AuthenticatingSecurityManager找到认证器ModularRealmAuthenticator执行<code>this.authenticator.authenticate(token);</code>从而调度注册<code>this.doSingleRealmAuthentication((Realm)realms.iterator().next(), authenticationToken)</code>的Realm去完成认证工作：先判断当前realm是否支持解析当前出传入的AuthenticationToken，符合则调用<code>AuthenticationInfo info = realm.getAuthenticationInfo(token);</code>进行校验 -&gt;(AuthenticatingRealm：我们Realm继承的类) 从而调用了我们自定义重写的doGetAuthenticationInfo(AuthenticationToken auth)方法<code>info = this.doGetAuthenticationInfo(token);</code></p><p><img src="/2021/08/11/Shiro使用学习/C:%5CUsers%5Cmrli%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210818165636848.png" alt="image-20210818165636848"></p><h2 id="如何使用jwt做校验的流程"><a class="markdownIt-Anchor" href="#如何使用jwt做校验的流程"></a> 如何使用JWT做校验的流程：</h2><ul><li>在LoginController中如果用户登陆成功则返回JWT信息。</li><li>用户访问被Shrio过滤器注册的URL，则通过过滤器中执行的preHandler（设置请求头）-&gt;onHandler中会执行isAccessAllowed（规定如何通行）从而调用真正的认证判定函数<code>executeLogin</code>其中会调用Realm来进行login的判断（如果没有异常则表示通过）</li></ul><p>详细的代码实践教程： <a href="https://github.com/Smith-Cruise/Spring-Boot-Shiro" target="_blank" rel="noopener">https://github.com/Smith-Cruise/Spring-Boot-Shiro</a></p><ul><li><a href="https://github.com/echisan/springboot-jwt-demo" target="_blank" rel="noopener">https://github.com/echisan/springboot-jwt-demo</a> ——SpringSecurity demo</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Apache Shiro 是一个强大易用的 &lt;a href=&quot;https://www.w3cschool.cn/java/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Java&lt;/a&gt; 安全框架，提供了&lt;strong&gt;认证&lt;/strong&gt;、授权、&lt;st
      
    
    </summary>
    
    
      <category term="Java" scheme="https://nymrli.top/tags/Java/"/>
    
      <category term="应用框架学习" scheme="https://nymrli.top/tags/%E5%BA%94%E7%94%A8%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Go的配置和使用</title>
    <link href="https://nymrli.top/2021/07/27/Go%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
    <id>https://nymrli.top/2021/07/27/Go的配置和使用/</id>
    <published>2021-07-27T03:10:11.000Z</published>
    <updated>2021-07-27T03:44:52.895Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vscode中配置go"><a class="markdownIt-Anchor" href="#vscode中配置go"></a> Vscode中配置Go</h2><h3 id="1首先安装好go"><a class="markdownIt-Anchor" href="#1首先安装好go"></a> 1.首先<a href="https://gomirrors.org/" target="_blank" rel="noopener">安装好Go</a></h3><h3 id="2vscode中下载go环境插件"><a class="markdownIt-Anchor" href="#2vscode中下载go环境插件"></a> 2.vscode中下载Go环境插件</h3><p><img src="https://i.loli.net/2021/07/27/K8MeLk2fh7O5wAR.png" alt=""></p><h3 id="3安装go程序插件"><a class="markdownIt-Anchor" href="#3安装go程序插件"></a> 3.安装Go程序插件</h3><blockquote><p>Go语言开发的时候为我们提供诸如代码提示、代码自动补全等功能。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 打开输入框</span></span><br><span class="line">ctrl + shift + p </span><br><span class="line"><span class="meta">#</span><span class="bash"> 输入</span></span><br><span class="line">Go:Install/Update Tools</span><br></pre></td></tr></table></figure><p>▲由于网络问题会无法安装插件，网上老版的方法是在Go目录下从github手动下载好文件，但亲测无效，转而采用新方法如下。</p><h4 id="先设置goproxy"><a class="markdownIt-Anchor" href="#先设置goproxy"></a> 先设置<code>GOPROXY</code></h4><ul><li>打开终端执行以下命令：<code>go env -w GOPROXY=https://goproxy.cn,direct</code></li><li>环境配置中按照https://goproxy.io/zh/中写的配置Goproxy</li></ul><h4 id="重试下载插件"><a class="markdownIt-Anchor" href="#重试下载插件"></a> 重试下载插件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 打开输入框</span></span><br><span class="line">ctrl + shift + p </span><br><span class="line"><span class="meta">#</span><span class="bash"> 输入</span></span><br><span class="line">Go:Install/Update Tools</span><br></pre></td></tr></table></figure><h4 id="设置插件配置"><a class="markdownIt-Anchor" href="#设置插件配置"></a> 设置插件配置</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">"go.goroot": "",</span><br><span class="line">"go.gopath": "",</span><br><span class="line">"go.inferGopath": true,</span><br><span class="line">"go.autocompleteUnimportedPackages": true,</span><br><span class="line">"go.gocodePackageLookupMode": "go",</span><br><span class="line">"go.gotoSymbol.includeImports": true,</span><br><span class="line">"go.useCodeSnippetsOnFunctionSuggest": true,</span><br><span class="line">"go.useCodeSnippetsOnFunctionSuggestWithoutType": true,</span><br><span class="line">"go.docsTool": "gogetdoc",</span><br></pre></td></tr></table></figure><h3 id="配置go代码片段快捷键"><a class="markdownIt-Anchor" href="#配置go代码片段快捷键"></a> 配置Go代码片段快捷键</h3><p>还是按<code>Ctrl/Command+Shift+P</code>,按下图输入<code>&gt;snippets</code>，选择回车，然后在弹出的窗口点击选择<code>go</code>选项：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"println"</span>:&#123;</span><br><span class="line"><span class="attr">"prefix"</span>: <span class="string">"pln"</span>,</span><br><span class="line"><span class="attr">"body"</span>:<span class="string">"fmt.Println($0)"</span>,</span><br><span class="line"><span class="attr">"description"</span>: <span class="string">"println"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"printf"</span>:&#123;</span><br><span class="line"><span class="attr">"prefix"</span>: <span class="string">"plf"</span>,</span><br><span class="line"><span class="attr">"body"</span>: <span class="string">"fmt.Printf(\"$0\")"</span>,</span><br><span class="line"><span class="attr">"description"</span>: <span class="string">"printf"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"m"</span>:&#123;</span><br><span class="line"><span class="attr">"prefix"</span>: <span class="string">"main"</span>,</span><br><span class="line"><span class="attr">"body"</span>: [</span><br><span class="line"><span class="string">"package main"</span>,</span><br><span class="line"><span class="string">"import (\"fmt\")"</span>,</span><br><span class="line"><span class="string">"func main() &#123;"</span>,</span><br><span class="line"><span class="string">"$0"</span>,</span><br><span class="line"><span class="string">"&#125;"</span></span><br><span class="line">],</span><br><span class="line"><span class="attr">"description"</span>: <span class="string">"main"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="vscode配置终端"><a class="markdownIt-Anchor" href="#vscode配置终端"></a> VScode配置终端</h2><p>在settings.json中设置</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 终端设置为cmder</span><br><span class="line">"terminal.integrated.shell.windows": "cmd.exe",</span><br><span class="line">"terminal.integrated.env.windows": &#123;"CMDER_ROOT": "E:\\cmder"&#125;,</span><br><span class="line">"terminal.integrated.shellArgs.windows": ["/k", "E:\\cmder\\vendor\\init.bat"],</span><br></pre></td></tr></table></figure><p>from : <a href="https://www.jianshu.com/p/c3b162df3b57" target="_blank" rel="noopener">https://www.jianshu.com/p/c3b162df3b57</a></p><h2 id="go-module模块管理"><a class="markdownIt-Anchor" href="#go-module模块管理"></a> go module模块管理</h2><p><code>go module</code>是Go1.11版本之后官方推出的版本管理工具，并且从<code>Go1.13</code>版本开始，<code>go module</code>将是Go语言默认的依赖管理工具。到今天<code>Go1.14</code>版本推出之后<code>Go modules</code> 功能已经被正式推荐在生产环境下使用了。</p><p>一共两种情况</p><ul><li><p>在同一个模块下</p><ul><li>各个go文件根据go.mod下定义的模块名导入即可</li></ul></li><li><p>不在同一个模块下</p><ul><li>将无法找到的绝对引用路径在mod中进行require重定向</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">├── p1</span><br><span class="line">│   ├── <span class="keyword">go</span>.mod</span><br><span class="line">│   └── main.<span class="keyword">go</span></span><br><span class="line">└── p2</span><br><span class="line">    ├── <span class="keyword">go</span>.mod</span><br><span class="line">    └── p2.<span class="keyword">go</span></span><br><span class="line"><span class="comment">// p2/go.mod</span></span><br><span class="line">module liwenzhou.com/q1mi/p2</span><br><span class="line"><span class="keyword">go</span> <span class="number">1.14</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// p1/main.go按如下方式导入p2内容</span></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"liwenzhou.com/q1mi/p2"</span></span><br><span class="line">)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">p2.New()</span><br><span class="line">fmt.Println(<span class="string">"main"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>p1/main.go</code>中想要导入<code>p2.go</code>中定义的函数。需要在<code>moduledemo/go.mod</code>中进行<code>replace</code>设置才能在moduledemo模块中使用mypackage的内容</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// p1/go.mod</span></span><br><span class="line">module github.com/q1mi/p1<span class="comment">// 当前模块名</span></span><br><span class="line"><span class="keyword">go</span> <span class="number">1.14</span><span class="comment">// go版本</span></span><br><span class="line">require <span class="string">"liwenzhou.com/q1mi/p2"</span> v0<span class="number">.0</span><span class="number">.0</span><span class="comment">// 指定版本</span></span><br><span class="line">replace <span class="string">"liwenzhou.com/q1mi/p2"</span> =&gt; <span class="string">"../p2"</span><span class="comment">// 重定向模块路径，右边为文件的相对路径</span></span><br></pre></td></tr></table></figure></li></ul><p><a href="https://www.liwenzhou.com/posts/Go/import_local_package_in_go_module/" target="_blank" rel="noopener">https://www.liwenzhou.com/posts/Go/import_local_package_in_go_module/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;vscode中配置go&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#vscode中配置go&quot;&gt;&lt;/a&gt; Vscode中配置Go&lt;/h2&gt;
&lt;h3 id=&quot;1首先安装好go&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; h
      
    
    </summary>
    
    
      <category term="环境配置" scheme="https://nymrli.top/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
      <category term="Go" scheme="https://nymrli.top/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>天猫秒杀插件-Chrome插件编写</title>
    <link href="https://nymrli.top/2021/03/03/%E5%A4%A9%E7%8C%AB%E7%A7%92%E6%9D%80%E6%8F%92%E4%BB%B6-Chrome%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99/"/>
    <id>https://nymrli.top/2021/03/03/天猫秒杀插件-Chrome插件编写/</id>
    <published>2021-03-03T13:37:15.000Z</published>
    <updated>2021-03-03T14:24:31.618Z</updated>
    
    <content type="html"><![CDATA[<h1 id="天猫秒杀插件"><a class="markdownIt-Anchor" href="#天猫秒杀插件"></a> 天猫秒杀插件</h1><h2 id="tmall_kill"><a class="markdownIt-Anchor" href="#tmall_kill"></a> Tmall_Kill</h2><p>Code Template： <a href="https://link.zhihu.com/?target=https%3A//github.com/cehui0303/Tmall_Tickets" target="_blank" rel="noopener">https://link.zhihu.com/?target=https%3A//github.com/cehui0303/Tmall_Tickets</a></p><p>代码比较简单，实现原理为，打开浏览器后执行插件，JS脚本将会在指定时间点击“结算”按钮，然后发起订单，从而锁定库存抢货。</p><h3 id="mainjs"><a class="markdownIt-Anchor" href="#mainjs"></a> main.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定时器</span></span><br><span class="line"><span class="keyword">var</span> timer = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//检测状态</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkElementState</span>(<span class="params">path,callback</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> ele = <span class="built_in">document</span>.querySelector(path);</span><br><span class="line"><span class="keyword">if</span>(ele)&#123;</span><br><span class="line">callback &amp;&amp; callback();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'异步加载元素中....'</span> + path );</span><br><span class="line">setTimeout( <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;checkElementState(path,callback);&#125;,<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结算</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkOut</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'结算开始....'</span>);</span><br><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">'J_Go'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(btn)&#123;</span><br><span class="line">btn.click();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'结算按钮没找到'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// S1: 1. 点击结算按钮  =&gt;  2. checkElementState()检测结算按钮是否加载出来 --&gt; 3.checkOut()点击结算按钮</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkOutAsync</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">checkElementState(<span class="string">'#J_Go'</span>,checkOut);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// S2: 提交订单</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">submitOrder</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'提交订单开始....'</span>);</span><br><span class="line">checkElementState(<span class="string">'.go-btn'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">".go-btn"</span>);</span><br><span class="line"><span class="keyword">if</span>(btn)&#123;</span><br><span class="line">btn.click();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'提交订单按钮没找到'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//目标时间</span></span><br><span class="line"> <span class="keyword">var</span> dDate = <span class="keyword">new</span> <span class="built_in">Date</span>();  <span class="comment">//10点和20点开抢</span></span><br><span class="line"> <span class="keyword">if</span>( dDate.getHours() &lt; <span class="number">10</span> )&#123;</span><br><span class="line">  dDate.setHours(<span class="number">9</span>,<span class="number">59</span>,<span class="number">59.2</span>);</span><br><span class="line"> &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  dDate.setHours(<span class="number">19</span>,<span class="number">59</span>,<span class="number">59.2</span>);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//进入时间判断循环</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">enterTimeCheckLoop</span>(<span class="params">callback</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="keyword">var</span> diff = <span class="built_in">Date</span>.parse(dDate) - <span class="built_in">Date</span>.parse(date) ;</span><br><span class="line"><span class="built_in">console</span>.log(diff);</span><br><span class="line"><span class="keyword">if</span>(diff &lt; <span class="number">-90</span> )&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'时间过了！'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(diff &lt; <span class="number">50</span> ) &#123;</span><br><span class="line">callback &amp;&amp; callback();</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'时间到了！！！'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; enterTimeCheckLoop(callback);&#125;,<span class="number">400</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//主要函数</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'############################天猫枪杀脚本############################'</span>);</span><br><span class="line"><span class="keyword">var</span> href = <span class="built_in">window</span>.location.href;</span><br><span class="line"><span class="comment">//结算页面</span></span><br><span class="line"><span class="keyword">if</span>(href.indexOf(<span class="string">'cart.tmall.com'</span>) &gt; <span class="number">-1</span> )&#123;</span><br><span class="line"><span class="comment">//进入时间判断</span></span><br><span class="line">enterTimeCheckLoop( checkOutAsync );</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(href.indexOf(<span class="string">'buy.tmall.com'</span>) &gt; <span class="number">-1</span> )&#123;</span><br><span class="line"><span class="comment">//提交订单页面</span></span><br><span class="line">submitOrder();</span><br><span class="line">&#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>这种理论上是可行的，只不过肯定会有刷新上的问题，效率不及网络请求，但思路依旧是值得学习的，因此借此机会也是学下Chrome插件的编写。</p><h3 id="manifestjson"><a class="markdownIt-Anchor" href="#manifestjson"></a> manifest.json</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"manifest_version"</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"Tmall-tickets"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">"天猫超市枪杀脚本"</span>,</span><br><span class="line">  <span class="attr">"browser_action"</span>: &#123;</span><br><span class="line">    <span class="attr">"default_icon"</span>: <span class="string">"icon.png"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"content_scripts"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"matches"</span>: [<span class="string">"https://chaoshi.detail.tmall.com/*"</span>,<span class="string">"https://cart.tmall.com/*"</span>,<span class="string">"https://buy.tmall.com/*"</span>],</span><br><span class="line">      <span class="attr">"js"</span>: [<span class="string">"maotai.js"</span>],</span><br><span class="line">  <span class="attr">"run_at"</span>: <span class="string">"document_idle"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="chrome插件开发"><a class="markdownIt-Anchor" href="#chrome插件开发"></a> chrome插件开发</h2><blockquote><p>借鉴TODO-List：<a href="https://www.w3cschool.cn/kesyi/kesyi-m5uo24rx.html" target="_blank" rel="noopener">Chrome插件开发简要指南</a></p></blockquote><h3 id="文件结构"><a class="markdownIt-Anchor" href="#文件结构"></a> 文件结构</h3><p>在应用商店中下载下来的插件基本上都是以<code>.crx</code>为文件后缀，该文件其实就是一个压缩包（文件夹压缩而来），包括插件所需要的<strong>html</strong>、css、<strong>javascript</strong>、图片资源等等文件。</p><p>其中，</p><ul><li><code>manifest.json</code>是整个插件的功能及文件配置清单，非常重要。</li><li><code>static</code>目录是放置整个插件的静态资源文件的，包括css、js、图片等等资源</li><li><code>template</code>目录是放置整个插件的功能页面模板的。</li><li><code>_locales</code>目录是放置整个插件的国际化语言脚本的。</li></ul><p>一般来说，<strong>清单文件<code>manifest.json</code>文件是必须的</strong>，且必须放在插件开发目录的根目录上。其他的目录都可以自定义。</p><h3 id="弹出窗口和后台页面"><a class="markdownIt-Anchor" href="#弹出窗口和后台页面"></a> 弹出窗口和后台页面</h3><p>弹出窗口一般用于插件和用户的交互，而后台页面一般用于插件本身做一些额外的事情。比如有时候，插件需要联网进行数据同步等操作，这种操作用户是无感知的，所有就要求插件需要有一个后台页面来运行这部分的逻辑。</p><p>其实后台页面还可以分为持久运行的后端页面和事件页面，这里对这两者就不多做说明了，更多的内容可以参阅具体的文档。</p><h3 id="弹出式插件教程todo-list"><a class="markdownIt-Anchor" href="#弹出式插件教程todo-list"></a> 弹出式插件教程TODO-LIST</h3><h4 id="manifestjson-2"><a class="markdownIt-Anchor" href="#manifestjson-2"></a> manifest.json</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"todo-plugin"</span>,</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"0.9.0"</span>,</span><br><span class="line">    <span class="attr">"manifest_version"</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">"description"</span>: <span class="string">"chrome plugin demo"</span>,</span><br><span class="line">    <span class="attr">"browser_action"</span>: &#123;</span><br><span class="line">        <span class="attr">"default_icon"</span>: <span class="string">"icon.png"</span>,</span><br><span class="line">        <span class="attr">"default_title"</span>: <span class="string">"Todo List"</span>,</span><br><span class="line">        <span class="attr">"default_popup"</span>: <span class="string">"popup.html"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="popuphtml"><a class="markdownIt-Anchor" href="#popuphtml"></a> popup.html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    body &#123;</span></span><br><span class="line"><span class="undefined">        width: 150px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-id">#add-new-item</span> &#123;</span></span><br><span class="line"><span class="undefined">        cursor: pointer;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#CCC</span>;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.hide</span> &#123;</span></span><br><span class="line"><span class="undefined">        display: none;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.show</span> &#123;</span></span><br><span class="line"><span class="undefined">        display: block;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.item</span> &#123;</span></span><br><span class="line"><span class="undefined">        cursor: pointer;</span></span><br><span class="line"><span class="undefined">        margin: 5px 0;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.item</span> <span class="selector-tag">input</span> &#123;</span></span><br><span class="line"><span class="undefined">        display: inline-block;</span></span><br><span class="line"><span class="undefined">        width: 12px;</span></span><br><span class="line"><span class="undefined">        height: 12px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    input &#123;</span></span><br><span class="line"><span class="undefined">        width: 120px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"add-new-item"</span>&gt;</span>添加新项<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"add-new-item-input"</span> <span class="attr">class</span>=<span class="string">"hide"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"new-item-title"</span> <span class="attr">placeholder</span>=<span class="string">"添加新任务"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"item-list"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"main.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="mainjs-2"><a class="markdownIt-Anchor" href="#mainjs-2"></a> main.js</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $ = <span class="function"><span class="keyword">function</span> (<span class="params">id</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">document</span>.getElementById(id);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">var</span> Tasks = &#123;</span><br><span class="line">        show: <span class="function"><span class="keyword">function</span> (<span class="params">obj</span>) </span>&#123;</span><br><span class="line">            obj.className = <span class="string">''</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        hide: <span class="function"><span class="keyword">function</span> (<span class="params">obj</span>) </span>&#123;</span><br><span class="line">            obj.className = <span class="string">'hide'</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        $addNewItem: $(<span class="string">'add-new-item'</span>),</span><br><span class="line">        $addNewItemInput: $(<span class="string">'add-new-item-input'</span>),</span><br><span class="line">        $itemList: $(<span class="string">'item-list'</span>),</span><br><span class="line">        $newItemTitle: $(<span class="string">'new-item-title'</span>),</span><br><span class="line">        init: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">//打开添加文本框</span></span><br><span class="line">            Tasks.$addNewItem.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                Tasks.show(Tasks.$addNewItemInput).hide(Tasks.$addNewItem);</span><br><span class="line">                Tasks.$newItemTitle.focus();</span><br><span class="line">            &#125;, <span class="literal">true</span>);</span><br><span class="line">            <span class="comment">//回车添加任务</span></span><br><span class="line">            Tasks.$newItemTitle.addEventListener(<span class="string">'keyup'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">ev</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> ev = ev || <span class="built_in">window</span>.event;</span><br><span class="line">                <span class="keyword">if</span> (ev.keyCode == <span class="number">13</span>) &#123;</span><br><span class="line">                    <span class="comment">//<span class="doctag">TODO:</span>写入本地数据</span></span><br><span class="line">                    <span class="keyword">var</span> task = Tasks.$newItemTitle.value;</span><br><span class="line">                    Tasks.AppendHtml(task);</span><br><span class="line">                    Tasks.$newItemTitle.value = <span class="string">''</span>;</span><br><span class="line">                    Tasks.hide(Tasks.$addNewItemInput).show(Tasks.$addNewItem);</span><br><span class="line">                &#125;</span><br><span class="line">                ev.preventDefault();</span><br><span class="line">            &#125;, <span class="literal">true</span>);</span><br><span class="line">            <span class="comment">//取消添加</span></span><br><span class="line">            Tasks.$newItemTitle.addEventListener(<span class="string">'blur'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                Tasks.$newItemTitle.value = <span class="string">''</span>;</span><br><span class="line">                Tasks.hide(Tasks.$addNewItemInput).show(Tasks.$addNewItem);</span><br><span class="line">            &#125;, <span class="literal">true</span>);</span><br><span class="line">            <span class="comment">//TODO 初始化数据，加载本地数据，生成html</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//增加</span></span><br><span class="line">        Add: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">//TODO</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//修改</span></span><br><span class="line">        Edit: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">//TODO</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//删除</span></span><br><span class="line">        Del: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">//TODO</span></span><br><span class="line">        &#125;,</span><br><span class="line">        AppendHtml: <span class="function"><span class="keyword">function</span> (<span class="params">title</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> oDiv = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span><br><span class="line">            oDiv.className = <span class="string">'item item-todo'</span>;</span><br><span class="line">            <span class="keyword">var</span> oInput = <span class="built_in">document</span>.createElement(<span class="string">'input'</span>);</span><br><span class="line">            oInput.type = <span class="string">'checkbox'</span>;</span><br><span class="line">            <span class="keyword">var</span> oTitle = <span class="built_in">document</span>.createElement(<span class="string">'span'</span>);</span><br><span class="line">            oTitle.innerHTML = title;</span><br><span class="line">            oDiv.appendChild(oInput);</span><br><span class="line">            oDiv.appendChild(oTitle);</span><br><span class="line">            Tasks.$itemList.appendChild(oDiv);</span><br><span class="line">            oDiv.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">//TODO</span></span><br><span class="line">            &#125;, <span class="literal">true</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        RemoveHtml: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">//TODO</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Tasks.init();</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h2 id="改进tmall_kill"><a class="markdownIt-Anchor" href="#改进tmall_kill"></a> 改进Tmall_Kill</h2><p>需要修改的功能为：</p><ol><li>插件中设定时间=&gt;时间框选择时间</li><li>匹配网站自动运行-&gt;弹出页面手动点击运行</li><li>选中购物车商品后结算-&gt;到时间后自动勾选商品结算</li></ol><p>1.弹出页+时间框 popup.html</p><p><a href="https://blog.csdn.net/z_xiaocun/article/details/46934223" target="_blank" rel="noopener">HTML5日期输入框(date)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"> * @Author: Mrli</span></span><br><span class="line"><span class="comment"> * @Date: 2021-03-02 17:19:02</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2021-03-03 22:18:02</span></span><br><span class="line"><span class="comment"> * @Description: </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    body &#123;</span></span><br><span class="line"><span class="undefined">        width: 250px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-id">#add-new-item</span> &#123;</span></span><br><span class="line"><span class="undefined">        cursor: pointer;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#CCC</span>;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.hide</span> &#123;</span></span><br><span class="line"><span class="undefined">        display: none;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.show</span> &#123;</span></span><br><span class="line"><span class="undefined">        display: block;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.item</span> &#123;</span></span><br><span class="line"><span class="undefined">        cursor: pointer;</span></span><br><span class="line"><span class="undefined">        margin: 5px 0;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.item</span> <span class="selector-tag">input</span> &#123;</span></span><br><span class="line"><span class="undefined">        display: inline-block;</span></span><br><span class="line"><span class="undefined">        width: 12px;</span></span><br><span class="line"><span class="undefined">        height: 12px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    input &#123;</span></span><br><span class="line"><span class="undefined">        width: 200px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"add-new-item"</span>&gt;</span>add new item<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"add-new-item-input"</span> <span class="attr">class</span>=<span class="string">"hide"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"new-item-title"</span> <span class="attr">placeholder</span>=<span class="string">"add new"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"meeting"</span>&gt;</span>killTime:<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"meeting"</span> <span class="attr">type</span>=<span class="string">"datetime-local"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"item-list"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"main.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配套的manifest.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"todo-plugin"</span>,</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"0.9.0"</span>,</span><br><span class="line">    <span class="attr">"manifest_version"</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">"description"</span>: <span class="string">"chrome plugin demo"</span>,</span><br><span class="line">    <span class="attr">"browser_action"</span>: &#123;</span><br><span class="line">        <span class="attr">"default_icon"</span>: <span class="string">"icon.png"</span>,</span><br><span class="line">        <span class="attr">"default_title"</span>: <span class="string">"Todo List"</span>,</span><br><span class="line">        <span class="attr">"default_popup"</span>: <span class="string">"popup.html"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>main.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $ = <span class="function"><span class="keyword">function</span> (<span class="params">id</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">document</span>.getElementById(id);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">var</span> Tasks = &#123;</span><br><span class="line">        show: <span class="function"><span class="keyword">function</span> (<span class="params">obj</span>) </span>&#123;</span><br><span class="line">            obj.className = <span class="string">''</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        hide: <span class="function"><span class="keyword">function</span> (<span class="params">obj</span>) </span>&#123;</span><br><span class="line">            obj.className = <span class="string">'hide'</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        $addNewItem: $(<span class="string">'add-new-item'</span>),</span><br><span class="line">        $addNewItemInput: $(<span class="string">'add-new-item-input'</span>),</span><br><span class="line">        $itemList: $(<span class="string">'item-list'</span>),</span><br><span class="line">        $newItemTitle: $(<span class="string">'new-item-title'</span>),</span><br><span class="line">        init: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">//打开添加文本框</span></span><br><span class="line">            Tasks.$addNewItem.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                Tasks.show(Tasks.$addNewItemInput).hide(Tasks.$addNewItem);</span><br><span class="line">                Tasks.$newItemTitle.focus();</span><br><span class="line">            &#125;, <span class="literal">true</span>);</span><br><span class="line">            <span class="comment">//回车添加任务</span></span><br><span class="line">            Tasks.$newItemTitle.addEventListener(<span class="string">'keyup'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">ev</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> ev = ev || <span class="built_in">window</span>.event;</span><br><span class="line">                <span class="keyword">if</span> (ev.keyCode == <span class="number">13</span>) &#123;</span><br><span class="line">                    <span class="comment">//<span class="doctag">TODO:</span>写入本地数据</span></span><br><span class="line">                    <span class="keyword">var</span> task = Tasks.$newItemTitle.value;</span><br><span class="line">                    Tasks.AppendHtml(task);</span><br><span class="line">                    Tasks.$newItemTitle.value = <span class="string">''</span>;</span><br><span class="line">                    Tasks.hide(Tasks.$addNewItemInput).show(Tasks.$addNewItem);</span><br><span class="line">                &#125;</span><br><span class="line">                ev.preventDefault();</span><br><span class="line">            &#125;, <span class="literal">true</span>);</span><br><span class="line">            <span class="comment">//取消添加</span></span><br><span class="line">            Tasks.$newItemTitle.addEventListener(<span class="string">'blur'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                Tasks.$newItemTitle.value = <span class="string">''</span>;</span><br><span class="line">                Tasks.hide(Tasks.$addNewItemInput).show(Tasks.$addNewItem);</span><br><span class="line">            &#125;, <span class="literal">true</span>);</span><br><span class="line">            <span class="comment">//TODO 初始化数据，加载本地数据，生成html</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//增加</span></span><br><span class="line">        Add: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">//TODO</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//修改</span></span><br><span class="line">        Edit: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">//TODO</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//删除</span></span><br><span class="line">        Del: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">//TODO</span></span><br><span class="line">        &#125;,</span><br><span class="line">        AppendHtml: <span class="function"><span class="keyword">function</span> (<span class="params">title</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> oDiv = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span><br><span class="line">            oDiv.className = <span class="string">'item item-todo'</span>;</span><br><span class="line">            <span class="keyword">var</span> oInput = <span class="built_in">document</span>.createElement(<span class="string">'input'</span>);</span><br><span class="line">            oInput.type = <span class="string">'checkbox'</span>;</span><br><span class="line">            <span class="keyword">var</span> oTitle = <span class="built_in">document</span>.createElement(<span class="string">'span'</span>);</span><br><span class="line">            oTitle.innerHTML = title;</span><br><span class="line">            oDiv.appendChild(oInput);</span><br><span class="line">            oDiv.appendChild(oTitle);</span><br><span class="line">            Tasks.$itemList.appendChild(oDiv);</span><br><span class="line">            oDiv.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">//TODO</span></span><br><span class="line">            &#125;, <span class="literal">true</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        RemoveHtml: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">//TODO</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Tasks.init();</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;天猫秒杀插件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#天猫秒杀插件&quot;&gt;&lt;/a&gt; 天猫秒杀插件&lt;/h1&gt;
&lt;h2 id=&quot;tmall_kill&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#tmall_k
      
    
    </summary>
    
    
      <category term="脚本" scheme="https://nymrli.top/tags/%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>认真学次DP——动态规划</title>
    <link href="https://nymrli.top/2021/01/24/%E8%AE%A4%E7%9C%9F%E5%AD%A6%E6%AC%A1DP%E2%80%94%E2%80%94%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    <id>https://nymrli.top/2021/01/24/认真学次DP——动态规划/</id>
    <published>2021-01-24T05:27:08.000Z</published>
    <updated>2021-01-24T14:26:49.285Z</updated>
    
    <content type="html"><![CDATA[<h1 id="动态规划dp"><a class="markdownIt-Anchor" href="#动态规划dp"></a> 动态规划DP</h1><blockquote><p>一般算法面试题解决最优化问题，有两种解决途径：暴力枚举、或者DP，由于其灵活和高效，无数程序员为它着迷，大厂面试也是必考。</p><p>但是，动态规划形式上非常多变，本质上没有套路，问题不同，动态规划的迭代方程就不同。而有些问题，对于计算机科学家，都难以找到迭代方程。因此，对于平平常常的我们，刷算法题时想不出动态规划的解法，也大可不必气馁。</p></blockquote><h2 id="dp组成三个条件"><a class="markdownIt-Anchor" href="#dp组成三个条件"></a> DP组成——三个条件</h2><p>某个问题是否能应用动态规划，通常需要满足 3 个条件：</p><ol><li>具有最优子结构</li><li>具有无后续性</li><li>具有重复子问题</li></ol><p><strong>最优子结构性质</strong>：只需求得子问题的最优解后，原问题的最优解最能推导出来，这表明此问题具备最优子结构性质！</p><p>**后续状态无关性：**在具体的问题中就是，子数组的最大和，与后面的红块无关</p><p>**重复子问题：**使用暴力枚举会对很多子问题重复计算，也就是说这个问题具备重复子问题特性。而DP数组的存在可以很好的处理重复子问题计算。</p><h2 id="dp组成三个要素"><a class="markdownIt-Anchor" href="#dp组成三个要素"></a> DP组成——三个要素</h2><ul><li>最优子结构</li><li>边界</li><li>状态转移方程式</li></ul><p>**最优子结构：**只需求得子问题的最优解后，原问题的最优解最能推导出来，这表明此问题具备最优子结构性质！</p><p><strong>边界</strong>：确定起始和终止边界</p><p>**状态转移方程式：**在某个状态下找到下一步的最佳计算结果</p><p>▲.其中最重要的就是找到确定 <strong>状态表示f(v)</strong> 和 <strong>状态转移计算</strong>。目的是：讲究在一个有限集合的中找一个最值</p><p>状态表示f(v)：——化零为整</p><blockquote><ul><li>集合</li><li>属性： 最大、最小、count数量</li></ul></blockquote><p>状态转移计算：——化整为零</p><blockquote><p>划分依据：寻找最后一个不同点。 讲究不重复、不遗漏</p></blockquote><h2 id="问题剖析"><a class="markdownIt-Anchor" href="#问题剖析"></a> 问题剖析</h2><p>最常见的来讲解DP算法的是背包问题， 在此我们列出多个比较经典的题目： 国王和金矿、最大子数组的和、背包问题</p><h3 id="国王和金矿"><a class="markdownIt-Anchor" href="#国王和金矿"></a> 国王和金矿</h3><p><img src="/2021/01/24/认真学次DP——动态规划/DP%E5%86%99%E6%B3%95.png" alt="DP写法"></p><h3 id="最大子数组的和"><a class="markdownIt-Anchor" href="#最大子数组的和"></a> 最大子数组的和：</h3><p><img src="https://pic.leetcode-cn.com/8fec91e89a69d8695be2974de14b74905fcd60393921492bbe0338b0a628fd9a-Picture1.png" alt="Picture1.png"></p><p>题解：<a href="https://leetcode-cn.com/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof/solution/mian-shi-ti-42-lian-xu-zi-shu-zu-de-zui-da-he-do-2/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof/solution/mian-shi-ti-42-lian-xu-zi-shu-zu-de-zui-da-he-do-2/</a> ——为何在nums数组上直接做修改</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sz = nums.length;</span><br><span class="line">        <span class="keyword">if</span> ( sz == <span class="number">0</span> ) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> maxSum = nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; sz; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> pre = nums[i-<span class="number">1</span>] &gt; <span class="number">0</span> ? nums[i-<span class="number">1</span>] : <span class="number">0</span>;</span><br><span class="line">            nums[i] = nums[i] + pre;</span><br><span class="line">            <span class="keyword">if</span> (maxSum &lt; nums[i]) &#123;</span><br><span class="line">                maxSum = nums[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">return</span> maxSum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="最长公共子序列问题"><a class="markdownIt-Anchor" href="#最长公共子序列问题"></a> 最长公共子序列问题</h3><blockquote><p>题目的要求是，从两个字符串中找到最长的公共子序列，出现先后顺序要求一致， 但是不要求连续。</p><p>所以下面解法定义的dp数组为，状态到text1的i字符、text2的j字符时最长的公共子序列的长度，如果当前的两个字符c1 == c2则需要在此基础上+1， 否则记为之前的两个的最大。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">longestCommonSubsequence</span><span class="params">(String text1, String text2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> len1 = text1.length();</span><br><span class="line">        <span class="keyword">int</span> len2 = text2.length();</span><br><span class="line">        <span class="keyword">int</span> [][]dp = <span class="keyword">new</span> <span class="keyword">int</span>[len1+<span class="number">1</span>][len2+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len1; i++) &#123;</span><br><span class="line">            <span class="keyword">char</span> c1 = text1.charAt(i);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; len2; j++) &#123;</span><br><span class="line">                <span class="keyword">char</span> c2 = text2.charAt(j);</span><br><span class="line">                <span class="keyword">if</span> ( c1 == c2 )&#123;</span><br><span class="line">                    dp[i + <span class="number">1</span>][j + <span class="number">1</span>] = dp[i][j] + <span class="number">1</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    dp[i + <span class="number">1</span>][j + <span class="number">1</span>] = Math.max(dp[i][j + <span class="number">1</span>], dp[i + <span class="number">1</span>][j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[len1][len2];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="01背包问题"><a class="markdownIt-Anchor" href="#01背包问题"></a> 01背包问题</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e4</span>;</span><br><span class="line"><span class="comment">/* 01背包问题 */</span></span><br><span class="line">pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; wv[maxn];</span><br><span class="line"><span class="keyword">int</span> N; <span class="comment">// 物品数量</span></span><br><span class="line"><span class="keyword">int</span> W; <span class="comment">// 背包重量</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[maxn][maxn]; <span class="comment">//2.多了个记忆数组(称为DP数组)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 逆序推导</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span> ; i &lt;N ; i++) <span class="built_in">cin</span> &gt;&gt; wv[i].first &gt;&gt; wv[i].second;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; W;</span><br><span class="line">    <span class="keyword">for</span>( <span class="keyword">int</span> i= N<span class="number">-1</span> ; i &gt;= <span class="number">0</span> ; i--)&#123;</span><br><span class="line">        <span class="keyword">for</span>( <span class="keyword">int</span> j=<span class="number">0</span>;j&lt;= W ; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>( j &lt; wv[i].first ) dp[i][j] = dp[i+<span class="number">1</span>][j];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            dp[i][j] = max( dp[i+<span class="number">1</span>][j] , dp[i+<span class="number">1</span>][j - wv[i].first] + wv[i].second);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; dp[<span class="number">0</span>][W] &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 顺序推导</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span> ; i &lt;N ; i++) <span class="built_in">cin</span> &gt;&gt; wv[i].first &gt;&gt; wv[i].second;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; W;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>( <span class="keyword">int</span> i= <span class="number">0</span> ; i &lt; N ; i++)&#123;<span class="comment">// i为遍历第i个物品</span></span><br><span class="line">        <span class="keyword">for</span>( <span class="keyword">int</span> j=<span class="number">0</span>;j&lt;= W ; j++)&#123;<span class="comment">// j为背包可用重量</span></span><br><span class="line">            <span class="keyword">if</span>( j &lt; wv[i].first ) dp[i+<span class="number">1</span>][j] = dp[i][j];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            dp[i+<span class="number">1</span>][j] = max( dp[i][j] , dp[i][j - wv[i].first] + wv[i].second);</span><br><span class="line">        <span class="comment">// 推导式也变了,下一行的依据上一行写成dp[i+1][j] = ...</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; dp[N][W] &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">// 输出的结果变了</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    solve();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>安利一个视频：<a href="https://www.bilibili.com/video/BV1X741127ZM?from=search%E2%80%94%E2%80%94%E9%87%91%E7%89%8C%E7%88%B7%E7%9A%84%E4%BC%A0%E6%8E%88" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1X741127ZM?from=search——金牌爷的传授</a></p><p><img src="/2021/01/24/认真学次DP——动态规划/DP.jpg" alt="DP"></p><h2 id="反思总结"><a class="markdownIt-Anchor" href="#反思总结"></a> 反思总结</h2><p>最大子数组和，上面给出了动态规划的解法，还可以使用递归的解法，时间复杂度也是 O(n)O(n)，但是空间复杂度却为 O(n)O(n)，所以最大子数组的最好解法还是动态规划。</p><p>动态规划还常常使用表格，缓存之前各个状态的解，通过空间换取时间，这个也是动态规划常用的技巧之一，但这却不是动态规划最难构思出来的地方，最难的还是设计每个状态步的决策策略，这才是动规的精髓。</p><p>另外，不是所有的问题都有动规的解法，比如目前全世界最难求解的旅行商问题，更复杂的多线路配送问题，都属于NP问题，很难找到动态规划的解法，但是一旦找到动规解法，它会将 O(n!)O(n!) 问题降为 O(n多项式)O(n多项式) 问题，收益也是巨大的！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;动态规划dp&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#动态规划dp&quot;&gt;&lt;/a&gt; 动态规划DP&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;一般算法面试题解决最优化问题，有两种解决途径：暴力枚举、或者DP，由于其灵活和高效，无数程序员
      
    
    </summary>
    
    
      <category term="算法" scheme="https://nymrli.top/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>UML简单记录</title>
    <link href="https://nymrli.top/2020/12/11/UML%E7%AE%80%E5%8D%95%E8%AE%B0%E5%BD%95/"/>
    <id>https://nymrli.top/2020/12/11/UML简单记录/</id>
    <published>2020-12-11T05:59:15.000Z</published>
    <updated>2020-12-22T04:22:17.214Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>要学习设计模式，首先绕不开的就是UML图，同时对于一名开发而言，开发文档中也必然会出现UML的身影。之前在实习的时候，其实已经学过不少了，但不用后又很容易忘记，(在阿里实习的时候就以为记得很熟了，结果现在又忘了)——因此这也是一个防忘系列</p></blockquote><h2 id="uml"><a class="markdownIt-Anchor" href="#uml"></a> UML</h2><blockquote><p>UML(Unified Modeling Language)是一种标准的图形化<strong>建模语言</strong>，是一种为<strong>面对对象</strong>系统的产品进行说明、可视化、编制文档的标准语言，它是面向对象分析与设计的一种<strong>标准表示</strong>。</p></blockquote><p>（1）UML是一种语言。<br>从上面的定义可以看出，就其本质，UML是一种语言，既然是语言，那就是用来交流的，UML用来在哪些人员之间进行交流呢？很明显，UML主要是在软件开发的整个生命周期所涉及到的人员之间进行交流的语言。<br>（2）UML是一种建模语言。<br>那么什么是建模呢？<br>模型是用某种工具对事物的一种表达方式，通常会表达出事物最重要的方面而简化或忽略其他方面。比如常见的工程模型、飞机模型、车辆模型等。<br>模型在软件上主要的作用是，可以在一定的抽象层次上，使人们通过对模型的分析和研究，来制定出最终的软件结构和内部的相互关系。<br>（3）UML是一种图形化建模语言。<br>为什么要图形化呢？<br>很简单，图形化的东西直观、简单、准确，更有利于软件开发的整个生命周期所涉及到的人员之间进行交流。因为对于一个大型的软件项目，参与的人员很多，根本不可能相互用语言来交流，图形化是一个很好的方案。<br>（4）UML是一种标准的图形化建模语言。<br>只有标准的东西，才会有更多的人学习和使用它，大家对同一表达的理解才会一样，才能真正达到相互交流的目的。<br>否则要是没有标准，大家各自为政，可能会出现同一个图形，大家有不同的认识和理解，那就没法交流了。</p><h3 id="基本构件"><a class="markdownIt-Anchor" href="#基本构件"></a> 基本构件</h3><p>建模的核心是模型，模型是现实的简化、真实系统的抽象。因此好的建模语言就需要提供全样的模块组成，如下就是UML的基本构件。UML主要由三部分概念组成：具体的事物、事物间的关系、事物与关系组合而成的图。</p><p>我们使用UML的目的就是确认好具体的事物以及事物间的关系，并以此来选择合适的图来表达，三者是紧紧联系的。在UML2.0中，我们使用最频繁的就是类图、时序图了。</p><p><img src="/2020/12/11/UML简单记录/%E5%9F%BA%E6%9C%AC%E6%9E%84%E5%BB%BA.jpg" alt="基本构建"></p><h4 id="事物"><a class="markdownIt-Anchor" href="#事物"></a> 事物</h4><p>事物是抽象化的最终结果，分为结构事物、行为事物、分组事物、注释事物。其中我们比较频繁使用的是结构事物中的类和接口、行为事物中的交互和状态机</p><h4 id="关系"><a class="markdownIt-Anchor" href="#关系"></a> 关系</h4><p>UML将事物之间的关系归纳为6种：</p><p><img src="/2020/12/11/UML简单记录/gx.png" alt="gx"></p><h5 id="实现-继承"><a class="markdownIt-Anchor" href="#实现-继承"></a> 实现、继承</h5><p>实现是实现接口，继承是继承父类。</p><p>▲两者的图形都是子指向父，并且箭头全是空心三角箭头。</p><h5 id="关联"><a class="markdownIt-Anchor" href="#关联"></a> 关联</h5><p>类之间存在关联关系就可以用普通关联来表达</p><p><img src="/2020/12/11/UML简单记录/%E5%85%B3%E8%81%94.jpg" alt="关联"></p><h5 id="聚合"><a class="markdownIt-Anchor" href="#聚合"></a> 聚合</h5><blockquote><p>聚合在《研读设计模式》中认为是关联的子集，可分为普通聚合、共享聚合、复合聚合</p></blockquote><p>聚合关系表示类之间整体与部分的关系，成员对象是整体对象的一部分，但是成员对象可以脱离整体对象独立存在。e.g.公交车司机和工作服，两者没有共同的声明周期。</p><h5 id="组合"><a class="markdownIt-Anchor" href="#组合"></a> 组合</h5><p>组合关系表示类之间整体与部分的关系，整体和部分有一致的生存期，一旦整体对象不存在，那么部分对象也将不存在，整体和部分是同生共死的关系。e.g.人由头部和身体组成，两者不可分割。</p><h5 id="总结以上关系"><a class="markdownIt-Anchor" href="#总结以上关系"></a> 总结以上关系</h5><p>在这6种类关系中，组合、聚合和关联的代码结构一样，可以从关系的强弱来理解，各类关系从强到弱依次是：继承&gt;实现&gt;组合&gt;聚合&gt;关联&gt;依赖。下面我们用一张完整的类图，熔前面描述的所有类与类之间的关系串联起来。</p><p><img src="/2020/12/11/UML简单记录/%E5%85%B3%E7%B3%BB%E6%95%B4%E7%90%86.jpg" alt="关系整理"></p><h3 id="图"><a class="markdownIt-Anchor" href="#图"></a> 图</h3><p>UML2.0一共有13中图（UML1.5定义了9种，2.0增加了4种），最常用的就是类图、对象图、时序图、状态图</p><p><img src="/2020/12/11/UML简单记录/%E5%9B%BE.jpg" alt="图"></p><h2 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h2><h3 id="经典关系图"><a class="markdownIt-Anchor" href="#经典关系图"></a> 经典关系图</h3><img src="/2020/12/11/UML简单记录/关系图.jpg" alt="关系图"><h3 id="记忆技巧"><a class="markdownIt-Anchor" href="#记忆技巧"></a> 记忆技巧</h3><p><img src="/2020/12/11/UML简单记录/%E8%AE%B0%E5%BF%86.jpg" alt="记忆"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;要学习设计模式，首先绕不开的就是UML图，同时对于一名开发而言，开发文档中也必然会出现UML的身影。之前在实习的时候，其实已经学过不少了，但不用后又很容易忘记，(在阿里实习的时候就以为记得很熟了，结果现在又忘了)——因此这也是一个防忘系列&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="计算机基础知识" scheme="https://nymrli.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
      <category term="防忘系列" scheme="https://nymrli.top/tags/%E9%98%B2%E5%BF%98%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>浙大2020春夏-人工智能习题2——垃圾分类</title>
    <link href="https://nymrli.top/2020/12/11/%E6%B5%99%E5%A4%A72020%E6%98%A5%E5%A4%8F-%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B9%A0%E9%A2%982%E2%80%94%E2%80%94%E5%9E%83%E5%9C%BE%E5%88%86%E7%B1%BB/"/>
    <id>https://nymrli.top/2020/12/11/浙大2020春夏-人工智能习题2——垃圾分类/</id>
    <published>2020-12-11T02:25:45.000Z</published>
    <updated>2020-12-19T12:57:33.295Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>homework for ZJU: <a href="https://mo.zju.edu.cn/homework/zju_ai_2020_ss" target="_blank" rel="noopener">https://mo.zju.edu.cn/homework/zju_ai_2020_ss</a></p></blockquote><h1 id="1-实验介绍"><a class="markdownIt-Anchor" href="#1-实验介绍"></a> 1. 实验介绍</h1><h2 id="11-实验背景"><a class="markdownIt-Anchor" href="#11-实验背景"></a> 1.1 实验背景</h2><p>自今年 7 月 1 日起，上海市将正式实施 《上海市生活垃圾管理条例》。<br>垃圾分类，看似是微不足道的“小事”，实则关系到13亿多人生活环境的改善，理应大力提倡。<br>垃圾识别分类数据集中包括玻璃 (glass) 、硬纸板 (cardboard) 、金属 (metal) 、纸 (paper) 、塑料 (plastic) 、一般垃圾 (trash) ，共6个类别。<br>生活垃圾由于种类繁多，具体分类缺乏统一标准，大多人在实际操作时会“选择困难”，基于深度学习技术建立准确的分类模型，利用技术手段改善人居环境。</p><h2 id="12-实验要求"><a class="markdownIt-Anchor" href="#12-实验要求"></a> 1.2 实验要求</h2><p>a）建立深度神经网络模型，并尽可能将其调到最佳状态。<br>b）绘制深度神经网络模型图、绘制并分析学习曲线。<br>c）用准确率等指标对模型进行评估。</p><h2 id="13-实验环境"><a class="markdownIt-Anchor" href="#13-实验环境"></a> 1.3 实验环境</h2><p>可以使用基于 Python 的 OpenCV 库进行图像相关处理，使用 Numpy 库进行相关数值运算，使用 Keras 等框架建立深度学习模型等。</p><h1 id="2实验内容"><a class="markdownIt-Anchor" href="#2实验内容"></a> 2.实验内容</h1><h2 id="21-介绍数据集"><a class="markdownIt-Anchor" href="#21-介绍数据集"></a> 2.1 介绍数据集</h2><p>该数据集包含了 2307 个生活垃圾图片。数据集的创建者将垃圾分为了 6 个类别，分别是：</p><table><thead><tr><th>序号</th><th>中文名</th><th>英文名</th><th>数据集大小</th></tr></thead><tbody><tr><td>1</td><td>玻璃</td><td>glass</td><td>457</td></tr><tr><td>2</td><td>纸</td><td>paper</td><td>540</td></tr><tr><td>3</td><td>硬纸板</td><td>cardboard</td><td>370</td></tr><tr><td>4</td><td>塑料</td><td>plastic</td><td>445</td></tr><tr><td>5</td><td>金属</td><td>metal</td><td>380</td></tr><tr><td>6</td><td>一般垃圾</td><td>trash</td><td>115</td></tr></tbody></table><ul><li>物品都是放在白板上在日光/室内光源下拍摄的，压缩后的尺寸为 512 * 384</li></ul><h2 id="22-图片预处理"><a class="markdownIt-Anchor" href="#22-图片预处理"></a> 2.2 图片预处理</h2><p>图片生成器 <a href="https://keras.io/preprocessing/image/" target="_blank" rel="noopener">ImageDataGenerator</a>: keras.preprocessing.image 模块中的图片生成器，主要用以生成一个 batch 的图像数据，支持实时数据提升。训练时该函数会无限生成数据，直到达到规定的 epoch 次数为止。同时也可以在 batch 中对数据进行增强，扩充数据集大小，增强模型的泛化能力，比如进行旋转，变形，归一化等等。</p><p>图片生成器的主要方法：</p><ul><li><p>fit(x, augment=False, rounds=1)：计算依赖于数据的变换所需要的统计信息(均值方差等)。</p></li><li><p>flow(self, X, y, batch_size=32, shuffle=True, seed=None, save_to_dir=None, save_prefix=’’, save_format=‘png’)：接收 Numpy 数组和标签为参数,生成经过数据提升或标准化后的 batch 数据，并在一个无限循环中不断的返回 batch 数据。</p></li><li><p>flow_from_directory(directory): 以文件夹路径为参数，会从路径推测 label，生成经过数据提升/归一化后的数据，在一个无限循环中无限产生 batch 数据。</p></li></ul><blockquote><p>根据上面的介绍和我们数据集的特性，我们主要运用 <code>ImageDataGenerator()</code> 和 <code>flow_from_directory()</code> 方法。我们将数据处理过程封装成为一个函数：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入图片生成器</span></span><br><span class="line"><span class="keyword">from</span> keras.preprocessing.image <span class="keyword">import</span> ImageDataGenerator</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">processing_data</span><span class="params">(data_path, height, width, batch_size=<span class="number">32</span>, validation_split=<span class="number">0.1</span>)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    数据处理</span></span><br><span class="line"><span class="string">    :param data_path: 带有子目录的数据集路径</span></span><br><span class="line"><span class="string">    :param height: 图像形状的行数</span></span><br><span class="line"><span class="string">    :param width: 图像形状的列数</span></span><br><span class="line"><span class="string">    :param batch_size: batch 数据的大小，整数，默认32。</span></span><br><span class="line"><span class="string">    :param validation_split: 在 0 和 1 之间浮动。用作测试集的训练数据的比例，默认0.1。</span></span><br><span class="line"><span class="string">    :return: train_generator, validation_generator: 处理后的训练集数据、验证集数据</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    train_data = ImageDataGenerator(</span><br><span class="line">            <span class="comment"># 对图片的每个像素值均乘上这个放缩因子，把像素值放缩到0和1之间有利于模型的收敛</span></span><br><span class="line">            rescale=<span class="number">1.</span> / <span class="number">255</span>,  </span><br><span class="line">            <span class="comment"># 浮点数，剪切强度（逆时针方向的剪切变换角度）</span></span><br><span class="line">            shear_range=<span class="number">0.1</span>,  </span><br><span class="line">            <span class="comment"># 随机缩放的幅度，若为浮点数，则相当于[lower,upper] = [1 - zoom_range, 1+zoom_range]</span></span><br><span class="line">            zoom_range=<span class="number">0.1</span>,</span><br><span class="line">            <span class="comment"># 浮点数，图片宽度的某个比例，数据提升时图片水平偏移的幅度</span></span><br><span class="line">            width_shift_range=<span class="number">0.1</span>,</span><br><span class="line">            <span class="comment"># 浮点数，图片高度的某个比例，数据提升时图片竖直偏移的幅度</span></span><br><span class="line">            height_shift_range=<span class="number">0.1</span>,</span><br><span class="line">            <span class="comment"># 布尔值，进行随机水平翻转</span></span><br><span class="line">            horizontal_flip=<span class="keyword">True</span>,</span><br><span class="line">            <span class="comment"># 布尔值，进行随机竖直翻转</span></span><br><span class="line">            vertical_flip=<span class="keyword">True</span>,</span><br><span class="line">            <span class="comment"># 在 0 和 1 之间浮动。用作验证集的训练数据的比例</span></span><br><span class="line">            validation_split=validation_split  </span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 接下来生成测试集，可以参考训练集的写法</span></span><br><span class="line">    validation_data = ImageDataGenerator(</span><br><span class="line">            rescale=<span class="number">1.</span> / <span class="number">255</span>,</span><br><span class="line">            validation_split=validation_split)</span><br><span class="line"></span><br><span class="line">    train_generator = train_data.flow_from_directory(</span><br><span class="line">            <span class="comment"># 提供的路径下面需要有子目录</span></span><br><span class="line">            data_path, </span><br><span class="line">            <span class="comment"># 整数元组 (height, width)，默认：(256, 256)。 所有的图像将被调整到的尺寸。</span></span><br><span class="line">            target_size=(height, width),</span><br><span class="line">            <span class="comment"># 一批数据的大小</span></span><br><span class="line">            batch_size=batch_size,</span><br><span class="line">            <span class="comment"># "categorical", "binary", "sparse", "input" 或 None 之一。</span></span><br><span class="line">            <span class="comment"># 默认："categorical",返回one-hot 编码标签。</span></span><br><span class="line">            class_mode=<span class="string">'categorical'</span>,</span><br><span class="line">            <span class="comment"># 数据子集 ("training" 或 "validation")</span></span><br><span class="line">            subset=<span class="string">'training'</span>, </span><br><span class="line">            seed=<span class="number">0</span>)</span><br><span class="line">    validation_generator = validation_data.flow_from_directory(</span><br><span class="line">            data_path,</span><br><span class="line">            target_size=(height, width),</span><br><span class="line">            batch_size=batch_size,</span><br><span class="line">            class_mode=<span class="string">'categorical'</span>,</span><br><span class="line">            subset=<span class="string">'validation'</span>,</span><br><span class="line">            seed=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> train_generator, validation_generator</span><br><span class="line"></span><br><span class="line"><span class="comment"># -------------使用---------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据路径</span></span><br><span class="line">data_path = <span class="string">"./datasets/la1ji1fe1nle4ishu4ju4ji22-momodel/dataset-resized"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 图像数据的行数和列数</span></span><br><span class="line">height, width = <span class="number">384</span>, <span class="number">512</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取训练数据和验证数据集</span></span><br><span class="line">train_generator, validation_generator = processing_data(data_path, height, width)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过属性class_indices可获得文件夹名与类的序号的对应字典。 (类别的顺序将按照字母表顺序映射到标签值)。</span></span><br><span class="line">labels = train_generator.class_indices</span><br><span class="line">print(labels)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 转换为类的序号与文件夹名对应的字典</span></span><br><span class="line">labels = dict((v, k) <span class="keyword">for</span> k, v <span class="keyword">in</span> labels.items())</span><br><span class="line">print(labels)</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Found 2078 images belonging to 6 classes.</span></span><br><span class="line"><span class="string">Found 229 images belonging to 6 classes.</span></span><br><span class="line"><span class="string">&#123;'trash': 5, 'metal': 2, 'plastic': 4, 'glass': 1, 'cardboard': 0, 'paper': 3&#125;</span></span><br><span class="line"><span class="string">&#123;0: 'cardboard', 1: 'glass', 2: 'metal', 3: 'paper', 4: 'plastic', 5: 'trash'&#125;</span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure><h2 id="23-采用-keras-建立一个简单的深度神经网络模型"><a class="markdownIt-Anchor" href="#23-采用-keras-建立一个简单的深度神经网络模型"></a> 2.3 采用 Keras 建立一个简单的深度神经网络模型</h2><p>通过 Keras 构建深度学习模型的步骤如下：</p><h3 id="1-定义模型创建一个模型并添加配置层"><a class="markdownIt-Anchor" href="#1-定义模型创建一个模型并添加配置层"></a> 1. 定义模型——创建一个模型并添加配置层</h3><blockquote><p>Keras 的核心数据结构是 model，一种组织网络层的方式。最简单的模型是 <a href="https://keras.io/getting-started/sequential-model-guide/" target="_blank" rel="noopener">Sequential 顺序模型</a>，它由多个网络层线性堆叠。</p></blockquote><ol><li>方式一: 使用 .add() 方法将各层添加到模型中</li></ol>   <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方式一: 使用 .add() 方法将各层添加到模型中</span></span><br><span class="line"><span class="comment"># 导入相关包</span></span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense, Activation</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择模型，选择序贯模型（Sequential())</span></span><br><span class="line">model = Sequential()</span><br><span class="line"><span class="comment"># 构建网络层</span></span><br><span class="line"><span class="comment"># 添加全连接层，输入784维,输出空间维度32</span></span><br><span class="line">model.add(Dense(<span class="number">32</span>, input_shape=(<span class="number">784</span>,)))</span><br><span class="line"><span class="comment"># 添加激活层，激活函数是 relu</span></span><br><span class="line">model.add(Activation(<span class="string">'relu'</span>))</span><br><span class="line"><span class="comment"># 打印模型概况</span></span><br><span class="line">model.summary()</span><br></pre></td></tr></table></figure><ol start="2"><li><p>方式二：网络层实例的列表构建序贯模型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方式二：网络层实例的列表构建序贯模型</span></span><br><span class="line"><span class="comment"># 导入相关的包</span></span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense, Activation</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择模型，选择序贯模型（Sequential())</span></span><br><span class="line"><span class="comment"># 通过将网络层实例的列表传递给 Sequential 的构造器，来创建一个 Sequential 模型</span></span><br><span class="line">model = Sequential([</span><br><span class="line">    Dense(<span class="number">32</span>, input_shape=(<span class="number">784</span>,)),</span><br><span class="line">    Activation(<span class="string">'relu'</span>)</span><br><span class="line">])</span><br><span class="line"><span class="comment"># 打印模型概况</span></span><br><span class="line">model.summary()</span><br></pre></td></tr></table></figure></li><li><p>方式三：函数式模型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方式三：函数式模型</span></span><br><span class="line"><span class="comment"># 导入相关的包</span></span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Input, Dense,Activation</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Model</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入层，返回一个张量 tensor</span></span><br><span class="line">inputs = Input(shape=(<span class="number">784</span>,))</span><br><span class="line"><span class="comment"># 全连接层，返回一个张量</span></span><br><span class="line">output_1 = Dense(<span class="number">32</span>)(inputs)</span><br><span class="line"><span class="comment"># 激活函数层</span></span><br><span class="line">predictions= Activation(activation=<span class="string">'relu'</span>)(output_1)</span><br><span class="line"><span class="comment"># 创建一个模型，包含输入层、全连接层和激活层</span></span><br><span class="line">model = Model(inputs=inputs, outputs=predictions)</span><br><span class="line"><span class="comment"># 打印模型概况</span></span><br><span class="line">model.summary()</span><br></pre></td></tr></table></figure></li></ol><h3 id="2-编译模型指定损失函数和优化器并调用模型的-compile-函数完成模型编译"><a class="markdownIt-Anchor" href="#2-编译模型指定损失函数和优化器并调用模型的-compile-函数完成模型编译"></a> 2. 编译模型——指定损失函数和优化器，并调用模型的 compile() 函数，完成模型编译。</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入相关包</span></span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Input, Dense, Flatten, Dropout, Activation</span><br><span class="line"><span class="keyword">from</span> keras.layers.normalization <span class="keyword">import</span> BatchNormalization</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Model</span><br><span class="line"><span class="keyword">from</span> keras.callbacks <span class="keyword">import</span> TensorBoard</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dnn_model</span><span class="params">(input_shape, train_generator, validation_generator, model_save_path=<span class="string">'results/dnn.h5'</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">              log_dir=<span class="string">"results/logs/"</span>)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    该函数实现 Keras 创建深度学习模型的过程. ▲.定义模型+编译模型</span></span><br><span class="line"><span class="string">    :param input_shape: 模型数据形状大小，比如:input_shape=(384, 512, 3)</span></span><br><span class="line"><span class="string">    :param train_generator: 训练集</span></span><br><span class="line"><span class="string">    :param validation_generator: 验证集</span></span><br><span class="line"><span class="string">    :param model_save_path: 保存模型的路径</span></span><br><span class="line"><span class="string">    :param log_dir: 保存模型日志路径</span></span><br><span class="line"><span class="string">    :return: 返回已经训练好的模型</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># Input 用于实例化 Keras 张量。</span></span><br><span class="line">    <span class="comment"># shape: 一个尺寸元组（整数），不包含批量大小。 例如，shape=(32,) 表明期望的输入是按批次的 32 维向量。</span></span><br><span class="line">    inputs = Input(shape=input_shape)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将输入展平</span></span><br><span class="line">    dnn = Flatten()(inputs)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Dense 全连接层  实现以下操作：output = activation(dot(input, kernel) + bias)</span></span><br><span class="line">    <span class="comment"># 其中 activation 是按逐个元素计算的激活函数，kernel 是由网络层创建的权值矩阵，</span></span><br><span class="line">    <span class="comment"># 以及 bias 是其创建的偏置向量 (只在 use_bias 为 True 时才有用)。</span></span><br><span class="line">    dnn = Dense(<span class="number">6</span>)(dnn)</span><br><span class="line">    <span class="comment"># 批量标准化层: 在每一个批次的数据中标准化前一层的激活项， 即应用一个维持激活项平均值接近 0，标准差接近 1 的转换。</span></span><br><span class="line">    <span class="comment"># axis: 整数，需要标准化的轴 （通常是特征轴）。默认值是 -1</span></span><br><span class="line">    dnn = BatchNormalization(axis=<span class="number">-1</span>)(dnn)</span><br><span class="line">    <span class="comment"># 将激活函数,输出尺寸与输入尺寸一样，激活函数可以是'softmax'、'sigmoid'等</span></span><br><span class="line">    dnn = Activation(<span class="string">'sigmoid'</span>)(dnn)</span><br><span class="line">    <span class="comment"># Dropout 包括在训练中每次更新时，将输入单元的按比率随机设置为 0, 这有助于防止过拟合。</span></span><br><span class="line">    <span class="comment"># rate: 在 0 和 1 之间浮动。需要丢弃的输入比例。</span></span><br><span class="line">    dnn = Dropout(<span class="number">0.25</span>)(dnn)</span><br><span class="line"></span><br><span class="line">    dnn = Dense(<span class="number">12</span>)(dnn)</span><br><span class="line">    dnn = BatchNormalization(axis=<span class="number">-1</span>)(dnn)</span><br><span class="line">    dnn = Activation(<span class="string">'relu'</span>)(dnn)</span><br><span class="line">    dnn = Dropout(<span class="number">0.5</span>)(dnn)</span><br><span class="line"></span><br><span class="line">    dnn = Dense(<span class="number">6</span>)(dnn)</span><br><span class="line">    dnn = BatchNormalization(axis=<span class="number">-1</span>)(dnn)</span><br><span class="line">    dnn = Activation(<span class="string">'softmax'</span>)(dnn)</span><br><span class="line"></span><br><span class="line">    outputs = dnn</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 生成一个函数型模型</span></span><br><span class="line">    model = Model(inputs=inputs, outputs=outputs)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 编译模型, 采用 compile 函数: https://keras.io/models/model/#compile</span></span><br><span class="line">    model.compile(</span><br><span class="line">            <span class="comment"># 是优化器, 主要有Adam、sgd、rmsprop等方式。</span></span><br><span class="line">            optimizer=<span class="string">'Adam'</span>,</span><br><span class="line">            <span class="comment"># 损失函数,多分类采用 categorical_crossentropy</span></span><br><span class="line">            loss=<span class="string">'categorical_crossentropy'</span>,</span><br><span class="line">            <span class="comment"># 是除了损失函数值之外的特定指标, 分类问题一般都是准确率</span></span><br><span class="line">            metrics=[<span class="string">'accuracy'</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 可视化，TensorBoard 是由 Tensorflow 提供的一个可视化工具。</span></span><br><span class="line">    tensorboard = TensorBoard(log_dir)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 训练模型, fit_generator函数:https://keras.io/models/model/#fit_generator</span></span><br><span class="line">    <span class="comment"># 利用Python的生成器，逐个生成数据的batch并进行训练。</span></span><br><span class="line">    <span class="comment"># callbacks: 实例列表。在训练时调用的一系列回调。详见 https://keras.io/callbacks/。</span></span><br><span class="line">    d = model.fit_generator(</span><br><span class="line">            <span class="comment"># 一个生成器或 Sequence 对象的实例</span></span><br><span class="line">            generator=train_generator,</span><br><span class="line">            <span class="comment"># epochs: 整数，数据的迭代总轮数。</span></span><br><span class="line">            epochs=<span class="number">5</span>,</span><br><span class="line">            <span class="comment"># 一个epoch包含的步数,通常应该等于你的数据集的样本数量除以批量大小。</span></span><br><span class="line">            steps_per_epoch=<span class="number">2076</span> // <span class="number">32</span>,</span><br><span class="line">            <span class="comment"># 验证集</span></span><br><span class="line">            validation_data=validation_generator,</span><br><span class="line">            <span class="comment"># 在验证集上,一个epoch包含的步数,通常应该等于你的数据集的样本数量除以批量大小。</span></span><br><span class="line">            validation_steps=<span class="number">231</span> // <span class="number">32</span>,</span><br><span class="line">            callbacks=[tensorboard])</span><br><span class="line">    <span class="comment"># 模型保存</span></span><br><span class="line">    model.save(model_save_path)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> d, model</span><br></pre></td></tr></table></figure><h3 id="3-训练模型通过调用模型的-fit-函数来训练模型"><a class="markdownIt-Anchor" href="#3-训练模型通过调用模型的-fit-函数来训练模型"></a> 3. 训练模型——通过调用模型的 fit() 函数来训练模型。</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开始时间</span></span><br><span class="line">start = time.time()</span><br><span class="line"><span class="comment"># 数据预处理</span></span><br><span class="line">data_path = <span class="string">"./datasets/la1ji1fe1nle4ishu4ju4ji22-momodel/dataset-resized"</span></span><br><span class="line"><span class="comment"># 图像数据的行数和列数</span></span><br><span class="line">height, width = <span class="number">384</span>, <span class="number">512</span></span><br><span class="line"><span class="comment"># 获取训练数据和验证数据</span></span><br><span class="line">train_generator, validation_generator = processing_data(data_path, height, width)</span><br><span class="line"><span class="comment"># 定义模型输入大小</span></span><br><span class="line">input_shape=(<span class="number">384</span>, <span class="number">512</span>, <span class="number">3</span>)</span><br><span class="line"><span class="comment"># 训练模型，获取训练过程和训练后的模型</span></span><br><span class="line">res,model = dnn_model(input_shape, train_generator, validation_generator)</span><br><span class="line"><span class="comment"># 打印模型概况和模型训练总数长</span></span><br><span class="line">model.summary()</span><br><span class="line">print(<span class="string">"模型训练总时长："</span>,time.time()-start)</span><br></pre></td></tr></table></figure><ol><li>查看模型训练效果</li></ol>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plot_training_history</span><span class="params">(res)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    绘制模型的训练结果</span></span><br><span class="line"><span class="string">    :param res: 模型的训练结果</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 绘制模型训练过程的损失和平均损失</span></span><br><span class="line">    <span class="comment"># 绘制模型训练过程的损失值曲线，标签是 loss</span></span><br><span class="line">    plt.plot(res.history[<span class="string">'loss'</span>], label=<span class="string">'loss'</span>)</span><br><span class="line">    <span class="comment"># 绘制模型训练过程中的平均损失曲线，标签是 val_loss</span></span><br><span class="line">    plt.plot(res.history[<span class="string">'val_loss'</span>], label=<span class="string">'val_loss'</span>)</span><br><span class="line">    <span class="comment"># 绘制图例,展示出每个数据对应的图像名称和图例的放置位置</span></span><br><span class="line">    plt.legend(loc=<span class="string">'upper right'</span>)</span><br><span class="line">    <span class="comment"># 展示图片</span></span><br><span class="line">    plt.show()</span><br><span class="line">    <span class="comment"># 绘制模型训练过程中的的准确率和平均准确率</span></span><br><span class="line">    <span class="comment"># 绘制模型训练过程中的准确率曲线，标签是 acc</span></span><br><span class="line">    plt.plot(res.history[<span class="string">'accuracy'</span>], label=<span class="string">'accuracy'</span>)</span><br><span class="line">    <span class="comment"># 绘制模型训练过程中的平均准确率曲线，标签是 val_acc</span></span><br><span class="line">    plt.plot(res.history[<span class="string">'val_accuracy'</span>], label=<span class="string">'val_accuracy'</span>)</span><br><span class="line">    <span class="comment"># 绘制图例,展示出每个数据对应的图像名称，图例的放置位置为默认值。</span></span><br><span class="line">    plt.legend()</span><br><span class="line">    <span class="comment"># 展示图片</span></span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure><h3 id="4-模型预测调用模型的-evaluate或者-predict-等函数对新数据进行预测"><a class="markdownIt-Anchor" href="#4-模型预测调用模型的-evaluate或者-predict-等函数对新数据进行预测"></a> 4. 模型预测——调用模型的 evaluate()或者 predict() 等函数对新数据进行预测。</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_and_model_prediction</span><span class="params">(validation_generator)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    加载模型和模型评估，打印验证集的 loss 和准确度</span></span><br><span class="line"><span class="string">    :param validation_generator: 预测数据</span></span><br><span class="line"><span class="string">    :return: </span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 加载模型</span></span><br><span class="line">    model = load_model(<span class="string">'results/dnn.h5'</span>)</span><br><span class="line">    <span class="comment"># 获取验证集的 loss 和 accuracy</span></span><br><span class="line">    loss, accuracy = model.evaluate_generator(validation_generator)</span><br><span class="line">    print(<span class="string">"\nLoss: %.2f, Accuracy: %.2f%%"</span> % (loss, accuracy * <span class="number">100</span>))</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 打印模型评估的结果</span></span><br><span class="line">load_and_model_prediction(validation_generator)</span><br></pre></td></tr></table></figure><p>(预测可视化)：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> load_model</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plot_load_and_model_prediction</span><span class="params">(validation_generator, labels)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    加载模型、模型预测并展示模型预测结果等</span></span><br><span class="line"><span class="string">    :param validation_generator: 预测数据</span></span><br><span class="line"><span class="string">    :param labels: 数据标签</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 加载模型</span></span><br><span class="line">    model = load_model(<span class="string">'results/dnn.h5'</span>)</span><br><span class="line">    <span class="comment"># 测试集数据与标签</span></span><br><span class="line">    test_x, test_y = validation_generator.__getitem__(<span class="number">2</span>)</span><br><span class="line">    <span class="comment"># 预测值</span></span><br><span class="line">    preds = model.predict(test_x)</span><br><span class="line">    <span class="comment"># 绘制预测图像的预测值和真实值，定义画布</span></span><br><span class="line">    plt.figure(figsize=(<span class="number">16</span>, <span class="number">16</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">16</span>):</span><br><span class="line">        <span class="comment"># 绘制各个子图</span></span><br><span class="line">        plt.subplot(<span class="number">4</span>, <span class="number">4</span>, i + <span class="number">1</span>)</span><br><span class="line">        <span class="comment"># 图片名称</span></span><br><span class="line">        plt.title(</span><br><span class="line">                <span class="string">'pred:%s / truth:%s'</span> % (labels[np.argmax(preds[i])], labels[np.argmax(test_y[i])]))</span><br><span class="line">        <span class="comment"># 展示图片</span></span><br><span class="line">        plt.imshow(test_x[i])</span><br><span class="line">        </span><br><span class="line"><span class="comment"># 展示模型预测结果</span></span><br><span class="line">plot_load_and_model_prediction(validation_generator, labels)</span><br></pre></td></tr></table></figure><h3 id="5-使用模型"><a class="markdownIt-Anchor" href="#5-使用模型"></a> 5. 使用模型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> load_model</span><br><span class="line"><span class="keyword">from</span> keras.preprocessing <span class="keyword">import</span> image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_and_predict</span><span class="params">(img)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    加载模型并预测一张图片的类别</span></span><br><span class="line"><span class="string">    :param img: PIL.Image 对象</span></span><br><span class="line"><span class="string">    :return: string, 模型识别图片的类别, </span></span><br><span class="line"><span class="string">            共 'cardboard','glass','metal','paper','plastic','trash' 6 个类别</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 加载模型, 默认'results/dnn.h5',请填写你的最佳模型</span></span><br><span class="line">    model_path = <span class="string">'results/dnn.h5'</span></span><br><span class="line">    model = load_model(model_path)</span><br><span class="line">    <span class="comment"># 把图片转换成为numpy数组</span></span><br><span class="line">    img = image.img_to_array(img)</span><br><span class="line">    <span class="comment"># 图片放缩</span></span><br><span class="line">    img = <span class="number">1.0</span>/<span class="number">255</span> * img</span><br><span class="line">    <span class="comment"># expand_dims的作用是把img.shape转换成(1, img.shape[0], img.shape[1], img.shape[2])</span></span><br><span class="line">    x = np.expand_dims(img, axis=<span class="number">0</span>)</span><br><span class="line">    <span class="comment"># 模型预测, y: [[0.22421867 0.13031775 0.15167782 0.15904953 0.21509506 0.11964121]]</span></span><br><span class="line">    y = model.predict(x)</span><br><span class="line">    <span class="comment"># 获取labels</span></span><br><span class="line">    labels = &#123;<span class="number">0</span>: <span class="string">'cardboard'</span>, <span class="number">1</span>: <span class="string">'glass'</span>, <span class="number">2</span>: <span class="string">'metal'</span>, <span class="number">3</span>: <span class="string">'paper'</span>, <span class="number">4</span>: <span class="string">'plastic'</span>, <span class="number">5</span>: <span class="string">'trash'</span>&#125;</span><br><span class="line">    <span class="comment"># 获取输入图片的类别</span></span><br><span class="line">    y_predict = labels[np.argmax(y)]</span><br><span class="line">    <span class="comment"># 返回图片的类别</span></span><br><span class="line">    <span class="keyword">return</span> y_predict</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> keras.preprocessing <span class="keyword">import</span> image</span><br><span class="line"><span class="comment"># 输入图片路径和名称</span></span><br><span class="line">file_path = <span class="string">'test.jpg'</span></span><br><span class="line"><span class="comment"># 打印该张图片的类别</span></span><br><span class="line">img = image.load_img(file_path)</span><br><span class="line">print(load_and_predict(img))</span><br></pre></td></tr></table></figure><h1 id="mycode"><a class="markdownIt-Anchor" href="#mycode"></a> Mycode</h1><blockquote><p>编写 <strong>数据处理</strong>、<strong>创建模型</strong>、<strong>训练模型</strong>、<strong>保存模型</strong> 和 <strong>评估模型</strong> 等部分的代码</p></blockquote><h2 id="完成模型"><a class="markdownIt-Anchor" href="#完成模型"></a> 完成模型</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">processing_data</span><span class="params">(data_path)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    数据处理</span></span><br><span class="line"><span class="string">    :param data_path: 数据集路径</span></span><br><span class="line"><span class="string">    :return: train, test:处理后的训练集数据、测试集数据</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># -------------------------- 实现数据处理部分代码 ----------------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ------------------------------------------------------------------------</span></span><br><span class="line">    train_data, test_data = <span class="keyword">None</span>, <span class="keyword">None</span></span><br><span class="line">    <span class="keyword">return</span> train_data, test_data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">model</span><span class="params">(train_data, test_data, save_model_path)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    创建、训练和保存深度学习模型</span></span><br><span class="line"><span class="string">    :param train_data: 训练集数据</span></span><br><span class="line"><span class="string">    :param test_data: 测试集数据</span></span><br><span class="line"><span class="string">    :param save_model_path: 保存模型的路径和名称</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># --------------------- 实现模型创建、训练和保存等部分的代码 ---------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 保存模型（请写好保存模型的路径及名称）</span></span><br><span class="line">    <span class="comment"># -------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> model</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">evaluate_mode</span><span class="params">(test_data, save_model_path)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    加载模型和评估模型</span></span><br><span class="line"><span class="string">    可以实现，比如: 模型训练过程中的学习曲线，测试集数据的loss值、准确率及混淆矩阵等评价指标！</span></span><br><span class="line"><span class="string">    主要步骤:</span></span><br><span class="line"><span class="string">        1.加载模型(请填写你训练好的最佳模型),</span></span><br><span class="line"><span class="string">        2.对自己训练的模型进行评估</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param test_data: 测试集数据</span></span><br><span class="line"><span class="string">    :param save_model_path: 加载模型的路径和名称,请填写你认为最好的模型</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># ----------------------- 实现模型加载和评估等部分的代码 -----------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ---------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    深度学习模型训练流程,包含数据处理、创建模型、训练模型、模型保存、评价模型等。</span></span><br><span class="line"><span class="string">    如果对训练出来的模型不满意,你可以通过调整模型的参数等方法重新训练模型,直至训练出你满意的模型。</span></span><br><span class="line"><span class="string">    如果你对自己训练出来的模型非常满意,则可以提交作业!</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    data_path = <span class="keyword">None</span>  <span class="comment"># 数据集路径</span></span><br><span class="line">    save_model_path = <span class="keyword">None</span>  <span class="comment"># 保存模型路径和名称</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取数据</span></span><br><span class="line">    train_data, test_data = processing_data(data_path)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建、训练和保存模型</span></span><br><span class="line">    model(train_data, test_data, save_model_path)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 评估模型</span></span><br><span class="line">    evaluate_mode(test_data, save_model_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="模型预测"><a class="markdownIt-Anchor" href="#模型预测"></a> 模型预测</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> load_model</span><br><span class="line"><span class="keyword">from</span> keras.preprocessing <span class="keyword">import</span> image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -------------------------- 请加载您最满意的模型 ---------------------------</span></span><br><span class="line"><span class="comment"># 加载模型(请加载你认为的最佳模型)</span></span><br><span class="line"><span class="comment"># 加载模型,加载请注意 model_path 是相对路径, 与当前文件同级。</span></span><br><span class="line"><span class="comment"># 如果你的模型是在 results 文件夹下的 dnn.h5 模型，则 model_path = 'results/dnn.h5'</span></span><br><span class="line">model_path = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载模型，如果采用keras框架训练模型，则 model=load_model(model_path)</span></span><br><span class="line">model = <span class="keyword">None</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(img)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    加载模型和模型预测</span></span><br><span class="line"><span class="string">    主要步骤:</span></span><br><span class="line"><span class="string">        1.图片处理</span></span><br><span class="line"><span class="string">        2.用加载的模型预测图片的类别</span></span><br><span class="line"><span class="string">    :param img: PIL.Image 对象</span></span><br><span class="line"><span class="string">    :return: string, 模型识别图片的类别, </span></span><br><span class="line"><span class="string">            共 'cardboard','glass','metal','paper','plastic','trash' 6 个类别</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># -------------------------- 实现模型预测部分的代码 ---------------------------</span></span><br><span class="line">    <span class="comment"># 获取图片的类别，共 'cardboard','glass','metal','paper','plastic','trash' 6 个类别</span></span><br><span class="line">    <span class="comment"># 把图片转换成为numpy数组</span></span><br><span class="line">    img = image.img_to_array(img)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取输入图片的类别</span></span><br><span class="line">    y_predict = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -------------------------------------------------------------------------</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 返回图片的类别</span></span><br><span class="line">    <span class="keyword">return</span> y_predict</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------使用-----------------------------</span></span><br><span class="line"><span class="keyword">from</span> keras.preprocessing <span class="keyword">import</span> image</span><br><span class="line"><span class="comment"># 输入图片路径和名称</span></span><br><span class="line">img_path = <span class="string">'test.jpg'</span></span><br><span class="line"><span class="comment"># 打印该张图片的类别</span></span><br><span class="line">img = image.load_img(img_path)</span><br><span class="line">print(predict(img))</span><br></pre></td></tr></table></figure><h3 id="mo项目上代码-accuracy为56"><a class="markdownIt-Anchor" href="#mo项目上代码-accuracy为56"></a> Mo项目上代码-&gt; accuracy为56%</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">import</span> random </span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image </span><br><span class="line"><span class="keyword">from</span> torchvision.transforms <span class="keyword">import</span> transforms</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms.functional <span class="keyword">as</span> TF</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> torch.utils.data <span class="keyword">as</span> Data</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyCNN</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, image_size, num_classes)</span>:</span></span><br><span class="line">        super(MyCNN, self).__init__()</span><br><span class="line">        <span class="comment"># conv1: Conv2d -&gt; BN -&gt; ReLU -&gt; MaxPool</span></span><br><span class="line">        self.conv1 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(in_channels=<span class="number">3</span>, out_channels=<span class="number">16</span>, kernel_size=<span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">16</span>),</span><br><span class="line">            nn.ReLU(), </span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>),</span><br><span class="line">        )</span><br><span class="line">        <span class="comment"># conv2: Conv2d -&gt; BN -&gt; ReLU -&gt; MaxPool</span></span><br><span class="line">        self.conv2 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(in_channels=<span class="number">16</span>, out_channels=<span class="number">32</span>, kernel_size=<span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">32</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>),</span><br><span class="line">        )</span><br><span class="line">        <span class="comment"># fully connected layer</span></span><br><span class="line">        self.fc = nn.Linear(<span class="number">32</span> * (image_size // <span class="number">4</span>) * (image_size // <span class="number">4</span>), num_classes)</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        input: N * 3 * image_size * image_size</span></span><br><span class="line"><span class="string">        output: N * num_classes</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        x = self.conv1(x)</span><br><span class="line">        x = self.conv2(x)</span><br><span class="line">        <span class="comment"># view(x.size(0), -1): change tensor size from (N ,H , W) to (N, H*W)</span></span><br><span class="line">        x = x.view(x.size(<span class="number">0</span>), <span class="number">-1</span>)</span><br><span class="line">        output = self.fc(x)</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_model</span><span class="params">(model_path, device)</span>:</span></span><br><span class="line">    net = MyCNN(<span class="number">32</span>,<span class="number">6</span>)</span><br><span class="line">    print(<span class="string">'loading the model from %s'</span> % model_path)</span><br><span class="line">    state_dict = torch.load(model_path, map_location=str(device))</span><br><span class="line">    <span class="keyword">if</span> hasattr(state_dict, <span class="string">'_metadata'</span>):</span><br><span class="line">        <span class="keyword">del</span> state_dict._metadata</span><br><span class="line">    net.load_state_dict(state_dict)</span><br><span class="line">    <span class="keyword">return</span> net </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载模型,加载请注意 model_path 是相对路径, 与当前文件同级。</span></span><br><span class="line"><span class="comment"># 如果你的模型是在 results 文件夹下的 dnn.h5 模型，则 model_path = 'results/dnn.h5'</span></span><br><span class="line">model_path = <span class="string">'results/cnn.pth'</span></span><br><span class="line">device = torch.device(<span class="string">'cuda'</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">'cpu'</span>)</span><br><span class="line">model = load_model(model_path, device).to(device)</span><br><span class="line">model.eval()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(img)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    :param img: PIL.Image 对象</span></span><br><span class="line"><span class="string">    :return: string, 模型识别图片的类别, </span></span><br><span class="line"><span class="string">            共 'cardboard','glass','metal','paper','plastic','trash' 6 个类别</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    transform = transforms.Compose([transforms.RandomCrop(size=(<span class="number">384</span>,<span class="number">512</span>), padding=<span class="number">10</span>),</span><br><span class="line">                                transforms.Resize((<span class="number">32</span>,<span class="number">32</span>)),</span><br><span class="line">                                transforms.ToTensor(),</span><br><span class="line">                                transforms.Normalize([<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>], [<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>])</span><br><span class="line">    ])</span><br><span class="line">    img = transform(img)</span><br><span class="line"></span><br><span class="line">    classes=[<span class="string">'glass'</span>,<span class="string">'paper'</span>,<span class="string">'carboard'</span>,<span class="string">'plastic'</span>,<span class="string">'metal'</span>,<span class="string">'trash'</span>]</span><br><span class="line"></span><br><span class="line">    img = img.to(device).unsqueeze(<span class="number">0</span>)</span><br><span class="line">    pred_cate = model(img)</span><br><span class="line">    preds = pred_cate.argmax(dim=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># -------------------------------------------------------------------------</span></span><br><span class="line">    y_predict = classes[preds]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 返回图片的类别</span></span><br><span class="line">    <span class="keyword">return</span> y_predict</span><br></pre></td></tr></table></figure><p>VGG16代码：accurary：92%</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###############################################################################</span></span><br><span class="line"><span class="comment"># 重要: 请务必把任务(jobs)中需要保存的文件存放在 results 文件夹内</span></span><br><span class="line"><span class="comment"># Important : Please make sure your files are saved to the 'results' folder</span></span><br><span class="line"><span class="comment"># in your jobs</span></span><br><span class="line"><span class="comment">###############################################################################</span></span><br><span class="line"><span class="comment"># ------------------------------------------提交内容-----------------------------------</span></span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Input, Dense, Flatten, Dropout, Activation </span><br><span class="line"><span class="keyword">from</span> keras.layers.normalization <span class="keyword">import</span> BatchNormalization</span><br><span class="line"><span class="keyword">from</span> keras.preprocessing.image <span class="keyword">import</span> ImageDataGenerator</span><br><span class="line"><span class="keyword">from</span> keras.callbacks <span class="keyword">import</span> TensorBoard</span><br><span class="line"><span class="keyword">from</span> keras.preprocessing <span class="keyword">import</span> image</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> load_model</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Model</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> glob, os, cv2, random,time</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Conv2D,Flatten,MaxPooling2D,Dense </span><br><span class="line"><span class="keyword">from</span> keras.optimizers <span class="keyword">import</span> SGD</span><br><span class="line"><span class="keyword">from</span> keras.applications.vgg16 <span class="keyword">import</span> VGG16</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">processing_data</span><span class="params">(data_path)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    数据处理</span></span><br><span class="line"><span class="string">    :param data_path: 数据集路径</span></span><br><span class="line"><span class="string">    :return: train, test:处理后的训练集数据、测试集数据</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    train_data = ImageDataGenerator(</span><br><span class="line">            <span class="comment"># 对图片的每个像素值均乘上这个放缩因子，把像素值放缩到0和1之间有利于模型的收敛</span></span><br><span class="line">            rescale=<span class="number">1.</span> / <span class="number">225</span>,  </span><br><span class="line">            <span class="comment"># 浮点数，剪切强度（逆时针方向的剪切变换角度）</span></span><br><span class="line">            shear_range=<span class="number">0.1</span>,  </span><br><span class="line">            <span class="comment"># 随机缩放的幅度，若为浮点数，则相当于[lower,upper] = [1 - zoom_range, 1+zoom_range]</span></span><br><span class="line">            zoom_range=<span class="number">0.1</span>,</span><br><span class="line">            <span class="comment"># 浮点数，图片宽度的某个比例，数据提升时图片水平偏移的幅度</span></span><br><span class="line">            width_shift_range=<span class="number">0.1</span>,</span><br><span class="line">            <span class="comment"># 浮点数，图片高度的某个比例，数据提升时图片竖直偏移的幅度</span></span><br><span class="line">            height_shift_range=<span class="number">0.1</span>,</span><br><span class="line">            <span class="comment"># 布尔值，进行随机水平翻转</span></span><br><span class="line">            horizontal_flip=<span class="keyword">True</span>,</span><br><span class="line">            <span class="comment"># 布尔值，进行随机竖直翻转</span></span><br><span class="line">            vertical_flip=<span class="keyword">True</span>,</span><br><span class="line">            <span class="comment"># 在 0 和 1 之间浮动。用作验证集的训练数据的比例</span></span><br><span class="line">            validation_split=<span class="number">0.1</span>  </span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 接下来生成测试集，可以参考训练集的写法</span></span><br><span class="line">    validation_data = ImageDataGenerator(</span><br><span class="line">            rescale=<span class="number">1.</span> / <span class="number">255</span>,</span><br><span class="line">            validation_split=<span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line">    train_generator = train_data.flow_from_directory(</span><br><span class="line">            <span class="comment"># 提供的路径下面需要有子目录</span></span><br><span class="line">            data_path, </span><br><span class="line">            <span class="comment"># 整数元组 (height, width)，默认：(256, 256)。 所有的图像将被调整到的尺寸。</span></span><br><span class="line">            target_size=(<span class="number">150</span>, <span class="number">150</span>),</span><br><span class="line">            <span class="comment"># 一批数据的大小</span></span><br><span class="line">            batch_size=<span class="number">16</span>,</span><br><span class="line">            <span class="comment"># "categorical", "binary", "sparse", "input" 或 None 之一。</span></span><br><span class="line">            <span class="comment"># 默认："categorical",返回one-hot 编码标签。</span></span><br><span class="line">            class_mode=<span class="string">'categorical'</span>,</span><br><span class="line">            <span class="comment"># 数据子集 ("training" 或 "validation")</span></span><br><span class="line">            subset=<span class="string">'training'</span>, </span><br><span class="line">            seed=<span class="number">0</span>)</span><br><span class="line">    validation_generator = validation_data.flow_from_directory(</span><br><span class="line">            data_path,</span><br><span class="line">            target_size=(<span class="number">150</span>, <span class="number">150</span>),</span><br><span class="line">            batch_size=<span class="number">16</span>,</span><br><span class="line">            class_mode=<span class="string">'categorical'</span>,</span><br><span class="line">            subset=<span class="string">'validation'</span>,</span><br><span class="line">            seed=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> train_generator, validation_generator</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">model</span><span class="params">(train_generator, validation_generator, save_model_path)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    模型的建立</span></span><br><span class="line"><span class="string">    本次实验采用Vgg16模型</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    vgg16_model = VGG16(weights=<span class="string">'imagenet'</span>,include_top=<span class="keyword">False</span>, input_shape=(<span class="number">150</span>,<span class="number">150</span>,<span class="number">3</span>))</span><br><span class="line">    top_model = Sequential()</span><br><span class="line">    top_model.add(Flatten(input_shape=vgg16_model.output_shape[<span class="number">1</span>:]))</span><br><span class="line">    top_model.add(Dense(<span class="number">256</span>,activation=<span class="string">'relu'</span>))</span><br><span class="line">    top_model.add(Dropout(<span class="number">0.5</span>))</span><br><span class="line">    top_model.add(Dense(<span class="number">6</span>,activation=<span class="string">'softmax'</span>))</span><br><span class="line"></span><br><span class="line">    model = Sequential()</span><br><span class="line">    model.add(vgg16_model)</span><br><span class="line">    model.add(top_model)</span><br><span class="line">    <span class="comment"># 编译模型, 采用 compile 函数: https://keras.io/models/model/#compile</span></span><br><span class="line">    model.compile(</span><br><span class="line">             <span class="comment"># 是优化器, 主要有Adam、sgd、rmsprop等方式。</span></span><br><span class="line">            optimizer=SGD(lr=<span class="number">1e-3</span>,momentum=<span class="number">0.9</span>),</span><br><span class="line">            <span class="comment"># 损失函数,多分类采用 categorical_crossentropy</span></span><br><span class="line">            loss=<span class="string">'categorical_crossentropy'</span>,</span><br><span class="line">            <span class="comment"># 是除了损失函数值之外的特定指标, 分类问题一般都是准确率</span></span><br><span class="line">            metrics=[<span class="string">'accuracy'</span>])</span><br><span class="line"></span><br><span class="line">    model.fit_generator(</span><br><span class="line">            <span class="comment"># 一个生成器或 Sequence 对象的实例</span></span><br><span class="line">            generator=train_generator,</span><br><span class="line">            <span class="comment"># epochs: 整数，数据的迭代总轮数。</span></span><br><span class="line">            epochs=<span class="number">200</span>,</span><br><span class="line">            <span class="comment"># 一个epoch包含的步数,通常应该等于你的数据集的样本数量除以批量大小。</span></span><br><span class="line">            steps_per_epoch=<span class="number">2259</span> // <span class="number">16</span>,</span><br><span class="line">            <span class="comment"># 验证集</span></span><br><span class="line">            validation_data=validation_generator,</span><br><span class="line">             <span class="comment"># 在验证集上,一个epoch包含的步数,通常应该等于你的数据集的样本数量除以批量大小。</span></span><br><span class="line">            validation_steps=<span class="number">248</span> // <span class="number">16</span>,</span><br><span class="line">            )</span><br><span class="line">    model.save(save_model_path)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> model</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">evaluate_mode</span><span class="params">(validation_generator, save_model_path)</span>:</span></span><br><span class="line">     <span class="comment"># 加载模型</span></span><br><span class="line">    model = load_model(<span class="string">'results/Ynnex1.h5'</span>)</span><br><span class="line">    <span class="comment"># 获取验证集的 loss 和 accuracy</span></span><br><span class="line">    loss, accuracy = model.evaluate_generator(validation_generator)</span><br><span class="line">    print(<span class="string">"\nLoss: %.2f, Accuracy: %.2f%%"</span> % (loss, accuracy * <span class="number">100</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(img)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    加载模型和模型预测</span></span><br><span class="line"><span class="string">    主要步骤:</span></span><br><span class="line"><span class="string">        1.加载模型(请加载你认为的最佳模型)</span></span><br><span class="line"><span class="string">        2.图片处理</span></span><br><span class="line"><span class="string">        3.用加载的模型预测图片的类别</span></span><br><span class="line"><span class="string">    :param img: PIL.Image 对象</span></span><br><span class="line"><span class="string">    :return: string, 模型识别图片的类别, </span></span><br><span class="line"><span class="string">            共 'cardboard','glass','metal','paper','plastic','trash' 6 个类别</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 把图片转换成为numpy数组</span></span><br><span class="line">    img = img.resize((<span class="number">150</span>, <span class="number">150</span>))</span><br><span class="line">    img = image.img_to_array(img)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 加载模型,加载请注意 model_path 是相对路径, 与当前文件同级。</span></span><br><span class="line">    <span class="comment"># 如果你的模型是在 results 文件夹下的 dnn.h5 模型，则 model_path = 'results/dnn.h5'</span></span><br><span class="line">    model_path = <span class="string">'results/Ynnex1.h5'</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 作业提交时测试用, 请勿删除此部分</span></span><br><span class="line">        model_path = os.path.realpath(__file__).replace(<span class="string">'main.py'</span>, model_path)</span><br><span class="line">    <span class="keyword">except</span> NameError:</span><br><span class="line">        model_path = <span class="string">'./'</span> + model_path</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># -------------------------- 实现模型预测部分的代码 ---------------------------</span></span><br><span class="line">    <span class="comment"># 加载模型</span></span><br><span class="line">    model = load_model(model_path)</span><br><span class="line">    <span class="comment"># expand_dims的作用是把img.shape转换成(1, img.shape[0], img.shape[1], img.shape[2])</span></span><br><span class="line">    x = np.expand_dims(img, axis=<span class="number">0</span>)</span><br><span class="line">    <span class="comment"># 模型预测</span></span><br><span class="line">    y = model.predict(x)</span><br><span class="line">    <span class="comment"># 获取labels</span></span><br><span class="line">    labels = &#123;<span class="number">0</span>: <span class="string">'cardboard'</span>, <span class="number">1</span>: <span class="string">'glass'</span>, <span class="number">2</span>: <span class="string">'metal'</span>, <span class="number">3</span>: <span class="string">'paper'</span>, <span class="number">4</span>: <span class="string">'plastic'</span>, <span class="number">5</span>: <span class="string">'trash'</span>&#125;</span><br><span class="line">    <span class="comment"># -------------------------------------------------------------------------</span></span><br><span class="line">    predict = labels[np.argmax(y)]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 返回图片的类别</span></span><br><span class="line">    <span class="keyword">return</span> predict</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    深度学习模型训练流程,包含数据处理、创建模型、训练模型、模型保存、评价模型等。</span></span><br><span class="line"><span class="string">    如果对训练出来的模型不满意,你可以通过调整模型的参数等方法重新训练模型,直至训练出你满意的模型。</span></span><br><span class="line"><span class="string">    如果你对自己训练出来的模型非常满意,则可以提交作业!</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    data_path = <span class="string">"./datasets/la1ji1fe1nle4ishu4ju4ji22-momodel/dataset-resized"</span>  <span class="comment"># 数据集路径</span></span><br><span class="line">    save_model_path = <span class="string">'results/Ynnex1.h5'</span>  <span class="comment"># 保存模型路径和名称</span></span><br><span class="line">    <span class="comment"># 获取数据</span></span><br><span class="line">    train_generator, validation_generator = processing_data(data_path)</span><br><span class="line">    <span class="comment"># 创建、训练和保存模型</span></span><br><span class="line">    model(train_generator, validation_generator, save_model_path)</span><br><span class="line">    <span class="comment"># 评估模型</span></span><br><span class="line">    evaluate_mode(validation_generator, save_model_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据测试</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_result</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">import</span> random,cv2</span><br><span class="line">    <span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">    <span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">    <span class="keyword">from</span> PIL <span class="keyword">import</span> Image </span><br><span class="line"></span><br><span class="line">    <span class="comment"># 导入相关包</span></span><br><span class="line">    <span class="keyword">import</span> glob, os</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 数据集路径</span></span><br><span class="line">    data_path = <span class="string">"./datasets/la1ji1fe1nle4ishu4ju4ji22-momodel/dataset-resized"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取数据名称列表</span></span><br><span class="line">    img_list = glob.glob(os.path.join(data_path, <span class="string">'*/*.jpg'</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打印数据集总量</span></span><br><span class="line">    print(<span class="string">"数据集总数量:"</span>, len(img_list))</span><br><span class="line">    print(<span class="string">"数据路径和名称:"</span>,img_list[<span class="number">0</span>])</span><br><span class="line">    <span class="comment"># 从数据名称列表 img_list 中随机选取 6 个。</span></span><br><span class="line">    <span class="keyword">for</span> i, img_path <span class="keyword">in</span> enumerate(random.sample(img_list, <span class="number">6</span>)):</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 读取图片</span></span><br><span class="line">        img = cv2.imread(img_path)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 将图片从 BGR 模式转为 RGB 模式</span></span><br><span class="line">        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)</span><br><span class="line">        img = Image.fromarray(img)</span><br><span class="line">        plt.imshow(img)</span><br><span class="line">        plt.show()</span><br><span class="line">        res = predict(img)</span><br><span class="line">        print(res)</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"><span class="comment">#     main()</span></span><br><span class="line">    test_result()</span><br></pre></td></tr></table></figure><p>VGG16说明：<a href="https://baijiahao.baidu.com/s?id=1667221544796169037&amp;wfr=spider&amp;for=pc" target="_blank" rel="noopener">https://baijiahao.baidu.com/s?id=1667221544796169037&amp;wfr=spider&amp;for=pc</a></p><h1 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h1><h2 id="csdn"><a class="markdownIt-Anchor" href="#csdn"></a> CSDN</h2><ul><li><a href="https://blog.csdn.net/weixin_40651515/article/details/105804557" target="_blank" rel="noopener">基于深度学习的垃圾分类识别系统</a></li><li><a href="https://blog.csdn.net/qq_34218654/article/details/102885223" target="_blank" rel="noopener">基于深度学习的计算机视觉 - 垃圾分类（附源码）</a></li></ul><h2 id="github"><a class="markdownIt-Anchor" href="#github"></a> Github</h2><ul><li><a href="https://github.com/jzx-gooner/DL-wastesort" target="_blank" rel="noopener">基于深度学习的垃圾分类</a></li><li><strong><a href="https://github.com/wusaifei/garbage_classify" target="_blank" rel="noopener">garbage_classify</a></strong></li><li><strong><a href="https://github.com/Jack-Cherish/Deep-Learning" target="_blank" rel="noopener">Deep-Learning</a></strong></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;homework for ZJU: &lt;a href=&quot;https://mo.zju.edu.cn/homework/zju_ai_2020_ss&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://mo.zju.edu.
      
    
    </summary>
    
    
      <category term="ZJU" scheme="https://nymrli.top/tags/ZJU/"/>
    
      <category term="ML" scheme="https://nymrli.top/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>细品单例模式</title>
    <link href="https://nymrli.top/2020/12/11/%E7%BB%86%E5%93%81%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    <id>https://nymrli.top/2020/12/11/细品单例模式/</id>
    <published>2020-12-11T02:25:26.000Z</published>
    <updated>2020-12-11T13:02:05.492Z</updated>
    
    <content type="html"><![CDATA[<p>虽然还没正式踏入开发就业浪潮中，但为了保证自己的代码质量，最近还是在学设计模式相关内容。以下为读《研磨设计模式》和《设计模式就该这样学：基于经典框架源码和真实业务场景》的读书笔记。</p><blockquote><p>GoF的《设计模式》就是设计模式的始祖、经典教科书。其描述严谨，举例恰当，分类组织，是应该反复细读的经典，两本书皆提及了GoF这本书，引用了GoF中的部分例子。</p></blockquote><h1 id="单例模式"><a class="markdownIt-Anchor" href="#单例模式"></a> 单例模式</h1><h2 id="虚拟场景"><a class="markdownIt-Anchor" href="#虚拟场景"></a> 虚拟场景：</h2><p>读取配置文件的内容（假设系统采用的是properties格式的配置文件）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.javass.dp.singleton.example1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppConfig</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用来存放配置文件中参数A的值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> String parameterA;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用来存放配置文件中参数B的值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> String parameterB;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getParameterA</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> parameterA;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getParameterB</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> parameterB;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">AppConfig</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//调用读取配置文件的方法</span></span><br><span class="line">readConfig();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 读取配置文件，把配置文件中的内容读出来设置到属性上</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">readConfig</span><span class="params">()</span></span>&#123;</span><br><span class="line">Properties p = <span class="keyword">new</span> Properties(); </span><br><span class="line">InputStream in = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">in = AppConfig.class.getResourceAsStream(<span class="string">"AppConfig.properties"</span>);</span><br><span class="line">p.load(in);</span><br><span class="line"><span class="comment">//把配置文件中的内容读出来设置到属性上</span></span><br><span class="line"><span class="keyword">this</span>.parameterA = p.getProperty(<span class="string">"paramA"</span>);</span><br><span class="line"><span class="keyword">this</span>.parameterB = p.getProperty(<span class="string">"paramB"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"装载配置文件出错了，具体堆栈信息如下："</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">in.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="存在的问题"><a class="markdownIt-Anchor" href="#存在的问题"></a> 存在的问题：</h2><p>系统运行期间，如果存在很多个AppConfig的实例对象即配置内容，会严重浪费内存资源。实际上，对于AppConfig这种类<strong>在运行期间只要一个实例对象就够了</strong>。===&gt;单例模式</p><blockquote><p>定义：保证一个类仅有一个实例，并提供一个访问它的全局访问点。</p></blockquote><h2 id="单例实现思路"><a class="markdownIt-Anchor" href="#单例实现思路"></a> 单例实现思路：</h2><p>一个类能够被创建多个实例的问题根源在于类的构造方法是公开的，也就是可以让类的外部通过构造方法来创建多个实例。换句话说，只要类的构造方法能让类的外部访问，就没有办法去控制外部来创建这个类的实例个数。要想控制一个类只被创建一个实例，那么首要的问题就是要把<strong>创建实例的权限收回来，让类自身来负责自己类实例的创建工作</strong>，然后由这个类来提供外部可以访问这个类实例的方法，这就是单例模式的实现方式。</p><h2 id="单例模式的结构和说明"><a class="markdownIt-Anchor" href="#单例模式的结构和说明"></a> 单例模式的结构和说明：</h2><p><img src="/2020/12/11/细品单例模式/%E7%BB%93%E6%9E%84%E5%9B%BE.jpg" alt="结构图"></p><p>Singleton：私有化构造函数来隐藏构造，从而自己负责创建Singleton类自己的唯一实例，并提供一个getlnstance的方法，让外部来访问这个类的唯一实例。</p><h2 id="基础级单例"><a class="markdownIt-Anchor" href="#基础级单例"></a> 基础级单例</h2><h3 id="饿汉式"><a class="markdownIt-Anchor" href="#饿汉式"></a> 饿汉式</h3><blockquote><p>所谓饿汉式，既然饿，那么在创建对象实例的时候就比较着急，饿了嘛，于是在<strong>装载类的时候就创建对象实例</strong>，写法如下：</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton instance = <span class="keyword">new</span> Singleton();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="实现方式"><a class="markdownIt-Anchor" href="#实现方式"></a> 实现方式：</h4><ol><li>私有化构造方法</li><li>提供获取实例的方法getInstance</li><li>把获取实例的方法变成静态方法</li><li>定义存储实例的属性(成员变量)instance</li><li>将实例成员变量instance定义为静态的（由于要在静态方法中使用，被迫写成static，没用到static特性）</li><li>从而实现控制实例的创建</li></ol><h3 id="懒汉式"><a class="markdownIt-Anchor" href="#懒汉式"></a> 懒汉式</h3><blockquote><p>所谓懒汉式，既然是<strong>懒</strong>，那么在创建对象实例的时候就不着急，<strong>会一直等到马上要使用对象实例的时候才会创建</strong>，懒人嘛，总是推托不开的时候才去真正执行工作，因此在装载对象的时候不创建对象实例，写法如下：</p><p>懒汉式体现了延迟加载的思想，lazy load，这个lazy并不是懒惰的意思，而是延迟的意思，Lazy load在实际开发中是种很常见的思想，可以尽可能的节约资源。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义一个变量来存储创建好的类实例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Singleton uniqueInstance = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ▲私有化构造方法，将构造方法权限回收，好在内部控制创建实例的数目</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义一个方法来为客户端提供类实例， 提供访问方法</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 一个Singleton的实例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (instance == <span class="keyword">null</span>) instance = <span class="keyword">new</span> Singleton();</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="实现方式-2"><a class="markdownIt-Anchor" href="#实现方式-2"></a> 实现方式：</h4><ol><li>私有化构造方法</li><li>提供获取实例的方法getInstance</li><li>把获取实例的方法变成静态方法</li><li>定义存储实例的属性(成员变量)instance</li><li>将实例成员变量instance定义为静态的（利用static在类装载的时候执行的特性，从而实现初始化）</li><li>从而实现控制实例的创建</li></ol><p>🎯以上两种就是最基础的单例写法，在不考虑复杂的条件下仅是满足了定义所要求的功能：运行期间只会被创建一个实例，切提供了一个全局唯一访问点（即getInstance方法）</p><h3 id="优缺点分析"><a class="markdownIt-Anchor" href="#优缺点分析"></a> 优缺点分析：</h3><ul><li>时间和空间：<ul><li>饿汉：空间换时间，类加载时就创建。因此当系统有大量单例对象存在时，系统初始化就会造成大量的内存浪费</li><li>懒汉：时间换空间，每次获取时都需要判断是否需要创建实例</li></ul></li><li>线程安全：<ul><li>饿汉：线程安全，因为虚拟机保证智慧加载以此类推，并且加载类的时候不会并发发生。</li><li>懒汉：需要加上synchronized关键字才能确认线程安全，但synchronized加在方法上会比较影响性能，导致大批量线程阻塞，从而导致程序性能大幅下降</li></ul></li></ul><h2 id="双重检查锁"><a class="markdownIt-Anchor" href="#双重检查锁"></a> 双重检查锁</h2><blockquote><p>为了保证加载时的性能-&gt;即不能采用饿汉，而是得采用懒汉lazy load的模式</p><p>那么如何较好地保证线程安全呢？===&gt;在懒汉式的基础上，我们得到了双重检查锁</p></blockquote><p>懒汉式的做法好比地铁进站限流，在寒风刺骨的冬天，所有人都在站前广场转圈，用户体验会不好；而双重检查就是设置两重检查，好比在入站门处和入厅后再闸口检票处再检查一次</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对保存实例的变量添加volatile的修饰。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">static</span> Singleton instance = <span class="keyword">null</span>;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  Singleton <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//先检查实例是否存在，如果不存在才进入下面的同步块</span></span><br><span class="line"><span class="keyword">if</span>(instance == <span class="keyword">null</span>)&#123;</span><br><span class="line"><span class="comment">//同步块，线程安全的创建实例</span></span><br><span class="line"><span class="keyword">synchronized</span>(Singleton.class)&#123;</span><br><span class="line"><span class="comment">//再次检查实例是否存在，如果不存在才真的创建实例</span></span><br><span class="line"><span class="keyword">if</span>(instance == <span class="keyword">null</span>)&#123;</span><br><span class="line">instance = <span class="keyword">new</span> Singleton();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> instance;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>双重检查加锁机制和懒汉不同的在于并不是进入getInstace方法需要同步(由方法加锁-&gt;方法内部加对象锁)，而是不存在实例的时候才会进入同步块。此处阻塞的不是基于整个LazyDoubleCheckSingleton类的阻塞，而是在getInstance方法内部的阻塞，只要逻辑不复杂，对于调用者是感觉不到的。</p><p>▲注：被volatile修饰的变量的值不会被本地线程缓存，所有对该变量的读写都是直接操作共享内存的，从而使得多个线程能够正确的处理该变量。（由于Java1.4前对volatile关键字实现有问题，因此双重检查锁适用于Java1.5以后）。此外<u>volatile可能会屏蔽JVM一些必要的代码优化，所以会降低运行效率</u>，因此一般建议没有特别需要，不要使用volatile。因此，<strong>不建议系统中大量使用双重检查锁</strong>。</p><h2 id="静态内部类式类级内部类"><a class="markdownIt-Anchor" href="#静态内部类式类级内部类"></a> 静态内部类式（类级内部类）</h2><blockquote><p>虽然双重检查锁较之懒汉和饿汉有了不少优化，但双重检查锁仍存在1.volatile性能、2.synchronized性能，有没有什么办法不使用synchronized关键字，还能实现延迟加载和线程安全呢？==&gt;静态内部类式</p></blockquote><h3 id="什么是类级内部类"><a class="markdownIt-Anchor" href="#什么是类级内部类"></a> 什么是类级内部类？</h3><p>简单点说，<strong>类级内部类</strong>指的是，有<u>static修饰的成员式内部类</u>。如果没有static修饰的成员式内部类被称为<strong>对象级内部类</strong>。</p><ul><li>类级内部类相当于其外部类的static成分，<u>它的对象(类级内部类对象)与外部类对象间不存在依赖关系</u>，因此可直接创建。而对象级内部类的实例，是绑定在外部对象实例中的。</li><li>类级内部类中，可以定义静态的方法。在<u>内部类的静态方法</u>中只能够引用外部类中的<strong>静态</strong>成员方法或者成员变量。</li><li><strong>类级内部类相当于其外部类的成员，只有在第一次被使用的时候才会被装载。</strong></li></ul><h4 id="jvm隐含执行同步的情况"><a class="markdownIt-Anchor" href="#jvm隐含执行同步的情况"></a> JVM隐含执行同步的情况：</h4><ul><li>由静态初始化器（在静态字段上或static{}块中的初始化器）初始化数据时</li><li>访问final字段时</li><li>在创建线程之前创建对象时</li><li>线程可以看见它将要处理的对象时</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LazyStaticInnerClassSingleton</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 类级的内部类，也就是静态的成员式内部类，该内部类的实例与外部类的实例没有绑定关系，</span></span><br><span class="line"><span class="comment"> * 而且只有被调用到才会装载，从而实现了延迟加载</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SingletonHolder</span></span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 静态初始化器，由JVM来保证线程安全</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> LazyStaticInnerClassSingleton instance = <span class="keyword">new</span> LazyStaticInnerClassSingleton();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 私有化构造方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">LazyStaticInnerClassSingleton</span><span class="params">()</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LazyStaticInnerClassSingleton <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> SingletonHolder.instance;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解决反射破坏单例问题"><a class="markdownIt-Anchor" href="#解决反射破坏单例问题"></a> 解决反射破坏单例问题</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LazyStaticInnerClassSingleton</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 类级的内部类，也就是静态的成员式内部类，该内部类的实例与外部类的实例没有绑定关系，</span></span><br><span class="line"><span class="comment"> * 而且只有被调用到才会装载，从而实现了延迟加载</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SingletonHolder</span></span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 静态初始化器，由JVM来保证线程安全</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> LazyStaticInnerClassSingleton instance = <span class="keyword">new</span> LazyStaticInnerClassSingleton();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 私有化构造方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">LazyStaticInnerClassSingleton</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (LazyStaticInnerClassSingleton.instance != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"不允许创建多个实例"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LazyStaticInnerClassSingleton <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> SingletonHolder.instance;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="枚举式单例"><a class="markdownIt-Anchor" href="#枚举式单例"></a> 枚举式单例</h2><blockquote><p>虽然静态内部类式已经接近完美了，但还不够优雅，还有没有更优雅的写法呢？—&gt;枚举式单例</p></blockquote><p>对枚举的观点：</p><ul><li>Java的枚举类型实质上是功能齐全的类，因此可以有自己的属性和方法。</li><li>Java枚举类型的基本思想是通过公有的静态final域为每个<u>枚举常量</u>导出<u>实例的类</u>。</li><li>从某个角度讲，<u>枚举</u>是单例的泛型化，<u>本质上是<em>单元素</em>的枚举</u>。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Singleton &#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义一个枚举的元素,它就代表了Singleton的一个实例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">uniqueInstance;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 示意方法，单例可以有自己的操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">singletonOperation</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//功能处理</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用枚举来实现单实例控制会更加简洁，而且<strong>无偿地提供了防序列化（需要增加readResove方法）、反射破坏的机制</strong>，并由JVM从根本上提供保障，绝对防止多次实例化，是更简洁、高效、安全的实现单例的方式。至于为什么可以这么玩，可以看《设计模式就该这样学：基于经典框架源码和真实业务场景》中的源码分析</p><h2 id="容器式单例"><a class="markdownIt-Anchor" href="#容器式单例"></a> 容器式单例</h2><blockquote><p>适用于需要大量创建单例对象的场景，便于管理，但它是非线程安全的。Spring中有用到容器式单例的写法。容器一般就是一个Map</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContainerSingleton</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ContainerSingleton</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String, Object&gt; ioc = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getBean</span><span class="params">(String className)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (ioc) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!ioc.containsKey(className)) &#123;</span><br><span class="line">                Object obj = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    obj = Class.forName(className).newInstance();</span><br><span class="line">                    ioc.put(className, obj);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> obj;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> ioc.get(className)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="模式讲解"><a class="markdownIt-Anchor" href="#模式讲解"></a> 模式讲解：</h2><p>单例模式的范围为一个虚拟机的范围，因为加载类的载类的功能是虚拟机的，一个虚拟机在通过自己的ClassLoader 装载饿汉式实现单例类的时候就会创建一个类的实例。</p><p>▲所以需要注意的是，如果一个虚拟机里面有很多个ClassLoader，而且<u>这些ClassLoader都装载某个类的话(针对饿汉式)，就算这个类是单例，它也会产生很多个实例</u>。当然，如果一个机器上有多个虚拟机，那么每个虚拟机里面都应该至少有一个这个类的实例，也就是说整个机器。<strong>所以这边讨论的单例都不适用于集群环境。</strong></p><p>▲单例模式的本质：控制实例数目</p><h2 id="应用场景"><a class="markdownIt-Anchor" href="#应用场景"></a> 应用场景：</h2><blockquote><p>对于Java来说单例模式就是要保证在一个JVM中只存在单一实例</p></blockquote><ul><li>需要频繁创建的一些类，使用单例可以降低系统的内存压力，减少GC</li><li>某些类创建实例时占用资源较多，或实例化耗时较长，且经常使用</li><li>频繁访问数据库或文件的对象</li><li>对于一些控制硬件级别的操作，或者从系统上来讲应当是单一控制逻辑的操作，如果有多个实例，则无法保证逻辑的统一性。</li></ul><p>p.s. 抽象工厂模式中具体的工厂类就是一个单例</p><h2 id="单例模式的优点"><a class="markdownIt-Anchor" href="#单例模式的优点"></a> 单例模式的优点：</h2><ol><li>可以保证内存中只有一个实例，减少了内存的开销</li><li>可以避免对资源的多重占用</li><li>设置全局访问点，可以优化和共享资源的访问</li></ol><h2 id="单例模式的缺点"><a class="markdownIt-Anchor" href="#单例模式的缺点"></a> 单例模式的缺点：</h2><ol><li>没有接口，扩展困难。如果要扩展，则除了修改原来的代码，没有第二种途径， 违背了开闭原则。好在的是，一般修改单例也比较简单</li><li>在并发测试中，单例不利于代码调试。在调试过程总，如果单例代码没有执行完，也不能模拟生成一个恶心的对象</li><li>单例模式的功能代码通常写在一个类中，如果功能设计不合理，很容易违背单一职责原则</li></ol><h1 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h1><h2 id="lazy-load-缓存思想"><a class="markdownIt-Anchor" href="#lazy-load-缓存思想"></a> Lazy load-&gt;缓存思想</h2><p>缓存使用场景：当某些资源或者数据被频繁地使用，而这些资源或数据存储在系统外部，比如数据库、硬盘文件等，那么每次操作这些数据的时候都得从数据库或者硬盘上去获取，速度会很慢，将造成性能问题。<br>一个简单的解决方法就是：把这些数据<strong>缓存到内存</strong>里面，每次操作的时候，先到内存里面找，看有没有这些数据，如果有，就直接使用，如果没有就获取它，并设置到缓存中，<u>下一次访问的时候就可以直接从内存中获取了</u>，从而节省大量的时间。当然，缓存是一种<strong>典型的空间换时间</strong>的方案。</p><h3 id="缓存基本实现"><a class="markdownIt-Anchor" href="#缓存基本实现"></a> 缓存基本实现</h3><p>在Java开发中最常见的一种实现缓存的方式就是使用<em>Map</em>，基本步骤如下。<br>（1）先到缓存里面查找，看看是否存在需要使用的数据。<br>（2）如果没有找到，那么就创建一个满足要求的数据，然后把这个数据设置到缓存中，以备下次使用。如果找到了相应的数据，或者是创建了相应的数据，那就直接使用这个数据。</p><h2 id="多例控制模式"><a class="markdownIt-Anchor" href="#多例控制模式"></a> 多例控制模式</h2><p>▲单例模式的本质：控制实例数目，只要按照这种思想，我们除了控制单例以外，还可以限制实例具体数目为2、3、4…</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.javass.dp.singleton.example9;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 简单演示如何扩展单例模式，控制实例数目为3个 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OneExtend</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义一个缺省的key值的前缀</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String DEFAULT_PREKEY = <span class="string">"Cache"</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 缓存实例的容器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String,OneExtend&gt; map = <span class="keyword">new</span> HashMap&lt;String,OneExtend&gt;();</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用来记录当前正在使用第几个实例，到了控制的最大数目，就返回从1开始</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> num = <span class="number">1</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义控制实例的最大数目</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> NUM_MAX = <span class="number">3</span>; </span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">OneExtend</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> OneExtend <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">String key = DEFAULT_PREKEY+num;</span><br><span class="line">OneExtend oneExtend = map.get(key);</span><br><span class="line"><span class="keyword">if</span>(oneExtend==<span class="keyword">null</span>)&#123;</span><br><span class="line">oneExtend = <span class="keyword">new</span> OneExtend();</span><br><span class="line">map.put(key, oneExtend);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//把当前实例的序号加1</span></span><br><span class="line">num++;</span><br><span class="line"><span class="keyword">if</span>(num &gt; NUM_MAX)&#123;</span><br><span class="line"><span class="comment">//如果实例的序号已经达到最大数目了，那就重复从1开始获取</span></span><br><span class="line">num = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> oneExtend;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">OneExtend t1 = getInstance();</span><br><span class="line">OneExtend t2 = getInstance();</span><br><span class="line">OneExtend t3 = getInstance();</span><br><span class="line">OneExtend t4 = getInstance();</span><br><span class="line">OneExtend t5 = getInstance();</span><br><span class="line">OneExtend t6 = getInstance();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"t1=="</span>+t1);</span><br><span class="line">System.out.println(<span class="string">"t2=="</span>+t2);</span><br><span class="line">System.out.println(<span class="string">"t3=="</span>+t3);</span><br><span class="line">System.out.println(<span class="string">"t4=="</span>+t4);</span><br><span class="line">System.out.println(<span class="string">"t5=="</span>+t5);</span><br><span class="line">System.out.println(<span class="string">"t6=="</span>+t6);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;虽然还没正式踏入开发就业浪潮中，但为了保证自己的代码质量，最近还是在学设计模式相关内容。以下为读《研磨设计模式》和《设计模式就该这样学：基于经典框架源码和真实业务场景》的读书笔记。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GoF的《设计模式》就是设计模式的始祖、经典教科书。
      
    
    </summary>
    
    
      <category term="计算机基础知识" scheme="https://nymrli.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>浙大2020春夏-人工智能习题3——图像恢复</title>
    <link href="https://nymrli.top/2020/12/09/%E6%B5%99%E5%A4%A72020%E6%98%A5%E5%A4%8F-%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B9%A0%E9%A2%983%E2%80%94%E2%80%94%E5%9B%BE%E5%83%8F%E6%81%A2%E5%A4%8D/"/>
    <id>https://nymrli.top/2020/12/09/浙大2020春夏-人工智能习题3——图像恢复/</id>
    <published>2020-12-09T05:20:46.000Z</published>
    <updated>2020-12-17T07:27:31.056Z</updated>
    
    <content type="html"><![CDATA[<h1 id="习题3-图像恢复"><a class="markdownIt-Anchor" href="#习题3-图像恢复"></a> <strong>习题3</strong> - 图像恢复</h1><h2 id="31-实验内容"><a class="markdownIt-Anchor" href="#31-实验内容"></a> 3.1 <strong>实验内容</strong></h2><p>图像是一种非常常见的信息载体，但是在图像的获取、传输、存储的过程中可能由于各种原因使得图像受到噪声的影响——称为图像退化。图像复原就是重建退化的图像，使其最大限度恢复景物原貌的处理。如何去除噪声的影响，恢复图像原本的信息是计算机视觉中的重要研究问题。</p><p>常见的图像恢复算法有基于空间域的中值滤波、基于小波域的小波去噪、基于偏微分方程的非线性扩散滤波等，在本次实验中，📌<strong>我们要对图像添加噪声，并对添加噪声的图像进行基于模型的去噪</strong>。</p><h2 id="32-实验要求"><a class="markdownIt-Anchor" href="#32-实验要求"></a> 3.2 <strong>实验要求</strong></h2><p>A. 生成受损图像。</p><ul><li>a) 受损图像是由原始图像添加了不同噪声遮罩（noise masks）得到的。</li><li>b) 噪声遮罩仅包含 {0,1} 值。对原图的噪声遮罩的可以每行分别用 0.8/0.4/0.6 的噪声比率产生的，即噪声遮罩每个通道每行 80%/40%/60% 的像素值为 0，其他为 1。</li></ul><p>B. 使用模型，进行图像恢复。</p><p>C. 评估误差为所有恢复图像与原始图像的 2-范数之和，此误差越小越好，其他评估方式包括 Cosine 相似度以及 SSIM 相似度。</p><p>D. 提交程序报告,请在本地编辑并命名为『程序报告.docx』或者 『程序报告.pdf』后， 上传到左侧文件列表中。</p><h2 id="33-实验环境"><a class="markdownIt-Anchor" href="#33-实验环境"></a> 3.3 <strong>实验环境</strong></h2><p>可以使用基于Python的 <a href="https://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_tutorials.html" target="_blank" rel="noopener">OpenCV</a> 库进行图像相关处理，使用 <a href="https://www.numpy.org/" target="_blank" rel="noopener">Numpy</a> 库进行相关数值运算。</p><h2 id="34-参考资料"><a class="markdownIt-Anchor" href="#34-参考资料"></a> 3.4 <strong>参考资料</strong></h2><p>OpenCV：<a href="https://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_tutorials.html" target="_blank" rel="noopener">https://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_tutorials.html</a></p><p>Numpy：<a href="https://www.numpy.org/" target="_blank" rel="noopener">https://www.numpy.org/</a></p><h1 id="notes"><a class="markdownIt-Anchor" href="#notes"></a> notes</h1><h2 id="图像退化复原过程模型"><a class="markdownIt-Anchor" href="#图像退化复原过程模型"></a> 图像退化/复原过程模型</h2><p><img src="https://img-blog.csdn.net/20150715093119065" alt=""></p><h2 id="图像复原处理的过程"><a class="markdownIt-Anchor" href="#图像复原处理的过程"></a> 图像复原处理的过程</h2><p>设原始图像 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">f(x, y),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> 则退化后的图像可以表示为</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>H</mi><mo stretchy="false">[</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>+</mo><mi>η</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x, y)=H[f(x, y)]+\eta(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span> 为退化函数, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>η</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\eta(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 为加性柬声, 复原的日标是得到基于退化图像的一个估计 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\hat{f}(x, y),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> 使得图像能够尽可能地贴近原始图像。 *若H是线性的、空间不变的过程, 则退化图像在空间频域中可以表示为</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><mi>η</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x, y)=h(x, y) * f(x, y)+\eta(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p><p>进行傅立叶变换, 有</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mi>F</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>+</mo><mi>N</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G(u, v)=H(u, v) F(u, v)+N(u, v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span></span></p><h2 id="1-图像增强与图像复原的区别"><a class="markdownIt-Anchor" href="#1-图像增强与图像复原的区别"></a> <strong>1. 图像增强与图像复原的区别</strong></h2><p>图像增强的目的是消除噪声，显现那些被模糊了的细节或简单地突出一幅图像中读者感兴趣的特征，不考虑图像质量下降的原因。图像复原是<strong>利用退化现象的某种先验知识</strong>，建立退化现象的数学模型，再根据模型进行反向的推演运算，以恢复原来的景物图像。因而，图像复原可以理解为图像降质过程的反向过程。建立图像复原的反向过程的数学模型，就是图像复原的主要任务。经过反向过程的数学模型的运算，要想恢复全真的景物图像比较困难。所以， 图像复原本身往往需要有一个质量标准， 即衡量接近全真景物图像的程度，或者说，对原图像的估计是否到达最佳的程度。</p><h2 id="2-噪声模型"><a class="markdownIt-Anchor" href="#2-噪声模型"></a> <strong>2. 噪声模型：</strong></h2><p>噪声主要来源于图像的获取和传输过程。</p><p>（1）图像传感器的工作情况受各种因素的影响，如图像获取中的环境条件和传感器元器件自身的质量。</p><p>（2）图像在传输过程中主要由于所用传输信道被干扰而受到噪声污染。</p><p>**噪声种类：**高斯噪声、瑞利噪声、伽马噪声、指数噪声、均匀分布噪声、脉冲噪声（椒盐噪声）</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="number">-4</span>:<span class="number">.1</span>:<span class="number">4</span>;</span><br><span class="line">subplot(<span class="number">321</span>)</span><br><span class="line">Y1=show_noise_pdf(<span class="string">'gaussian'</span>,x,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">plot(x,Y1);</span><br><span class="line">title(<span class="string">'高斯'</span>);</span><br><span class="line">subplot(<span class="number">322</span>)</span><br><span class="line">Y2=show_noise_pdf(<span class="string">'uniform'</span>,x,<span class="number">-3</span>,<span class="number">3</span>);</span><br><span class="line">plot(x,Y2);</span><br><span class="line">title(<span class="string">'均匀'</span>);</span><br><span class="line">subplot(<span class="number">323</span>)</span><br><span class="line">Y3=show_noise_pdf(<span class="string">'salt &amp; pepper'</span>,x);</span><br><span class="line">plot(x,Y3);</span><br><span class="line">title(<span class="string">'椒盐'</span>);</span><br><span class="line">subplot(<span class="number">324</span>)</span><br><span class="line">Y4=show_noise_pdf(<span class="string">'rayleigh'</span>,x,<span class="number">1</span>);</span><br><span class="line">plot(x,Y4);</span><br><span class="line">title(<span class="string">'瑞利'</span>);</span><br><span class="line">subplot(<span class="number">325</span>)</span><br><span class="line">Y5=show_noise_pdf(<span class="string">'exp'</span>,x,<span class="number">1</span>);</span><br><span class="line">plot(x,Y5);</span><br><span class="line">title(<span class="string">'指数'</span>);</span><br><span class="line">subplot(<span class="number">326</span>)</span><br><span class="line">Y6=show_noise_pdf(<span class="string">'gamma'</span>,x,<span class="number">2</span>,<span class="number">5</span>);</span><br><span class="line">plot(x,Y6);</span><br><span class="line">title(<span class="string">'伽马'</span>);</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdn.net/20180809103221221?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JhaWR1XzM5MDQ0MTc4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><h3 id="噪声概率密度函数probability-density-function"><a class="markdownIt-Anchor" href="#噪声概率密度函数probability-density-function"></a> 噪声概率密度函数probability density function：</h3><h4 id="高斯噪声"><a class="markdownIt-Anchor" href="#高斯噪声"></a> 高斯噪声</h4><p>概率密度函数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><msqrt><mrow><mn>2</mn><mi>π</mi><mi>σ</mi></mrow></msqrt></mfrac><msup><mi>e</mi><mrow><mi mathvariant="normal">−</mi><mfrac><mrow><mo stretchy="false">(</mo><mi>z</mi><mi mathvariant="normal">−</mi><mi>μ</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac></mrow></msup></mrow><annotation encoding="application/x-tex">p(z)=\frac{1}{\sqrt{2πσ}}e^{−\frac{(z−μ)^2}{2σ^2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.8670900000000001em;vertical-align:-0.5379999999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.5510085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5379999999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.32909em;"><span style="top:-3.4534200000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.250957142857143em;"><span style="top:-2.5061857142857145em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9384399999999999em;"><span style="top:-2.93844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.5020714285714285em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mord mtight">−</span><span class="mord mathdefault mtight">μ</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49381428571428565em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span><br>均值：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex">μ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">μ</span></span></span></span><br>方差：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">σ^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p>高斯噪声是一个均值为 0 方差为 $σ_n^2  $的正态分布，是一个加性噪声（在原图的基础上加上噪声即为加噪后的图象）。但要正确地给图片添加高斯噪声，还要取决于程序中读入图片的数据格式。</p><h4 id="瑞利噪声"><a class="markdownIt-Anchor" href="#瑞利噪声"></a> 瑞利噪声</h4><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext> 概率密度函数： </mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>2</mn><mi>b</mi></mfrac><mo stretchy="false">(</mo><mi>z</mi><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mo stretchy="false">(</mo><mi>z</mi><mo>−</mo><mi>a</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mi mathvariant="normal">/</mi><mi>b</mi></mrow></msup><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>z</mi><mo>≥</mo><mi>a</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>z</mi><mo>&lt;</mo><mi>a</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext> 均值： </mtext><mi>μ</mi><mo>=</mo><mi>a</mi><mo>+</mo><msqrt><mrow><mi>π</mi><mi>b</mi></mrow></msqrt><mi mathvariant="normal">/</mi><mn>4</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext> 方差: </mtext><msup><mi>σ</mi><mn>2</mn></msup><mo>=</mo><mfrac><mrow><mi>b</mi><mo stretchy="false">(</mo><mn>4</mn><mo>−</mo><mi>π</mi><mo stretchy="false">)</mo></mrow><mn>4</mn></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}&amp;\text { 概率密度函数： }\\&amp;p(z)=\left\{\begin{array}{ll}\frac{2}{b}(z-a) e^{-(z-a)^{2} / b}, &amp; z \geq a \\0, &amp; z&lt;a\end{array}\right.\\&amp;\text { 均值： } \mu=a+\sqrt{\pi b} / 4\\&amp;\text { 方差: } \sigma^{2}=\frac{b(4-\pi)}{4}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:8.401015000000001em;vertical-align:-3.9505075000000014em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.4505075000000005em;"><span style="top:-7.133967500000001em;"><span class="pstrut" style="height:3.52346em;"></span><span class="mord"></span></span><span style="top:-4.9505075000000005em;"><span class="pstrut" style="height:3.52346em;"></span><span class="mord"></span></span><span style="top:-2.645952499999999em;"><span class="pstrut" style="height:3.52346em;"></span><span class="mord"></span></span><span style="top:-0.5589524999999987em;"><span class="pstrut" style="height:3.52346em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.9505075000000014em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.4505075000000005em;"><span style="top:-7.133967500000001em;"><span class="pstrut" style="height:3.52346em;"></span><span class="mord"><span class="mord"></span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">概率密度函数：</span><span class="mord"> </span></span></span></span><span style="top:-4.9505075000000005em;"><span class="pstrut" style="height:3.52346em;"></span><span class="mord"><span class="mord"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5234599999999998em;"><span style="top:-3.53654em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999998em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">a</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mtight">/</span><span class="mord mathdefault mtight">b</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-2.33654em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0234600000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5234599999999998em;"><span style="top:-3.53654em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">a</span></span></span><span style="top:-2.33654em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0234600000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.645952499999999em;"><span class="pstrut" style="height:3.52346em;"></span><span class="mord"><span class="mord"></span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">均值：</span><span class="mord"> </span></span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981095em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord mathdefault">b</span></span></span><span style="top:-2.941095em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.058904999999999985em;"><span></span></span></span></span></span><span class="mord">/</span><span class="mord">4</span></span></span><span style="top:-0.5589524999999987em;"><span class="pstrut" style="height:3.52346em;"></span><span class="mord"><span class="mord"></span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">方差</span><span class="mord">: </span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="mopen">(</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.9505075000000014em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>曲线：<img src="https://img-blog.csdn.net/20150715100251107" alt="这里写图片描述"></p><h4 id="伽马爱尔兰噪声"><a class="markdownIt-Anchor" href="#伽马爱尔兰噪声"></a> 伽马（爱尔兰）噪声</h4><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext> 概率密度函数： </mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mrow><msup><mi>a</mi><mi>b</mi></msup><msup><mi>z</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><mrow><mo stretchy="false">(</mo><mi>b</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">!</mo></mrow></mfrac><msup><mi>e</mi><mrow><mo>−</mo><mi>a</mi><mi>z</mi></mrow></msup><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>z</mi><mo>≥</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>z</mi><mo>&lt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext> 均值： </mtext><mi>μ</mi><mo>=</mo><mfrac><mi>b</mi><mi>a</mi></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext> 方差： </mtext><msup><mi>σ</mi><mn>2</mn></msup><mo>=</mo><mfrac><mi>b</mi><msup><mi>a</mi><mn>2</mn></msup></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}&amp;\text { 概率密度函数： }\\&amp;p(z)=\left\{\begin{array}{ll}\frac{a^{b} z^{(b-1)}}{(b-1) !} e^{-a z}, &amp; z \geq 0 \\0, &amp; z&lt;0\end{array}\right.\\&amp;\text { 均值： } \mu=\frac{b}{a}\\&amp;\text { 方差： } \sigma^{2}=\frac{b}{a^{2}}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:9.51491em;vertical-align:-4.507455000000001em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.007455em;"><span style="top:-7.917455em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"></span></span><span style="top:-5.507455em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"></span></span><span style="top:-2.585985em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"></span></span><span style="top:-0.228544999999999em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.507455000000001em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.007455em;"><span style="top:-7.917455em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">概率密度函数：</span><span class="mord"> </span></span></span></span><span style="top:-5.507455em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6453499999999999em;"><span style="top:-3.64535em;"><span class="pstrut" style="height:3.0707em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0707em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">b</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mclose mtight">!</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9270285714285713em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9667142857142857em;"><span style="top:-2.966714285714285em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">b</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-2.2853499999999998em;"><span class="pstrut" style="height:3.0707em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1453500000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6453499999999999em;"><span style="top:-3.64535em;"><span class="pstrut" style="height:3.0707em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-2.2853499999999998em;"><span class="pstrut" style="height:3.0707em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1453500000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.585985em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">均值：</span><span class="mord"> </span></span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-0.228544999999999em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">方差：</span><span class="mord"> </span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.507455000000001em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>曲线：<img src="https://img-blog.csdn.net/20150715101947373" alt="这里写图片描述"><br>注意：只有当分母是Γ(b)Γ(b)时，才是伽马噪声，如表达式中的，该密度近似称为爱尔兰密度</p><h4 id="指数分布噪声"><a class="markdownIt-Anchor" href="#指数分布噪声"></a> 指数分布噪声</h4><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext> 概率密度函数： </mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><msup><mi>e</mi><mrow><mo>−</mo><mi>a</mi><mi>z</mi></mrow></msup><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>z</mi><mo>≥</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>z</mi><mo>&lt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext> 均值: </mtext><mi>μ</mi><mo>=</mo><mfrac><mn>1</mn><mi>a</mi></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext> 方差： </mtext><msup><mi>σ</mi><mn>2</mn></msup><mo>=</mo><mfrac><mn>1</mn><msup><mi>a</mi><mn>2</mn></msup></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}&amp;\text { 概率密度函数： }\\&amp;p(z)=\left\{\begin{array}{ll}a e^{-a z}, &amp; z \geq 0 \\0, &amp; z&lt;0\end{array}\right.\\&amp;\text { 均值: } \mu=\frac{1}{a}\\&amp;\text { 方差： } \sigma^{2}=\frac{1}{a^{2}}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:8.814910000000001em;vertical-align:-4.157455000000001em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.657455em;"><span style="top:-7.267455em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"></span></span><span style="top:-5.157454999999999em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"></span></span><span style="top:-2.5859849999999995em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"></span></span><span style="top:-0.2785449999999997em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.157455000000001em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.657455em;"><span style="top:-7.267455em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord"></span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">概率密度函数：</span><span class="mord"> </span></span></span></span><span style="top:-5.157454999999999em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.5859849999999995em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord"></span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">均值</span><span class="mord">: </span></span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-0.2785449999999997em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord"></span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">方差：</span><span class="mord"> </span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.157455000000001em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h4 id="脉冲椒盐噪声"><a class="markdownIt-Anchor" href="#脉冲椒盐噪声"></a> 脉冲（椒盐）噪声</h4><p>概率密度函数： 双极脉冲口声 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>P</mi><mi>a</mi></msub><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>z</mi><mo>=</mo><mi>a</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>P</mi><mi>b</mi></msub><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>z</mi><mo>=</mo><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> 其他 </mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">p(z)=\left\{\begin{array}{ll}P_{a}, &amp; z=a \\ P_{b}, &amp; z=b \\ 0, &amp; \text { 其他 }\end{array}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.49999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">a</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">b</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">其他</span><span class="mord"> </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br>如果b&gt;a，灰度值b在图像中将显示为一个亮点，相反，a的值将显示为一个暗点。若Pa或Pb为零，则脉冲噪声为单极脉冲。如果两者都不为零，尤其在它们近似相等时，脉冲噪声将类似于随机分布在图像上的胡椒和盐粉微粒，因此双极脉冲噪声也称为椒盐噪声。</p><p><img src="https://img-blog.csdn.net/20150715103542532" alt=""></p><h2 id="3-空间滤波"><a class="markdownIt-Anchor" href="#3-空间滤波"></a> <strong>3. 空间滤波</strong></h2><blockquote><p>图像滤波器又叫做<strong>掩模</strong>、<strong>核</strong>、<strong>模板</strong>或<strong>窗口</strong>，是与原图像的子图像有相同维数的子图像，滤波器子图像中的值是<strong>系数值</strong>，不是像素值，滤波器的处理结果是子图像中心位置像素值等于被掩住位置的像素值与滤波器中系数的<strong>点积和</strong>。</p></blockquote><p><u>无论是平均平滑还是高斯平滑，在处理图像噪声时，都或多或少会对图片产生一定的模糊</u>，损失部分信息。较为理想的情况，是可以选择性地进行滤波，只在噪声区域进行平滑，而在无噪声区域不进行平滑，将模糊的影响降到最低，这就是自适应性滤波的思想。通常噪声的存在，可能会使得附近邻域内，极值的上下差距较大，或者是方差较大，我们可以设置一定的阈值来判断该点是否需要进行平滑。不过这个不是该章节的内容。</p><p>​    不同的滤波器在处理不同类型的噪声是效果不同，对于线性平滑滤波，在处理像素邻域内的噪声点时，噪声或多或少都会影响该点的像素值计算(以高斯平滑为例，距离近则影响大，距离远则影响小，与距离的平方呈反比)；但是中值滤波通常可以将噪声点直接忽略掉。同时，中值滤波在降噪的同时引起的模糊效应较低。中值滤波的一种典型应用，就是用来消除椒盐(salt &amp; pepper)噪声。</p><hr><p>**空间滤波器种类：**均值滤波器（适于高斯噪声）、统计排序滤波器（适于椒盐噪声）、自适应局部噪声消除滤波器（适于所有噪声）、自适应中值滤波器（适于椒盐噪声）。</p><p>空域滤波器分为<strong>平滑滤波器</strong>和<strong>锐化滤波器</strong>，平滑滤波用<strong>积分</strong>实现，锐化滤波用<strong>微分</strong>实现</p><ul><li><p>平滑滤波器（低通滤波器）：------体现一种平均，所以模板均下来一般为1</p><ul><li><p>作用：****模糊处理****:去除图像中一些不重要的细节、减小噪声</p></li><li><p>分类：</p><p>1.<strong>线性滤波器</strong>：均值滤波器</p><p>2.<strong>非线性滤波器</strong>（一般指统计排序滤波器）： 中值滤波器</p></li></ul></li><li><p>**锐化滤波（高通滤波器）****-----**体现一种插值，所以模板均下来是0</p><ul><li>作用：1.提取图像的边缘信息、2.突出图像边缘及细节、3.拟补平滑滤波造成的边缘模糊</li></ul></li></ul><h3 id="31-均值滤波器均值滤波器"><a class="markdownIt-Anchor" href="#31-均值滤波器均值滤波器"></a> 3.1 均值滤波器——均值滤波器</h3><ul><li><p>算术均值滤波器 描述: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow></msub><mi>g</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{f}(x, y)=\sum_{(s, t) \in S_{x y}} g(s, t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.24703em;vertical-align:-0.49703em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22528999999999982em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span><br>结果：模糊了结果, 降低了口声<br>适用：适用于高斯口声或均匀随机噪声</p></li><li><p>几何均值滤波器 描述: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><msub><mo>∏</mo><mrow><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow></msub><mi>g</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\hat{f}(x, y)=\left[\prod_{(s, t) \in S_{x y}} g(s, t)\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22528999999999982em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">]</span></span></span></span></span></span><br>结果：和算术均值滤波器相比, 丟失更少的细节<br>适用：同算术均值滤波器</p></li><li><p>谐波均值滤波器 描述: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>m</mi><mi>n</mi></mrow><mrow><msub><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>z</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>z</mi><mi>y</mi></mrow></msub></mrow></msub><mfrac><mn>1</mn><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow></mfrac></mrow><annotation encoding="application/x-tex">\hat{f}(x, y)=\frac{m n}{\sum_{(z, y) \in S_{z y}} \frac{1}{g(s, t)}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.518639em;vertical-align:-0.8232470000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.5989799999999996em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.21427571428571424em;"><span style="top:-2.214275714285714em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.23056em;"><span style="top:-2.3000000000000003em;margin-left:-0.05764em;margin-right:0.1em;"><span class="pstrut" style="height:2.5em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39444em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6031814285714286em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.640785714285714em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5377857142857143em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8232470000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>结果：谐波均值滤波器对于“盐”噪声效果更好，但是不适用于“胡椒”噪声。<br>适用：像高斯那样的噪声</p></li><li><p>逆谐波均值滤波器<br>其实Q称为滤波器的阶数，当Q值为正时，滤波器用于消除“胡椒”噪声；当Q值为负时，滤波器用于消除“盐”噪声。但它不能同时消除两种噪声，当Q值为0时，逆谐波滤波器变为算术均值滤波器；当Q为-1时，逆谐波均值滤波器退变为谐波均值滤波器。<br>适用：脉冲噪声<br>缺点：必须知道是明噪声还是暗噪声</p></li><li><p>高斯滤波</p><p>GaussianBlur， k窗口值都是奇数，如3、5、7，越靠近中心的权重越大。整个高斯核跟图像窗口做卷积后取其值</p></li></ul><h3 id="32-顺序统计滤波器非线性滤波器"><a class="markdownIt-Anchor" href="#32-顺序统计滤波器非线性滤波器"></a> 3.2 顺序统计滤波器——非线性滤波器</h3><ul><li><p>中值滤波器<br>描述: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi mathvariant="normal">median</mi><mo>⁡</mo><mrow><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub><mo stretchy="false">{</mo><mi>g</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow></msub></mrow><annotation encoding="application/x-tex">\hat{f}(x, y)=\operatorname{median}_{(s, t) \in S_{x y}\{g(s, t)\}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0719599999999998em;vertical-align:-0.3775199999999999em;"></span><span class="mop"><span class="mop"><span class="mord mathrm">m</span><span class="mord mathrm">e</span><span class="mord mathrm">d</span><span class="mord mathrm">i</span><span class="mord mathrm">a</span><span class="mord mathrm">n</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34479999999999994em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mopen mtight">{</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mclose mtight">}</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3775199999999999em;"><span></span></span></span></span></span></span></span></span></span>，中值滤波本质上是一个<strong>统计排序滤波器</strong>，是以该点为中心的的邻域内的所有像素的统计排序中值作为该点的响应；而平滑就是加权平均数作为响应，概念上有一定差别。<br>适用：对单极或双极脉冲噪声非常有效</p><p>视频讲解：<a href="https://www.bilibili.com/video/BV1fQ4y1N7EP?from=search&amp;seid=11848827709822211739" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1fQ4y1N7EP?from=search&amp;seid=11848827709822211739</a></p></li><li><p>最大值滤波器 描述: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>z</mi><mi>y</mi></mrow></msub></mrow></msub><mo stretchy="false">{</mo><mi>g</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\hat{f}(x, y)=\max _{(s, t) \in S_{z y}}\{g(s, t)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1275199999999999em;vertical-align:-0.3775199999999999em;"></span><span class="mop"><span class="mop">max</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34479999999999994em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3775199999999999em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span><br>结果:<br>适用：发现图像中的最亮点，故适用于去除“胡椒”噪声（黑色）</p></li><li><p>最小值滤波器 描述: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow></msub><mo stretchy="false">{</mo><mi>g</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\hat{f}(x, y)=\min _{(s, t) \in S_{x y}}\{g(s, t)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1275199999999999em;vertical-align:-0.3775199999999999em;"></span><span class="mop"><span class="mop">min</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34479999999999994em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3775199999999999em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span><br>适用: 发现图像中的最暗点，适用于去除“盐”噪声（白色）</p></li><li><p>中点滤波器 描述: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><msub><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow></msub><mo stretchy="false">{</mo><mi>g</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mo>+</mo><msub><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow></msub><mo stretchy="false">{</mo><mi>g</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\hat{f}(x, y)=\left[\max _{(s, t) \in S_{x y}}\{g(s, t)\}+\min _{(s, t) \in S_{x y}}\{g(s, t)\}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.22752em;vertical-align:-0.3775199999999999em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mop"><span class="mop">max</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34479999999999994em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3775199999999999em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop"><span class="mop">min</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34479999999999994em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3775199999999999em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose">}</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span></span><br>适用: 结合了顺序统计和求平均，对高斯和均匀随机分布的噪声有很好的效果</p></li><li><p>修正后的阿尔法均值滤波體 描述: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mi>m</mi><mi>n</mi></mrow></mfrac><msub><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow></msub><mrow><mo fence="true">{</mo><msub><mi>g</mi><mi>r</mi></msub><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">\hat{f}(x, y)=\frac{1}{m n} \sum_{(s, t) \in S_{x y}}\left\{g_{r}(s, t)\right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.342138em;vertical-align:-0.49703em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22528999999999982em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span></span><br>在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>邻域内取点g（s，t）最高灰度值的d/2和最低灰度值的d/2，用gr(s,t)来代表剩余的mn-d个像素，由这些剩余像素点的平均值形成的滤波器称为修正后的阿尔法均值滤波器<br>当d=0时，退变为算术均值滤波器；当d=（mn-d）/2时，退变为中值滤波器。<br>适用：对多重混合的噪声有很好的效果</p></li></ul><h3 id="33-自适应滤波器"><a class="markdownIt-Anchor" href="#33-自适应滤波器"></a> 3.3 自适应滤波器</h3><p>自适应滤波器的行为变化基于由m*n矩形窗口Sxy定义的区域内图像的统计特性，它的性能要明显优于前面介绍的滤波器，代价是滤波器的复杂度。</p><ul><li><p>自适应、局部噪声消除滤波器<br>描述: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><mfrac><msubsup><mi>σ</mi><mi>η</mi><mn>2</mn></msubsup><msubsup><mi>σ</mi><mi>L</mi><mn>2</mn></msubsup></mfrac><mrow><mo fence="true">[</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><msub><mi>m</mi><mi>L</mi></msub><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\hat{f}(x, y)=g(x, y)-\frac{\sigma_{\eta}^{2}}{\sigma_{L}^{2}}\left[g(x, y)-m_{L}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.842425em;vertical-align:-0.611085em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2313399999999999em;"><span style="top:-2.62642em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051142857142857em;"><span style="top:-2.160707142857143em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3392928571428572em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.60742em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.214em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span></span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.42488571428571426em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.611085em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span><br>其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>σ</mi><mi>η</mi><mn>2</mn></msubsup><mo separator="true">,</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_{\eta}^{2}, g(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.197216em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 形成的噪声方差<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mi>L</mi></msub><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">m_{L},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 局部像素点的均值<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>σ</mi><mi>L</mi><mn>2</mn></msubsup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\sigma_{L}^{2},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.089439em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.424669em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span> 局部方差<br>滤波器性能预期：<br>(1) 如果 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>σ</mi><mi>η</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sigma_{\eta}^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.197216em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span> 为零, 滤波器应该简单的返回 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 的值。<br>(2) 如果局部方差与 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>σ</mi><mi>η</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sigma_{\eta}^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.197216em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span> 是高度相关的, 那么滤波器要返回一个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 的近似值。<br>(3) 如果两个方差相等, 希望滤波器返回区域Sxy上像素的算术均值。 个关键的问题是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>σ</mi><mi>η</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sigma_{\eta}^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.197216em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span> 未知, 需要进行估计，合理的估计会带来较好的滤波效果。 适用：防止由于缺乏图像噪声方差知识而产生的无意义结果, 适用均值和方差确定的加性高斯口声。</p></li><li><p>自适应中值滤波器<br>描述：自适应中值滤波算法分两层进行<br>先考虑如下符号：</p><ul><li>Zmin=Sxy中灰度值的最小值</li><li>Zmax=Sxy中灰度值的最大值</li><li>Zmed=Sxy中灰度值的中间值</li><li>Zxy=在坐标（x，y）上的灰度值</li><li>Smax=Sxy允许的最大尺寸<br>算法流程：<br>A层： A1=Zmed-Zmin；<br>A2=Zmed-Zmax；<br>如果A1&gt;0且A2&lt;0（即Zmin</li></ul></li></ul><p>from: <a href="https://blog.csdn.net/xdmdth/article/details/46889091?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-3.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-3.control" target="_blank" rel="noopener">https://blog.csdn.net/xdmdth/article/details/46889091?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-3.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-3.control</a></p><h1 id="mycode"><a class="markdownIt-Anchor" href="#mycode"></a> Mycode</h1><h2 id="增加噪声"><a class="markdownIt-Anchor" href="#增加噪声"></a> 增加噪声</h2><h3 id="椒盐噪声"><a class="markdownIt-Anchor" href="#椒盐噪声"></a> 椒盐噪声</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NoiseGenerator</span>:</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_pulse_noise</span><span class="params">(im, noise_ratios=<span class="number">0.3</span>)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        给图像增加脉冲噪声</span></span><br><span class="line"><span class="string">        脉冲噪声：噪声点只有两种情况，全黑or全白，因此又称为椒盐噪声</span></span><br><span class="line"><span class="string">        :param im: 待处理的图像</span></span><br><span class="line"><span class="string">        :param noise_ratios: 噪声比</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        h, w = im.shape[<span class="number">0</span>:<span class="number">2</span>]                            <span class="comment"># 获得图像的长宽</span></span><br><span class="line">        p_size = h * w                                  <span class="comment"># 计算出图像的平面大小</span></span><br><span class="line">        <span class="keyword">for</span> r <span class="keyword">in</span> range(int(p_size * noise_ratios)):     <span class="comment"># 噪声点数量</span></span><br><span class="line">            <span class="comment"># 获得噪声的随机位置</span></span><br><span class="line">            rand_h = random.randint(<span class="number">0</span>, h - <span class="number">1</span>)</span><br><span class="line">            rand_w = random.randint(<span class="number">0</span>, w - <span class="number">1</span>)</span><br><span class="line">            <span class="comment"># 两种处理: 1.像素点设置为全黑，2.像素点设置为全白</span></span><br><span class="line">            im[rand_h, rand_w, :] = np.array([<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]) <span class="keyword">if</span> random.random() &lt; <span class="number">0.5</span> <span class="keyword">else</span> np.array([<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>])</span><br><span class="line">        <span class="keyword">return</span> im</span><br></pre></td></tr></table></figure><h3 id="高斯噪声-2"><a class="markdownIt-Anchor" href="#高斯噪声-2"></a> 高斯噪声</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NoiseGenerator</span>:</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_normalization</span><span class="params">(cls, image)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        将数据线性归一化</span></span><br><span class="line"><span class="string">        :param image: 图片矩阵，一般是np.array 类型</span></span><br><span class="line"><span class="string">        :return: 将归一化后的数据，在（0,1）之间</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="comment"># 获取图片数据类型对象的最大值和最小值</span></span><br><span class="line">        info = np.iinfo(image.dtype)</span><br><span class="line">        <span class="comment"># 图像数组数据放缩在 0-1 之间</span></span><br><span class="line">        <span class="keyword">return</span> image.astype(np.double) / info.max</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_gaussian_noise</span><span class="params">(im, mean=<span class="number">0</span>, var=<span class="number">0.005</span>)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        添加高斯噪声</span></span><br><span class="line"><span class="string">        :param im:</span></span><br><span class="line"><span class="string">        :param mean: 均值</span></span><br><span class="line"><span class="string">        :param var: 方差</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="comment"># image = np.array(im / 255, dtype=float)   # 将像素值归一， (0, 1)</span></span><br><span class="line">        image = NoiseGenerator._normalization(im)   <span class="comment"># 将像素值归一, (0, 1)</span></span><br><span class="line">        noise = np.random.normal(mean, var ** <span class="number">0.5</span>, image.shape)  <span class="comment"># 产生高斯噪声</span></span><br><span class="line">        noised_im = image + noise  <span class="comment"># 直接将归一化的图片与噪声相加</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">clip_img</span><span class="params">(noised_im)</span>:</span></span><br><span class="line">            <span class="string">"""</span></span><br><span class="line"><span class="string">            将值限制在(-1或0, 1)间，然后乘255恢复</span></span><br><span class="line"><span class="string">            :param noised_im: 加了噪声的图片</span></span><br><span class="line"><span class="string">            :return: clip过的图片</span></span><br><span class="line"><span class="string">            """</span><span class="string">""</span></span><br><span class="line">            low_clip = <span class="number">-1.</span> <span class="keyword">if</span> noised_im.min() &lt; <span class="number">0</span> <span class="keyword">else</span> <span class="number">0.</span> <span class="comment"># 如果最小值小于1, 则边界设为(-1, 1)</span></span><br><span class="line">            out_im = np.clip(noised_im, low_clip, <span class="number">1.0</span>)  <span class="comment"># 如果noised_im中像素小于low_clip则置为low_clip, 大于1值置为1</span></span><br><span class="line">            out_im = np.uint8(out_im * <span class="number">255</span>) <span class="comment"># 将(-1, 1)的浮点型转成(0, 255)的整型</span></span><br><span class="line">            <span class="keyword">return</span> out_im</span><br><span class="line">        <span class="keyword">return</span> clip_img(noised_im)</span><br></pre></td></tr></table></figure><p>▲这边肯定有人会好奇<code>out_im = np.uint8(out_im * 255)</code>并不是将其转换到(0, 255)，而是(-255, 255)。 解释一下：——注意这边的<code>np.uint8</code>可以看到这边的数据类型就是8位int，所以范围是0-255，因此即使num=-55，那么计算的结果其实是201； num=-1，结果其实是255。</p><p>法二：skimage</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> skimage <span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> skimage</span><br><span class="line"><span class="keyword">import</span> pylab</span><br><span class="line">impath = <span class="string">"000001.jpg"</span></span><br><span class="line">image = io.imread(impath)</span><br><span class="line">img1 = image / <span class="number">255.00</span><span class="comment"># 均一化处理</span></span><br><span class="line">img2 = skimage.util.random_noise(image,mode=<span class="string">'gaussian'</span>,seed=<span class="keyword">None</span>,clip=<span class="keyword">True</span>)</span><br><span class="line">plt.figure(<span class="number">1</span>)</span><br><span class="line">plt.subplot(<span class="number">121</span>)</span><br><span class="line">plt.imshow(img1)</span><br><span class="line">plt.title(<span class="string">"Origin picture"</span>)</span><br><span class="line">plt.subplot(<span class="number">122</span>)</span><br><span class="line">plt.imshow(img2)</span><br><span class="line">plt.title(<span class="string">"Add Gaussian noise"</span>)</span><br><span class="line">pylab.show()</span><br><span class="line">plt.savefig(<span class="string">"noise_image.jpg"</span>)</span><br></pre></td></tr></table></figure><p>注意到：增加高斯噪声还可以用图像三方库完成的：<code>skimage.util.random_noise(image,mode ='gaussian',seed=None,clip=True)</code></p><h3 id="skimage的简介"><a class="markdownIt-Anchor" href="#skimage的简介"></a> skimage的简介</h3><blockquote><p>skimage即是Scikit-Image。基于python脚本语言开发的数字图片处理包，比如PIL,Pillow, opencv, scikit-image等。</p><p>PIL和Pillow只提供最基础的数字图像处理，功能有限；opencv实际上是一个c++库，只是提供了python接口，更新速度非常慢。scikit-image是基于<strong>scipy</strong>的一款图像处理包，它将图片作为numpy数组进行处理，正好与matlab一样，因此，我们最终选择scikit-image进行数字图像处理。</p><p>skimage包的全称是scikit-image SciKit (toolkit for SciPy) ，它对scipy.ndimage进行了扩展，提供了更多的图片处理功能。它是由python语言编写的，由scipy 社区开发和维护。skimage包由许多的子模块组成，各个子模块提供不同的功能。</p></blockquote><table><thead><tr><th>子模块名称</th><th style="text-align:center">主要实现功能</th></tr></thead><tbody><tr><td>io</td><td style="text-align:center">读取、保存和显示图片或视频</td></tr><tr><td>data</td><td style="text-align:center">提供一些测试图片和样本数据</td></tr><tr><td>color</td><td style="text-align:center">颜色空间变换</td></tr><tr><td>filters</td><td style="text-align:center">图像增强、边缘检测、排序滤波器、自动阈值等</td></tr><tr><td>draw</td><td style="text-align:center">操作于numpy数组上的基本图形绘制，包括线条、矩形、圆和文本等</td></tr><tr><td>transform</td><td style="text-align:center">几何变换或其它变换，如旋转、拉伸和拉东变换等</td></tr><tr><td>morphology</td><td style="text-align:center">形态学操作，如开闭运算、骨架提取等</td></tr><tr><td>exposure</td><td style="text-align:center">图片强度调整，如亮度调整、直方图均衡等</td></tr><tr><td>feature</td><td style="text-align:center">特征检测与提取等</td></tr><tr><td>measure</td><td style="text-align:center">图像属性的测量，如相似性或等高线等</td></tr><tr><td>segmentation</td><td style="text-align:center">图像分割</td></tr><tr><td>restoration</td><td style="text-align:center">图像恢复</td></tr><tr><td>util</td><td style="text-align:center">通用函数</td></tr></tbody></table><h3 id="数据加模糊高斯模糊"><a class="markdownIt-Anchor" href="#数据加模糊高斯模糊"></a> 数据加模糊——高斯模糊：</h3><ul><li>本质上是低通滤波器，输出图像的每个像素点是原图像上对应像素点与周围像素点的加权和。</li><li>即用高斯分布权值矩阵与原始图像矩阵做卷积运算。</li></ul><p><a href="python%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0-%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%9B%BE%E7%89%87%E5%8A%A0%E9%81%AE%E6%8C%A1%E3%80%81%E5%99%AA%E5%A3%B0%E3%80%81%E6%A8%A1%E7%B3%8A">https://blog.csdn.net/qq_37995260/article/details/100351153</a></p><p><a href="http://www.cppcns.com/jiaoben/python/253632.html" target="_blank" rel="noopener">Python给图像添加噪声具体操作</a></p><h2 id="增加噪声noise_mask_image"><a class="markdownIt-Anchor" href="#增加噪声noise_mask_image"></a> 增加噪声noise_mask_image</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CGK提供的，巧用了np.random.choice，学习了</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">noise_mask_image</span><span class="params">(img, noise_ratio)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    根据题目要求生成受损图片</span></span><br><span class="line"><span class="string">    :param img: 图像矩阵，一般为 np.ndarray</span></span><br><span class="line"><span class="string">    :param noise_ratio: 噪声比率，可能值是0.4/0.6/0.8</span></span><br><span class="line"><span class="string">    :return: noise_img 受损图片, 图像矩阵值 0-1 之间，数据类型为 np.array, </span></span><br><span class="line"><span class="string">             数据类型对象 (dtype): np.double, 图像形状:(height,width,channel),通道(channel) 顺序为RGB</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 受损图片初始化</span></span><br><span class="line">    noise_img = <span class="keyword">None</span></span><br><span class="line">    <span class="comment"># -------------实现受损图像答题区域-----------------</span></span><br><span class="line">    mask = np.random.choice([<span class="number">0</span>, <span class="number">1</span>], size=(img.shape[<span class="number">0</span>],img.shape[<span class="number">1</span>],img.shape[<span class="number">2</span>]), p = [noise_ratio, <span class="number">1</span> - noise_ratio])</span><br><span class="line">    noise_img = mask * img</span><br><span class="line">    <span class="comment"># -----------------------------------------------</span></span><br><span class="line">    <span class="keyword">return</span> noise_img</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 符合题意版本， 但是过不了样例，说产生的比例不正确</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">noise_mask_image</span><span class="params">(img, noise_ratio)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    根据题目要求生成受损图片</span></span><br><span class="line"><span class="string">    :param img: 图像矩阵，一般为 np.ndarray</span></span><br><span class="line"><span class="string">    :param noise_ratio: 噪声比率，可能值是0.4/0.6/0.8</span></span><br><span class="line"><span class="string">    :return: noise_img 受损图片, 图像矩阵值 0-1 之间，数据类型为 np.array, </span></span><br><span class="line"><span class="string">             数据类型对象 (dtype): np.double, 图像形状:(height,width,channel),通道(channel) 顺序为RGB</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 受损图片初始化</span></span><br><span class="line">    noise_img = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -------------实现受损图像答题区域-----------------</span></span><br><span class="line">    <span class="keyword">import</span> random</span><br><span class="line">    <span class="keyword">from</span> copy <span class="keyword">import</span> deepcopy</span><br><span class="line">    noise_img = deepcopy(img)</span><br><span class="line">    h, w = img.shape[: <span class="number">2</span>]  <span class="comment"># h为图片的长, w为图片的宽</span></span><br><span class="line"><span class="comment">#     noise_img = normalization(img)</span></span><br><span class="line">    <span class="keyword">for</span> dh <span class="keyword">in</span> range(h):  <span class="comment"># 遍历每行</span></span><br><span class="line">        cols = range(w)</span><br><span class="line">        mask_indexes = random.sample(cols, int(w * noise_ratio))</span><br><span class="line">        pixel_list = [<span class="number">0</span> <span class="keyword">if</span> i <span class="keyword">in</span> mask_indexes <span class="keyword">else</span> <span class="number">1</span> <span class="keyword">for</span> i <span class="keyword">in</span> cols]</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> cols:</span><br><span class="line">            noise_img[dh, c, :] = noise_img[dh, c, :] * pixel_list[c]</span><br><span class="line">    <span class="comment"># -----------------------------------------------</span></span><br><span class="line">    noise_img = np.array(noise_img, dtype=<span class="string">'double'</span>)</span><br><span class="line">    <span class="keyword">return</span> noise_img</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/qi-yuan-008/p/12581979.html" target="_blank" rel="noopener">Python的random操作</a></p><h2 id="图像恢复"><a class="markdownIt-Anchor" href="#图像恢复"></a> 图像恢复</h2><h3 id="中值滤波demo"><a class="markdownIt-Anchor" href="#中值滤波demo"></a> 中值滤波demo</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">AddNoise</span><span class="params">(src, dst, probility=<span class="number">0.05</span>)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    salt_pepper增加噪声</span></span><br><span class="line"><span class="string">    :param src:</span></span><br><span class="line"><span class="string">    :param dst:</span></span><br><span class="line"><span class="string">    :param probility:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    imarray = np.array(Image.open(src))</span><br><span class="line">    height, width = imarray.shape[:<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(height):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(width):</span><br><span class="line">            <span class="keyword">if</span> np.random.random(<span class="number">1</span>) &lt; probility:</span><br><span class="line">                <span class="keyword">if</span> np.random.random(<span class="number">1</span>) &lt; <span class="number">0.5</span>:</span><br><span class="line">                    imarray[i, j, :] = <span class="number">0</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    imarray[i, j, :] = <span class="number">255</span></span><br><span class="line">    new_im = Image.fromarray(imarray)</span><br><span class="line">    new_im.save(dst)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">MedianFilter</span><span class="params">(src, dst, k=<span class="number">3</span>, padding=None)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    中值滤波</span></span><br><span class="line"><span class="string">    :param src:</span></span><br><span class="line"><span class="string">    :param dst:</span></span><br><span class="line"><span class="string">    :param k: 过滤器核大小</span></span><br><span class="line"><span class="string">    :param padding:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    imarray = np.array(Image.open(src))</span><br><span class="line">    height, width, channels = imarray.shape</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> padding:</span><br><span class="line">        edge = int((k - <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> height - <span class="number">1</span> - edge &lt;= edge <span class="keyword">or</span> width - <span class="number">1</span> - edge &lt;= edge:</span><br><span class="line">            print(<span class="string">"The parameter k is to large."</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">        new_arr = np.zeros((height, width, <span class="number">3</span>), dtype=<span class="string">"uint8"</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(height):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(width):</span><br><span class="line">                <span class="keyword">for</span> c <span class="keyword">in</span> range(channels):           <span class="comment"># 处理3个通道</span></span><br><span class="line">                    <span class="keyword">if</span> i &lt;= edge - <span class="number">1</span> <span class="keyword">or</span> i &gt;= height - <span class="number">1</span> - edge <span class="keyword">or</span> j &lt;= edge - <span class="number">1</span> <span class="keyword">or</span> j &gt;= width - edge - <span class="number">1</span>:</span><br><span class="line">                        new_arr[i, j, c] = imarray[i, j, c]</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        new_arr[i, j, c] = np.median(imarray[i - edge:i + edge + <span class="number">1</span>, j - edge:j + edge + <span class="number">1</span>, c])</span><br><span class="line">        new_im = Image.fromarray(new_arr)</span><br><span class="line">        new_im.save(dst)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    gray_girl = <span class="string">"A.png"</span></span><br><span class="line">    tar = <span class="string">"A_noised.png"</span></span><br><span class="line">    AddNoise(gray_girl, tar)</span><br><span class="line">    src = <span class="string">"A_noised.png"</span></span><br><span class="line">    dst = <span class="string">"A_repaired.png"</span></span><br><span class="line">    MedianFilter(src, dst)</span><br></pre></td></tr></table></figure><p>下图是k=3是的改进后的中值滤波策略的结果，可以看到图像的清晰度得到了较大的保留，噪声的数量就相对也残留的比较多。从中可以看到，二者之间有此消彼长的关系。至于为什么还有这么多的椒盐噪声，原因是因为我们添加噪声的代码中设置的概率太高了，导致图像中的椒盐噪声数量非常多，<u>在小区域内有可能有许多的噪声点，导致算法所寻找到的中值仍然是噪声的数值范围</u>。这种情况下扩大滤波模板的大小并不会有多大的改变。此时可以将已经执行过一次中值滤波的结果图像再执行一次中值滤波，效果就会更好一些。</p><p>参考：数字图像处理的python实现(8)——中值滤波https://blog.csdn.net/baidu_41902768/article/details/94451787——上述代码在j的条件判断上需要将height-1-edge改成width-1-edge</p><h3 id="图像修复restore_image"><a class="markdownIt-Anchor" href="#图像修复restore_image"></a> 图像修复restore_image</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Filter</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, k = <span class="number">3</span>)</span>:</span></span><br><span class="line">        self.k = k</span><br><span class="line">        self.padding = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_median</span><span class="params">(self, imarray)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        中值滤波</span></span><br><span class="line"><span class="string">        :param imarray:</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        height, width, channels = imarray.shape</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.padding:</span><br><span class="line">            edge = int((self.k - <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">if</span> height - <span class="number">1</span> - edge &lt;= edge <span class="keyword">or</span> width - <span class="number">1</span> - edge &lt;= edge:</span><br><span class="line">                print(<span class="string">"The parameter k is to large."</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">            new_arr = np.zeros((height, width, <span class="number">3</span>), dtype=<span class="string">"uint8"</span>)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(height):</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> range(width):</span><br><span class="line">                    <span class="keyword">for</span> c <span class="keyword">in</span> range(channels):  <span class="comment"># 处理3个通道</span></span><br><span class="line">                        <span class="keyword">if</span> i &lt;= edge - <span class="number">1</span> <span class="keyword">or</span> i &gt;= height - <span class="number">1</span> - edge \</span><br><span class="line">                                <span class="keyword">or</span> j &lt;= edge - <span class="number">1</span> <span class="keyword">or</span> j &gt;= width - edge - <span class="number">1</span>:</span><br><span class="line">                            <span class="comment"># 除了中心点以外其他边沿的点</span></span><br><span class="line">                            new_arr[i, j, c] = imarray[i, j, c]</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            <span class="comment"># 中心点为排序后的中值</span></span><br><span class="line">                            new_arr[i, j, c] = np.median(imarray[i-edge: i+edge+<span class="number">1</span>, j-edge: j+edge+<span class="number">1</span>, c])</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> new_arr</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_max</span><span class="params">(self, imarray)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        中值滤波</span></span><br><span class="line"><span class="string">        :param imarray:</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        height, width, channels = imarray.shape</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.padding:</span><br><span class="line">            edge = int((self.k - <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">if</span> height - <span class="number">1</span> - edge &lt;= edge <span class="keyword">or</span> width - <span class="number">1</span> - edge &lt;= edge:</span><br><span class="line">                print(<span class="string">"The parameter k is to large."</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">            new_arr = np.zeros((height, width, <span class="number">3</span>), dtype=<span class="string">"uint8"</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(height):</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> range(width):</span><br><span class="line">                    <span class="keyword">for</span> c <span class="keyword">in</span> range(channels):  <span class="comment"># 处理3个通道</span></span><br><span class="line">                        <span class="keyword">if</span> i &lt;= edge - <span class="number">1</span> <span class="keyword">or</span> i &gt;= height - <span class="number">1</span> - edge \</span><br><span class="line">                                <span class="keyword">or</span> j &lt;= edge - <span class="number">1</span> <span class="keyword">or</span> j &gt;= width - edge - <span class="number">1</span>:</span><br><span class="line">                            <span class="comment"># 边界处理， 当i索引&lt;=edge-1 -&gt; 或者 i &gt;= ((height-1)-&gt;图像边界-edge)-&gt;窗口在图像边界内的边界</span></span><br><span class="line">                            new_arr[i, j, c] = imarray[i, j, c]</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            <span class="comment"># 中心点为排序后的中值</span></span><br><span class="line">                            new_arr[i, j, c] = np.max(imarray[i-edge: i+edge+<span class="number">1</span>, j-edge: j+edge+<span class="number">1</span>, c])</span><br><span class="line">            <span class="keyword">return</span> new_arr</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">restore_image</span><span class="params">(noise_img, size=<span class="number">4</span>)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    使用 你最擅长的算法模型 进行图像恢复。</span></span><br><span class="line"><span class="string">    :param noise_img: 一个受损的图像</span></span><br><span class="line"><span class="string">    :param size: 输入区域半径，长宽是以 size*size 方形区域获取区域, 默认是 4</span></span><br><span class="line"><span class="string">    :return: res_img 恢复后的图片，图像矩阵值 0-1 之间，数据类型为 np.array,</span></span><br><span class="line"><span class="string">            数据类型对象 (dtype): np.double, 图像形状:(height,width,channel), 通道(channel) 顺序为RGB</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 恢复图片初始化，首先 copy 受损图片，然后预测噪声点的坐标后作为返回值。</span></span><br><span class="line">    res_img = np.copy(noise_img)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取噪声图像</span></span><br><span class="line">    noise_mask = get_noise_mask(noise_img)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># -------------实现图像恢复代码答题区域----------------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res_img</span><br></pre></td></tr></table></figure><p>目前修复思路: 由于观察到mask基本都是胡椒噪声（黑色），因此最大值滤波效果会比较好一点，但是仍然会有少量椒盐噪声残余，因此，可以采用将降噪后的图像再次降噪（而不是扩大过滤核大小）。 在这里剩余的仍然是胡椒噪声（黑色），但是经过测试可以看出最大值滤波对图像的影响明显大于中值滤波，最大值滤波会比较模糊，因此这边采用的是“最大值滤波+中值滤波”的组合。（注：为什么先用最大值滤波？因为实验测试第一次就用中值滤波效果很差）</p><p><img src="/2020/12/09/浙大2020春夏-人工智能习题3——图像恢复/noise.png" alt="noise"></p><h4 id="先用最大值滤波的效果"><a class="markdownIt-Anchor" href="#先用最大值滤波的效果"></a> 先用最大值滤波的效果：</h4><p><img src="/2020/12/09/浙大2020春夏-人工智能习题3——图像恢复/first.png" alt="first"></p><h5 id="组合中值滤波的效果"><a class="markdownIt-Anchor" href="#组合中值滤波的效果"></a> 组合中值滤波的效果：</h5><p><img src="/2020/12/09/浙大2020春夏-人工智能习题3——图像恢复/medina.png" alt="medina"></p><h5 id="组合最大值滤波效果"><a class="markdownIt-Anchor" href="#组合最大值滤波效果"></a> 组合最大值滤波效果</h5><p><img src="/2020/12/09/浙大2020春夏-人工智能习题3——图像恢复/max.png" alt="max"></p><p>直接使用中值滤波实验结果：</p><p><img src="/2020/12/09/浙大2020春夏-人工智能习题3——图像恢复/%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8%E4%B8%AD%E5%80%BC%E6%BB%A4%E6%B3%A2%E7%BB%93%E6%9E%9C.png" alt="直接使用中值滤波结果"></p><h4 id="记录坑点"><a class="markdownIt-Anchor" href="#记录坑点"></a> 记录坑点：</h4><blockquote><p>用savefig保存时，图片会有压缩，导致保存和重新从文件中读取的内容有些区别</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">noised_im = NoiseGenerator.add_pulse_noise(im)<span class="comment"># (1104, 828, 3)</span></span><br><span class="line">plt.imshow(noised_im)</span><br><span class="line">plt.axis(<span class="string">"off"</span>)</span><br><span class="line">plt.savefig(<span class="string">"A_noised.png"</span>)</span><br><span class="line">src = <span class="string">"A_noised.png"</span></span><br><span class="line">dst = <span class="string">"A_repaired.png"</span></span><br><span class="line">MedianFilter(src, dst)<span class="comment"># (480, 640, 4)</span></span><br></pre></td></tr></table></figure><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结：</h3><blockquote><p>samples给的图中噪声基本都是胡椒噪声，没有什么盐噪声，因此考虑最大值滤波</p></blockquote><ul><li>当黑色占比大于0.3时使用&quot;最大值滤波+中值滤波组合&quot;， 当小于0.3时直接使用中值滤波</li><li>k=5太模糊，目前使用k=3</li></ul><h1 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h1><ul><li><a href="https://blog.csdn.net/u012526003/article/details/77784211/?utm_medium=distribute.pc_relevant.none-task-blog-title-3&amp;spm=1001.2101.3001.4242" target="_blank" rel="noopener">图像复原原理及实现</a></li></ul><h2 id="读取展示图片的两种方式"><a class="markdownIt-Anchor" href="#读取展示图片的两种方式"></a> 读取展示图片的两种方式：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -----------------用cv的imshow-------------</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_noise</span><span class="params">(filename)</span>:</span></span><br><span class="line">    im = cv2.imread(filename)</span><br><span class="line">    cv2.imshow(<span class="string">'original img'</span>, im)</span><br><span class="line">    h, w = im.shape[<span class="number">0</span>:<span class="number">2</span>]</span><br><span class="line">    pNum = h * w</span><br><span class="line">    nRate = <span class="number">0.3</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(int(pNum * nRate)):</span><br><span class="line">        randh = random.randint(<span class="number">0</span>, h - <span class="number">1</span>)</span><br><span class="line">        randw = random.randint(<span class="number">0</span>, w - <span class="number">1</span>)</span><br><span class="line">        <span class="comment"># print(h,randh,w,randw)</span></span><br><span class="line">        <span class="keyword">if</span> random.random() &lt; <span class="number">0.5</span>:</span><br><span class="line">            im[randh, randw, :] = np.array([<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            im[randh, randw, :] = np.array([<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>])</span><br><span class="line">    cv2.imshow(<span class="string">'add noise'</span>, im)</span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">add_noise(<span class="string">'A.png'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#-----------------用plt.imshow-------------</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_photo</span><span class="params">(pic_path)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    :param pic_path: 图片路径</span></span><br><span class="line"><span class="string">    :return: &lt;class 'numpy.ndarray'&gt;</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 以 BGR 方式读取图片</span></span><br><span class="line">    im = cv2.imread(pic_path)</span><br><span class="line">    <span class="comment"># 将 BGR 方式转换为 RGB 方式</span></span><br><span class="line">    im = cv2.cvtColor(im, cv2.COLOR_BGR2RGB)</span><br><span class="line">    <span class="comment"># 展示图片</span></span><br><span class="line">    plt.imshow(im)</span><br><span class="line">    <span class="comment"># 关闭坐标轴</span></span><br><span class="line">    plt.axis(<span class="string">'off'</span>)</span><br><span class="line">    <span class="comment"># show</span></span><br><span class="line">    plt.show()</span><br><span class="line">    <span class="keyword">return</span> im</span><br></pre></td></tr></table></figure><h2 id="imshow的参数"><a class="markdownIt-Anchor" href="#imshow的参数"></a> imshow的参数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@_preprocess_data(label_namer=None)</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">imshow</span><span class="params">(self, X, cmap=None, norm=None, aspect=None,</span></span></span><br><span class="line"><span class="function"><span class="params">              interpolation=None, alpha=None, vmin=None, vmax=None,</span></span></span><br><span class="line"><span class="function"><span class="params">              origin=None, extent=None, shape=None, filternorm=<span class="number">1</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">              filterrad=<span class="number">4.0</span>, imlim=None, resample=None, url=None, **kwargs)</span>:</span></span><br><span class="line">       <span class="string">"""</span></span><br><span class="line"><span class="string">       Display an image on the axes.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       Parameters</span></span><br><span class="line"><span class="string">       ----------</span></span><br><span class="line"><span class="string">       X : array_like, shape (n, m) or (n, m, 3) or (n, m, 4)</span></span><br><span class="line"><span class="string">           Display the image in `X` to current axes.  `X` may be an</span></span><br><span class="line"><span class="string">           array or a PIL image. If `X` is an array, it</span></span><br><span class="line"><span class="string">           can have the following shapes and types:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">           - MxN -- values to be mapped (float or int)</span></span><br><span class="line"><span class="string">           - MxNx3 -- RGB (float or uint8)</span></span><br><span class="line"><span class="string">           - MxNx4 -- RGBA (float or uint8)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">           MxN arrays are mapped to colors based on the `norm` (mapping</span></span><br><span class="line"><span class="string">           scalar to scalar) and the `cmap` (mapping the normed scalar to</span></span><br><span class="line"><span class="string">           a color).</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">           Elements of RGB and RGBA arrays represent pixels of an MxN image.</span></span><br><span class="line"><span class="string">           All values should be in the range [0 .. 1] for floats or</span></span><br><span class="line"><span class="string">           [0 .. 255] for integers.  Out-of-range values will be clipped to</span></span><br><span class="line"><span class="string">           these bounds.</span></span><br></pre></td></tr></table></figure><h3 id="clip"><a class="markdownIt-Anchor" href="#clip"></a> clip</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).</span><br></pre></td></tr></table></figure><p>按照上述信息可知，如果元素为float类型且超过了1，则会被clip，这边clip就是上下限幅，而不是截取小数点后部分</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">res = np.array([</span><br><span class="line">    [[<span class="number">1.22</span>,<span class="number">2.22</span>,<span class="number">3.22</span>]],</span><br><span class="line">    [[<span class="number">-0.55</span>,<span class="number">-0.44</span>,<span class="number">-6.55</span>]]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><img src="/2020/12/09/浙大2020春夏-人工智能习题3——图像恢复/test_clip.png" alt="test_clip"></p><h2 id="图像相似度指标"><a class="markdownIt-Anchor" href="#图像相似度指标"></a> 图像相似度指标</h2><h3 id="ssim结构相似性度量"><a class="markdownIt-Anchor" href="#ssim结构相似性度量"></a> SSIM（结构相似性度量）</h3><blockquote><p>这是一种全参考的图像质量评价指标，分别从亮度、对比度、结构三个方面度量图像相似性。SSIM取值范围[0, 1]，值越大，表示图像失真越小。</p></blockquote><h3 id="cosin相似度余弦相似度"><a class="markdownIt-Anchor" href="#cosin相似度余弦相似度"></a> cosin相似度（余弦相似度）</h3><blockquote><p>把图片表示成一个向量，通过计算向量之间的余弦距离来表征两张图片的相似度。</p></blockquote><p><a href="https://blog.csdn.net/u010977034/article/details/82733137" target="_blank" rel="noopener">https://blog.csdn.net/u010977034/article/details/82733137</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;习题3-图像恢复&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#习题3-图像恢复&quot;&gt;&lt;/a&gt; &lt;strong&gt;习题3&lt;/strong&gt; - 图像恢复&lt;/h1&gt;
&lt;h2 id=&quot;31-实验内容&quot;&gt;&lt;a class=&quot;markdownIt-
      
    
    </summary>
    
    
      <category term="ZJU" scheme="https://nymrli.top/tags/ZJU/"/>
    
      <category term="ML" scheme="https://nymrli.top/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>《人工智能:模型与算法——浙江大学公开课》笔记</title>
    <link href="https://nymrli.top/2020/12/08/%E3%80%8A%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD-%E6%A8%A1%E5%9E%8B%E4%B8%8E%E7%AE%97%E6%B3%95%E2%80%94%E2%80%94%E6%B5%99%E6%B1%9F%E5%A4%A7%E5%AD%A6%E5%85%AC%E5%BC%80%E8%AF%BE%E3%80%8B%E7%AC%94%E8%AE%B0/"/>
    <id>https://nymrli.top/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/</id>
    <published>2020-12-08T07:06:21.000Z</published>
    <updated>2020-12-26T12:25:35.280Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h2 id="p111可计算思想起源与发展"><a class="markdownIt-Anchor" href="#p111可计算思想起源与发展"></a> <a href="https://www.bilibili.com/video/BV1c7411n7EY?p=1" target="_blank" rel="noopener">P11.1可计算思想起源与发展</a></h2><p>智能： 从感知、到理解、到认知、到决策与行动</p><p>计算的诞生：从可计算到不可计算-&gt;20世纪初，人们发现有许多问题无法找到解决的方法。于是开始怀疑，是否对这些问题来说，根本就不存在算法，即不可计算。</p><p>人工智能：以机器为载体的人类智能或生物智能</p><p>算术公理的相容性：</p><ul><li>完备性：所有能够从该形式化系统推导出来的命题，都可以从这个形式化系统推导出来。</li><li>一致性：一个命题不可能同时为真或为假</li><li>可判定性：算法在有限步内判定命题的真伪</li></ul><p>哥德尔不完全性定理：任何表达力足够强的（递归可枚举）形式系统都不可能同时具有一致性和完备性</p><p>图灵测试：指测试者与被测试者（一个人和一台机器）隔开的情况下，通过一些装置（如键盘）向被测试者随意提问。进行多次测试后，如果机器让平均每个参与者做出超过30%的误判，那么这台机器就通过了测试，并被认为具有人类智能。</p><p>摩尔定律：（计算机速度1年半增长1倍），亿级晶体管、千亿指令/秒</p><h2 id="p212人工智能的发展简史"><a class="markdownIt-Anchor" href="#p212人工智能的发展简史"></a> <a href="https://www.bilibili.com/video/BV1c7411n7EY?p=2" target="_blank" rel="noopener">P21.2人工智能的发展简史</a></h2><p>人工智能发展中的主流方法（1）：符号主义人工智能（SymbolicAl）为核心的逻辑推理</p><p>人工智能发展中的主流方法（2）：数据驱动（data-driven）为核心的机器学习</p><p>人工智能发展中的主流方法（3）：在“探索（未知空间）与利用（已有经验）（exploration vs.exploitation）”之间取得平衡为核心的强化学习</p><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/AI三种主流方法区别.jpg" alt="AI三种主流方法区别" style="zoom:67%;"><h2 id="p313人工智能研究的基本内容"><a class="markdownIt-Anchor" href="#p313人工智能研究的基本内容"></a> <a href="https://www.bilibili.com/video/BV1c7411n7EY?p=3" target="_blank" rel="noopener">P31.3人工智能研究的基本内容</a></h2><blockquote><p>人工智能特点：至小有内、至大无外，多学科交叉内禀</p></blockquote><p><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E8%AF%BE%E7%A8%8B.jpg" alt="人工智能课程"></p><p>从模拟人类智能角度而言，人工智能应具备如下能力：</p><ul><li><strong>具备视觉感知和语言交流的能力</strong>。即能够识别和理解外界信息（计算机视觉研究范畴）、能够与人通过语言交流（自然语言理解研究范畴）。</li><li>具备推理与问题求解能力。即基于已有知识，对所见事物和现象进行演绎推理以解决问题。</li><li><strong>具备协同控制能力</strong>。即将视觉（看）、语言（说）、推理（悟）等能力统一协调，加以控制，这是常见的机器人研究领域内容。</li><li><strong>具备遵守伦理道德能力</strong>。即模拟人类智能的智能体在社会环境中要遵从一定的伦理道德。阿西莫夫在科幻小说中按照优先级定义了机器人需要遵从的三条伦理原则：不得伤人，或弃人于危难；需服从人；在不违反上述两条原则情况下，保护机器人自己。</li><li><strong>具备从数据中进行归纳总结的能力</strong>。即需要从数据中进行知识、规律和模式学习的模型和方法，这是机器学习研究范畴。</li></ul><h3 id="授课基本内容"><a class="markdownIt-Anchor" href="#授课基本内容"></a> 授课基本内容：</h3><p>人工智能概述</p><ul><li>1.1可计算思想起源与发展</li><li>1-2人工智能的发展简史</li><li>1.3人工智能研究的基本内容</li></ul><p>搜索求解</p><ul><li>2.1启发式搜索</li><li>2.2对抗搜索（Minimax及Alpha-Beta剪枝搜索）</li><li>2.3蒙特卡洛树搜索</li></ul><p>逻辑与推理</p><ul><li>3.1命题逻辑</li><li>3.2谓词逻辑</li><li>3.3兴国格推理</li><li>3.4因果推理</li></ul><p>统计机器学习|监督学习</p><ul><li>4.1机器学习基本概念</li><li>4.2线性回归与分类</li><li>4.3Ada Boosting</li><li>4.4线性区别分析</li></ul><p>统计机器学习|非监督学习</p><ul><li>5.1K-means</li><li>5.2主成分分析</li><li>5.3特征人脸方法</li><li>5.4期望极大算法（EM）</li></ul><p>深度学习(监督学习+端到端)</p><ul><li>6.1前馈神经网络（误差后向传播）</li><li>6.2卷积神经网络</li><li>6.3自然语言理解与视觉分析</li></ul><p>强化学习</p><ul><li>7.1马尔科夫决策过程</li><li>7.2强化学习中策略优化与策略评估</li><li>7.3Q-Learning</li><li>7.4深度强化学习</li></ul><p>人工智能博弈</p><ul><li>8.1博弈相关概念（纳什均衡）</li><li>8.2遗憾最小化算法</li><li>8.3虚拟遗憾最小化算法</li></ul><h2 id="搜索求解"><a class="markdownIt-Anchor" href="#搜索求解"></a> 搜索求解</h2><h3 id="p421启发式搜索"><a class="markdownIt-Anchor" href="#p421启发式搜索"></a> <a href="https://www.bilibili.com/video/BV1c7411n7EY?p=4" target="_blank" rel="noopener">P42.1启发式搜索</a></h3><blockquote><p>给定搜索目标，设计启发函数，来保证搜索目标最优化的求解</p></blockquote><h3 id="p522对抗搜索"><a class="markdownIt-Anchor" href="#p522对抗搜索"></a> <a href="https://www.bilibili.com/video/BV1c7411n7EY?p=5" target="_blank" rel="noopener">P52.2对抗搜索</a></h3><blockquote><p>在游戏里搜索一种解决方案，但在搜索过程中对手会阻止我们，这种情况下我们能获得最大收益的搜索方式。本文中主要讲解Minmax搜索+alpha-beta剪枝搜索</p><p>对抗搜索（Adversarial Search）也称为博弈搜索（Game Search），在一个竞争的环境中，智能体（agents）之间通过竞争实现相反的利益，一方最大化这个利益，另外一方最小化这个利益。</p></blockquote><blockquote><p>本课程目前主要讨论在确定的、全局可观察的、竞争对手轮流行动、零和游戏（zero-sum）下的对抗搜索</p><ul><li><strong>零和博弈</strong>是博弈论的一个概念，属非合作博弈。指参与博弈的各方，在严格竞争下，一方的收益必然意味着另一方的损失，博弈各方的收益和损失相加总和永远为“零”，双方不存在合作的可能。</li><li>与“零和”对应，“<strong>双赢博弈</strong>”的基本理论就是“利己”不“损人”，通过谈判、合作达到皆大欢喜的结果。</li></ul></blockquote><p><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/%E5%AF%B9%E6%8A%97%E6%90%9C%E7%B4%A2%E5%86%85%E5%AE%B9.jpg" alt="对抗搜索内容"></p><h4 id="最大最小搜索"><a class="markdownIt-Anchor" href="#最大最小搜索"></a> 最大最小搜索</h4><p>给定一个游戏搜索树，minimax算法通过每个节点的minimax值来决定最优策略。当然，MAX节点希望最大化minimax值，而MIN节点则相反，希望最小化minimax值—&gt;让自己的收益最大，让对方的收益or己方的损失最小</p><p><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/minmax.jpg" alt="minmax"></p><p>优点：</p><ul><li>算法是一种简单有效的对抗搜索手段</li><li>在对手也“尽力而为”前提下，算法可返回最优结果</li></ul><p>缺点：</p><ul><li>如果搜索树极大，则无法在有效时间内返回结果</li></ul><p>改善：</p><ul><li>使用alpha-beta pruning算法来减少搜索节点</li><li>对节点进行采样、而非逐一搜索（ie.，MCTS）</li></ul><h4 id="alpha-beta剪枝搜索"><a class="markdownIt-Anchor" href="#alpha-beta剪枝搜索"></a> alpha-beta剪枝搜索</h4><blockquote><p>一种对最小最大搜索进行改进的算法，即在搜索过程中可剪除无需搜索的分支节点，且不影响搜索结果。.</p></blockquote><p><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/abpruncing.jpg" alt="abpruncing"></p><h4 id="p623蒙特卡洛树搜索"><a class="markdownIt-Anchor" href="#p623蒙特卡洛树搜索"></a> <a href="https://www.bilibili.com/video/BV1c7411n7EY?p=6" target="_blank" rel="noopener">P62.3蒙特卡洛树搜索</a></h4><blockquote><p>alphaGo三大法宝：深度学习、强化学习、MCTS</p></blockquote><blockquote><p>通过采样而非穷举方法来实现搜索，从而跟上述两种搜索有本质上的区别。</p></blockquote><blockquote><p>多臂赌博机问题是一种序列决策问题，这种问题需要在利用（exploitation）和探索（exploration）之间保持平衡。</p><ul><li>利用（exploitation）：保证在过去决策中得到最佳回报</li><li>探索（exploration）：寄希望在未来能够得到更大回报</li></ul></blockquote><h5 id="exploitation-component利用"><a class="markdownIt-Anchor" href="#exploitation-component利用"></a> exploitation component(利用)</h5><p>第一部分是<span class="mjpage mjpage__block">undefined</span>​ ，也称作exploitation component。 Q(Vi)为子节点获胜次数，N(Vi)为子节点参与模拟的次数</p><p>可以看做是子节点Vi的胜率估计（总收益/总次数=平均每次的收益）。但是不能只选择胜率高的下一步，因为这种贪婪方式的搜索会很快导致游戏结束，这往往会导致搜索不充分，错过最优解。</p><p>举个简单的例子。现在假设MCTS的UCT函数只用了探索成分，从根节点开始，我们对所有子节点进行了一次模拟，然后在下一步中只访问至少赢了一次的子节点。那么在第一次模拟中那些不幸未被选中的节点（实际中rollout策略函数通常是随机的）将会被立刻抛弃</p><h5 id="exploration-component探索"><a class="markdownIt-Anchor" href="#exploration-component探索"></a> exploration component(探索)</h5><p class="katex-block katex-error" title="ParseError: KaTeX parse error: Can't use function '$' in math mode at position 39: …))}{N(v_{i})} }$̲$，这个成分更倾向于那些想对较…">c* \sqrt{\frac{\log(N(v))}{N(v_{i})} }$$，这个成分更倾向于那些想对较少被探索的节点N(Vi)小。参数c是exploitation和exploration之间的折中系数。##### MCTS的终止终止条件(or)：- 达到一定的迭代次数- 达到规定的搜索时间当MSCT程序结束时，最佳的移动通常是访问次数最多的那个节点，也是UCT最大的点。将上限置信区间算法UCB应用于游戏树的搜索方法，由Kocsis和Szepesvari在2006年提出包括了四个步骤：**选举（selection）**，**扩展（expansion）**，**模拟（simulation）**，**反向传播（Back-Propagation）****选择**&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记\MCTS1.jpg" alt="MCTS1" style="zoom:67%;" /&gt;**拓展**&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记\MCTS2.jpg" alt="MCTS2" style="zoom:67%;" /&gt;**模拟、反向传播**&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记\MCTS3.jpg" alt="MCTS3" style="zoom:67%;" /&gt;##### MCTS学习策略：&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记\MCTS学习策略.jpg" alt="MCTS学习策略" style="zoom:67%;" /&gt;##### MCTS算法执行&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记\processure.png" alt="processure" style="zoom:67%;" /&gt;&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记\MCTS算法执行.jpg" alt="MCTS算法执行" style="zoom:67%;" /&gt;# [P125.1机器学习基本概念](https://www.bilibili.com/video/BV1c7411n7EY?p=12)&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/监督学习.jpg" alt="监督学习" style="zoom:67%;" /&gt;**机器学习的目的：**1.原始数据中提取特征2.学习映射函数f3.通过映射函数f将&lt;u&gt;原始数据映射到语义空间&lt;/u&gt;，即寻找&lt;u&gt;数据和任务目标&lt;/u&gt;之间的关系## 监督学习### 监督学习的两种方法：- 判别模型  - 判别方法直接学习判别函数f（X）或者条件概率分布P（YIX）作为预测的模型，即判别模型。  - 判别模型关心在给定输入数据下，预测该数据的输出是什么。  - 典型判别模型包括回归模型、神经网络、支持向量机和Ada boosting等。- 生成模型  - 生成模型从数据中学习联合概率分布P（X，Y）（通过似然概率P(X|Y)-&gt;从输入数据产生输出、类概率P(Y)的乘积来求取）    $P(Y|X）= \frac{P(X,Y)}{P(x)}$或者$P(Y|X）= \frac{P(X|Y)*P(Y)}{P(x)}$  - 典型方法为贝叶斯方法、隐马尔可夫链授之于鱼、不如授之于“渔”  - 联合分布概率P（X，Y）或似然概率P（YIX）求取很困难## [P135.2线性回归分析](https://www.bilibili.com/video/BV1c7411n7EY?p=13)线性回归定义：分析不同变量之间存在关系的研究叫回归分析，刻画不同变量之间关系的模型被称为回归模型。如果这个模型是线性的，则称为线性回归模型。例如y = k*x + b，就是一个回归模型，其中的参数k和b需要从标注的数据中学习得到（监督学习）**线性回归模型例子**背景：给出了莫纳罗亚山（夏威夷岛的活火山）从1970年到2005年每5年的二氧化碳浓度，单位是百万分比浓度（Parts Per Million，ppm）。&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/线性回归.jpg" alt="线性回归" style="zoom:67%;" /&gt;问题Q：1）给出1984年二氧化碳浓度值；2）预测2010年二氧化碳浓度值解答A1. 目标：建立回归模型y = a*x + b， 通过最佳回归模型求解参数a和b， 最佳回归模型是最小化残差平方和的均值，即要求8组（x，y）数据得到的残差平均值$\frac{1}{N} \sum(y-\tilde{y})^{2}$最小。残差平均值最小只与参数a和b有关，最优解即是使得残差最小所对应的a和b的值。2. 具体步骤：   - 记在当前参数下第i个训练样本xi的预测值为$\hat{y_i}$；   - xi的标注值（实际值）yi，与预测值$\hat{y_i}$，之差记为$\left(y_{i}-\hat{y}_{i}\right)^{2}$   - 训练集中n个样本所产生误差总和为$L(a, b)=\sum_{i=1}^{n}\left(y_{i}-a \times x_{i}-b\right)^{2}$--》**误差函数**   - 目标：寻找一组a和b，使得误差总和L（a，b）值最小。在线性回归中，解决如此目标的方法叫**最小二乘法**。     一般而言，要使函数具有最小值，可&lt;u&gt;对L(a, b)参数a和b分别求导，令其导数值为零--&gt;偏导&lt;/u&gt;，再求取参数a和b的取值。▲线性回归，可以从已标注数据出发，找寻两组变量之间的线性关系，并且可拓展为多维变量## [P145.3提升算法（boosting）](https://www.bilibili.com/video/BV1c7411n7EY?p=14)对于一个复杂的分类任务，可以将其分解为若干子任务，然后将若干子任务完成方法**综合**，最终完成该复杂任务。即将弱分类器（weak classifiers）**组合**起来，形成强分类器（strong classifier）### 为什么这样是能work的呢？&gt; 计算学习理论（Computational Learning Theory）&gt; - 可计算：什么任务是可以计算的？Ans: 图灵可停机&gt; - 可学习：什么任务是可以被学习的、从而被学习模型来完成？&gt;&gt; 学习任务：统计某个电视节目在全国的收视率。&gt; 方法：不可能去统计整个国家中每个人是否观看电视节目、进而算出收视率。只能**抽样**一部分人口，然后将抽样人口中观看该电视节目的比例作为该电视节目的全国收视率。&gt; 霍夫丁不等式：全国人口中看该电视节目的人口比例（记作x）与抽样人口中观看该电视节目的人口比例（记作y）满足如下关系：&gt;&gt; &lt;mark&gt;当N足够大时，“全国人口中电视节目收视率”与“样本人口中电视节目收视率”差值超过误差范围e的概率非常小。&lt;/mark&gt;&gt;&gt; 对于统计电视节目收视率这样的任务，可以通过&lt;u&gt;不同的采样方法（即不同模型）&lt;/u&gt;来计算收视率。每个模型会产生不同的误差。问题：如果得到完成该任务的若干“弱模型”，是否可以将这些弱模型组合起来，形成一个“强模型”。该“强模型”产生误差很小呢？这就是**概率近似正确（PAC）**要回答的问题。&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/PAC.jpg" alt="PAC" style="zoom:67%;" /&gt;### adaboosting&gt; 将一系列弱分类器组合成强分类器Ada Boosting算法中两个核心问题：- 在每个弱分类器学习过程中，如何改变训练数据的权重：提高在上一轮中分类错误样本的权重。- 如何将一系列弱分类器组合成强分类器：通过加权多数表决方法来提高分类误差小的弱分类器的权重，让其在最终分类中起到更大作用。同时减少分类误差大的弱分类器的权重，让其在最终分类中仅起到较小作用。算法步骤：1. 数据样本权重初始化——初始化每个训练样本的权重  - $D_{1}=\left(w_{11}, \ldots, w_{1 i}, \ldots, w_{1 N}\right),$ 其中 $w_{1 i}=\frac{1}{N}(1 \leq i \leq N)$，初始情况下每个分类器的权重是一样的  2. -第m个弱分类器训练   $\quad$ 对 $m=1,2, \ldots, M$   a) 使用具有分布权重 $D_{m}$ 的训练数据来学习得到第m个基分类器（弱分类器） $G_{m}$ :</p><p>G_{m}(x): X \rightarrow{-1,1}</p><p class="katex-block katex-error" title="ParseError: KaTeX parse error: Can't use function '$' in math mode at position 6: ​b) $̲\quad$ 计算 $G_{m…">​b) <span class="mjpage">undefined</span> 计算 <span class="mjpage">undefined</span> 在训练数据集上的分类误差<span class="mjpage">undefined</span> 这里: <span class="mjpage">undefined</span> 如果 <span class="mjpage">undefined</span> 否则为 0​c) <span class="mjpage">undefined</span> &lt;u&gt;计算弱分类器 <span class="mjpage">undefined</span> 的权重&lt;/u&gt; <span class="mjpage">undefined</span>，如果<span class="mjpage">undefined</span>意味着每个样本都分类错，则<span class="mjpage">undefined</span>，当<span class="mjpage">undefined</span>=1/2， 则性能相当于随机分类；<span class="mjpage">undefined</span>权重随分类误差errm减小而增大，也就是说分类越少，分类器的权重越大。​d) <span class="mjpage">undefined</span> 更新训练样本数据的分布权重: <span class="mjpage">undefined</span> 其中 <span class="mjpage">undefined</span> 是归一化因子以使得 <span class="mjpage">undefined</span> 为概率分布, <span class="mjpage">undefined</span>- 对数据不断划重点：<span class="mjpage">undefined</span>  可见，如果某个样本无法被第m个弱分类器Gm（x）分类成功，则需要增大该样本权重，否则减少该样本权重。这样，被错误分类样本会在训练第m+1个弱分类器Gm+1（x）时会被“重点关注”。  在每一轮学习过程中，Ada Boosting算法均在划重点（重视当前尚未被正确分类的样本）3. 弱分类器组合成强分类器   以线性加权形式来组合弱分类器 <span class="mjpage">undefined</span></p><p>f(x)=\sum_{i=1}^{M} \alpha_{m} G_{m}(x)</p><p class="katex-block katex-error" title="ParseError: KaTeX parse error: Can't use function '$' in math mode at position 8: 得到强分类器 $̲G(x)$">得到强分类器 <span class="mjpage">undefined</span></p><p>G(x)=\operatorname{sign}(f(x))=\operatorname{sign}\left(\sum_{i=1}^{M} \alpha_{m} G_{m}(x)\right)</p><p class="katex-block katex-error" title="ParseError: KaTeX parse error: Can't use function '$' in math mode at position 48: …的弱分类器具有更大权重。- $̲\alpha_{m}$ 累加之…">- f（x）是M个弱分类器的**加权线性**累加。分类能力越强的弱分类器具有更大权重。- <span class="mjpage">undefined</span> 累加之和并不等于1。- <span class="mjpage">undefined</span> 符号决定样本 <span class="mjpage">undefined</span> 分类为 1 或- 1 。如果 <span class="mjpage">undefined</span> 为正，则强分类器 <span class="mjpage">undefined</span> 将样本 <span class="mjpage">undefined</span> 分类为1 ; 否则为-1。**回看霍夫丁不等式**&gt; 假设有M个弱分类器Gm（1sm≤M），则M个弱分类器线性组合所产生误差满足如下条件：<span class="mjpage">undefined</span>- <span class="mjpage">undefined</span>是真实分类函数、∈（0，1）。上式表明，如果所“组合”弱分类器越多，则学习分类误差呈指数级下降，直至为零。- 上述不等式成立有两个前提条件：1）每个弱分类器产生的误差相互独立；2）每个弱分类器的误差率小于50%。因为每个弱分类器均是在同一个训练集上产生，条件1）难以满足。也就说，“准确性（对分类结果而言）”和“差异性（对每个弱分类器而言）”难以同时满足。----&gt;Ada Boosting采取了序列化学习机制。#### 优化目标Ada Boost实际在最小化如下指数损失函数（minimization of exponential loss）：<span class="mjpage">undefined</span>Ada Boost的分类误差上界如下所示：<span class="mjpage">undefined</span>在第m次迭代中，Ada Boosting总是趋向于将具有最小误差的学习模型选做本轮生成的弱分类器Gm，使得累积误差快速下降。## 无监督学习&gt; 无监督学习中，由于数据本身没有语义标签，因此我们对聚类结果无法知道到底代表的是怎样的高层语义![无监督学习](./《人工智能-模型与算法——浙江大学公开课》笔记/无监督学习.jpg)&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/无监督相似度.jpg" alt="无监督相似度" style="zoom:67%;" /&gt;数据特征和相似度函数都很重要### [P156.1K均值聚类](https://www.bilibili.com/video/BV1c7411n7EY?p=15)-kmeans输入：n个数据（无任何标注信息）输出：k个聚类结果目的：将n个数据聚类到k个集合（也称为类簇）**算法描述**若干定义:n个m 维数据 <span class="mjpage">undefined</span>- 两个 <span class="mjpage">undefined</span> 维数据之间的欧氏距离为 </p><p>d\left(x_{i}, x_{j}\right)=\sqrt{\left(x_{i 1}-x_{j 1}\right)^{2}+\left(x_{i 2}-x_{j 2}\right)^{2}+\cdots+\left(x_{i m}-x_{j m}\right)^{2}}</p><p class="katex-block katex-error" title="ParseError: KaTeX parse error: Can't use function '$' in math mode at position 1: $̲d\left(x_{i}, x…"><span class="mjpage">undefined</span> 值越小，表示 <span class="mjpage">undefined</span> 和 <span class="mjpage">undefined</span> 越相似; 反之越不相似- 聚类集合数目 <span class="mjpage">undefined</span>问题：如何将n个数据依据其相似度大小将它们分别聚类到 <span class="mjpage">undefined</span> 个集合，使得每个数据仅属于一个聚类集合。1. 初始化——初始化聚类质心   - 初始化 <span class="mjpage">undefined</span> 个聚类质心 <span class="mjpage">undefined</span>   - 每个聚类质心 <span class="mjpage">undefined</span> 所在集合记为 <span class="mjpage">undefined</span>2. 对数据进行聚类——将每个待聚类数据放入唯一一个聚类集合中   - 计算待聚类数据 <span class="mjpage">undefined</span> 和质心 <span class="mjpage">undefined</span> 之间的欧氏距离 <span class="mjpage">undefined</span>   - 将每个 <span class="mjpage">undefined</span> &lt;u&gt;放入与之距离最近聚类质心所在聚类集合&lt;/u&gt;中,即 <span class="mjpage">undefined</span>3. 更新聚类质心——根据聚类结果、更新聚类质心  - 根据每个聚类集合中所包含的数据，更新该聚类集合质心值, 即 <span class="mjpage">undefined</span>  4. 继续迭代——算法循环迭代，直到满足条件   聚类迭代满足如下任意一个条件，则聚类停止：   - 已经达到了迭代次数上限   - 前后两次迭代中，聚类质心基本保持不变**K均值聚类算法的另一个视角：最小化每个类簇的方差**- 欧氏距离与方差量纲相同- **最小化每个类簇方差**将使得最终**聚类结果中每个聚类集合中所包含数据呈现出来差异性最小**。&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/kmeans.jpg" alt="kmeans" style="zoom:67%;" /&gt;#### K均值聚类算法的不足- 需要事先确定聚类数目，很多时候我们并不知道数据应被聚类的数目- 需要初始化聚类质心，初始化聚类中心对聚类结果有较大的影响- 算法是迭代执行，时间开销非常大- 欧氏距离假设数据每个维度之间的重要性是一样的### [P166.2主成分分析](https://www.bilibili.com/video/BV1c7411n7EY?p=16)——Principle Component Analysis (PCA)&gt; 主成份分析是一种特征降维方法。人类在认知过程中会主动“化繁为简”&gt; 奥卡姆剃刀定律（Occam's Razor）：“如无必要，勿增实体”，即“简单有效原理”主成份分析：**降维后的结果要保持原始数据固有结构**啥是原始数据中的结构？: 1.图像数据中结构：视觉对象区域构成的空间分布  ; 2.文本数据中结构：单词之间的（共现）相似或不相似若干相关概念：方差和协方差、皮尔逊相关系数**方差**- 方差等于各个数据与样本均值之差的平方和之平均数- 方差描述了样本数据的波动程度**协方差**- 衡量两个变量之间的相关度**皮尔逊相关系数**我们可通过皮尔逊相关系数（Pearson Correlation coefficient）将两组变量之间的关联度规整到一定的取值范围内。注：相关系数表达的是线性相关程度**皮尔逊相关系数所具有的性质**如下：- | corr（X，Y）| ≤1- corr（X，Y）=1的充要条件是存在常数a和b，使得Y=ax+b- 皮尔逊相关系数是对称的，即corr（X，Y）=corr（Y，X）- 由此衍生出如下性质：皮尔逊相关系数刻画了变量x和Y之间线性相关程度，如果| corr（x，Y）|的取值越大，则两者在线性相关的意义下相关程度越大。Icorr（x，Y）l=0表示两者不存在线性相关关系（可能存在其他非线性相关的关系）。- 正线性相关意味着变量x增加的情况下，变量Y也随之增加；负线性相关意味着变量X减少的情况下，变量Y也随之增加。**相关性（correlation）与独立性（independence）**- 如果X和Y的线性不相关，则|corr（xX，Y）l=0- 如果X和Y的彼此独立，则一定lcorr（x，Y）l=0，且x和Y不存在任何线性或非线性关系- “不相关”是一个比“独立”要弱的概念，即&lt;u&gt;独立一定不相关，但是不相关不一定相互独立&lt;/u&gt;（可能存在其他复杂的关联关系）。独立指两个变量彼此之间不相互影响。#### 算法动机&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/PCA1.jpg" alt="PCA1" style="zoom:67%;" /&gt;- 主成份分析思想是将n维特征数据映射到l维空间（n &gt;&gt; l），去除原始数据之间的冗余性（通过去除相关性手段达到这一目的）。- 将原始数据向这些**数据方差最大的方向**进行投影。一旦发现了方差最大的投影方向，则继续寻找保持方差第二的方向且进行投影。- 将每个数据从n维高维空间映射到l维低维空间，每个数据所得到最好的k维特征就是使得每一维上样本方差都尽可能大。#### 算法描述&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/PCA2.jpg" alt="PCA2" style="zoom:67%;" /&gt;#### 算法步骤&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/PCA3.jpg" alt="PCA3" style="zoom:67%;" /&gt;具体如何运行的可以看下节的特征人脸算法，讲的还是比较清楚的。### [P176.3特征人脸算法](https://www.bilibili.com/video/BV1c7411n7EY?p=17)&gt; 特征人脸方法是一种&lt;u&gt;应用主成份分析PCA&lt;/u&gt;来实现&lt;u&gt;人脸图像降维&lt;/u&gt;的方法，其本质是用一种称为“特征人脸（eigenface）”的特征向量按照线性组合形式来表达每一张原始人脸图像，进而实现人脸识别。==》将原有的像素点降维后，提取出新的PCA变量，即人脸特征===&gt;用（特征）人脸表示人脸，而非用像、素点表示人脸&gt;&gt; 由此可见，这一方法的关键之处在于如何得到特征人脸。**PCA降维计算：**&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/特征人脸-PCA运算.jpg" alt="特征人脸-PCA运算" style="zoom:67%;" /&gt;#### 人脸对比方法：聚类、主成分分析、非负矩阵分解&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/人脸对比.jpg" alt="人脸对比" style="zoom:67%;" /&gt;#### 特征人脸识别流程![人脸识别](./《人工智能-模型与算法——浙江大学公开课》笔记/人脸识别.jpg)## 统计机器学习算法应用### [P187.1逻辑斯蒂回归与分类](https://www.bilibili.com/video/BV1c7411n7EY?p=18)#### 分类和回归的区别：- 在回归分析中，学习得到一个函数将输入变量映射到连续输出空间，如价格和温度等，即值域是连续空间。- 在分类模型中，学习得到一个函数将输入变量映射到离散输出空间，如人脸和汽车等，即值域是离散空间。问题：回归与分类可否统一，即用回归模型来完成分类任务？--&gt;demo：逻辑斯蒂回归（logistic regression）回归分析：线性-&gt;非线性，线性回归模型难以刻画数据的复杂分布，需要寻找非线性回归模型——demo：逻辑斯蒂回归（logistic regression）#### sigmod函数性质概率形式输出。sigmoid函数是单调递增的，其值域为**（0，1）**，因此使sigmoid函数输出可作为**概率值**。在前面介绍的线性回归中，回归函数的值域一般为（一oo，+oo）数据特征加权累加。对输入z取值范围没有限制，但当z大于一定数值后，函数输出无限趋近于1，而小于一定数值后，函数输出无限趋近于0。特别地，当z=0时，函数输出为0.5。这里z是输入数据x和回归函数的参数w相乘结果（可视为x各维度进行加权叠加）非线性变化。x各维度加权叠加之和结果取值在0附近时，函数输出值的变化幅度比较大（函数值变化陡峭），且是非线性变化。但是，各维度加权叠加之和结果取值很大或很小时，函数输出值几乎不变化，这是基于概率的一种认识与需要。缺点：梯度消失#### 概率输出：从回归到分类&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/logistics.jpg" alt="logistics" style="zoom:67%;" /&gt;对p(y=1|x)取对数的结果为<span class="mjpage">undefined</span>- 对x作为正例可能性取对数得到线性回归模型- x为正例的概率越大，几率取值就越大- 线性回归模型输出结果去逼近（拟合）真实标记结果的对数几率- 逻辑斯蒂回归函数被称为“对数几率回归（log-odds regression）"。- 对数几率回归模型的输出y可作为将输入数据x分类为某一类别概率的大小。- 输出值越接近1，说明输入数据x分类为该类别的可能性越大。与此相反，输出值越接近0，输入数据x不属于该类别的概率越大。- 根据具体应用设置一个阈值，将大于该阀值的输入数据x都归属到某个类别，小于该阈值的输入数据x都归属到另外一个类别。&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/logistics2.jpg" alt="logistics2" style="zoom:67%;" /&gt;★.从这里可以看出，logistic回归是一个线性模型。在预测时，可以通过计算线性函数wx+b取值是否大于0来判断输入数据x的类别归属。#### 参数求解：最大似然函数假定数据都是独立同分布的--&gt;最大似然函数==得到了--&gt;交叉熵(求解交叉熵，如果是线性模型可以用最小二乘法，但是logistics不行，可以考虑使用迭代算法——梯度下降法)**多分类**——output的时候加个softmax，并做归一化，概率最大的那个类别就是分类结果### [P197.2基于矩阵分解的潜在语义分析](https://www.bilibili.com/video/BV1c7411n7EY?p=19)——LSA潜在语义分析（Latent Semantic Analysis，LSA或者Latent Semantic Indexing，LSI）是一种从海量文本数据中学习&lt;u&gt;单词-单词、单词-文档以及文档-文档之间&lt;/u&gt;隐性关系，进而得到文档和单词表达特征的方法。该方法的基本思想是综合考虑某些单词在哪些文档中同时出现，以此来决定该词语的含义与其他的词语的相似度。潜在语义分析先构建一个单词-文档（term-document）矩阵A，进而寻找该矩阵的低秩逼近（low rank approximation）矩阵，从而来挖掘单词-单词、单词-文档以及文档·文档之间的关联关系。举例&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/LSA.jpg" alt="LSA" style="zoom:67%;" /&gt;- 当用户输入“optimization"这一检索请求，由于文档a3标题中不包含这一单词，则文档a3被认为是不相关文档，但实际上文档a3所涉及“minimization"内容与优化问题相关。出现这一问题是因为**单词-文档矩阵**只是刻画了&lt;u&gt;单词是否在文档中出现与否这一现象，而无法对单词-单词、单词-文档以及文档-文档之间语义关系进行建模。&lt;/u&gt;- 如果用户检索“eat an apple"，则文档"Apple is a great company”会被检索出来，而实际上该文档中单词"Apple"所指苹果公司、而非水果，造成这一结果的原因是一些单词具有“一词多义”。- 因此需要一种方法能够建模单词-单词、单词-文档以及文档-文档之间语义关系，解决包括“异词同义”和“一词多义”  在内的诸多挑战。#### 单词-文档矩阵（term-document）：构造与分解&gt; 基于Latent Dirichlet Allocation（隐狄利克雷分配模型）![LSA-TD](./《人工智能-模型与算法——浙江大学公开课》笔记/LSA-TD.jpg)选取最大的前两个特征根及其对应的特征向量对矩阵A进行重建。下面给出了选取矩阵U、矩阵D和矩阵V的子部分重建所得矩阵A，效果如下：- 回到之前举的一个例子，用户输入“optimization”来检索与之相关的文档。尽管单词“optimization"在文档a3中没有出现，但是在重建矩阵A2中，对应的位置被0.68取代，说明单词"optimization"对表征文档a3所蕴含内容具有重要作用，这也符合文档a3描述的minimization问题是一个optimization问题的事实。- 在单词-矩阵A中，文档b3所对应network、gene和human三个单词取值为1，在重建矩阵A2中，network、gene和human三个单词取值分别为0.32、0.66和0.53。可见，network在表征文档b3时重要性降低，因为算法认为这一单词在机器学习所相关文档表达中更具有区别性。为什么work？通过单词-文档矩阵（term-document）的构造与分解，可以将每个单词映射到维度为R的隐性空间、将每个文档映射到维度为R的隐性空间：统一空间，隐性空间可视为“主题空间（topic），因此就可以比较两个单词、两篇文章的主题是否一致了。### [P207.3线性区别分析及分类](https://www.bilibili.com/video/BV1c7411n7EY?p=20)线性区别分析（linear discriminant analysis，LDA）是一种基于监督学习的降维方法，也称为Fisher线性区别分析（Fisher's Discriminant analysis，FDA）。对于一组具有标签信息的高维数据样本，LDA利用其类别信息，将其线性投影到一个低维空间上，&lt;u&gt;在低维空间中同一类别样本尽可能靠近，不同类别样本尽可能彼此远离&lt;/u&gt;。==&gt;**为了获得“类内汇聚、类间间隔”的最佳投影结果**&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/LDA.jpg" alt="LDA" style="zoom:67%;" /&gt;#### PCA和LDA区别- 主成分分析（PCA）是一种&lt;u&gt;无监督学习&lt;/u&gt;的降维方法（无需样本类别标签），线性区别分析（LDA）是一种&lt;u&gt;监督学习&lt;/u&gt;的降维方法（需要样本类别标签。PCA和LDA均是优化寻找一定特征向量w来实现降维，其中PCA寻找投影后&lt;u&gt;数据之间方差最大&lt;/u&gt;的投影方向、LDA寻找“&lt;u&gt;类内方差小、类间距离大&lt;/u&gt;”投影方向。- PCA对高维数据降维后的维数是与原始数据特征维度相关（&lt;u&gt;与数据类别标签无关&lt;/u&gt;）。假设原始数据维度为d，那么PCA所得数据的降维维度可以为小于d的任意维度；LDA降维后所得到维度是与&lt;u&gt;数据样本的类别个数K有关&lt;/u&gt;（与数据本身维度无关）。假设原始数据一共有K个类别，那么LDA所得数据的降维维度小于或等于K-1。## [P218.1深度学习基本概念](https://www.bilibili.com/video/BV1c7411n7EY?p=21)——深度学习&gt; 浅层学习Versus深度学习：从分段学习到端到端学习；传统学习需要人工提取特征，深度神经网络可以通过层层网络自动提取特征。&gt;&gt; &lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/DL.jpg" alt="DL" style="zoom: 67%;" /&gt;#### 神经元数学模型1. 对相邻的前向神经元输入通过加权累加 : In <span class="mjpage">undefined</span>2. 对累加结果进行非线性变换（通过激活函数）： <span class="mjpage">undefined</span>3. 神经元的输出: <span class="mjpage">undefined</span>&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/神经元.jpg" alt="神经元" style="zoom:67%;" /&gt;注：神经元越多，非线性表达能力越强，同时参数也很变得更多，网络也会变得越复杂### [P228.2前馈神经网络](https://www.bilibili.com/video/BV1c7411n7EY?p=22)、[P238.3误差后向传播(BP)](https://www.bilibili.com/video/BV1c7411n7EY?p=23)- 各个神经元&lt;u&gt;接受前一级的输入&lt;/u&gt;，&lt;u&gt;并输出到下一级&lt;/u&gt;，模型中没有反馈- 层与层之间通过“&lt;u&gt;全连接&lt;/u&gt;”进行链接，即两个相邻层之间的神经元完全成对连接，但层内的神经元不相互连接。#### 感知机网络感知机网络（Perceptron Networks）是一种特殊的前馈神经网络：- 无隐藏层，只有输入层/输出层- 无法拟合复杂的数据&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/FNN-感知机.jpg" alt="FNN-感知机" style="zoom:67%;" /&gt;#### 参数优化##### 1.GD梯度下降法梯度下降算法是一种使得损失函数最小化的方法。一元变量所构成函数f在x处梯度为：<span class="mjpage">undefined</span>- 在多元函数中，梯度是对每一变量所求导数组成的向量- 梯度的反方向是函数值下降最快的方向##### 2.误差反向传播BP- BP算法是一种将输出层误差反向传播给隐藏层进行参数更新的方法。=- 将误差从后向前传递，将误差分摊给各层所有单元，从而获得各层单元所产生的误差，进而依据这个误差来让各层单元负起各自责任、修正各单元参数。### [P249.1卷积神经网络](https://www.bilibili.com/video/BV1c7411n7EY?p=24)#### 卷积Q：什么是卷积操作？A：可以理解为是滤波器，图像经过特定卷积矩阵滤波后，所得到的卷积结果可认为是保留了像素点所构成的特定空间分布模式&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/卷积.jpg" alt="卷积" style="zoom:67%;" /&gt;&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/卷积-神经元.jpg" alt="卷积-神经元" style="zoom:67%;" /&gt;实际上卷积操作可以理解为是神经元的变形。有一张32*32*3（RGB）的图像，使用5*5*3的卷积核Wi，步长为1对其进行卷积操作。卷积核W，在原始图像上从左到右、从上到下进行计算，改变5*5子块区域中的中心像素点值，得到28*28的特征图m1。特征图：在深度学习里被定义为，原始图像经过卷积后得到的结果▲卷积参数的确定都是通过数据驱动来确定的#### 池化对输入的特征图进行**下采样**，以在区域内获得最主要信息常用的池化操作有：最大池化、平均池化![平均池化](./《人工智能-模型与算法——浙江大学公开课》笔记/平均池化.jpg)#### 全连接、输出层将特征从卷积操作后向输出层映射，最后通过输出层进行输出&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/全连接.jpg" alt="全连接" style="zoom:67%;" /&gt;综上：所需学习参数：卷积核、全连接层权重、激活函数参数AlexNet：经典用来分类（识别）图像的卷积神经网络，包含5个卷积层、3个全连接层，有六千多万个参数，最终吧一个RGB的图像转换成了一个4096维的特征向量，接着将这个特征向量输入给分类函数，最后输出一个一千维的向量，一千维向量每个维度上的值表示该图像被识别为该维度指代对象的概率大小。### [P259.2-自然语言理解与视觉分析](https://www.bilibili.com/video/BV1c7411n7EY?p=25)#### 深度学习的应用：学习单词的表达----词向量（Word2Vec）在基于规则和统计的自然语言传统方法中，将单词视为独立符号在向量空间中，一个单词按照其在文档中出现的有无，被表示为如下向量（按照字典序）：[0,0,0,1,...,0,0,0]（只有一个位置为1，其余为0）上述表示方法称为One-hot向量。缺点：- 维数灾难的困扰- 无法刻画词与词之间的相似性：任意两个词之间都是孤立的one-hot -&gt; 词向量: 可基于单词形成的向量进行后续操作##### 词向量模型的训练通过单词 <span class="mjpage">undefined</span> 上下文单词的词向量来预测该单词 <span class="mjpage">undefined</span> 的词向量 :</p><p>f\left(w_{t}, w_{t-1}, \ldots, w_{t-n+2}, w_{t-n+1}\right)=p\left(w_{t} \mid \text { context }\right)</p><p class="katex-block katex-error" title="ParseError: KaTeX parse error: Can't use function '$' in math mode at position 10: 如下优化模型参数 $̲\theta,$ 以最大化训练…">如下优化模型参数 <span class="mjpage">undefined</span> 以最大化训练数据的对数似然函数 :</p><p>J=\max <em>{\theta}\left(\log f\left(w</em>{t}, w_{t-1}, \ldots, w_{t-n+2}, w_{t-n+1} ; \theta\right)+R(\theta)\right)</p><p class="katex-block katex-error" title="ParseError: KaTeX parse error: Expected 'EOF', got '#' at position 462: …om:67%;&quot; />#̲### CNN-图像分类和定位…">&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/词向量.jpg" alt="词向量" style="zoom:67%;" /&gt;词向量模型：两种训练模式- Continue Bag-of-Words（CBoW）：根据某个单词的上下文单词来预测该单词- Skip-gram：利用某个单词来分别预测该单词的上下文单词Word2 Vec的改进算法- 对一个包含10000个单词的语料库，每个单词的词向量设为200维，则需要200*10000（2000000）和10000*200（2000000）异常庞大的权重矩阵- 在如此大神经网络上进行梯度下降耗时为了解决这个不足，后续出现了如下改进手段：  - Hierarchical Softmax（引入霍夫曼树）  - Negative Sampling&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/词向量-单词类比.jpg" alt="词向量-单词类比" style="zoom:67%;" /&gt;#### CNN-图像分类和定位&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/CNN图像分类和定位.jpg" alt="CNN图像分类和定位" style="zoom:67%;" /&gt;#### 学习算法的改造：从浅层模型到深层模型&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/学习算法的改造从浅层模型到深层模型.jpg" alt="学习算法的改造从浅层模型到深层模型" style="zoom:67%;" /&gt;## [P2610.1强化学习定义](https://www.bilibili.com/video/BV1c7411n7EY?p=26)&gt; 人工智能领域中有三种学习的方法：1.以逻辑推理为核心的符号主义人工智能； 2.以数据建模为核心的机器学习； 3.以环境交互为核心的强化学习建立在马尔科夫决策过程的基础之上，so what's MDP?&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/RL.jpg" alt="RL" style="zoom:67%;" /&gt;#### 强化学习特点：&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/RL特点.jpg" alt="RL特点" style="zoom:67%;" /&gt;#### 机器人移动：DMP-&gt;MRP-&gt;MDP##### 离散马尔科夫过程DMP一阶马尔科夫链：<span class="mjpage">undefined</span>、t+1时刻状态仅与t时刻状态相关二阶马尔科夫链：<span class="mjpage">undefined</span>、t+1时刻状态与t和t-1时刻状态相关&lt;img src="./《人工智能-模型与算法——浙江大学公开课》笔记/DMP1.jpg" alt="DMP" style="zoom:67%;" /&gt;##### 马尔可夫奖励过程（Markov Reward Process）：引入奖励为了在序列决策中对目标进行优化，在马尔可夫随机过程框架中加入了奖励机制：- 奖励函数 <span class="mjpage">undefined</span> 其中 <span class="mjpage">undefined</span> 描述了从第 <span class="mjpage">undefined</span> 步状态转移到第 <span class="mjpage">undefined</span> 步状态所获  得奖励- 在一个序列决策过程中，不同状态之间的转移产生了一系列的奖励 <span class="mjpage">undefined</span> 其中<span class="mjpage">undefined</span> 为 <span class="mjpage">undefined</span> 的简便记法。- 引入奖励机制，这样可以衡量任意序列的优劣，即对序列决策进行评价。问题：给定两个因为状态转移而产生的奖励序列（1，1，0，0）和（0，0，1，1），哪个奖励序列更好？A：为了比较不同的奖励序列，定义反馈（return），用来反映累加奖励：$$G_{t}=R_{t+1}+\gamma R_{t+2}+\gamma^{2} R_{t+3}+\cdots</p><p>其中衰退系数（ decay factor） <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>γ</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\gamma \in[0,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>，来表示当前的奖励越是重要，远的奖励虽然需要考虑，但是重要程度是衰减的。<br>假设 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>γ</mi><mo>=</mo><mn>0.99</mn></mrow><annotation encoding="application/x-tex">\gamma=0.99</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord">9</span></span></span></span><br>(1,1,0,0)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>:</mo><msub><mi>G</mi><mn>0</mn></msub><mo>=</mo><mn>1</mn><mo>+</mo><mn>0.99</mn><mo>×</mo><mn>1</mn><mo>+</mo><mn>0.9</mn><msup><mn>9</mn><mn>2</mn></msup><mo>×</mo><mn>0</mn><mo>+</mo><mn>0.9</mn><msup><mn>9</mn><mn>3</mn></msup><mo>×</mo><mn>0</mn><mo>=</mo><mn>1.99</mn></mrow><annotation encoding="application/x-tex">: G_{0}=1+0.99 \times 1+0.99^{2} \times 0+0.99^{3} \times 0=1.99</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord">9</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord"><span class="mord">9</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord"><span class="mord">9</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">9</span><span class="mord">9</span></span></span></span><br>(0,0,1,1)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>:</mo><msub><mi>G</mi><mn>0</mn></msub><mo>=</mo><mn>0</mn><mo>+</mo><mn>0.99</mn><mo>×</mo><mn>0</mn><mo>+</mo><mn>0.9</mn><msup><mn>9</mn><mn>2</mn></msup><mo>×</mo><mn>1</mn><mo>+</mo><mn>0.9</mn><msup><mn>9</mn><mn>3</mn></msup><mo>×</mo><mn>1</mn><mo>=</mo><mn>1.9504</mn></mrow><annotation encoding="application/x-tex">: G_{0}=0+0.99 \times 0+0.99^{2} \times 1+0.99^{3} \times 1=1.9504</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord">9</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord"><span class="mord">9</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord"><span class="mord">9</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">9</span><span class="mord">5</span><span class="mord">0</span><span class="mord">4</span></span></span></span></p><p>可见，前一种反馈的累加更大，虽然(1,1,0,0)更好。</p><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/MRP2.jpg" alt="MRP2" style="zoom:67%;"><h5 id="马尔可夫决策过程markov-decision-process"><a class="markdownIt-Anchor" href="#马尔可夫决策过程markov-decision-process"></a> 马尔可夫决策过程（Markov Decision Process）</h5><p>马尔可夫决策过程（Markov Decision Process）：引入动作</p><p>在强化学习问题中，智能主体与环境交互过程中可自主决定所采取的动作，不同动作会对环境产生不同影响，为此：</p><ul><li>定义智能主体能够采取的动作集合为A</li><li>由于不同的动作对环境造成的影响不同，因此状态转移概率定义为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mi mathvariant="normal">（</mi><msub><mi>S</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">∣</mi><msub><mi>S</mi><mi>t</mi></msub><mo separator="true">,</mo><msub><mi>a</mi><mi>t</mi></msub><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">Pr（S_{t+1}|S_t,a_t）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord cjk_fallback">（</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">）</span></span></span></span>，其中atE A为第t步采取的动作</li><li>奖励可能受动作的影响，因此修改奖励函数为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi mathvariant="normal">（</mi><msub><mi>S</mi><mi>t</mi></msub><mi mathvariant="normal">，</mi><mi>a</mi><mi>t</mi><mi mathvariant="normal">，</mi><msub><mi>S</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">R（S_t，at，S_{t+1}）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord cjk_fallback">（</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">）</span></span></span></span></li></ul><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/MDP3.jpg" alt="MDP3" style="zoom:67%;"><h5 id="相关术语"><a class="markdownIt-Anchor" href="#相关术语"></a> 相关术语</h5><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/RL相关术语.jpg" alt="RL相关术语" style="zoom:67%;"><h4 id="啥是策略"><a class="markdownIt-Anchor" href="#啥是策略"></a> 啥是策略</h4><p>策略函数：</p><ul><li>策略函数π：S×A→[0，1]，其中π（s，a）的值表示在状态s下采取动作a的概率。</li><li>策略函数的输出可以是确定的，即给定s情况下，只有一个动作a使得概率π（s，a）取值为1。<br>对于确定的策略，记为a=π（s）。</li></ul><p>如何进行策略学习：一个好的策略是在当前状态下采取了一个行动后，该行动能够在未来收到最大化的反馈：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>π</mi><mo>∗</mo></msup><mo>=</mo><mi>a</mi><mi>r</mi><mi>g</mi><mi>m</mi><mi>a</mi><msub><mi>x</mi><mi>π</mi></msub><msub><mi>G</mi><mi>t</mi></msub><mo>=</mo><msub><mi>R</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>+</mo><mi>γ</mi><msub><mi>R</mi><mrow><mi>t</mi><mo>+</mo><mn>2</mn></mrow></msub><mo>+</mo><msup><mi>γ</mi><mn>2</mn></msup><msub><mi>R</mi><mrow><mi>t</mi><mo>+</mo><mn>3</mn></mrow></msub><mo>+</mo><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\pi^{*} = argmax_\pi G_{t}=R_{t+1}+\gamma R_{t+2}+\gamma^{2} R_{t+3}+\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0224389999999999em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span></p><p>为了对策略函数工进行评估，定义。</p><ul><li>价值函数（Value Function）<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mo>:</mo><mi>S</mi><mo>↦</mo><mi mathvariant="double-struck">R</mi><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">V: S \mapsto \mathbb{R},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69433em;vertical-align:-0.011em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↦</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.88333em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathbb">R</span></span><span class="mpunct">,</span></span></span></span> 其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>π</mi></msub><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi mathvariant="double-struck">E</mi><mi>π</mi></msub><mrow><mo fence="true">[</mo><msub><mi>G</mi><mi>t</mi></msub><mo>∣</mo><msub><mi>S</mi><mi>t</mi></msub><mo>=</mo><mi>s</mi><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">V_{\pi}(s)=\mathbb{E}_{\pi}\left[G_{t} \mid S_{t}=s\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">E</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">s</span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span>，即在第t步状态为s时，按照策略π行动后在未来所获得反馈值的期望.(由马尔可夫性，未来的状态和奖励只与当前状态相关，与t无关。因此t取任意值该等式均成立，如“逢山开路，遇水搭桥”。)</li><li>动作-价值函数（Action-Value Function）<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi><mo>:</mo><mi>S</mi><mo>×</mo><mi>A</mi><mo>↦</mo><mi mathvariant="double-struck">R</mi><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">q: S \times A \mapsto \mathbb{R},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69433em;vertical-align:-0.011em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↦</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.88333em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathbb">R</span></span><span class="mpunct">,</span></span></span></span> 其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mi>π</mi></msub><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi mathvariant="double-struck">E</mi><mi>π</mi></msub><mrow><mo fence="true">[</mo><msub><mi>G</mi><mi>t</mi></msub><mo>∣</mo><msub><mi>S</mi><mi>t</mi></msub><mo>=</mo><mi>s</mi><mo separator="true">,</mo><msub><mi>A</mi><mi>t</mi></msub><mo>=</mo><mi>a</mi><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">q_{\pi}(s, a)=\mathbb{E}_{\pi}\left[G_{t} \mid S_{t}=s, A_{t}=a\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">E</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">a</span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span><br>表示在第t步状态为s时，按照策略π采取动作a后，在未来所获得反馈值的期望</li></ul><p>==&gt;这样，策略学习转换为如下优化问题：寻找一个最优策略<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>π</mi><mo>∗</mo></mrow><annotation encoding="application/x-tex">π*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord">∗</span></span></span></span>，对任意s∈S使得<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>V</mi><mi>π</mi><mo>∗</mo></msubsup><mi mathvariant="normal">（</mi><mi>s</mi><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">V_\pi^{*}（s）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.935696em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.4530000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">（</span><span class="mord mathdefault">s</span><span class="mord cjk_fallback">）</span></span></span></span>值最大</p><p>价值函数与动作-价值函数的关系：对策略进行评估</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>V</mi><mi>π</mi></msub><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi mathvariant="double-struck">E</mi><mi>π</mi></msub><mrow><mo fence="true">[</mo><msub><mi>R</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>+</mo><mi>γ</mi><msub><mi>R</mi><mrow><mi>t</mi><mo>+</mo><mn>2</mn></mrow></msub><mo>+</mo><msup><mi>γ</mi><mn>2</mn></msup><msub><mi>R</mi><mrow><mi>t</mi><mo>+</mo><mn>3</mn></mrow></msub><mo>+</mo><mo>⋯</mo><mo>∣</mo><msub><mi>S</mi><mi>t</mi></msub><mo>=</mo><mi>s</mi><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi mathvariant="double-struck">E</mi><mrow><mi>a</mi><mo>∼</mo><mi>π</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mo stretchy="false">)</mo></mrow></msub><mrow><mo fence="true">[</mo><msub><mi mathvariant="double-struck">E</mi><mi>π</mi></msub><mrow><mo fence="true">[</mo><msub><mi>R</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>+</mo><mi>γ</mi><msub><mi>R</mi><mrow><mi>t</mi><mo>+</mo><mn>2</mn></mrow></msub><mo>+</mo><msup><mi>γ</mi><mn>2</mn></msup><msub><mi>R</mi><mrow><mi>t</mi><mo>+</mo><mn>3</mn></mrow></msub><mo>+</mo><mo>⋯</mo><mo>∣</mo><msub><mi>S</mi><mi>t</mi></msub><mo>=</mo><mi>s</mi><mo separator="true">,</mo><msub><mi>A</mi><mi>t</mi></msub><mo>=</mo><mi>a</mi><mo fence="true">]</mo></mrow><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mo>∑</mo><mrow><mi>a</mi><mo>∈</mo><mi>A</mi></mrow></munder><mi>π</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><msub><mi>q</mi><mi>π</mi></msub><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>q</mi><mi>π</mi></msub><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi mathvariant="double-struck">E</mi><mi>π</mi></msub><mrow><mo fence="true">[</mo><msub><mi>R</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>+</mo><mi>γ</mi><msub><mi>R</mi><mrow><mi>t</mi><mo>+</mo><mn>2</mn></mrow></msub><mo>+</mo><msup><mi>γ</mi><mn>2</mn></msup><msub><mi>R</mi><mrow><mi>t</mi><mo>+</mo><mn>3</mn></mrow></msub><mo>+</mo><mo>⋯</mo><mo>∣</mo><msub><mi>S</mi><mi>t</mi></msub><mo>=</mo><mi>s</mi><mo separator="true">,</mo><msub><mi>A</mi><mi>t</mi></msub><mo>=</mo><mi>a</mi><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mo>=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi mathvariant="double-struck">E</mi><mrow><msup><mi>s</mi><mo mathvariant="normal">′</mo></msup><mo>∼</mo><mi mathvariant="normal">Pr</mi><mo>⁡</mo><mo stretchy="false">(</mo><mo>∣</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo></mrow></msub><mrow><mo fence="true">[</mo><mi>R</mi><mrow><mo fence="true">(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo separator="true">,</mo><msup><mi>s</mi><mo mathvariant="normal">′</mo></msup><mo fence="true">)</mo></mrow><mo>+</mo><mi>γ</mi><msub><mi mathvariant="double-struck">E</mi><mi>π</mi></msub><mrow><mo fence="true">[</mo><msub><mi>R</mi><mrow><mi>t</mi><mo>+</mo><mn>2</mn></mrow></msub><mo>+</mo><mi>γ</mi><msub><mi>R</mi><mrow><mi>t</mi><mo>+</mo><mn>3</mn></mrow></msub><mo>+</mo><mo>⋯</mo><mo>∣</mo><msub><mi>S</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msup><mi>s</mi><mo mathvariant="normal">′</mo></msup><mo fence="true">]</mo></mrow><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mo>=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><munder><mo>∑</mo><mrow><msup><mi>s</mi><mo mathvariant="normal">′</mo></msup><mo>∈</mo><mi>S</mi></mrow></munder><mi mathvariant="normal">Pr</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msup><mi>s</mi><mo mathvariant="normal">′</mo></msup><mo>∣</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo fence="true">)</mo></mrow><mrow><mo fence="true">[</mo><mi>R</mi><mrow><mo fence="true">(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo separator="true">,</mo><msup><mi>s</mi><mo mathvariant="normal">′</mo></msup><mo fence="true">)</mo></mrow><mo>+</mo><mi>γ</mi><msub><mi>V</mi><mi>π</mi></msub><mrow><mo fence="true">(</mo><msup><mi>s</mi><mo mathvariant="normal">′</mo></msup><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} V_{\pi}(s) &amp;=\mathbb{E}_{\pi}\left[R_{t+1}+\gamma R_{t+2}+\gamma^{2} R_{t+3}+\cdots \mid S_{t}=s\right] \\ &amp;=\mathbb{E}_{a \sim \pi(s,)}\left[\mathbb{E}_{\pi}\left[R_{t+1}+\gamma R_{t+2}+\gamma^{2} R_{t+3}+\cdots \mid S_{t}=s, A_{t}=a\right]\right] \\ &amp;=\sum_{a \in A} \pi(s, a) q_{\pi}(s, a) \\ q_{\pi}(s, a)=&amp; \mathbb{E}_{\pi}\left[R_{t+1}+\gamma R_{t+2}+\gamma^{2} R_{t+3}+\cdots \mid S_{t}=s, A_{t}=a\right] \\=&amp; \mathbb{E}_{s^{\prime} \sim \operatorname{Pr}(\mid s, a)}\left[R\left(s, a, s^{\prime}\right)+\gamma \mathbb{E}_{\pi}\left[R_{t+2}+\gamma R_{t+3}+\cdots \mid S_{t+1}=s^{\prime}\right]\right] \\=&amp; \sum_{s^{\prime} \in S} \operatorname{Pr}\left(s^{\prime} \mid s, a\right)\left[R\left(s, a, s^{\prime}\right)+\gamma V_{\pi}\left(s^{\prime}\right)\right] \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:11.415746000000002em;vertical-align:-5.457873000000001em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.957873em;"><span style="top:-8.14377em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span><span style="top:-6.619662em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"></span></span><span style="top:-4.909657em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"></span></span><span style="top:-2.423843em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span><span style="top:-0.9238430000000002em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"><span class="mrel">=</span></span></span><span style="top:0.7861620000000009em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"><span class="mrel">=</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.457873000000001em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.957873em;"><span style="top:-8.14377em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">E</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">s</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span><span style="top:-6.619662em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">E</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mrel mtight">∼</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mord"><span class="mord mathbb">E</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">a</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span><span style="top:-4.909657em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight">A</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.321706em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span></span></span><span style="top:-2.423843em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord"><span class="mord mathbb">E</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">a</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span><span style="top:-0.9238430000000002em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord"><span class="mord mathbb">E</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mrel mtight">∼</span><span class="mop mtight"><span class="mord mathrm mtight">P</span><span class="mord mathrm mtight">r</span></span><span class="mopen mtight">(</span><span class="mrel mtight">∣</span><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">a</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mord"><span class="mord mathbb">E</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span><span style="top:0.7861620000000009em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.321706em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">P</span><span class="mord mathrm">r</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.457873000000001em;"><span></span></span></span></span></span></span></span></span></span></span></p><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/RL_demo.jpg" alt="RL_demo" style="zoom:67%;"><h4 id="贝尔曼方程bellman-equation"><a class="markdownIt-Anchor" href="#贝尔曼方程bellman-equation"></a> 贝尔曼方程（Bellman Equation）：</h4><p>刻画了价值函数和行动-价值函数自身以及两者相互之间的递推关系</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>π</mi></msub><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mrow><mi>a</mi><mo>∈</mo><mi>A</mi></mrow></munder><mi>π</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><msub><mi>q</mi><mi>π</mi></msub><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mspace width="1em"></mspace><mo separator="true">,</mo><msub><mi>q</mi><mi>π</mi></msub><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mrow><msup><mi>s</mi><mo mathvariant="normal">′</mo></msup><mo>∈</mo><mi>S</mi></mrow></munder><mi mathvariant="normal">Pr</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msup><mi>s</mi><mo mathvariant="normal">′</mo></msup><mo>∣</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo fence="true">)</mo></mrow><mrow><mo fence="true">[</mo><mi>R</mi><mrow><mo fence="true">(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo separator="true">,</mo><msup><mi>s</mi><mo mathvariant="normal">′</mo></msup><mo fence="true">)</mo></mrow><mo>+</mo><mi>γ</mi><msub><mi>V</mi><mi>π</mi></msub><mrow><mo fence="true">(</mo><msup><mi>s</mi><mo mathvariant="normal">′</mo></msup><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">V_{\pi}(s)=\sum_{a \in A} \pi(s, a) q_{\pi}(s, a) \quad , q_{\pi}(s, a)=\sum_{s^{\prime} \in S} \operatorname{Pr}\left(s^{\prime} \mid s, a\right)\left[R\left(s, a, s^{\prime}\right)+\gamma V_{\pi}\left(s^{\prime}\right)\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.3717110000000003em;vertical-align:-1.321706em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight">A</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.321706em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.3717110000000003em;vertical-align:-1.321706em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.321706em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">P</span><span class="mord mathrm">r</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span></span></p><p>将右式带入左式，得到价值函数的贝尔曼方程</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>π</mi></msub><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mrow><mi>a</mi><mo>∈</mo><mi>A</mi></mrow></munder><mi>π</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><munder><mo>∑</mo><mrow><msup><mi>s</mi><mo mathvariant="normal">′</mo></msup><mo>∈</mo><mi>S</mi></mrow></munder><mi mathvariant="normal">Pr</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msup><mi>s</mi><mo mathvariant="normal">′</mo></msup><mo>∣</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo fence="true">)</mo></mrow><mrow><mo fence="true">[</mo><mi>R</mi><mrow><mo fence="true">(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo separator="true">,</mo><msup><mi>s</mi><mo mathvariant="normal">′</mo></msup><mo fence="true">)</mo></mrow><mo>+</mo><mi>γ</mi><msub><mi>V</mi><mi>π</mi></msub><mrow><mo fence="true">(</mo><msup><mi>s</mi><mo mathvariant="normal">′</mo></msup><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">V_{\pi}(s)=\sum_{a \in A} \pi(s, a) \sum_{s^{\prime} \in S} \operatorname{Pr}\left(s^{\prime} \mid s, a\right)\left[R\left(s, a, s^{\prime}\right)+\gamma V_{\pi}\left(s^{\prime}\right)\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.3717110000000003em;vertical-align:-1.321706em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight">A</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.321706em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.321706em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">P</span><span class="mord mathrm">r</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span></span></p><p>将左式带入右式，得到行动-价值函数的贝尔曼方程</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mi>π</mi></msub><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mrow><msup><mi>s</mi><mo mathvariant="normal">′</mo></msup><mo>∈</mo><mi>S</mi></mrow></munder><mi mathvariant="normal">Pr</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msup><mi>s</mi><mo mathvariant="normal">′</mo></msup><mo>∣</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo fence="true">)</mo></mrow><mrow><mo fence="true">[</mo><mi>R</mi><mrow><mo fence="true">(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo separator="true">,</mo><msup><mi>s</mi><mo mathvariant="normal">′</mo></msup><mo fence="true">)</mo></mrow><mo>+</mo><mi>γ</mi><munder><mo>∑</mo><mrow><msup><mi>a</mi><mo mathvariant="normal">′</mo></msup><mo>∈</mo><mi>A</mi></mrow></munder><mi>π</mi><mrow><mo fence="true">(</mo><msup><mi>s</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><msup><mi>a</mi><mo mathvariant="normal">′</mo></msup><mo fence="true">)</mo></mrow><msub><mi>q</mi><mi>π</mi></msub><mrow><mo fence="true">(</mo><msup><mi>s</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><msup><mi>a</mi><mo mathvariant="normal">′</mo></msup><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">q_{\pi}(s, a)=\sum_{s^{\prime} \in S} \operatorname{Pr}\left(s^{\prime} \mid s, a\right)\left[R\left(s, a, s^{\prime}\right)+\gamma \sum_{a^{\prime} \in A} \pi\left(s^{\prime}, a^{\prime}\right) q_{\pi}\left(s^{\prime}, a^{\prime}\right)\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.071706em;vertical-align:-1.321706em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.321706em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">P</span><span class="mord mathrm">r</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight">A</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.321706em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span></span></span></span></span></p><p>将利用贝尔曼方程进行策略评估，进而进行策略优化</p><h3 id="p27102策略优化与策略评估"><a class="markdownIt-Anchor" href="#p27102策略优化与策略评估"></a> <a href="https://www.bilibili.com/video/BV1c7411n7EY?p=27" target="_blank" rel="noopener">P2710.2策略优化与策略评估</a></h3><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/RL问题求解.jpg" alt="RL问题求解" style="zoom:67%;"><h4 id="基于价值的求解方法"><a class="markdownIt-Anchor" href="#基于价值的求解方法"></a> 基于价值的求解方法：</h4><p>第一部分：策略优化；</p><p>第二部分：策略评估</p><p>通过迭代计算贝尔曼方程进行策略评估</p><ul><li><p>动态规划</p><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/DP.jpg" alt="DP" style="zoom:67%;"><ul><li>动态规划法的缺点：<br>1）智能主体需要事先知道<strong>状态转移概率</strong>（model-base）；<br>2）<strong>无法处理状态集合大小无限</strong>的情况</li></ul></li><li><p>蒙特卡洛采样</p><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/MTCL.jpg" alt="MTCL" style="zoom:67%;"><p>蒙特卡洛采样法的优点</p><ul><li>智能主体不必知道状态转移概率·</li><li>容易扩展到无限状态集合的问题中</li></ul><p>蒙特卡洛采样法的缺点</p><ul><li>状态集合比较大时，一个状态在轨迹可能非常稀疏，不利于估计期望</li><li>在实际问题中，最终反馈需要在终止状态才能知晓，导致<strong>反馈周期较长</strong></li></ul></li><li><p>时序差分（Temporal Difference）</p><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/TD.jpg" alt="TD" style="zoom:67%;"></li></ul><h3 id="p28103强化学习求解qlearning"><a class="markdownIt-Anchor" href="#p28103强化学习求解qlearning"></a> <a href="https://www.bilibili.com/video/BV1c7411n7EY?p=28" target="_blank" rel="noopener">P2810.3强化学习求解QLearning</a></h3><blockquote><p>基于时序差分的方法-Q学习（Q-Learning）[Q:quality]</p></blockquote><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/Qlearning.jpg" alt="Qlearning" style="zoom:67%;"><h4 id="无探索的qlearning"><a class="markdownIt-Anchor" href="#无探索的qlearning"></a> 无探索的Qlearning</h4><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/无探索Qlearning.jpg" alt="无探索Qlearning" style="zoom:67%;"><h4 id="使用e贪心策略的q学习"><a class="markdownIt-Anchor" href="#使用e贪心策略的q学习"></a> 使用e贪心策略的Q学习</h4><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/使用e贪心策略的Q学习.jpg" alt="使用e贪心策略的Q学习" style="zoom:67%;"><h3 id="p29104深度强化学习"><a class="markdownIt-Anchor" href="#p29104深度强化学习"></a> <a href="https://www.bilibili.com/video/BV1c7411n7EY?p=29" target="_blank" rel="noopener">P2910.4深度强化学习</a></h3><blockquote><p>用神经网络拟合（行动）价值函数</p></blockquote><p><strong>问题：</strong></p><ul><li>状态数量太多时，有些状态可能始终无法采样到，因此对这些状态的q函数进行估计是很困难的</li><li>状态数量无限时，不可能用一张表（数组）来记录q函数的值</li></ul><p><strong>解决思路：</strong><br>将q函数参数化（parametrize），用一个非线性回归模型来拟合q函数，例如（深度）神经网络</p><ul><li>能够用有限的参数刻画无限的状态</li><li>由于回归函数的连续性，没有探索过的状态也可通过周围的状态来估计</li></ul><h4 id="深度q学习与梯度下降法"><a class="markdownIt-Anchor" href="#深度q学习与梯度下降法"></a> 深度Q学习与梯度下降法</h4><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/深度Q学习与梯度下降法.jpg" alt="深度Q学习与梯度下降法" style="zoom:67%;"><h5 id="深度q学习的两个不稳定因素-dqn"><a class="markdownIt-Anchor" href="#深度q学习的两个不稳定因素-dqn"></a> 深度Q学习的两个不稳定因素-&gt;DQN</h5><ul><li>样本相关性太强</li><li>在损失函数中，q函数的值既用来估计目标值，又用来计算当前值。现在这两处的q函数通过e有所关联，可能导致优化时不稳定</li></ul><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/DRL不稳定因素.jpg" alt="DRL不稳定因素" style="zoom:67%;"><h4 id="dqn"><a class="markdownIt-Anchor" href="#dqn"></a> DQN</h4><h5 id="经验重现"><a class="markdownIt-Anchor" href="#经验重现"></a> 经验重现</h5><blockquote><p>样本相关性太强=&gt;经验重现</p></blockquote><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/ER.jpg" alt="ER" style="zoom:67%;"><h5 id="目标网络"><a class="markdownIt-Anchor" href="#目标网络"></a> 目标网络</h5><blockquote><p>在损失函数中，q函数的值既用来估计目标值，又用来计算当前值。现在这两处的q函数通过e有所关联，可能导致优化时不稳定-&gt;目标网络</p></blockquote><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/TN.jpg" alt="TN" style="zoom:67%;"><h2 id="p30111博弈相关概念"><a class="markdownIt-Anchor" href="#p30111博弈相关概念"></a> <a href="https://www.bilibili.com/video/BV1c7411n7EY?p=30" target="_blank" rel="noopener">P3011.1博弈相关概念</a>——人工智能博弈</h2><blockquote><p>博弈行为：带有相互竞争性质的主体，为了达到各自目标和利益，采取的带有对抗性质的行为。</p><p>博弈论主要研究博弈行为中<strong>最优的对抗策略</strong>及其<strong>稳定局势</strong>，协助人们在一定规则范围内寻求最合理的行为方式。</p></blockquote><p>​<strong>博弈的要素</strong></p><ul><li>参与者或玩家（player）：参与博弈的决策主体</li><li>策略（strategy）：参与者可以采取的行动方案，是一整套在采取行动之前就已经准备好的完整方案。<ul><li>某个参与者可采纳策略的全体组合形成了策略集（strategy set）</li><li>所有参与者各自采取行动后形成的状态被称为局势（outcome）</li><li>如果参与者可以通过一定概率分布来选择若干个不同的策略，这样的策略称为<u>混合策略</u>（mixed strategy）。若参与者每次行动都选择某个确定的策略，这样的策略称为<u>纯策略</u>（pure strategy）</li></ul></li><li>收益（payoff）：各个参与者在不同局势下得到的利益</li><li>混合策略意义下的收益应为期望收益（expected payoff）规则（rule）：对参与者行动的先后顺序、参与者获得信息多少等内容的规定</li></ul><p><strong>囚徒困境（prisoner’s dilemma）</strong></p><p>数学家阿尔伯特·塔克：警方逮捕了共同犯罪的甲、乙两人，由于警方没有掌握充分的证据，所以将两人分开审讯：</p><ul><li>若一人认罪并指证对方，而另一方保持沉默，则此人会被当即释放，沉默者会被判监禁10年</li><li>若两人都保持沉默，则根据已有的犯罪事实（无充分证据）两人各判半年</li><li>若两人都认罪并相互指证，则两人各判5年</li></ul><p>在囚徒困境中，最优解为两人同时沉默，但是两人实际倾向于选择同时认罪（均衡解）</p><p><strong>囚徒困境产生的原因：</strong></p><ul><li>对甲而言，若乙沉默，自己认罪的收益为0，而自己也沉默则收益为-0.5；若乙认罪，自己认罪则收益为-5，自己沉默则收益为-10</li><li>对乙而言，若甲沉默，自己认罪的收益为0，而自己也沉默则收益为-0.5；若甲认罪，自己认罪的收益为-5，自己沉默则收益为-10</li><li>即对个人而言，认罪的收益在任何情况下都比沉默的收益高，所以两人同时认罪是一个稳定的局势，其他三种情况都不是稳定局势</li></ul><p>▲.囚徒困境表明稳定局势并不一定是最优局势</p><h4 id="博弈的分类"><a class="markdownIt-Anchor" href="#博弈的分类"></a> 博弈的分类</h4><p>合作博弈与非合作博弈</p><ul><li>合作博弈（cooperative game）：部分参与者可以组成联盟以获得更大的收益</li><li>非合作博弈（non-cooperative game）：参与者在决策中都彼此独立，不事先达成合作</li></ul><p>意向静态博弈与动态博弈</p><ul><li>静态博弈（static game）：所有参与者同时决策，或参与者互相不知道对方的决策</li><li>动态博弈（dynamic game）：参与者所采取行为的先后顺序由规则决定，且后行动者知道先行动者所采取的行为</li></ul><p>完全信息博弈与不完全信息博弈</p><ul><li>完全信息（complete information）：所有参与者均了解其他参与者的策略集、收益等信息</li><li>不完全信息（incomplete information）：并非所有参与者均掌握了所有信息</li></ul><p>囚徒困境是一种非合作、不完全信息的静态博弈</p><h4 id="纳什均衡"><a class="markdownIt-Anchor" href="#纳什均衡"></a> 纳什均衡</h4><p>博弈的稳定局势即为纳什均衡（Nash equilibrium）：<br>指的是参与者所作出的这样一种策略组合，在该策略组合上，任何参与者单独改变策略都不会得到好处。换句话说，<mark>如果在一个策略组合上，当所有其他人都不改变策略时，没有人会改变自己的策略，则该策略组合就是一个纳什均衡。</mark></p><p><strong>Nash定理</strong>：若<u>参与者有限</u>，每位参与者的<u>策略集有限</u>，收益函数为实值函数，则博弈<strong>必存在</strong><u>混合策略</u>意义下的纳什均衡。</p><p>囚徒困境中两人同时认罪就是这一问题的纳什均衡。</p><p>another Example:</p><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/纳什博弈.jpg" alt="纳什博弈" style="zoom:67%;"><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/纳什概率求解.jpg" alt="纳什概率求解" style="zoom:67%;"><h3 id="p31112遗憾最小化算法"><a class="markdownIt-Anchor" href="#p31112遗憾最小化算法"></a> <a href="https://www.bilibili.com/video/BV1c7411n7EY?p=31" target="_blank" rel="noopener">P3111.2遗憾最小化算法</a></h3><p>博弈论与计算机科学的交叉领域非常多</p><ul><li>理论计算机科学：算法博弈论</li><li>人工智能：多智能体系统、AI游戏玩家、人机交互、机器学习、广告推荐</li><li>互联网：互联网经济、共享经济</li><li>分布式系统：区块链</li></ul><p>人工智能与博弈论相互结合，形成了两个主要研究方向</p><ul><li>博弈策略的求解<ul><li>为什么引入博弈论的动机<br>·博弈论提供了许多问题的数学模型<br>·纳什定理确定了博弈过程问题存在解<br>·人工智能的方法可用来求解均衡局面或者最优策略</li><li>应用领域<br>·大规模搜索空间的问题求解：围棋<br>·非完全信息博弈问题求解：德州扑克<br>·网络对战游戏智能：Dota、星球大战<br>·动态博弈的均衡解：厂家竞争、信息安全</li></ul></li><li>博弈规则的设计<ul><li>问题描述<br>·假设博弈的参与者都是足够理性的<br>·如何设计一个博弈规则能确保公正性或者达到设计者的最大利益</li><li>挑战<br>·规则复杂<br>·计算量大</li><li>应用领域<br>·拍卖竞价：互联网广告投放、车牌竞价<br>·供需匹配：污染权、学校录取<br>·公正选举：选举制度、表决制度、议席分配</li></ul></li></ul><p>RM算法若干定义</p><ul><li>假设一共有N个玩家。玩家 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 所采用的策略表示为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>σ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\sigma_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 。</li><li>对于每个信息集 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>I</mi><mi>i</mi></msub><mo>∈</mo><msub><mi>ξ</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>σ</mi><mi>i</mi></msub><mrow><mo fence="true">(</mo><msub><mi>I</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo>:</mo><mi>A</mi><mrow><mo fence="true">(</mo><msub><mi>I</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo>→</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">I_{i} \in \xi_{i}, \sigma_{i}\left(I_{i}\right): A\left(I_{i}\right) \rightarrow[0,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04601em;">ξ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.04601em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 是在动作集 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mrow><mo fence="true">(</mo><msub><mi>I</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">A\left(I_{i}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 上的概率分布函数。玩家 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 的策 略空间用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Σ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\Sigma_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示。</li><li>一个策略组包含所有玩家策略，用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi><mo>=</mo><mrow><mo fence="true">(</mo><msub><mi>σ</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>σ</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>σ</mi><mrow><mi mathvariant="normal">∣</mi><mi>N</mi><mi mathvariant="normal">∣</mi></mrow></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\sigma=\left(\sigma_{1}, \sigma_{2}, \ldots, \sigma_{|N|}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2051999999999998em;vertical-align:-0.3551999999999999em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>σ</mi><mrow><mo>−</mo><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\sigma_{-i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span> 表示 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span></span> 中除了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>σ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\sigma_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 之外的策略（即除去玩家 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 所采用的策略 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mclose">)</span></span></span></span></li><li>在博亦对决中，不同玩家在不同时刻会采取相应策略以及行动。策略\sigma下对应的行动序列 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span></span></span></span> 发生的概率表示为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>π</mi><mi>σ</mi></msup><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi^{\sigma}(h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span></span></span></span> 。于是, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>π</mi><mi>σ</mi></msup><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∏</mo><mrow><mi>i</mi><mo>∈</mo><mi>N</mi></mrow></msub><msubsup><mi>π</mi><mi>i</mi><mi>σ</mi></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\pi^{\sigma}(h)=\prod_{i \in N} \pi_{i}^{\sigma}(h),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.07708em;vertical-align:-0.32708000000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.17862099999999992em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32708000000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> 这里 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>π</mi><mi>i</mi><mi>σ</mi></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi_{i}^{\sigma}(h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008664em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span></span></span></span> 表示玩家 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 使用策略 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>σ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\sigma_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 促 使行动序列 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span></span></span></span> 发生的概率。除玩家 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 以外，其他玩家通过各自策略促使行动序列h发生的概率 可表示为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>:</mo><msubsup><mi>π</mi><mrow><mo>−</mo><mi>i</mi></mrow><mi>σ</mi></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∏</mo><mrow><mi>j</mi><mo>∈</mo><mi>N</mi><mi mathvariant="normal">\</mi><mo stretchy="false">{</mo><mi>i</mi><mo stretchy="false">}</mo></mrow></msub><msubsup><mi>π</mi><mi>j</mi><mi>σ</mi></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">: \pi_{-i}^{\sigma}(h)=\prod_{j \in N \backslash\{i\}} \pi_{j}^{\sigma}(h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.066995em;vertical-align:-0.316995em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.316995em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.22471em;vertical-align:-0.47471em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22528999999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mord mtight">\</span><span class="mopen mtight">{</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">}</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.47471em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span></span></span></span></li><li>对于每个玩家 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>∈</mo><mi>N</mi><mo separator="true">,</mo><msub><mi>u</mi><mi>i</mi></msub><mo>:</mo><mi>Z</mi><mo>→</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">i \in N, u_{i}: Z \rightarrow R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span> 表示玩家 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 的收益函数，即在到达终止序列集合Z中某个终 止序列时，玩家 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 所得到的收益。</li><li>玩家 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 在给定策略 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span></span> 下所能得到的期望收益可如下计算: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>σ</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∑</mo><mrow><mi>h</mi><mo>∈</mo><mi>Z</mi></mrow></msub><msub><mi>u</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><msup><mi>π</mi><mi>σ</mi></msup><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">u_{i}(\sigma)=\sum_{h \in Z} u_{i}(h) \pi^{\sigma}(h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.07708em;vertical-align:-0.32708000000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.18639799999999984em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32708000000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span></span></span></span></li></ul><p>悔值：</p><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/RM.jpg" alt="RM" style="zoom:67%;"><h4 id="遗憾最小化算法策略选择介绍"><a class="markdownIt-Anchor" href="#遗憾最小化算法策略选择介绍"></a> 遗憾最小化算法：策略选择介绍</h4><ul><li>遗憾最小化算法是一种根据过去博将中的遗憾程度来决定将来动作选择的方法</li><li>在博亦中，玩家i在第T轮次（每一轮表示一次博将完成）采取策略 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>σ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\sigma_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的遗憾值定义如<br>下（累加遗憾）:</li></ul><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mtext>&nbsp;Regret&nbsp;</mtext><mi>i</mi><mi>T</mi></msubsup><mrow><mo fence="true">(</mo><msub><mi>σ</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></munderover><mrow><mo fence="true">(</mo><msub><mi>μ</mi><mi>i</mi></msub><mrow><mo fence="true">(</mo><msub><mi>σ</mi><mi>i</mi></msub><mo separator="true">,</mo><msubsup><mi>σ</mi><mrow><mo>−</mo><mi>i</mi></mrow><mi>t</mi></msubsup><mo fence="true">)</mo></mrow><mo>−</mo><msub><mi>μ</mi><mi>i</mi></msub><mrow><mo fence="true">(</mo><msup><mi>σ</mi><mi>t</mi></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\text { Regret }_{i}^{T}\left(\sigma_{i}\right)=\sum_{t=1}^{T}\left(\mu_{i}\left(\sigma_{i}, \sigma_{-i}^{t}\right)-\mu_{i}\left(\sigma^{t}\right)\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.164561em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord text"><span class="mord">&nbsp;Regret&nbsp;</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.914561em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.1362300000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0954490000000003em;vertical-align:-1.267113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.843556em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.305331em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.843556em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></span></p><ul><li>通常遗憾值为负数的策略被认为不能提升下一时刻收益，所以这里考虑的遗憾值均为<br>正数或0</li><li>计算得到玩家 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 在第T轮次采取策略 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>σ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\sigma_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的遗憾值后，在第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">T+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 轮次玩家 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 选择策略 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> 的概<br>率如下（悔值越大、越选择，即亡羊补牢）</li></ul><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><msubsup><mi mathvariant="normal">Regret</mi><mo>⁡</mo><mi>i</mi><mi>T</mi></msubsup><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><mrow><munder><mo>∑</mo><mrow><mi>b</mi><mo>∈</mo><mo stretchy="false">{</mo><mtext>&nbsp;所有可选择策略&nbsp;</mtext><mo stretchy="false">}</mo></mrow></munder><msubsup><mi mathvariant="normal">Regret</mi><mo>⁡</mo><mi>i</mi><mi>T</mi></msubsup><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(a)=\frac{\operatorname{Regret}_{i}^{T}(a)}{\sum_{b \in\{\text { 所有可选择策略 }\}} \operatorname{Regret}_{i}^{T}(b)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.870832em;vertical-align:-1.279271em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.591561em;"><span style="top:-2.195439em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22528999999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="mrel mtight">∈</span><span class="mopen mtight">{</span><span class="mord text mtight"><span class="mord mtight">&nbsp;</span><span class="mord cjk_fallback mtight">所有可选择策略</span><span class="mord mtight">&nbsp;</span></span><span class="mclose mtight">}</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.47471em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop"><span class="mord mathrm">R</span><span class="mord mathrm">e</span><span class="mord mathrm" style="margin-right:0.01389em;">g</span><span class="mord mathrm">r</span><span class="mord mathrm">e</span><span class="mord mathrm">t</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.914561em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.1362300000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop"><span class="mord mathrm">R</span><span class="mord mathrm">e</span><span class="mord mathrm" style="margin-right:0.01389em;">g</span><span class="mord mathrm">r</span><span class="mord mathrm">e</span><span class="mord mathrm">t</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.914561em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.1362300000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.279271em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h4 id="demo石头剪刀布"><a class="markdownIt-Anchor" href="#demo石头剪刀布"></a> demo石头剪刀布</h4><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/demo石头剪刀布.jpg" alt="demo石头剪刀布" style="zoom:67%;"><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/demo石头剪刀布2.jpg" alt="demo石头剪刀布2" style="zoom:67%;"><p>为了解决博弈状态空间大的问题-&gt;虚拟遗憾最小化算法</p><h3 id="p32113虚拟遗憾最小化算法"><a class="markdownIt-Anchor" href="#p32113虚拟遗憾最小化算法"></a> <a href="https://www.bilibili.com/video/BV1c7411n7EY?p=32" target="_blank" rel="noopener">P3211.3虚拟遗憾最小化算法</a></h3><ul><li><p>如果不能遍历计算所有节点的遗憾值，那么可以采用虚拟遗憾最小化算法来进行模拟计算<br>假设:</p><ul><li>集合 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 是博亦中所有玩家所能采用的行为集（如在石头-剪刀-布游戏中出石头、出剪刀或出布三种行 为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">）</span></span></span></span></li><li>I为信息集，包含了博亦的规则以及玩家采取的历史行动，在信息集I下所能采取的行为集合记为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo stretchy="false">(</mo><mi>I</mi></mrow><annotation encoding="application/x-tex">A(I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span></span></span></span></li></ul></li><li><p>玩家 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 在第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span> 轮次采取的行动 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>∈</mo><mi>A</mi><mrow><mo fence="true">(</mo><msub><mi>I</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">a_{i} \in A\left(I_{i}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 反映了其在该轮次所采取的策略 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>σ</mi><mi>i</mi><mi>t</mi></msubsup></mrow><annotation encoding="application/x-tex">\sigma_{i}^{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.05222em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span> 。包含玩家 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 在内的 所有玩家在第t轮次采取的行动 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>∈</mo><mi>A</mi><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a \in A(I)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose">)</span></span></span></span> 构成了一组策略组合 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>σ</mi><mo>∘</mo><mi>t</mi></msubsup></mrow><annotation encoding="application/x-tex">\sigma_{\circ}^{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.040556em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></p></li><li><p>在信息集I下采取行动a所反映的策略记为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>σ</mi><mrow><mi>I</mi><mo>→</mo><mi>a</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\sigma_{I \rightarrow a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span><span class="mrel mtight">→</span><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 。</p></li><li><p>在第t轮次所有玩家采取的行动是一条序列，记为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mo>∘</mo></msub></mrow><annotation encoding="application/x-tex">h_{\circ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16111499999999998em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 采取某个策略 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span></span> 计算行动序列 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span></span></span></span><br>出现的概率记为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>π</mi><mi>σ</mi></msup><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi^{\sigma}(h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span></span></span></span></p></li><li><p>每个信息集I发生的概率 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>π</mi><mi>σ</mi></msup><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∑</mo><mrow><mi>h</mi><mo>∈</mo><mi>I</mi></mrow></msub><msup><mi>π</mi><mi>σ</mi></msup><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\pi^{\sigma}(I)=\sum_{h \in I} \pi^{\sigma}(h),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.07708em;vertical-align:-0.32708000000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.18639799999999984em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32708000000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> 表示所有能够到达该信息集的行动序<br>列的概率累加。</p></li><li><p>给定博亦的终结局势z <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo><mi>Z</mi><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\in Z,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mpunct">,</span></span></span></span> 玩家 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 在游戏结束后的收益记作 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">u_{i}(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span></p></li><li><p>在策略组合 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span></span> 下，施加博亦行动序列 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span></span></span></span> 后达到最终局势z的概率为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>π</mi><mi>σ</mi></msup><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi^{\sigma}(h, z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span></p></li><li><p>当采取策略\sigma时，其所对应的行动序列h的虚拟价值（Counterfactual Value）如下 计算(注：行动序列 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span></span></span></span> 未能使博亦进入终结局势):</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>σ</mi><mo separator="true">,</mo><mi>h</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mrow><mi>z</mi><mo>∈</mo><mi>Z</mi></mrow></munder><msubsup><mi>π</mi><mrow><mo>−</mo><mi>i</mi></mrow><mi>σ</mi></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><msup><mi>π</mi><mi>σ</mi></msup><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo><msub><mi>u</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">v_{i}(\sigma, h)=\sum_{z \in Z} \pi_{-i}^{\sigma}(h) \pi^{\sigma}(h, z) u_{i}(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.3717110000000003em;vertical-align:-1.321706em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.321706em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.305331em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span></span></p><p>玩家i采取行动a所得到的虚拟遗憾值:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>v</mi><mi>i</mi></msub><mrow><mo fence="true">(</mo><msub><mi>σ</mi><mrow><mi>I</mi><mo>→</mo><mi>a</mi></mrow></msub><mo separator="true">,</mo><mi>h</mi><mo fence="true">)</mo></mrow><mo>−</mo><msub><mi>v</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>σ</mi><mo separator="true">,</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r(h, a)=v_{i}\left(\sigma_{I \rightarrow a}, h\right)-v_{i}(\sigma, h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span><span class="mrel mtight">→</span><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mclose">)</span></span></span></span></span></p><p>行动序列 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span></span></span></span> 所对应的信息集I遗憾值为</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo stretchy="false">(</mo><mi>I</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mrow><mi>h</mi><mo>∈</mo><mi>I</mi></mrow></munder><mi>r</mi><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r(I, a)=\sum_{h \in I} r(h, a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.3794880000000003em;vertical-align:-1.329483em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.329483em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span></span></span></span></span></p><p>玩家 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 在第T轮次采取行动a的遗憾值为 :</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi mathvariant="normal">Regret</mi><mo>⁡</mo><mi>i</mi><mi>T</mi></msubsup><mo stretchy="false">(</mo><mi>I</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></munderover><msubsup><mi>r</mi><mi>i</mi><mi>t</mi></msubsup><mo stretchy="false">(</mo><mi>I</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\operatorname{Regret}_{i}^{T}(I, a)=\sum_{t=1}^{T} r_{i}^{t}(I, a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.164561em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop"><span class="mord mathrm">R</span><span class="mord mathrm">e</span><span class="mord mathrm" style="margin-right:0.01389em;">g</span><span class="mord mathrm">r</span><span class="mord mathrm">e</span><span class="mord mathrm">t</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.914561em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.1362300000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0954490000000003em;vertical-align:-1.267113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8435559999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span></span></span></span></span></p><p>同样，对于<strong>遗憾值为负数的情况，我们不予考虑</strong>，记:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mtext>&nbsp;Regret&nbsp;</mtext><mi>i</mi><mrow><mi>T</mi><mo separator="true">,</mo><mo>+</mo></mrow></msubsup><mo stretchy="false">(</mo><mi>I</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msubsup><mi>R</mi><mi>i</mi><mi>T</mi></msubsup><mo stretchy="false">(</mo><mi>I</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mn>0</mn><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\text { Regret }_{i}^{T,+}(I, a)=\max \left(R_{i}^{T}(I, a), 0\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.236103em;vertical-align:-0.276864em;"></span><span class="mord"><span class="mord text"><span class="mord">&nbsp;Regret&nbsp;</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.959239em;"><span style="top:-2.4231360000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mpunct mtight">,</span><span class="mord mtight">+</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2413409999999998em;vertical-align:-0.35001em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></span></p><p>在 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">T+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 轮次，玩家 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 选择行动 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> 的概率计算如下</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>σ</mi><mi>i</mi><mrow><mi>T</mi><mo>+</mo><mn>1</mn></mrow></msubsup><mo stretchy="false">(</mo><mi>I</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mrow><msubsup><mi mathvariant="normal">Regret</mi><mo>⁡</mo><mi>i</mi><mrow><mi>T</mi><mo separator="true">,</mo><mo>+</mo></mrow></msubsup><mo stretchy="false">(</mo><mi>I</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><mrow><msubsup><mi mathvariant="normal">Regret</mi><mo>⁡</mo><mi>i</mi><mrow><mi>T</mi><mo separator="true">,</mo><mo>+</mo></mrow></msubsup><mo stretchy="false">(</mo><mi>I</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo></mrow></mfrac><mtext>&nbsp;if&nbsp;</mtext><msub><mo>∑</mo><mrow><mi>a</mi><mo>∈</mo><mi>A</mi><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo></mrow></msub><msubsup><mi mathvariant="normal">Regret</mi><mo>⁡</mo><mi>i</mi><mrow><mi>T</mi><mo separator="true">,</mo><mo>+</mo></mrow></msubsup><mo stretchy="false">(</mo><mi>I</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mn>1</mn><mrow><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>&nbsp;otherwise&nbsp;</mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\sigma_{i}^{T+1}(I, a)=\left\{\begin{array}{ll}\frac{\operatorname{Regret}_{i}^{T,+}(I, a)}{\operatorname{Regret}_{i}^{T,+}(I, a)} \text { if } \sum_{a \in A(I)} \operatorname{Regret}_{i}^{T,+}(I, a)&gt;0 \\\frac{1}{|A(I)|} &amp; \text { otherwise }\end{array}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1583259999999997em;vertical-align:-0.266995em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.433005em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266995em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2967979999999995em;vertical-align:-1.3983989999999997em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8983989999999997em;"><span style="top:-3.8983989999999995em;"><span class="pstrut" style="height:3.215845em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2158449999999998em;"><span style="top:-2.509755em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop mtight"><span class="mord mathrm mtight">R</span><span class="mord mathrm mtight">e</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">g</span><span class="mord mathrm mtight">r</span><span class="mord mathrm mtight">e</span><span class="mord mathrm mtight">t</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9717785714285714em;"><span style="top:-2.177714285714286em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mpunct mtight">,</span><span class="mord mtight">+</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3222857142857143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">a</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5356em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop mtight"><span class="mord mathrm mtight">R</span><span class="mord mathrm mtight">e</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">g</span><span class="mord mathrm mtight">r</span><span class="mord mathrm mtight">e</span><span class="mord mathrm mtight">t</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9717785714285714em;"><span style="top:-2.177714285714286em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mpunct mtight">,</span><span class="mord mtight">+</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3222857142857143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">a</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7158449999999998em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord text"><span class="mord">&nbsp;if&nbsp;</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22528999999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight">A</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.47471em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop"><span class="mord mathrm">R</span><span class="mord mathrm">e</span><span class="mord mathrm" style="margin-right:0.01389em;">g</span><span class="mord mathrm">r</span><span class="mord mathrm">e</span><span class="mord mathrm">t</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.959239em;"><span style="top:-2.4231360000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mpunct mtight">,</span><span class="mord mtight">+</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-2.337446em;"><span class="pstrut" style="height:3.215845em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathdefault mtight">A</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span><span class="mclose mtight">)</span><span class="mord mtight">∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3983989999999997em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.03329099999999974em;"><span style="top:-2.121601em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">&nbsp;otherwise&nbsp;</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3983989999999997em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>玩家i根据遗憾值大小来选择下一时刻行为，如果遗憾值为负数，则随机挑选一种行 为进行博亦（由于规定regret不为负数，因此随机取的概率不会出现）</p></li></ul><h4 id="demo库恩扑克kunhs-pocker"><a class="markdownIt-Anchor" href="#demo库恩扑克kunhs-pocker"></a> demo库恩扑克（Kunh’s pocker）</h4><ul><li>库恩扑克是最简单的限注扑克游戏，由两名玩家进行游戏博弈，牌值只有1，2和3三种情况</li><li>每轮每位玩家各持一张手牌，根据各自判断来决定加定额赌注</li><li>游戏没有公共牌，摊牌阶段比较未弃牌玩家的底牌大小，底牌牌值最大的玩家即为胜者</li></ul><p>游戏规则定义：</p><p>|玩家A|玩家B|玩家A|结果|<br>| ---- | ---- | ---- |<br>|过牌|过牌||牌值大的玩家+1|<br>|加注|加注||牌值大的玩家+2|<br>|过牌|加注|过牌|玩家B+1|<br>|过牌|加注|加注|牌值大的玩家+2|<br>|加注|过牌||玩家A+1|</p><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/Kpocker.jpg" alt="Kpocker" style="zoom:67%;"><h5 id="算法步骤"><a class="markdownIt-Anchor" href="#算法步骤"></a> 算法步骤</h5><p>该问题中进行策略选择的算法步骤如下：<br>1.初始化遗憾值和累加策略表为02.采用随机选择的方法来决定策略<br>3.利用当前策略与对手进行博弈4.计算每个玩家采取每次行为后的遗憾值5.根据博弈结果计算每个行动的累加遗憾值大小来更新策略<br>6.重复博弈若干次<br>7.根据重复博弈最终的策略，完成最终的动作选择</p><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/Kpocker.jpg" alt="Kpocker" style="zoom:67%;"><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/Kpocker解析.jpg" alt="Kpocker解析" style="zoom:67%;"><img src="/2020/12/08/《人工智能-模型与算法——浙江大学公开课》笔记/Kpocker_end.jpg" alt="Kpocker_end" style="zoom:67%;"><h4 id="g-s算法gale-shapley"><a class="markdownIt-Anchor" href="#g-s算法gale-shapley"></a> G-S算法（Gale-Shapley）</h4><ul><li>在生活中，人们常常会碰到与资源匹配相关的决策问题（如求职就业、报考录取等），这些需要双向选择的情况被称为是<u>双边匹配问题</u>。在双边匹配问题中，需要双方互相满足对方的需求才会达成匹配</li><li>匹配的稳定是指没有任何人能从偏离稳定状态中获益。如果将匹配问题看做是一种合作博弈的话，稳定状态解就是纳什均衡解</li><li>1962年，美国数学家大卫·盖尔和博弈论学家沙普利提出了针对双边稳定匹配问题的解决算法，并将其应用于稳定婚姻问题的求解</li><li>稳定婚姻问题（stable marriage problem）是指在给定成员偏好的条件下，为两组成员寻找稳定匹配。由于这种匹配并不是简单地价高者得，所以匹配解法应考虑双方意愿</li><li>稳定婚姻问题的稳定解是指不存在未达成匹配的两个人都更倾向于选择对方胜过自己当前的匹配对象</li></ul><h4 id="最大交易圈算法top-trading-cycle-algorithm"><a class="markdownIt-Anchor" href="#最大交易圈算法top-trading-cycle-algorithm"></a> 最大交易圈算法（Top-Trading Cycle algorithm）</h4><ul><li>在匹配问题中，还有一类交换不可分的标的物的匹配问题，被称为单边匹配问题，如远古时期以物易物、或者宿舍的床位分配</li><li>1974年，沙普利和斯卡夫提出了针对单边匹配问题的稳定匹配算法：最大交易圈算法（TTC），算法过程如下：<ul><li>首先每个交易者连接一条指向他最喜欢的标的物的边，并从每一个标的物连接到其占有者或是具有高优先权的交易者。</li><li>此时形成一张有向图，且必存在交易圈，对于交易圈中的交易者，将每人指向节点所代表的标的物赋予其，同时交易者放弃原先占有的标的物，占有者和匹配成功的标的物离开匹配市场。</li><li>接着从剩余的交易者和标的物之间重复进行交易圈匹配，直到无法形成交易圈，算法停止。</li></ul></li></ul><h2 id="p33114人工智能安全"><a class="markdownIt-Anchor" href="#p33114人工智能安全"></a> <a href="https://www.bilibili.com/video/BV1c7411n7EY?p=33" target="_blank" rel="noopener">P3311.4人工智能安全</a></h2><h3 id="基于人工智能的信息安全技术加密技术"><a class="markdownIt-Anchor" href="#基于人工智能的信息安全技术加密技术"></a> 基于人工智能的信息安全技术：加密技术</h3><ul><li>将明文信息处理为难以读取的密文内容，使之不可读。</li><li>在网络环境中保障通信安全，保证数据的完整性</li><li>目前常用的加密算法有安全哈希算法（Secure Hash Algorithm，SHA）和高级加密标准（Advanced Encryption Standard，AES）</li></ul><p>使用神经网络的加密算法</p><ul><li>2016年谷歌大脑的研究团队提出了使用对抗生成网络GAN生成的一个加密算法，其使用了三个神经网络分别完成加密、解密和攻击的工作，以保证通信双方信息的无损传输以及第三方无法破译通信内容</li></ul><h3 id="基于人工智能的信息安全技术数字水印"><a class="markdownIt-Anchor" href="#基于人工智能的信息安全技术数字水印"></a> 基于人工智能的信息安全技术：数字水印</h3><ul><li>将特定信息（版权信息等）嵌入在数字信号中，数字信号可能是音频、视频、图片等。</li><li>当拷贝信息时，水印内容会被同时拷贝，所以水印内容可作为版权信息的证明，这样能避免或阻止数字媒体未经授权的复制和拷贝</li></ul><p>近年来通过神经网络来添加水印和提取水印信息的成为学术研究热点。</p><h3 id="人工智能的安全数据安全与模型安全"><a class="markdownIt-Anchor" href="#人工智能的安全数据安全与模型安全"></a> 人工智能的安全：数据安全与模型安全</h3><p>人工智能很大程度是依靠数据驱动学习<br><strong>可用性</strong>（availability）</p><ul><li>训练数据是否充足且可靠</li><li>训练数据是否有足够的标注</li></ul><p><strong>完整性</strong>（completeness）</p><ul><li>数据是否具有代表性</li></ul><p><strong>隐私性</strong>（privacy）</p><ul><li>数据是否涉及隐私安全问题</li><li>如何保障数据不被窃取</li></ul><p>人工智能所使用的的模型是由有限的训练数据训练得到的<br><strong>鲁棒性</strong>（robustness）</p><ul><li>模型是否易于受到噪声干扰或攻击</li></ul><p><strong>正确性</strong>（correctness）</p><ul><li>模型是否正确</li></ul><p><strong>通用性</strong>（generality）</p><ul><li>模型是否能够应用于现实场景</li><li>模型对输入数据是否有过高的要求</li></ul><h3 id="人工智能的安全对模型的攻击"><a class="markdownIt-Anchor" href="#人工智能的安全对模型的攻击"></a> 人工智能的安全：对模型的攻击</h3><p>对模型的攻击</p><ul><li>使用特定技术对输入样本进行微小的修改就可骗过模型而得到错误的结果</li><li>这种经过修改，使得模型判断错误的样本被称为对抗样本</li></ul><p>白盒攻击</p><ul><li><p>攻击者熟知人工智能模型的算法和模型参数，生成对抗样本的过程可以与模型的每一部分进行交互</p><p>对人工智能模型的白盒攻击通常会对模型的每一部分进行逐层分解，然后对每一部分添加一定的扰动，使得模型的结果逐步向误判目标类别偏移<br>这是一种非常隐蔽的攻击手段，通过限制扰动的大小可以使得对抗样本看起来与原样本差别很小</p><p>白盒攻击的防御策略：生成对抗网络</p></li></ul><p>黑盒攻击</p><ul><li><p>攻击者只能给定输入去获得模型输出，但并不知道被攻击模型所使用的算法和参数</p></li><li><p>黑盒攻击可以针对任何一个人工智能模型</p><p>常用的黑盒攻击防御策略有：<br>·数据压缩：通过对输入数据进行压缩或者降维，在保证识别准确率的情况下提升模型对干扰攻击的鲁棒性<br>·数据随机化：对训练数据进行随机缩放、增强等操作，提升模型的鲁棒性<br>·训练额外的网络来判断训练数据是否为攻击样本</p></li></ul><h2 id="p34121记忆驱动的智能计算"><a class="markdownIt-Anchor" href="#p34121记忆驱动的智能计算"></a> <a href="https://www.bilibili.com/video/BV1c7411n7EY?p=34" target="_blank" rel="noopener">P3412.1记忆驱动的智能计算</a></h2><h2 id="p35122可计算社会学"><a class="markdownIt-Anchor" href="#p35122可计算社会学"></a> <a href="https://www.bilibili.com/video/BV1c7411n7EY?p=35" target="_blank" rel="noopener">P3512.2可计算社会学</a></h2><h2 id="p36123若干挑战"><a class="markdownIt-Anchor" href="#p36123若干挑战"></a> <a href="https://www.bilibili.com/video/BV1c7411n7EY?p=36" target="_blank" rel="noopener">P3612.3若干挑战</a></h2></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h2 id=&quot;p111可计算思想起源与发展&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#p111可计算思想起源与发展&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.bilibili.com/
      
    
    </summary>
    
    
      <category term="ZJU" scheme="https://nymrli.top/tags/ZJU/"/>
    
      <category term="ML" scheme="https://nymrli.top/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>枚举类的优雅写法Java-&gt;Python</title>
    <link href="https://nymrli.top/2020/12/05/%E6%9E%9A%E4%B8%BE%E7%B1%BB%E7%9A%84%E4%BC%98%E9%9B%85%E5%86%99%E6%B3%95Java-Python/"/>
    <id>https://nymrli.top/2020/12/05/枚举类的优雅写法Java-Python/</id>
    <published>2020-12-05T08:19:27.000Z</published>
    <updated>2020-12-05T08:44:17.991Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>枚举类型作为与接口、类同一级别的存在，自然有它独特的用途。至于它性能上的优势暂且不谈，我们在这篇文章中只是考虑怎么把Enum写得更优雅</p></blockquote><h2 id="java"><a class="markdownIt-Anchor" href="#java"></a> Java</h2><h3 id="enum的写法"><a class="markdownIt-Anchor" href="#enum的写法"></a> Enum的写法</h3><blockquote><p>在阿里实习的时候印象最深的就是学到了枚举的写法， 大致如下所示</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> EnumOperationPermission implements IEnumBehaviour &#123;</span><br><span class="line">    <span class="comment">// ----------------------- 实际的枚举对象 ------------------------</span></span><br><span class="line">    SAVE(<span class="string">"保存"</span>, <span class="number">0</span>), </span><br><span class="line">    SUBMIT(<span class="string">"提交"</span>, <span class="number">1</span>), </span><br><span class="line">    BACK(<span class="string">"退回"</span>, <span class="number">2</span>), </span><br><span class="line">    VIEWCOMMENTS(<span class="string">"查看意见"</span>, <span class="number">3</span>), </span><br><span class="line">    SIGN(<span class="string">"签发"</span>, <span class="number">4</span>), </span><br><span class="line">    DISTRIBUTE(<span class="string">"分发"</span>, <span class="number">5</span>), </span><br><span class="line">    CALLBACK(<span class="string">"撤回"</span>, <span class="number">6</span>), </span><br><span class="line">    NODE(<span class="string">"节点"</span>, <span class="number">7</span>), </span><br><span class="line">    BROWSINFO(<span class="string">"浏览情况"</span>, <span class="number">8</span>), </span><br><span class="line">    FINISH(<span class="string">"完成"</span>, <span class="number">9</span>),</span><br><span class="line">    DETAIL(<span class="string">"订票明细"</span>,<span class="number">10</span>);</span><br><span class="line">    <span class="comment">// ----------------------- 实际的枚举对象 ------------------------</span></span><br><span class="line">   <span class="keyword">private</span> String mName;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">int</span> mId;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">private</span> <span class="title">EnumOperationPermission</span><span class="params">(String name, <span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">this</span>.mName = name;</span><br><span class="line">     <span class="keyword">this</span>.mId = id;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">   <span class="comment">// 一般只有get, 没有set</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> mName;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> mId;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">   <span class="comment">// 下面的用途为自定义跟enum的valueOf相同， 即通过某个值返回enum这个类</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> EnumOperationPermission <span class="title">parse</span><span class="params">(String name)</span> </span>&#123; </span><br><span class="line">     EnumOperationPermission[] enumList = EnumOperationPermission.values();</span><br><span class="line">     <span class="keyword">for</span> (IEnumBehaviour enumInstance : enumList) &#123;</span><br><span class="line">       <span class="keyword">if</span> (enumInstance.toString().equalsIgnoreCase(name) || enumInstance.getName().equalsIgnoreCase(name)</span><br><span class="line">           || String.valueOf(enumInstance.getId()).equalsIgnoreCase(name)) &#123;</span><br><span class="line">         <span class="keyword">return</span> (EnumOperationPermission) enumInstance;</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> EnumOperationPermission.SAVE;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="python"><a class="markdownIt-Anchor" href="#python"></a> Python</h2><p>最简易的写法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Color</span><span class="params">(Enum)</span>:</span></span><br><span class="line">    RED = <span class="number">1</span></span><br><span class="line">    YELLOW = <span class="number">2</span></span><br><span class="line">    BLUE = <span class="number">3</span></span><br></pre></td></tr></table></figure><p>枚举类的特点:</p><ul><li><p>标签值<strong>不可被修改</strong></p></li><li><p>一个标签只能对应一个值，但多个标签可以对应相同的值(别名) --&gt; 不同key可以有相同的val( 如果不允许存在相同val, 则在类前加上装饰器@unique， 需要从enum包中导入)</p></li><li><p>枚举类型可以做等值比较和身份比较，但是<strong>不能做大小比较</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Color</span><span class="params">(Enum)</span>:</span></span><br><span class="line">    RED = <span class="number">1</span></span><br><span class="line">    YELLOW = <span class="number">1</span></span><br><span class="line">    BLUE = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">print(Color.RED == Color.YELLOW)</span><br><span class="line"> <span class="keyword">True</span></span><br><span class="line">print(Color.RED <span class="keyword">is</span> Color.YELLOW)</span><br><span class="line"> <span class="keyword">True</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="枚举类型-枚举名称-枚举值"><a class="markdownIt-Anchor" href="#枚举类型-枚举名称-枚举值"></a> <strong>枚举类型、枚举名称、枚举值</strong></h3><blockquote><p>跟Java不同的是，Java一般自己定义有哪些属性，如name, code。 而Python中有设好的name和value属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="class"><span class="keyword">class</span> <span class="title">Enum</span><span class="params">(metaclass=EnumMeta)</span>:</span></span><br><span class="line">&gt; @DynamicClassAttribute</span><br><span class="line">&gt;     <span class="function"><span class="keyword">def</span> <span class="title">name</span><span class="params">(self)</span>:</span></span><br><span class="line">&gt;         <span class="string">"""The name of the Enum member."""</span></span><br><span class="line">&gt;         <span class="keyword">return</span> self._name_</span><br><span class="line">&gt; </span><br><span class="line">&gt;     @DynamicClassAttribute</span><br><span class="line">&gt;     <span class="function"><span class="keyword">def</span> <span class="title">value</span><span class="params">(self)</span>:</span></span><br><span class="line">&gt;         <span class="string">"""The value of the Enum member."""</span></span><br><span class="line">&gt;         <span class="keyword">return</span> self._value_</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><ul><li>枚举类型就是指这个枚举类；</li><li>枚举实例就是指枚举类型下的具体实例</li><li>枚举名称为枚举类型实例的key，<a href="http://xn--Enum-zi0ir4c201l.name" target="_blank" rel="noopener">本质是Enum.name</a></li><li>枚举名称为枚举类型实例的value，本质Enum.value</li></ul><h3 id="如何使用枚举类型"><a class="markdownIt-Anchor" href="#如何使用枚举类型"></a> 如何使用枚举类型</h3><p>可以用读取字典的方式来读取，并且可以遍历：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Color</span><span class="params">(Enum)</span>:</span></span><br><span class="line">    RED = <span class="number">1</span></span><br><span class="line">    YELLOW = <span class="number">1</span></span><br><span class="line">    BLUE = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">print(Color[<span class="string">'RED'</span>])  访问</span><br><span class="line"><span class="keyword">for</span> e <span class="keyword">in</span> Color:      遍历</span><br><span class="line">    print(e)</span><br><span class="line"> 当多个标签对应相同值时，第一个定义的为主名，其他的为别名</span><br><span class="line"> 直接遍历无法输出别名，可以用__members__来全部输出</span><br><span class="line"><span class="keyword">for</span> e <span class="keyword">in</span> Color.__members__:</span><br><span class="line">    print(e)</span><br></pre></td></tr></table></figure><p>注意Python中是没有类似Java中<code>EnumOperationPermission.values();</code>来获得枚举的所有实例对象的</p><h4 id="如何从python-enum类获取所有值"><a class="markdownIt-Anchor" href="#如何从python-enum类获取所有值"></a> 如何从python enum类获取所有值？</h4><p>如何像Java中一样<code>EnumOperationPermission.values();</code>呢？<a href="https://oomake.com/question/8760202%E4%B8%AD%E6%8F%90%E5%88%B0" target="_blank" rel="noopener">https://oomake.com/question/8760202中提到</a><code>Enum</code>有一个<code>members</code>字典，经翻阅源码后发现3.6中并没有这个字典，有的是<code>__member__</code>属性，其返回值为OrderedDict</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EnumMeta</span><span class="params">(type)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span><span class="params">(metacls, cls, bases, classdict)</span>:</span></span><br><span class="line"> ...</span><br><span class="line">    enum_class._member_names_ = []                names <span class="keyword">in</span> definition order</span><br><span class="line">        enum_class._member_map_ = OrderedDict()       name-&gt;value map</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__members__</span><span class="params">(cls)</span>:</span></span><br><span class="line">        <span class="string">"""Returns a mapping of member name-&gt;value.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        This mapping lists all enum members, including aliases. Note that this</span></span><br><span class="line"><span class="string">        is a read-only view of the internal mapping.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">return</span> MappingProxyType(cls._member_map_)</span><br></pre></td></tr></table></figure><p>所有写法有:</p><h5 id="通过类的value属性来获得所有值"><a class="markdownIt-Anchor" href="#通过类的value属性来获得所有值"></a> 通过类的value属性来获得所有值</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Color</span><span class="params">(Enum)</span>:</span></span><br><span class="line">    RED = <span class="number">1</span></span><br><span class="line">    GREEN = <span class="string">'GREEN'</span></span><br><span class="line">    BLUE = (<span class="string">'blue'</span>, <span class="string">'#0000ff'</span>)</span><br><span class="line">    </span><br><span class="line"><span class="meta">@staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        获得所有值</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        <span class="keyword">return</span> list(map(<span class="keyword">lambda</span> c: c.value, Color))</span><br><span class="line">print(Color.list())</span><br></pre></td></tr></table></figure><h5 id="模仿java写法"><a class="markdownIt-Anchor" href="#模仿java写法"></a> 模仿Java写法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Chess</span><span class="params">(Enum)</span>:</span></span><br><span class="line">    BLACK = &#123;<span class="string">'graph'</span>: <span class="string">'X'</span>, <span class="string">'val'</span>: <span class="number">0</span>&#125;</span><br><span class="line">    WHITE = &#123;<span class="string">'graph'</span>: <span class="string">'O'</span>, <span class="string">'val'</span>: <span class="number">1</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getChess</span><span class="params">(color)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> Chess:</span><br><span class="line">            <span class="keyword">if</span> color == c.value.get(<span class="string">"graph"</span>):</span><br><span class="line">                <span class="keyword">return</span> c</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getVal</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.value.get(<span class="string">'val'</span>)</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getGraph</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.value.get(<span class="string">'graph'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;枚举类型作为与接口、类同一级别的存在，自然有它独特的用途。至于它性能上的优势暂且不谈，我们在这篇文章中只是考虑怎么把Enum写得更优雅&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;java&quot;&gt;&lt;a class=&quot;markdownIt-Anc
      
    
    </summary>
    
    
      <category term="计算机基础知识" scheme="https://nymrli.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>理解科学计算(numpy,pytorch)中的dim参数</title>
    <link href="https://nymrli.top/2020/12/05/%E7%90%86%E8%A7%A3%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97%E4%B8%AD%E7%9A%84dim%E5%8F%82%E6%95%B0/"/>
    <id>https://nymrli.top/2020/12/05/理解科学计算中的dim参数/</id>
    <published>2020-12-05T03:53:10.000Z</published>
    <updated>2020-12-10T06:22:37.272Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>😄理解numpy中array和pytorch中tensor的操作是开始科学运算的第一步!</p></blockquote><p>首先明白维度的感念：</p><h2 id="维度"><a class="markdownIt-Anchor" href="#维度"></a> 维度</h2><p>我们通常能听到的都是2D, 3D，其实这边的D就是dimension的含义即维度。2D，我们通常理解为是平面，如我们最熟悉的直角坐标系就是平面坐标系，还有极坐标系。而3D呢，就是在平面的基础上增加了一维——高度，从而使平面的物体立起来了，同样3D也有耳熟能详的坐标系——3维坐标系。</p><p>更官方的解释呢：维度（Dimension），又称为<a href="https://baike.baidu.com/item/%E7%BB%B4%E6%95%B0/6496548" target="_blank" rel="noopener">维数</a>，是<a href="https://baike.baidu.com/item/%E6%95%B0%E5%AD%A6/107037" target="_blank" rel="noopener">数学</a>中独立参数的<a href="https://baike.baidu.com/item/%E6%95%B0%E7%9B%AE/7720359" target="_blank" rel="noopener">数目</a>。在<a href="https://baike.baidu.com/item/%E7%89%A9%E7%90%86%E5%AD%A6/313183" target="_blank" rel="noopener">物理学</a>和<a href="https://baike.baidu.com/item/%E5%93%B2%E5%AD%A6/140608" target="_blank" rel="noopener">哲学</a>的领域内，指独立的时空坐标的数目。0维是一个无限小的点，没有长度。<strong>1维是一条无限长的线，只有长度。2维是一个平面，是由长度和宽度(或部分曲线)组成面积。3维是2维加上高度组成体积。4维分为时间上和空间上的4维，人们说的4维通常是指关于物体在时间线上的转移。</strong>（4维准确来说有两种。1.四维时空，是指三维空间加一维时间。2.四维空间，只指四个维度的空间。）四维运动产生了五维。</p><p>从哲学角度看，人们观察、思考与表述某事物的“<u>思维角度</u>”，简称“维度”。例如，人们观察与思考“月亮”这个事物，可以从月亮的“内容、时间、空间”三个思维角度去描述；也可以从月亮的“载体、能量、信息”三个思维角度去描述。这边的维度其实也可以理解为角度，从不同的方面去看待、确定一个事物。</p><p>所以代数上来说，维度其实是数学里在<strong>表示</strong>方面的一个重要的概念，它反映的是一个空间的本质性质。</p><h2 id="科学计算中维度的概念"><a class="markdownIt-Anchor" href="#科学计算中维度的概念"></a> 科学计算中维度的概念</h2><h3 id="从二维点位置-编程中的坐标系"><a class="markdownIt-Anchor" href="#从二维点位置-编程中的坐标系"></a> 从二维点位置-&gt;编程中的坐标系</h3><p>维度的考量主要集中在矩阵的运算上。首先我们来看一个元素：4，其实它就是一个点，可以被认为是0维的。但往往我们不会只有一个元素。我们最常见的是编程中的数组，如[1,2,3,4]，这个是由多个元素构成的，它的维度就是一维的，这个我们也比较好理解。</p><p>而二维是什么呢？我们能直观理解的二维是平面坐标系的那种：(1,3), (4,5)…即给一个x，一个y，那么在平面中就可以在直角坐标系下确定这个点（物）。现在我们规整下这些坐标点[ (1, 3), (4, 5) ]，从这个角度上离我们的矩阵，或是数组好像还是有点远。那么我们继续变形。</p><p>如果我们需要画出坐标系中有哪些点的话， 1.第一种做法就是跟上述一样， 把点都存一个vector中[ (1, 3), (4, 5) ]，然后遍历，再在坐标系中点出。2.第二种呢，就是在坐标系中把所有的位置都列出来，如果有点存在就把它标出来，即跟我们列出迷宫地图一样，先把地图画出来，然后再把宝藏标出来。所以上述的两个点可以理解为。在给出了<code>map[20][20]</code>的地图上，(1, 3)和(4, 5)位置为true， 即<code>map[1][3] = 1</code>, <code>map[4][5] = 1</code>，其他位置<code>map[x][y] = 0</code>，所以这样我们就从[(1, 3), (4, 5)]==&gt; 用map形式表现出了这两个点，两者成功在<strong>二维</strong>上进行了转换。接下来我们就来分析这个二维的map。</p><p>数组，在编程中，我们都不陌生，如<code>int arr[50][50]</code>，虽然可以通过这个二维的数组，根据val的不同来表示三维的量，但是我们这边不把它这么理解，仅是当做<code>bool arr[50][50]</code>来理解维度上的概念。===&gt;同样，面对numpy中的array我们也是这么个理解。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> torch </span><br><span class="line">x = np.random.randint(<span class="number">2</span>, size = (<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line">print(x)</span><br><span class="line"></span><br><span class="line">y = torch.randint(<span class="number">2</span>, size = (<span class="number">2</span>, <span class="number">3</span>))</span><br><span class="line">print(y)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">[[0 1 1]</span></span><br><span class="line"><span class="string"> [1 0 1]]</span></span><br><span class="line"><span class="string">tensor([[1, 0, 1],</span></span><br><span class="line"><span class="string">        [0, 0, 1]])</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><p>我们从numpy的x上理解，这边是创建了一个2*3的矩阵，其中<code>x[0][1], x[0][2], x[1][0], x[0][2]</code>全1，其余为0，输入<code>x.shape</code>得到的结果是(2, 3)，有两项，跟我们从map的理解上是一致的，这个地图map拥有长和宽两个维度。</p><p>然后我们从编程中观察这个2*3的矩阵或是叫数组，可以发现<code>x[a][b]</code>第一个<code>[]</code>中的内容a范围是从0-1的，第一个<code>[]</code>中的内容b范围是从0-2的，0的话学编程的人都能很快的理解，而第二个的范围却不太那么肯定。为什么呢？因为它跟我们普通认知的直角坐标系不一致。下面我们把x画出来(不改变输出显示的形式，而是让坐标系去适应这种表现形式)。</p><p><img src="/2020/12/05/理解科学计算中的dim参数/%E5%9D%90%E6%A0%87%E7%B3%BB.png" alt="坐标系"></p><p>为什么是这样画的呢？首先明确的原则是，不改变输出显示的形式，而是让坐标系去适应这种输出形式，因此输出长啥样，我们坐标系只能去适应。由于我们碰到有x，有y的时候，习惯上把第一个出现的当作x，第二个当作y，所以就有了第一个[]为x，第二个[]为y。</p><p>好了，现在我们确定好坐标系长什么样了。接下来就是具体理解dim的含义了</p><h3 id="编程中坐标系-科学计算中array的dim"><a class="markdownIt-Anchor" href="#编程中坐标系-科学计算中array的dim"></a> 编程中坐标系-&gt;科学计算中array的dim</h3><blockquote><p>想必大家在学习numpy或者torch的时候都被各种函数方法中的dim参数折磨过，感觉怎么理解都有问题，不敢自己使用。因此，这边就是解决，这些函数中的dim到底是怎么确定的</p></blockquote><p>比如我们创建一个高维的array</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">A = torch.randint(<span class="number">2</span>, size = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([[[[0, 0, 1, 0],</span></span><br><span class="line"><span class="string">          [1, 1, 0, 1],</span></span><br><span class="line"><span class="string">          [0, 0, 0, 0]],</span></span><br><span class="line"><span class="string">         [[0, 0, 1, 1],</span></span><br><span class="line"><span class="string">          [1, 1, 1, 0],</span></span><br><span class="line"><span class="string">          [0, 1, 0, 0]]]])</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><p>举个我自己最初理解dim的笨方法：硬记x为第一维(dim = 0)， y为第二维(dim = 1)</p><p>实际上这种记法是比较低效的，最好的方法是我们怎么定义这个array就怎么记，比如我们这边创建的是一个size=(1, 2, 3, 4)，输出<code>len(A.shape)</code>为4，可以看到这就是个4维的tensor，那么我们顺理成章地就把把各个维度依次定义出来了。如dim = 0地指的就是size = 1的那层，dim = 1就是指size = 2的那层，依次类推。这样说可能有点抽象，因此我们回归简单的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">B = torch.randint(<span class="number">2</span>, size = (<span class="number">3</span>, <span class="number">2</span>))</span><br><span class="line">print(B)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([[1, 0],</span></span><br><span class="line"><span class="string">        [1, 1],</span></span><br><span class="line"><span class="string">        [0, 0]])</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><p>按照我们刚的定义，dim=0就是size=3的这一层，也就是我们坐标系中的X轴orX面。</p><p>好了，想必大家这个时候还不知道我在说什么。接下来就带大家来测试函数。</p><h4 id="测试dim在函数参数中的定义"><a class="markdownIt-Anchor" href="#测试dim在函数参数中的定义"></a> 测试dim在函数参数中的定义</h4><blockquote><p>提前指出把：要注意函数介绍中dim指的是&quot;<strong>沿着dim这个维度</strong>&quot;or&quot;<strong>删除、增加…dim这个维度(在dim这个维度上进行维度修改)</strong>&quot;</p></blockquote><h5 id="规约计算"><a class="markdownIt-Anchor" href="#规约计算"></a> 规约计算</h5><blockquote><p>一般是指分组聚合计算，表现结果就是会进行维度压缩</p></blockquote><h6 id="sum"><a class="markdownIt-Anchor" href="#sum"></a> sum</h6><blockquote><p>沿着dim累加元素</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">C = torch.randint(<span class="number">5</span>, size = (<span class="number">2</span>, <span class="number">5</span>))</span><br><span class="line">print(C)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([[2, 3, 3, 4, 0],</span></span><br><span class="line"><span class="string">        [1, 0, 2, 4, 4]])</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">print(C.sum(dim = <span class="number">0</span>))</span><br><span class="line">print(C.sum(dim = <span class="number">1</span>))</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([3, 3, 5, 8, 4])</span></span><br><span class="line"><span class="string">tensor([12, 11])</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><p>可以看到sum就是比较典型的&quot;沿着dim&quot;的例子，当dim = 0时就沿着dim = 0即x轴进行累加，由于sum这个函数会进行维度的压缩，所以最后的结果为<code>tensor([3, 3, 5, 8, 4])</code></p><h6 id="cumprod"><a class="markdownIt-Anchor" href="#cumprod"></a> cumprod</h6><blockquote><p>通过dim指定沿着某个维度计算累积</p><p>其他的函数还有cumsum、prod、sum，实际上两者是相同的，还有mean、median、var、std、min、max</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line">x = torch.Tensor([</span><br><span class="line">    [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],</span><br><span class="line">    [<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,]</span><br><span class="line">])</span><br><span class="line">print(torch.cumprod(x, dim = <span class="number">0</span>))</span><br><span class="line">print(torch.cumprod(x, dim = <span class="number">1</span>))</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([[ 2.,  3.,  4.,  5.,  6.],</span></span><br><span class="line"><span class="string">        [18., 24., 28., 30., 30.]])</span></span><br><span class="line"><span class="string">tensor([[2.0000e+00, 6.0000e+00, 2.4000e+01, 1.2000e+02, 7.2000e+02],</span></span><br><span class="line"><span class="string">        [9.0000e+00, 7.2000e+01, 5.0400e+02, 3.0240e+03, 1.5120e+04]])</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># min</span></span><br><span class="line">x = torch.Tensor([</span><br><span class="line">    [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],</span><br><span class="line">    [<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,]</span><br><span class="line">])</span><br><span class="line">print(torch.min(x, dim = <span class="number">0</span>))</span><br><span class="line">print(torch.min(x, dim = <span class="number">1</span>))</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">torch.return_types.min(</span></span><br><span class="line"><span class="string">    values=tensor([2., 3., 4., 5., 5.]),</span></span><br><span class="line"><span class="string">    indices=tensor([0, 0, 0, 0, 1]) )</span></span><br><span class="line"><span class="string">torch.return_types.min(</span></span><br><span class="line"><span class="string">    values=tensor([2., 5.]),</span></span><br><span class="line"><span class="string">    indices=tensor([0, 4]) )</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mean</span></span><br><span class="line">x = torch.Tensor([</span><br><span class="line">    [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],</span><br><span class="line">    [<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,]</span><br><span class="line">])</span><br><span class="line">print(torch.mean(x, dim = <span class="number">0</span>))</span><br><span class="line">print(torch.mean(x, dim = <span class="number">1</span>))</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([5.5000, 5.5000, 5.5000, 5.5000, 5.5000])</span></span><br><span class="line"><span class="string">tensor([4., 7.])</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><h5 id="索引-切片-连接"><a class="markdownIt-Anchor" href="#索引-切片-连接"></a> 索引、切片、连接</h5><h6 id="squeezeunsqueeze"><a class="markdownIt-Anchor" href="#squeezeunsqueeze"></a> squeeze，unsqueeze</h6><blockquote><p>unsqueeze关键字：参数dim指定在第几个维度增加&quot;[]&quot;，以提升维度</p><p>squeeze: unsqueeze的逆操作，删除dim指定的维度</p></blockquote><p>unsqueeze</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">D = torch.Tensor( [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>] )</span><br><span class="line">y = D.unsqueeze(dim = <span class="number">0</span>)</span><br><span class="line">print(y, y.shape)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([[1., 2., 3., 4., 5.]]) torch.Size([1, 5])</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">y = D.unsqueeze(dim = <span class="number">1</span>)</span><br><span class="line">print(y.shape)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([[1.],</span></span><br><span class="line"><span class="string">        [2.],</span></span><br><span class="line"><span class="string">        [3.],</span></span><br><span class="line"><span class="string">        [4.],</span></span><br><span class="line"><span class="string">        [5.]])  torch.Size([5, 1])</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><p>可以看到的是dim = 0的时候就是在dim = 0 维度上增加了一维， 使得变成了[1, 5]。第二个是在dim=1的位置加了一维变成了[5, 1] （这也就是为什么很多书上会说其实就是在dim维度上加了1）</p><p>▲这个典型就是要区分： <strong>在dim维度上</strong> 和 <strong>沿着dim维度</strong>了</p><p>squeeze</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">F = torch.Tensor( [ [<span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], </span><br><span class="line">                    [<span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span> ,<span class="number">55</span>]</span><br><span class="line">                  ])</span><br><span class="line">y = torch.squeeze(F, dim = <span class="number">0</span>)</span><br><span class="line">print(y, y.shape)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([[ 0.,  2.,  3.,  4.],</span></span><br><span class="line"><span class="string">        [22., 33., 44., 55.]]) torch.Size([2, 4])</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">y = torch.squeeze(F, dim = <span class="number">1</span>)</span><br><span class="line">print(y, y.shape)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([[ 0.,  2.,  3.,  4.],</span></span><br><span class="line"><span class="string">        [22., 33., 44., 55.]]) torch.Size([2, 4])</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><p>这边变换不大的原因是因为dim上没有size=1可以删除</p><h6 id="split"><a class="markdownIt-Anchor" href="#split"></a> split</h6><blockquote><p><strong>按(沿着)dim维度</strong>将tensor分成n个部分</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">x = torch.Tensor([</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>],</span><br><span class="line">    [<span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>]</span><br><span class="line">])</span><br><span class="line">print(x)</span><br><span class="line">print(torch.split(x, <span class="number">5</span>, dim = <span class="number">1</span>))</span><br><span class="line"><span class="comment"># 指定划分列表，表示依次有1,2,3,4个长度 (总和得跟dim维度上元素个数相同)</span></span><br><span class="line">print(torch.split(x, [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>], dim = <span class="number">1</span>))</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">tensor([[ 1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10.],</span></span><br><span class="line"><span class="string">        [10.,  9.,  8.,  7.,  6.,  5.,  4.,  3.,  2.,  1.]])</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">(tensor([# 可以看到这个是在x[:][6]的地方将tensor切成了两个</span></span><br><span class="line"><span class="string">[ 1.,  2.,  3.,  4.,  5.],</span></span><br><span class="line"><span class="string">        [10.,  9.,  8.,  7.,  6.]</span></span><br><span class="line"><span class="string">        ]), </span></span><br><span class="line"><span class="string">tensor([</span></span><br><span class="line"><span class="string">        [ 6.,  7.,  8.,  9., 10.],</span></span><br><span class="line"><span class="string">        [ 5.,  4.,  3.,  2.,  1.]</span></span><br><span class="line"><span class="string">        ]))</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">(tensor([[ 1.],</span></span><br><span class="line"><span class="string">        [10.]]), tensor([[2., 3.],</span></span><br><span class="line"><span class="string">        [9., 8.]]), tensor([[4., 5., 6.],</span></span><br><span class="line"><span class="string">        [7., 6., 5.]]), tensor([[ 7.,  8.,  9., 10.],</span></span><br><span class="line"><span class="string">        [ 4.,  3.,  2.,  1.]]))</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><h6 id="unbind"><a class="markdownIt-Anchor" href="#unbind"></a> unbind</h6><blockquote><p>删除某个维度后，返回所有切片组成的<strong>元组</strong></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">x = torch.rand(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="comment"># x = torch.rand(size=(1,2,3))</span></span><br><span class="line">print(x, x.shape)</span><br><span class="line">out = torch.unbind(x, dim = <span class="number">1</span>)</span><br><span class="line">print(out, len(out))</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([</span></span><br><span class="line"><span class="string">[</span></span><br><span class="line"><span class="string">            [0.3631, 0.6672, 0.9489],</span></span><br><span class="line"><span class="string">            [0.4944, 0.1606, 0.6122]</span></span><br><span class="line"><span class="string">]</span></span><br><span class="line"><span class="string">         ])torch.Size([1, 2, 3])</span></span><br><span class="line"><span class="string">         </span></span><br><span class="line"><span class="string">(</span></span><br><span class="line"><span class="string">    tensor([[0.3631, 0.6672, 0.9489]]), torch.Size([1, 3])</span></span><br><span class="line"><span class="string">    tensor([[0.4944, 0.1606, 0.6122]])torch.Size([1, 3])</span></span><br><span class="line"><span class="string">)      2</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">x = torch.Tensor([</span><br><span class="line">        [[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,],</span><br><span class="line">        [<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>],</span><br><span class="line">        [<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>]],</span><br><span class="line">    </span><br><span class="line">        [[<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>],</span><br><span class="line">        [<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>],</span><br><span class="line">        [<span class="number">21</span>,<span class="number">22</span>,<span class="number">23</span>,<span class="number">24</span>]]</span><br><span class="line">])</span><br><span class="line">print(x, x.shape)</span><br><span class="line">out = torch.unbind(x, dim = <span class="number">1</span>)</span><br><span class="line">print(out, len(out))</span><br><span class="line">print(out[<span class="number">0</span>].shape)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([</span></span><br><span class="line"><span class="string">        [[1,2,3,4,],</span></span><br><span class="line"><span class="string">        [5,6,7,8],</span></span><br><span class="line"><span class="string">        [9,10,11,12]],</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        [[13,14,15,16],</span></span><br><span class="line"><span class="string">        [17,18,19,20],</span></span><br><span class="line"><span class="string">        [21,22,23,24]]</span></span><br><span class="line"><span class="string">])        torch.Size([2, 3, 4])</span></span><br><span class="line"><span class="string">(tensor([</span></span><br><span class="line"><span class="string">[ 1.,  2.,  3.,  4.],</span></span><br><span class="line"><span class="string">        [13., 14., 15., 16.]]), </span></span><br><span class="line"><span class="string">tensor([</span></span><br><span class="line"><span class="string">[ 5.,  6.,  7.,  8.],</span></span><br><span class="line"><span class="string">        [17., 18., 19., 20.]]), </span></span><br><span class="line"><span class="string">tensor([</span></span><br><span class="line"><span class="string">[ 9., 10., 11., 12.],</span></span><br><span class="line"><span class="string">        [21., 22., 23., 24.]])) </span></span><br><span class="line"><span class="string">删除dim = 1, 把size[1] = 3的tensor拆成了3个tensor</span></span><br><span class="line"><span class="string">不要记这个： 因为dim0为z轴， dim1为x轴， dim2为y轴，所以删除dim1就是删除x轴，最后得到的就是yOz平面</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><h6 id="cat-stack"><a class="markdownIt-Anchor" href="#cat-stack"></a> cat、stack</h6><blockquote><p>通过关键字dim指定按哪个维度拼接</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">x = torch.randint(<span class="number">1</span>, <span class="number">100</span>, size=(<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line">print(x)</span><br><span class="line">y = torch.randint(<span class="number">1</span>, <span class="number">100</span>, size=(<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line">print(y)</span><br><span class="line">res = torch.cat((x, y), dim = <span class="number">1</span>)</span><br><span class="line">print(res)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">tensor([[71, 56, 44],</span></span><br><span class="line"><span class="string">        [64, 30, 87]])</span></span><br><span class="line"><span class="string">tensor([[39, 56, 63],</span></span><br><span class="line"><span class="string">        [68, 28, 65]])</span></span><br><span class="line"><span class="string">tensor([[71, 56, 44, 39, 56, 63],</span></span><br><span class="line"><span class="string">        [64, 30, 87, 68, 28, 65]])</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加强高维理解</span></span><br><span class="line">x = torch.randint(<span class="number">1</span>, <span class="number">100</span>, size=(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line">print(x)</span><br><span class="line">y = torch.randint(<span class="number">1</span>, <span class="number">100</span>, size=(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line">print(y)</span><br><span class="line">res = torch.cat((x, y), dim = <span class="number">1</span>)</span><br><span class="line">print(res)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([[[81, 79, 10,  8],</span></span><br><span class="line"><span class="string">         [47, 30, 48, 35],</span></span><br><span class="line"><span class="string">         [10, 57, 68, 88]],</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        [[33, 51, 60, 97],</span></span><br><span class="line"><span class="string">         [27, 14, 83, 51],</span></span><br><span class="line"><span class="string">         [51, 54, 79, 65]]])</span></span><br><span class="line"><span class="string">tensor([[[85,  9, 95, 95],</span></span><br><span class="line"><span class="string">         [29, 99, 12,  8],</span></span><br><span class="line"><span class="string">         [32,  8,  3, 84]],</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        [[13, 24, 46, 20],</span></span><br><span class="line"><span class="string">         [86, 83, 72, 10],</span></span><br><span class="line"><span class="string">         [76, 33, 79, 48]]])</span></span><br><span class="line"><span class="string">tensor([[[81, 79, 10,  8],</span></span><br><span class="line"><span class="string">         [47, 30, 48, 35],</span></span><br><span class="line"><span class="string">         [10, 57, 68, 88],</span></span><br><span class="line"><span class="string">         [85,  9, 95, 95],</span></span><br><span class="line"><span class="string">         [29, 99, 12,  8],</span></span><br><span class="line"><span class="string">         [32,  8,  3, 84]],</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        [[33, 51, 60, 97],</span></span><br><span class="line"><span class="string">         [27, 14, 83, 51],</span></span><br><span class="line"><span class="string">         [51, 54, 79, 65],</span></span><br><span class="line"><span class="string">         [13, 24, 46, 20],</span></span><br><span class="line"><span class="string">         [86, 83, 72, 10],</span></span><br><span class="line"><span class="string">         [76, 33, 79, 48]]]) torch.Size([2, 6, 4])</span></span><br><span class="line"><span class="string">dim=1即沿元素为3的方向上延伸，所以结果变成了6</span></span><br><span class="line"><span class="string">不要记：也可以理解为沿x轴方向</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><p>官方文档： <a href="https://pytorch.org/docs/stable/generated/torch.cat.html?highlight=cat#torch.cat" target="_blank" rel="noopener">https://pytorch.org/docs/stable/generated/torch.cat.html?highlight=cat#torch.cat</a></p><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3><h4 id="正确理解姿势"><a class="markdownIt-Anchor" href="#正确理解姿势"></a> 正确理解姿势</h4><p>dim是指tensor在shape上的顺序(可以这么理解)，如x的shape是２ｘ３ｘ４，也就是[2, 3, 4]。故可以这样一一对应来。<br>比如dim = 1就是按具有3个元素的那个轴操作，从而不用死记硬背那些dim = 0是对列操作还是对行操作了。</p><h4 id="强记三维"><a class="markdownIt-Anchor" href="#强记三维"></a> 强记三维</h4><p><img src="/2020/12/05/理解科学计算中的dim参数/3%E7%BB%B4.png" alt="3维"></p><p>但还是不提倡强记，因为一旦高维就理解不了了。</p><h2 id="附"><a class="markdownIt-Anchor" href="#附"></a> 附：</h2><h3 id="关于size的设置"><a class="markdownIt-Anchor" href="#关于size的设置"></a> 关于size的设置</h3><p>在ones、rand等函数上，size = (2,3,4)，我们在C++数组中<code>int arr[x][y][z]</code>的理解是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mo>∗</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">2*3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>然后z为4， 但实际上在科学运算中size = (2,3,4)的矩阵是有4个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>3</mn><mo>∗</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">3*4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span>的矩阵叠加而成，这边是要区分的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = np.random.randint(<span class="number">1</span>, <span class="number">100</span>, [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">array([[[<span class="number">26</span>, <span class="number">36</span>, <span class="number">31</span>, <span class="number">21</span>],</span><br><span class="line">        [<span class="number">74</span>, <span class="number">59</span>, <span class="number">79</span>, <span class="number">32</span>],</span><br><span class="line">        [<span class="number">77</span>, <span class="number">94</span>, <span class="number">81</span>, <span class="number">32</span>]],</span><br><span class="line"></span><br><span class="line">       [[<span class="number">72</span>, <span class="number">76</span>, <span class="number">85</span>, <span class="number">93</span>],</span><br><span class="line">        [<span class="number">66</span>, <span class="number">34</span>, <span class="number">80</span>, <span class="number">12</span>],</span><br><span class="line">        [<span class="number">99</span>, <span class="number">17</span>, <span class="number">98</span>, <span class="number">23</span>]]])</span><br><span class="line"></span><br><span class="line">x = torch.randint(<span class="number">1</span>, <span class="number">100</span>, size=(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line">print(x)</span><br><span class="line">print(x[<span class="number">1</span>][<span class="number">2</span>][<span class="number">3</span>])<span class="comment"># 高度索引为1的, 在x = 2, y = 3的元素就是76</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([[[63, 54, 57, 17],</span></span><br><span class="line"><span class="string">         [78, 64, 76, 44],</span></span><br><span class="line"><span class="string">         [96,  3, 59, 37]],</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        [[86,  3, 92, 84],</span></span><br><span class="line"><span class="string">         [89, 36,  8, 79],</span></span><br><span class="line"><span class="string">         [10, 87, 15, 76]]])</span></span><br><span class="line"><span class="string">tensor(76)</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line">x = torch.randint(<span class="number">1</span>, <span class="number">100</span>, size=(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>))</span><br><span class="line">print(x)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">tensor([[[[29, 50],</span></span><br><span class="line"><span class="string">          [50, 69],</span></span><br><span class="line"><span class="string">          [95, 70],</span></span><br><span class="line"><span class="string">          [21, 35]],</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         [[58, 65],</span></span><br><span class="line"><span class="string">          [15, 53],</span></span><br><span class="line"><span class="string">          [96, 25],</span></span><br><span class="line"><span class="string">          [11, 75]],</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         [[12, 71],</span></span><br><span class="line"><span class="string">          [36, 12],</span></span><br><span class="line"><span class="string">          [71, 92],</span></span><br><span class="line"><span class="string">          [87, 47]]],</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        [[[43, 89],</span></span><br><span class="line"><span class="string">          [88, 22],</span></span><br><span class="line"><span class="string">          [61, 56],</span></span><br><span class="line"><span class="string">          [47, 97]],</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         [[71,  7],</span></span><br><span class="line"><span class="string">          [44, 88],</span></span><br><span class="line"><span class="string">          [54, 32],</span></span><br><span class="line"><span class="string">          [15, 65]],</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         [[96, 22],</span></span><br><span class="line"><span class="string">          [90, 78],</span></span><br><span class="line"><span class="string">          [30, 85],</span></span><br><span class="line"><span class="string">          [65, 57]]]])</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><h3 id="关于如何看图"><a class="markdownIt-Anchor" href="#关于如何看图"></a> 关于如何看图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">res = np.uint8(np.random.rand(<span class="number">5</span>,<span class="number">5</span>,<span class="number">3</span>) * <span class="number">255</span>)</span><br><span class="line">print(res)</span><br><span class="line">plt.imshow(res)</span><br><span class="line">plt.show()</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">[[[ 19 228 231]</span></span><br><span class="line"><span class="string">  [106  28 252]</span></span><br><span class="line"><span class="string">  [191  98 139]</span></span><br><span class="line"><span class="string">  [171  71 202]</span></span><br><span class="line"><span class="string">  [105 101  93]]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> [[155 232 228]</span></span><br><span class="line"><span class="string">  [ 89 119  13]</span></span><br><span class="line"><span class="string">  [142 158 200]</span></span><br><span class="line"><span class="string">  [226 169  55]</span></span><br><span class="line"><span class="string">  [137 187 249]]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> [[202 217  96]</span></span><br><span class="line"><span class="string">  [214  44 133]</span></span><br><span class="line"><span class="string">  [144 253 213]</span></span><br><span class="line"><span class="string">  [ 82   4  28]</span></span><br><span class="line"><span class="string">  [172 242 238]]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> [[106 103  68]</span></span><br><span class="line"><span class="string">  [236 252  63]</span></span><br><span class="line"><span class="string">  [ 53  49  66]</span></span><br><span class="line"><span class="string">  [ 48 121  62]</span></span><br><span class="line"><span class="string">  [ 64  61 209]]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> [[158  80 221]</span></span><br><span class="line"><span class="string">  [220  12 199]</span></span><br><span class="line"><span class="string">  [214  40   3]</span></span><br><span class="line"><span class="string">  [169 142 144]</span></span><br><span class="line"><span class="string">  [140 112 148]]]</span></span><br><span class="line"><span class="string">  """</span></span><br></pre></td></tr></table></figure><p>画图效果如下：</p><p><img src="/2020/12/05/理解科学计算中的dim参数/%E5%9B%BE.png" alt="图"></p><p>可以得到的结果是针对<code>np.random.rand(5,5,3)</code>来说，三个通道被列成了三列，因此每一列就是一个通道。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">res = np.uint8(np.random.rand(<span class="number">5</span>,<span class="number">5</span>,<span class="number">3</span>) * <span class="number">255</span>)</span><br><span class="line">[[[ <span class="number">19</span> <span class="number">228</span> <span class="number">231</span>]</span><br><span class="line">  [<span class="number">106</span>  <span class="number">28</span> <span class="number">252</span>]</span><br><span class="line">  [<span class="number">191</span>  <span class="number">98</span> <span class="number">139</span>]</span><br><span class="line">  [<span class="number">171</span>  <span class="number">71</span> <span class="number">202</span>]</span><br><span class="line">  [<span class="number">105</span> <span class="number">101</span>  <span class="number">93</span>]]</span><br><span class="line">  </span><br><span class="line">res = np.uint8(np.random.rand(<span class="number">5</span>,<span class="number">6</span>,<span class="number">3</span>) * <span class="number">255</span>)</span><br><span class="line">[[[<span class="number">217</span> <span class="number">210</span> <span class="number">138</span>]</span><br><span class="line">  [  <span class="number">1</span> <span class="number">148</span>  <span class="number">10</span>]</span><br><span class="line">  [ <span class="number">25</span> <span class="number">231</span> <span class="number">128</span>]</span><br><span class="line">  [<span class="number">158</span> <span class="number">216</span>  <span class="number">73</span>]</span><br><span class="line">  [<span class="number">220</span> <span class="number">208</span> <span class="number">165</span>]</span><br><span class="line">  [ <span class="number">73</span> <span class="number">119</span> <span class="number">122</span>]]</span><br><span class="line"><span class="comment"># 单元中竖着的行数表示了图片的长，可以看到横着的长是6</span></span><br><span class="line"><span class="comment"># 而有多少个单元就以为着图片的宽， 可以看到竖着的宽是5==&gt; 所以第几个单元意味着第几行</span></span><br><span class="line"><span class="comment"># 所以[0][5][0]=73标志着右上角那一块绿色的第一个通道的值</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 可以设置后再绘图看看是不是右上角的图块变成白色的了</span></span><br><span class="line">res[<span class="number">0</span>][<span class="number">5</span>][<span class="number">0</span>] = res[<span class="number">0</span>][<span class="number">5</span>][<span class="number">1</span>] = res[<span class="number">0</span>][<span class="number">5</span>][<span class="number">2</span>] = <span class="number">255</span></span><br><span class="line">print(res[<span class="number">0</span>][<span class="number">5</span>][<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>总结： RGB图像的shape：(H, W, C)</p><h3 id="pytorchapi"><a class="markdownIt-Anchor" href="#pytorchapi"></a> pytorchAPI:</h3><p><a href="https://pytorch.org/docs/stable/torch.html#torch.arange" target="_blank" rel="noopener">https://pytorch.org/docs/stable/torch.html#torch.arange</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;😄理解numpy中array和pytorch中tensor的操作是开始科学运算的第一步!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先明白维度的感念：&lt;/p&gt;
&lt;h2 id=&quot;维度&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; h
      
    
    </summary>
    
    
      <category term="计算机基础知识" scheme="https://nymrli.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
      <category term="ML" scheme="https://nymrli.top/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>Lets learn 设计模式</title>
    <link href="https://nymrli.top/2020/12/03/Lets-learn-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>https://nymrli.top/2020/12/03/Lets-learn-设计模式/</id>
    <published>2020-12-03T03:36:53.000Z</published>
    <updated>2020-12-11T12:59:17.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>《研磨设计模式》和《设计模式就该这样学：基于经典框架源码和真实业务场景》的读书笔记</p></blockquote><h2 id="设计模式是什么"><a class="markdownIt-Anchor" href="#设计模式是什么"></a> 设计模式是什么？</h2><p>模式：从字面上理解，模，就是<u>模型、模板</u>的意思；式，就是方式、方法的意思。综合起来，所谓模式就是：可以作为模型或模板的方式或方法。再简单点说就是可以用来作为样板的方式或方法，类似于大家所熟悉的范例。</p><p>所以设计模式就是设计方面的模板，具体定义为：是指在软件开发中，<strong>经过验证的</strong>，用于解决在<strong>特定环境</strong>下、<strong>重复出现</strong>的、特定问题的<strong>解决方案</strong>。</p><h3 id="每个设计模式的构成如下"><a class="markdownIt-Anchor" href="#每个设计模式的构成如下"></a> 每个设计模式的构成如下：</h3><p>1、模式名称：模式的一个好记的名字</p><p>2、环境和问题：描述在什么环境下，出现什么特定的问题</p><p>3、解决方案：描述如何解决问题</p><p>4、效果：描述应用模式后的效果，以及可能带来的问题</p><h2 id="设计模式分类"><a class="markdownIt-Anchor" href="#设计模式分类"></a> 设计模式分类：</h2><p>为了缩小范围，我们仅讨论Java设计模式，也就是GoF著作中的23种设计模式，对于这23种设计模式，GoF把它们分为三类。</p><ul><li>创建型模式：抽象了对象实例化过程，用来帮助创建对象的实例。<ul><li>简单工厂模式</li><li>单例模式</li><li>工厂方法模式</li><li>抽象工厂模式</li><li>生成器模式</li><li>原型模式</li></ul></li><li>结构型模式：描述如何组合类和对象以获得更大的结构。<ul><li>外观模式</li><li>适配器模式</li><li>代理模式</li><li>组合模式</li><li>享元模式</li><li>装饰模式</li><li>桥接模式</li></ul></li><li>行为型模式：描述算法和对象间职责的分配。<ul><li>中介模式</li><li>观察者模式</li><li>命令模式</li><li>迭代器模式</li><li>模板模式</li><li>策略模式</li><li>状态模式</li><li>备忘录模式</li><li>解释器模式</li><li>责任链模式</li><li>访问者模式</li></ul></li></ul><p>《<strong>设计模式就该这样学：基于经典框架源码和真实业务场景</strong>》中提到了新的设计模式：</p><ul><li>对象池模式</li><li>规格模式</li><li>空对象模式</li><li>雇工模式</li></ul><h2 id="java中的面向接口编程"><a class="markdownIt-Anchor" href="#java中的面向接口编程"></a> JAVA中的面向接口编程</h2><h3 id="1java中接口的概念"><a class="markdownIt-Anchor" href="#1java中接口的概念"></a> 1.Java中接口的概念</h3><p>在Java中接口是一种特殊的抽象类，跟一般的抽象类相比，接口里面的所有方法都是抽象方法，接口里面的所有属性都是常量。也就是说，接口里面只有方法定义而没有任何方法实现。</p><h3 id="2接口用来干什么"><a class="markdownIt-Anchor" href="#2接口用来干什么"></a> 2.接口用来干什么</h3><p>通常用接口来定义实现类的外观，也就是实现类的行为定义，用来约束实现类的行为。接口就相当于一份契约，根据外部应用需要的功能，约定了实现类应该要实现的功能，但是具体的实现类除了实现接口约定的功能外，还可以根据需要实现其他一些功能，这是允许的，也就是说实现类的功能包含但不仅限于接口约束的功能。<br>通过使用接口，可以实现不相关类的相同行为，而不需考虑这些类之间的层次关系，接口就是实现类对外的外观。</p><h3 id="3接口的思想"><a class="markdownIt-Anchor" href="#3接口的思想"></a> 3.接口的思想</h3><p>根据接口的作用和用途，浓缩下来，<strong>接口的思想就是“封装隔离”</strong>。<br>通常提到的封装是指对数据的封装，但是这里的封装是指“对被隔离体的行为的封装”，或者是“对被隔离体的职责的封装”；而隔离指的是外部调用和内部实现，外部调用只能通过接口进行调用，外部调用是不知道内部具体实现的，也就是说外部调用和内部实现是被接口隔离开的。</p><h3 id="4使用接口的好处"><a class="markdownIt-Anchor" href="#4使用接口的好处"></a> 4.使用接口的好处</h3><p>由于外部调用和内部实现被接口隔离开了，那么只要接口不变，内部实现的变化就不会影响到外部应用，从而使得系统更灵活，具有更好的扩展性和可维护性，这也就是所谓“接口是系统可插拔性的保证”这句话的意思。</p><h3 id="5接口和抽象类的选择"><a class="markdownIt-Anchor" href="#5接口和抽象类的选择"></a> 5.接口和抽象类的选择</h3><p>既然接口是一种特殊的抽象类，那么在开发中，何时选用接口？何时选用抽象类呢？<br>对于它们的选择，在开发中是一个很重要的问题，特别总结两句话给大家：</p><ul><li>优先选用接口</li><li>在既要定义子类的行为，又要为子类提供公共的功能时应选择抽象类。</li></ul><h2 id="设计原则"><a class="markdownIt-Anchor" href="#设计原则"></a> 设计原则</h2><blockquote><p>面向对象的分析设计有很多原则，这些原则大多从<u>思想层面</u>给我们指出了面向对象分析设计的正确<u>方向</u>，是我们进行面向对象分析设计时应该尽力遵守的<u>准则</u>。而设计模式已经是针对某个场景下某些问题的某个解决方案。也就是说这些设计原则是思想上的指导，而<u>设计模式</u>是<u>实现上的手段</u>，因此设计模式也应该遵守这些原则，换句话说，设计模式就是这些设计原则的一些具体体现。</p></blockquote><h3 id="常见的面向对象设计原则solid原则"><a class="markdownIt-Anchor" href="#常见的面向对象设计原则solid原则"></a> 常见的面向对象设计原则——SOLID原则</h3><h4 id="单一职责原则srpsingle-responsibility-principle"><a class="markdownIt-Anchor" href="#单一职责原则srpsingle-responsibility-principle"></a> 单一职责原则SRP（Single Responsibility Principle）</h4><p>所谓单一职责原则，指的是，一个类应该仅有一个引起它变化的原因。总体来说就是一个class、interface、method只负责一项职责。<br>这里变化的原因就是所说的“职责”，如果一个类有多个引起它变化的原因，那么也就意味着这个类有多个职责，再进一步说，就是把多个职责耦合在一起了。<br>这会造成职责的相互影响，可能一个职责的变化，会影响到其他职责的实现，甚至引起其他职责随着变化，这种设计是很脆弱的。<br>这个原则看起来是最简单和最好理解的，但是实际上是很难完全做到的，难点在于如何区分“职责”。这是个没有标准量化的东西，哪些算职责、到底这个职责有多大的粒度、这个职责如何细化等。<em>因此，在实际开发中，这个原则也是最容易违反的</em>。</p><p><strong>▲一句话总结</strong>：一个类只干一件事，从而便于立即额，提高代码可读性</p><h4 id="开放-关闭原则ocpopen-closed-principle"><a class="markdownIt-Anchor" href="#开放-关闭原则ocpopen-closed-principle"></a> 开放-关闭原则OCP（Open-Closed Principle）</h4><blockquote><p>所谓开放-关闭原则，指的是，一个类应该对扩展开放，对修改关闭。一般也被简称为开闭原则，开闭原则是设计中非常核心的一个原则。</p><p>OCP的核心思想是面对抽象编程，强调用抽象构建框架，用实现拓展细节，从而额提高软件系统的可复用性和可维护性。</p></blockquote><p>开闭原则要求的是，类的行为是可以扩展的，而且是在不修改已有代码的情况下进行扩展，也不必改动已有的源代码或者二进制代码。<br>看起来好像是矛盾的，怎么样才能实现呢？<br>实现开闭原则的关键就在于合理地抽象、分离出变化与不变化的部分，为<u>变化的部分预留下可扩展的方式</u>，比如，<u>钩子方法或是动态组合对象</u>等。</p><p>这个原则看起来也很简单。但事实上，一个系统要全部做到遵守开闭原则，几乎是不可能的，也没这个必要。适度的抽象可以提高系统的灵活性，使其可扩展、可维护，但是过度地抽象，会大大增加系统的复杂程度。应该在需要改变的地方应用开闭原则就可以了，而不用到处使用，从而陷入过度设计。</p><p><strong>▲一句话总结</strong>：对扩展开放，对修改关闭，从而降低维护带来的新风险</p><h4 id="里氏替换原则lspliskov-substitution-principle"><a class="markdownIt-Anchor" href="#里氏替换原则lspliskov-substitution-principle"></a> 里氏替换原则LSP（Liskov Substitution Principle）</h4><p>所谓里氏替换原则，指的是，子类型<strong>必须能够</strong>替换掉它们的父类型。这很明显是一种多态的使用情况，它可以避免在多态的应用中，出现某些隐蔽的错误。</p><blockquote><p>这条原则的定义是比较抽象的，可以理解为</p><ol><li>一个软件实体如果使用一个父类，则一定适用于其子类，即要求所有引用父类的地方必须能透明地使用子类对象，子类能够代替父类对象，而程序逻辑不变。</li><li>子类可以拓展父类的功能，但不能改变父类原有的功能，根据这个理解，我们可以将DIP定义总结如下：<ol><li>子类可以实现父类的抽象方法，但不能覆盖父类的非抽象方法</li><li>子类可以增加自己特有的方法</li><li>当子类的方法重载父类的方法时，方法的前置条件（入参）要比父类的更宽松</li><li>当子类的方法实现父类的方法时（重写、重载或实现抽象方法），方法的后置条件（输出、返回值）要比父类的更严格或相等</li></ol></li></ol></blockquote><p><strong>▲一句话总结</strong>：子类重写方法功能改变，不应该影响父类方法的含义，从而防止继承泛滥</p><h4 id="依赖倒置原则dipdependence-inversion-principle"><a class="markdownIt-Anchor" href="#依赖倒置原则dipdependence-inversion-principle"></a> 依赖倒置原则DIP（Dependence Inversion Principle）</h4><p>所谓依赖倒置原则，指的是，要依赖于抽象，不要依赖于具体类。要做到依赖倒置，典型的应该做到：</p><ul><li>高层模块不应该依赖于底层模块，二者都应该依赖于抽象。</li><li>抽象不应该依赖于具体实现，具体实现应该依赖于抽象。</li></ul><p>很多人觉得，层次化调用的时候，应该是高层调用“底层所拥有的接口”，这是一种典型的误解。事实上，一般高层模块包含对业务功能的处理和业务策略选择，应该被重用，是高层模块去影响底层的具体实现。<br>因此，这个底层的接口应该是由高层提出的，然后由底层实现的。也就是说底层的接口的所有权在高层模块，因此是一种所有权的倒置。<br>倒置接口所有权，这就是著名的Hollywood（好莱坞）原则：不要找我们，我们会联系你。</p><p><strong>一句话总结</strong>：高层不应该依赖底层，从而更利用代码结构的省级扩展</p><h4 id="接口隔离原则ispinterface-segregation-principle"><a class="markdownIt-Anchor" href="#接口隔离原则ispinterface-segregation-principle"></a> 接口隔离原则ISP（Interface Segregation Principle）</h4><blockquote><p>指用多个专门的接口，而不使用单一的总接口，客户端不应该依赖它不需要的接口（不需要的接口对客户来说不可见）。</p><p>这个原则告诉我们的注意点为：</p><ul><li>一个雷对另一个类的依赖应该建立在最小接口上</li><li>建立单一接口，不要建立庞大臃肿的接口</li><li>尽量细化接口，接口中的方法越少越好（适量少）</li></ul><p>这些“高聚合、低耦合”要求的设计思想，使得类具有很好的可读性、可扩展性和可维护性。</p></blockquote><p>所谓接口隔离原则，指的是，不应该强迫客户依赖于他们不用的方法。<br>这个原则用来处理那些比较“庞大”的接口，这种接口通常会有较多的操作声明，涉及到很多的职责。客户在使用这样的接口的时候，通常会有很多他不需要的方法，这些方法对于客户来讲，就是一种接口污染，相当于强迫用户在一大堆“垃圾方法”中去寻找他需要的方法。<br>因此，这样的接口应该被分离，应该按照不同的客户需要来分离成为针对客户的接口。<u>这样的接口中，只包含客户需要的操作声明</u>，这样既方便了客户的使用，也可以避免因误用接口而导致的错误。</p><p>分离接口的方式，除了直接进行代码分离之外，还可以使用委托来分离接口，在能够支持多重继承的语言中，还可以采用多重继承的方式进行分离。</p><p><strong>▲一句话总结</strong>：一个接口只干一件事，从而功能解耦，高聚合、低耦合</p><hr><p>demo：针对动物Animal接口，显然需要将飞的、游的隔离开，因此需要针对不同动物的行为来设计不同的接口。</p><p><img src="/2020/12/03/Lets-learn-设计模式/ISP.jpg" alt="ISP"></p><h3 id="其他一些设计原则"><a class="markdownIt-Anchor" href="#其他一些设计原则"></a> 其他一些设计原则</h3><h4 id="最少知道原则lkpleast-knowledge-principle迪米特原则lod"><a class="markdownIt-Anchor" href="#最少知道原则lkpleast-knowledge-principle迪米特原则lod"></a> 最少知道原则LKP（Least Knowledge Principle）——迪米特原则LoD</h4><blockquote><p>指一个对象应该对其他对象保持最少的了解，尽量降低类与类之间的耦合。强调之和朋友交流、不和陌生人说话，出现在成员变量、方法的输入、输出参数中的类可以被称为成员朋友类，出现在方法体内部的类不属于朋友类。</p></blockquote><p>这个原则用来指导我们在设计系统的时候，应该尽量减少对象之间的交互，对象只和自己的朋友谈话，<u>也就是只和自己的朋友交互</u>，从而松散类之间的耦合。通过松散类之间的耦合来降低类之间的相互依赖，这样在修改系统的某一个部分的时候，就不会影响其他的部分，从而使得系统具有更好的可维护性。</p><p>那么究竟哪些对象才能被当作朋友呢？最少知识原则提供了一些指导。</p><ul><li>当前对象本身。</li><li>通过方法的参数传递进来的对象。</li><li>当前对象所创建的对象。——成员变量</li><li>当前对象的实例变量所引用的对象。——成员变量</li><li>方法内所创建或实例化的对象。 —&gt; ???</li></ul><p>请注意！！！1-5条的意思是，<mark>如果某对象是调用其他方法的返回结果，不要调用该对象的方法！</mark>即要求我们只调用以下范围的方法：</p><p>（1）该对象本身；<br>（2）被当作方法的<strong>参数</strong>而传递进来的对象；<br>（3）此方法所<strong>创建或实例化</strong>的任何对象；<br>（4）对象的任何组件；</p><p>总之，最少知识原则要求我们的方法调用必须保持在一定的界限范围之内，尽量减少对象的依赖关系。</p><p><strong>▲一句话总结</strong>：不该知道的不要知道，从而减少代码臃肿</p><h4 id="合成复用原则"><a class="markdownIt-Anchor" href="#合成复用原则"></a> 合成复用原则</h4><blockquote><p>尽量使用对象组合或对象聚合的方式来实现代码复用，而不是继承关系达到代码复用的目的。</p></blockquote><p><strong>▲一句话总结</strong>：尽量使用组合实现代码复用而不是用继承，从而降低代码耦合</p><p>除了上面提到的这些原则，还有一些大家都熟知的原则，比如：</p><ul><li>面向接口编程；</li><li>优先使用组合，而非继承。</li></ul><p>当然也还有很多大家不是很熟悉的原则，比如：</p><ul><li>一个类需要的数据应该隐藏在类的内部；</li><li>类之间应该零耦合，或者只有传导耦合，换句话说，类之间要么没有关系，要么只使用另一个类的接口提供的操作；</li><li>在水平方向上尽可能统一地分布系统功能；</li></ul><h1 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h1><p>Github图说设计模式: <a href="https://design-patterns.readthedocs.io/zh_CN/latest/creational_patterns/simple_factory.html" target="_blank" rel="noopener">https://design-patterns.readthedocs.io/zh_CN/latest/creational_patterns/simple_factory.html</a></p><p><a href="http://www.cnblogs.com/zishengY/p/8869823.html" target="_blank" rel="noopener">设计模式就该这么学：以微信订阅号来讲观察者模式(第三篇)</a></p><p><a href="http://www.cnblogs.com/zishengY/p/7056948.html" target="_blank" rel="noopener">观察者模式实际应用：监听线程，意外退出线程后自动重启</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;《研磨设计模式》和《设计模式就该这样学：基于经典框架源码和真实业务场景》的读书笔记&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;设计模式是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#设计模式是什么&quot;&gt;&lt;/
      
    
    </summary>
    
    
      <category term="计算机基础知识" scheme="https://nymrli.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>玩玩油猴脚本Tampermonkey</title>
    <link href="https://nymrli.top/2020/12/01/%E7%8E%A9%E7%8E%A9%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC/"/>
    <id>https://nymrli.top/2020/12/01/玩玩油猴脚本/</id>
    <published>2020-12-01T07:32:53.000Z</published>
    <updated>2020-12-01T12:19:48.468Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>由于在研究如何优化网盘直链下载助手**<a href="https://github.com/ziyuanshu/baidupan" target="_blank" rel="noopener">baidupan</a><strong>，如何将直链的结果提取出来供IDM批量下载。由于</strong><a href="https://github.com/ziyuanshu/baidupan" target="_blank" rel="noopener">baidupan</a>**是用油猴脚本写的，因此借机学习一下。</p></blockquote><blockquote></blockquote><h2 id="greasy-fork"><a class="markdownIt-Anchor" href="#greasy-fork"></a> <a href="https://greasyfork.org/zh-CN/" target="_blank" rel="noopener">Greasy Fork</a></h2><blockquote><p>这里是一个提供用户脚本的网站。</p></blockquote><h2 id="tampermonkey"><a class="markdownIt-Anchor" href="#tampermonkey"></a> <a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo" target="_blank" rel="noopener">Tampermonkey</a></h2><blockquote><p>其为浏览器插件，目前主流浏览器皆支持，油猴叫法来源：「油猴」是从「Greasemonkey」来的。「Greasemonkey」最初是运行在Firefox浏览器中的脚本，「Tampermonkey」在Google Chrome浏览器上实现了几乎相同的功能，所以也被中文用户称之为「油猴」。</p></blockquote><h3 id="新建"><a class="markdownIt-Anchor" href="#新建"></a> 新建：</h3><p><img src="/2020/12/01/玩玩油猴脚本/E:%5Chexo%5Csource_posts%5C%E7%8E%A9%E7%8E%A9%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%5C%E6%96%B0%E5%BB%BA.jpg" alt="新建"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         New Userscript</span></span><br><span class="line"><span class="comment">// @namespace    http://tampermonkey.net/</span></span><br><span class="line"><span class="comment">// @version      0.1</span></span><br><span class="line"><span class="comment">// @description  try to take over the world!</span></span><br><span class="line"><span class="comment">// @author       You</span></span><br><span class="line"><span class="comment">// @match        https://www.1949la.com/post/10351.html</span></span><br><span class="line"><span class="comment">// @grant        none</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="meta">    'use strict'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Your code here...</span></span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h2 id=""><a class="markdownIt-Anchor" href="#"></a> </h2><h3 id="脚本编写方法"><a class="markdownIt-Anchor" href="#脚本编写方法"></a> 脚本编写方法</h3><h4 id="注释功能注释"><a class="markdownIt-Anchor" href="#注释功能注释"></a> 注释——功能注释</h4><p>首先来看看脚本的内容，上面是一大排注释，这些注释可以非常有用的，它表明了脚本的各个属性。下面来简单介绍一下。</p><table><thead><tr><th>属性名</th><th>作用</th></tr></thead><tbody><tr><td>name</td><td>油猴脚本的名字</td></tr><tr><td>namespace</td><td>命名空间，类似于Java的包名，用来区分相同名称的脚本，一般写成作者名字或者网址就可以了</td></tr><tr><td>version</td><td>脚本版本，油猴脚本的更新会读取这个版本号</td></tr><tr><td>description</td><td>描述，用来告诉用户这个脚本是干什么用的</td></tr><tr><td>author</td><td>作者名字</td></tr><tr><td>match</td><td>只有匹配的网址才会执行对应的脚本，例如<code>*</code>、<code>http://*</code>、<code>http://www.baidu.com/*</code>等，参见<a href="https://developer.chrome.com/extensions/match_patterns" target="_blank" rel="noopener">谷歌开发者文档</a></td></tr><tr><td>grant</td><td><strong>指定脚本运行所需权限</strong>，如果脚本拥有相应的权限，就可以调用油猴扩展提供的API与浏览器进行交互。如果设置为<code>none</code>的话，则不使用沙箱环境，脚本会直接运行在网页的环境中，这时候无法使用大部分油猴扩展的API。如果不指定的话，油猴会默认添加几个最常用的API</td></tr><tr><td>require</td><td>如果脚本依赖其他js库的话，可以使用require指令，在运行脚本之前先加载其他库，常见用法是加载jquery</td></tr><tr><td>connect</td><td>当用户使用<a href="https://www.tampermonkey.net/documentation.php?version=4.9&amp;ext=dhdg&amp;show=dhdg#GM_xmlhttpRequest" target="_blank" rel="noopener">GM_xmlhttpRequest</a>请求远程数据的时候，需要使用connect指定允许访问的域名，支持域名、子域名、IP地址以及<code>*</code>通配符</td></tr><tr><td>updateURL</td><td>脚本更新网址，当油猴扩展检查更新的时候，会尝试从这个网址下载脚本，然后比对版本号确认是否更新</td></tr></tbody></table><p>grant中几个常用的权限：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// @grant GM_setValue</span></span><br><span class="line"><span class="comment">// @grant GM_getValue</span></span><br><span class="line"><span class="comment">// @grant GM_setClipboard</span></span><br></pre></td></tr></table></figure><p>注意， match写法由于支持通配符，可以写的通用些:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// @match        *://10.10.244.11/a70.htm*</span></span><br><span class="line"><span class="comment">// @match        *://p.njupt.edu.cn/a70.htm*</span></span><br></pre></td></tr></table></figure><h4 id="脚本权限"><a class="markdownIt-Anchor" href="#脚本权限"></a> 脚本权限</h4><p>下面简单介绍一下grant指令那里可以填写的一些权限，详情请查看<a href="https://www.tampermonkey.net/documentation.php" target="_blank" rel="noopener">油猴脚本文档</a>。这里就简单介绍几个常用的，可以调用的函数全部以GM_作为开头。</p><table><thead><tr><th>权限名</th><th>功能</th></tr></thead><tbody><tr><td>unsafeWindow</td><td>允许脚本可以完整访问原始页面，包括原始页面的脚本和变量。</td></tr><tr><td>GM_getValue(name,defaultValue)</td><td>从油猴扩展的存储中访问数据。可以设置默认值，在没成功获取到数据的时候当做初始值。如果保存的是日期等类型的话，取出来的数据会变成文本，需要自己转换一下。</td></tr><tr><td>GM_setValue(name,value)</td><td>将数据保存到存储中</td></tr><tr><td>GM_xmlhttpRequest(details)</td><td><strong>异步访问网页数据</strong>的API，这个方法比较复杂，有大量参数和回调，详情请参考官方文档。</td></tr><tr><td>GM_setClipboard(data, info)</td><td>将数据复制到剪贴板中，第一个参数是要复制的数据，第二个参数是MIME类型，用于指定复制的数据类型。</td></tr><tr><td>GM_log(message)</td><td>将日志打印到控制台中，可以使用F12开发者工具查看。</td></tr><tr><td>GM_addStyle(css)</td><td>像网页中添加自己的样式表。</td></tr><tr><td>GM_notification(details, ondone), GM_notification(text, title, image, onclick)</td><td>设置网页通知，请参考文档获取用法。</td></tr><tr><td>GM_openInTab(url, loadInBackground)</td><td>在浏览器中打开网页，可以设置是否在后台打开等几个选项</td></tr></tbody></table><p>还有一些API没有介绍，请大家直接查看官方文档吧。</p><h5 id="gm_xmlhttprequest-demo"><a class="markdownIt-Anchor" href="#gm_xmlhttprequest-demo"></a> GM_xmlhttpRequest DEMO：</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">GM_xmlhttpRequest(&#123;</span><br><span class="line">    method: <span class="string">"POST"</span>,</span><br><span class="line">    url: url,</span><br><span class="line">    headers: &#123;</span><br><span class="line">        <span class="string">"Content-Type"</span>: <span class="string">"application/x-www-form-urlencoded;charset=utf-8"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    data: form_data,</span><br><span class="line">    onload: <span class="function"><span class="keyword">function</span>(<span class="params">response</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"请求成功"</span>);</span><br><span class="line">        <span class="keyword">let</span> success = <span class="string">"认证成功页"</span>;</span><br><span class="line">        <span class="keyword">let</span> resp = response.responseText;</span><br><span class="line">        <span class="keyword">let</span> flag = resp.indexOf(success);</span><br><span class="line">        <span class="keyword">if</span> (flag === <span class="number">-1</span>) &#123;</span><br><span class="line">            do_login_old(username, password);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//alert("登录成功");</span></span><br><span class="line">            <span class="built_in">window</span>.location.href = <span class="string">"https://cn.bing.com/"</span>; <span class="comment">//避免重复登录导致瞬间三个设备同时登录的状态</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    onerror: <span class="function"><span class="keyword">function</span>(<span class="params">response</span>) </span>&#123;</span><br><span class="line">        do_login_old(username, password);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="mycode"><a class="markdownIt-Anchor" href="#mycode"></a> MyCode</h4><blockquote><p>我的第一个脚本，简简单单打开自己的个人博客吧，修改如下</p><ul><li><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;   <span class="comment">// @match        https://www.baidu.com</span></span><br><span class="line">&gt;   <span class="comment">// @grant GM_openInTab</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ul></blockquote><blockquote><ul><li><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;       <span class="keyword">const</span> URL = <span class="string">"https://nymrli.top"</span>;</span><br><span class="line">&gt;       GM_openInTab(URL, <span class="literal">true</span>)</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ul></blockquote><blockquote><p>访问百度的时候就会在当前session中打开我的个人博客了，(URL, true)不会切换到URL上</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         New Userscript</span></span><br><span class="line"><span class="comment">// @namespace    http://tampermonkey.net/</span></span><br><span class="line"><span class="comment">// @version      0.1</span></span><br><span class="line"><span class="comment">// @description  try to take over the world!</span></span><br><span class="line"><span class="comment">// @author       Mrli</span></span><br><span class="line"><span class="comment">// @match        https://www.baidu.com</span></span><br><span class="line"><span class="comment">// @grant GM_openInTab</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="meta">    'use strict'</span>;</span><br><span class="line">    <span class="keyword">const</span> URL = <span class="string">"https://nymrli.top"</span>;</span><br><span class="line">    GM_openInTab(URL, <span class="literal">true</span>);<span class="comment">// 打开URL后当前tab不变; false会切换当前tab为URL页面</span></span><br><span class="line">    <span class="comment">//     GM_openInTab(URL, &#123;incognito :true &#125;);   options中貌似有有限级, 加了incognito后,insert会失效</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Your code here...</span></span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h5 id="bilibili倍速"><a class="markdownIt-Anchor" href="#bilibili倍速"></a> Bilibili倍速</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         BilibiliFast</span></span><br><span class="line"><span class="comment">// @namespace    http://tampermonkey.net/</span></span><br><span class="line"><span class="comment">// @version      0.1</span></span><br><span class="line"><span class="comment">// @description  try to take over the world!</span></span><br><span class="line"><span class="comment">// @author       You</span></span><br><span class="line"><span class="comment">// @match        https://www.bilibili.com/video/*</span></span><br><span class="line"><span class="comment">// @require      https://code.jquery.com/jquery-2.1.4.min.js</span></span><br><span class="line"><span class="comment">// @grant        none</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="meta">    'use strict'</span>;</span><br><span class="line">    <span class="comment">// Your code here...</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"导入成功"</span>);</span><br><span class="line">    $(<span class="string">"body"</span>).append(<span class="string">`&lt;div id='video_set' style="position:fixed; right:10px; top:10px; z-index:9999; background:red"&gt;</span></span><br><span class="line"><span class="string">             &lt;input id="setPlay" value=1 type="number" style="padding:10px;"&gt;</span></span><br><span class="line"><span class="string">       &lt;/div&gt;`</span></span><br><span class="line">       );</span><br><span class="line">    <span class="comment">// $(document).append()会报错Cannot read property 'createDocumentFragment' of undefined</span></span><br><span class="line"></span><br><span class="line">    $(<span class="built_in">document</span>).on(<span class="string">"change"</span>, <span class="string">"#video_set #setPlay"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">             <span class="built_in">console</span>.log(<span class="keyword">this</span>.value);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">this</span>.value &lt;= <span class="number">16</span>)&#123;</span><br><span class="line">                <span class="built_in">document</span>.querySelector(<span class="string">'video'</span>).playbackRate=<span class="keyword">this</span>.value;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                alert(<span class="string">"最大为16"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h3 id="学习baidupan源码"><a class="markdownIt-Anchor" href="#学习baidupan源码"></a> <strong>学习<a href="https://github.com/ziyuanshu/baidupan" target="_blank" rel="noopener">baidupan</a>源码</strong></h3><p>学到新东西：SweetAlert2 漂亮可定制的 JavaScript 弹窗</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// @require           https://cdn.jsdelivr.net/npm/sweetalert2@9</span></span><br><span class="line"><span class="comment">// 基础语法：</span></span><br><span class="line">Swal.fire(&#123;</span><br><span class="line">title: <span class="string">"是否删除"</span>,</span><br><span class="line">text: <span class="string">"是否删除？一旦提交，无法恢复！"</span>,</span><br><span class="line">icon: <span class="string">"warning"</span>,</span><br><span class="line">showCancelButton: <span class="literal">true</span>,</span><br><span class="line">confirmButtonColor: <span class="string">"#DD6B55"</span>,</span><br><span class="line">confirmButtonText: <span class="string">"确定"</span>,</span><br><span class="line">cancelButtonText: <span class="string">"取消"</span></span><br><span class="line">&#125;).then(<span class="function">(<span class="params">isConfirm</span>) =&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 是否成功在then里面用if判断</span></span><br><span class="line"><span class="keyword">if</span> (isConfirm.value) &#123;</span><br><span class="line">Swal.fire(<span class="string">"删除成功"</span>, <span class="string">"成功"</span>, <span class="string">"success"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">Swal.fire(<span class="string">"取消操作"</span>, <span class="string">"点击了取消"</span>, <span class="string">"error"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>来源于checkVersion</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkUpdate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    setValue(<span class="string">'up'</span>,<span class="number">0</span>)</span><br><span class="line">    GM_xmlhttpRequest(&#123;</span><br><span class="line">        method: <span class="string">"GET"</span>,</span><br><span class="line">        url: <span class="string">`https://api.baiduyun.wiki/update?ver=<span class="subst">$&#123;version&#125;</span>`</span>,</span><br><span class="line">        responseType: <span class="string">'json'</span>,</span><br><span class="line">        onload: <span class="function"><span class="keyword">function</span> (<span class="params">r</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">let</span> res = r.response</span><br><span class="line">            setValue(<span class="string">'lastest_version'</span>, res.version)</span><br><span class="line">            userAgent = res.ua</span><br><span class="line">            ids = res.ids</span><br><span class="line">            <span class="keyword">if</span> (res.vcode === <span class="number">200</span> &amp;&amp; compareVersion(res.version,version)) &#123;</span><br><span class="line">                setValue(<span class="string">'up'</span>,<span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (res.scode != getValue(<span class="string">'scode'</span>)) &#123;</span><br><span class="line">                <span class="keyword">let</span> dom = $(<span class="string">'&lt;div&gt;&lt;img style="width: 250px;margin-bottom: 10px;" src="https://img.tool22.com/image/5f365d403c89f.jpg"&gt;&lt;input class="swal2-input" id="scode" type="text" placeholder="请输入暗号，可扫描上方二维码免费获取!"&gt;&lt;/div&gt;'</span>)</span><br><span class="line">                Swal.fire(&#123;</span><br><span class="line">                    title: <span class="string">"初次使用请输入暗号"</span>,</span><br><span class="line">                    html: dom[<span class="number">0</span>],</span><br><span class="line">                    allowOutsideClick: <span class="literal">false</span>,</span><br><span class="line">                    confirmButtonText: <span class="string">'确定'</span></span><br><span class="line">                &#125;).then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (res.scode == $(<span class="string">'#scode'</span>).val()) &#123;</span><br><span class="line">                        setValue(<span class="string">'scode'</span>, res.scode)</span><br><span class="line">                        setValue(<span class="string">'init'</span>, <span class="number">1</span>)</span><br><span class="line">                        Toast.fire(&#123;</span><br><span class="line">                            icon: <span class="string">'success'</span>,</span><br><span class="line">                            text: <span class="string">'暗号正确，正在初始化中。。。'</span>,</span><br><span class="line">                        &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                            history.go(<span class="number">0</span>)<span class="comment">// go() 方法可加载历史列表中的某个具体的页面。（-1上一个页面，1前进一个页面, 0就是当前页面)</span></span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        setValue(<span class="string">'init'</span>, <span class="number">0</span>)</span><br><span class="line">                        Swal.fire(&#123;</span><br><span class="line">                            title: <span class="string">"🔺🔺🔺"</span>,</span><br><span class="line">                            text: <span class="string">'暗号不正确，请通过微信扫码免费获取'</span>,</span><br><span class="line">                            imageUrl: <span class="string">'https://img.tool22.com/image/5f365d403c89f.jpg'</span>,</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                loadPanhelper()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将console.log输出分组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clog</span>(<span class="params">c1, c2, c3</span>) </span>&#123;</span><br><span class="line">    c1 = c1 ? c1 : <span class="string">''</span></span><br><span class="line">    c2 = c2 ? c2 : <span class="string">''</span></span><br><span class="line">    c3 = c3 ? c3 : <span class="string">''</span></span><br><span class="line">    <span class="built_in">console</span>.group(<span class="string">'[网盘直链下载助手]'</span>)<span class="comment">// 分组</span></span><br><span class="line">    <span class="built_in">console</span>.log(c1, c2, c3)</span><br><span class="line">    <span class="built_in">console</span>.groupEnd()      <span class="comment">// 要想将其他内容显示在外面得取消分组</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="程序的逻辑"><a class="markdownIt-Anchor" href="#程序的逻辑"></a> 程序的逻辑</h4><ul><li><p>开始:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(() =&gt; &#123;</span><br><span class="line">    <span class="comment">//阻止在其他网站运行</span></span><br><span class="line">    <span class="keyword">if</span> (hostname.match(<span class="regexp">/(pan|yun).baidu.com/i</span>)) &#123;</span><br><span class="line">        <span class="keyword">let</span> plugin = <span class="keyword">new</span> PanPlugin()</span><br><span class="line">        plugin.init()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>进行检查更新-&gt;创建菜单</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">PanPlugin</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    clog(<span class="string">'RPC：'</span>, ariaRPC)</span><br><span class="line">    <span class="keyword">this</span>.init = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        main()</span><br><span class="line">        addGMStyle()</span><br><span class="line">        checkUpdate()</span><br><span class="line">        <span class="keyword">if</span> (getValue(<span class="string">'SETTING_H'</span>)) createHelp()</span><br><span class="line">        createMenu()</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>主要的应用是在checkUpdate中的loadPanhelper完成的，其会根据参数创建PanHelper(网盘页面的下载助手)或PanShareHelper(分享页面的下载助手)对象， 显然PanHelper就是我们最想分析的</li></ul></li></ul><h4 id="panhelper逻辑"><a class="markdownIt-Anchor" href="#panhelper逻辑"></a> PanHelper逻辑</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">PanHelper</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> yunData, sign, timestamp, bdstoken, logid, fid_list</span><br><span class="line">    <span class="keyword">let</span> fileList = [], selectFileList = [], batchLinkList = [], batchLinkListAll = [], linkList = []</span><br><span class="line">    <span class="keyword">let</span> dialog, searchKey</span><br><span class="line">    <span class="keyword">let</span> panAPIUrl = location.protocol + <span class="string">"//"</span> + location.host + <span class="string">"/api/"</span></span><br><span class="line">    <span class="keyword">let</span> restAPIUrl = location.protocol + <span class="string">"//pcs.baidu.com/rest/2.0/pcs/"</span></span><br><span class="line">    <span class="keyword">let</span> clientAPIUrl = location.protocol + <span class="string">"//pan.baidu.com/rest/2.0/"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.init = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        yunData = unsafeWindow.yunData</span><br><span class="line">        <span class="keyword">if</span> (yunData === <span class="literal">undefined</span>) &#123;</span><br><span class="line">            clog(<span class="string">'初始化信息:'</span>, yunData)</span><br><span class="line">            clog(<span class="string">'页面未正常加载，或者百度已经更新！'</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        initVar()</span><br><span class="line">        registerEventListener()</span><br><span class="line">        addButton()</span><br><span class="line">        createIframe()</span><br><span class="line">        dialog = <span class="keyword">new</span> Dialog(&#123;<span class="attr">addCopy</span>: <span class="literal">true</span>&#125;)</span><br><span class="line">        clog(<span class="string">'下载助手加载成功！当前版本：'</span>, version)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>最核心的逻辑：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//我的网盘 - 获取PCS下载地址</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPCSBatchLink</span>(<span class="params">callback</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> fsids = []</span><br><span class="line">    $.each(selectFileList, (index, element) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (element.isdir == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        fsids.push(element.fs_id)</span><br><span class="line">    &#125;)</span><br><span class="line">    fsids = <span class="built_in">encodeURIComponent</span>(<span class="built_in">JSON</span>.stringify(fsids))</span><br><span class="line">    <span class="keyword">let</span> link = clientAPIUrl + <span class="string">`xpan/multimedia?method=filemetas&amp;access_token=undefined&amp;fsids=<span class="subst">$&#123;fsids&#125;</span>&amp;dlink=1`</span></span><br><span class="line">    GM_xmlhttpRequest(&#123;</span><br><span class="line">        method: <span class="string">"GET"</span>,</span><br><span class="line">        responseType: <span class="string">'json'</span>,</span><br><span class="line">        headers: &#123;<span class="string">"User-Agent"</span>: userAgent&#125;,</span><br><span class="line">        url: link,</span><br><span class="line">        onload: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> response = res.response</span><br><span class="line">            <span class="keyword">if</span> (response.errno === <span class="number">0</span>) &#123;</span><br><span class="line">                callback(response.list)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h2><h3 id="官方文档"><a class="markdownIt-Anchor" href="#官方文档"></a> <a href="https://www.tampermonkey.net/documentation.php#GM_openInTab" target="_blank" rel="noopener">官方文档</a></h3><h3 id="tampermonkey油猴用户脚本api文档-教程"><a class="markdownIt-Anchor" href="#tampermonkey油猴用户脚本api文档-教程"></a> <a href="https://www.1949la.com/post/10351.html" target="_blank" rel="noopener">Tampermonkey油猴用户脚本API文档-教程</a></h3><h3 id="脚本debug建议"><a class="markdownIt-Anchor" href="#脚本debug建议"></a> 脚本debug建议</h3><h4 id="jquery使用"><a class="markdownIt-Anchor" href="#jquery使用"></a> jquery使用</h4><p>踩了几天坑，最后总结一下编写油猴脚本的一点步骤。首先要思考脚本的实现方式，需要用到什么API和权限，然后填写好脚本的注释信息。</p><p>然后将功能封装成函数的形式，最后在脚本末尾调用实现的函数。写的差不多的时候复制到浏览器中尝试运行。</p><p>遇到困难的时候，可能需要直接在F12开发者工具里进行调试。<u>有些网页不用jQuery，为了方便，我们需要自己将jQuery导入到页面中，可以将下面的代码复制到浏览器控制台中。</u></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> jq = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">jq.src = <span class="string">"https://cdn.staticfile.org/jquery/3.4.1/jquery.min.js"</span>;</span><br><span class="line"><span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>].appendChild(jq);</span><br></pre></td></tr></table></figure><h4 id="debug方法"><a class="markdownIt-Anchor" href="#debug方法"></a> debug方法：</h4><p>第一种方法就是最原始的打印日志，可以利用<code>console.log</code>和<code>GM_log</code>来将关键信息打印出来，上面的脚本就是我靠打印日志一点点发现各种参数错误的。说实话这种办法有点笨。</p><p>第二种就是利用浏览器的调试功能(推荐)，在脚本需要调试的地方插入<code>debugger;</code>语句，然后在打开F12开发者工具的情况下刷新页面，就会发现网页已经暂停在相应位置上。这样就可以利用F12开发者工具进行单步调试、监视变量等操作了。</p><h3 id="将文章同步复制到csdn和思否编辑器的脚本demo"><a class="markdownIt-Anchor" href="#将文章同步复制到csdn和思否编辑器的脚本demo"></a> 将文章同步复制到Csdn和思否编辑器的脚本demo：</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         copy_jianshu_to_csdn_and_segmentfault</span></span><br><span class="line"><span class="comment">// @namespace    https://github.com/techstay/myscripts</span></span><br><span class="line"><span class="comment">// @version      0.1</span></span><br><span class="line"><span class="comment">// @description  将简书文章复制到csdn和思否编辑器中</span></span><br><span class="line"><span class="comment">// @author       techstay</span></span><br><span class="line"><span class="comment">// @match        https://editor.csdn.net/md/</span></span><br><span class="line"><span class="comment">// @match https://segmentfault.com/write</span></span><br><span class="line"><span class="comment">// @match https://www.jianshu.com/writer*</span></span><br><span class="line"><span class="comment">// @require      https://cdn.staticfile.org/jquery/3.4.1/jquery.min.js</span></span><br><span class="line"><span class="comment">// @require      https://cdn.bootcss.com/jqueryui/1.12.1/jquery-ui.min.js</span></span><br><span class="line"><span class="comment">// @grant GM_setValue</span></span><br><span class="line"><span class="comment">// @grant GM_getValue</span></span><br><span class="line"><span class="comment">// @grant GM_deleteValue</span></span><br><span class="line"><span class="comment">// @grant unsafeWindow</span></span><br><span class="line"><span class="comment">// @grant GM_setClipboard</span></span><br><span class="line"><span class="comment">// @grant window.close</span></span><br><span class="line"><span class="comment">// @grant window.focus</span></span><br><span class="line"><span class="comment">// @grant GM_openInTab</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="meta">    'use strict'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> SF_URL = <span class="string">'https://segmentfault.com/write'</span></span><br><span class="line">    <span class="keyword">const</span> CSDN_URL = <span class="string">'https://editor.csdn.net/md/'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> SF_TITLE = <span class="string">'sf_title'</span></span><br><span class="line">    <span class="keyword">const</span> SF_CONTENT = <span class="string">'sf_content'</span></span><br><span class="line">    <span class="keyword">const</span> CSDN_TITLE = <span class="string">'csdn_title'</span></span><br><span class="line">    <span class="keyword">const</span> CSDN_CONTENT = <span class="string">'csdn_content'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">saveArticle</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        GM_setValue(CSDN_TITLE, $(<span class="string">'._24i7u'</span>).val())</span><br><span class="line">        GM_setValue(CSDN_CONTENT, $(<span class="string">'#arthur-editor'</span>).val())</span><br><span class="line">        GM_setValue(SF_TITLE, $(<span class="string">'._24i7u'</span>).val())</span><br><span class="line">        GM_setValue(SF_CONTENT, $(<span class="string">'#arthur-editor'</span>).val())</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">copyToCsdn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> title = GM_getValue(CSDN_TITLE, <span class="string">''</span>)</span><br><span class="line">        <span class="keyword">var</span> content = GM_getValue(CSDN_CONTENT, <span class="string">''</span>)</span><br><span class="line">        <span class="keyword">if</span> (title != <span class="string">''</span> &amp;&amp; content != <span class="string">''</span>) &#123;</span><br><span class="line">            $(<span class="string">'.article-bar__title'</span>).delay(<span class="number">2000</span>).queue(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">'.article-bar__title'</span>).val(title)</span><br><span class="line">                $(<span class="string">'.editor__inner'</span>).text(content)</span><br><span class="line">                GM_deleteValue(CSDN_TITLE)</span><br><span class="line">                GM_deleteValue(CSDN_CONTENT)</span><br><span class="line">                $(<span class="keyword">this</span>).dequeue()</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">copyToSegmentFault</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> title = GM_getValue(SF_TITLE, <span class="string">''</span>)</span><br><span class="line">            <span class="keyword">var</span> content = GM_getValue(SF_CONTENT, <span class="string">''</span>)</span><br><span class="line">            <span class="keyword">if</span> (title != <span class="string">''</span> &amp;&amp; content != <span class="string">''</span>) &#123;</span><br><span class="line">                $(<span class="string">'#title'</span>).delay(<span class="number">2000</span>).queue(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    $(<span class="string">'#title'</span>).val(title)</span><br><span class="line">                    GM_setClipboard(content, <span class="string">'text'</span>)</span><br><span class="line">                    GM_deleteValue(SF_TITLE)</span><br><span class="line">                    GM_deleteValue(SF_CONTENT)</span><br><span class="line">                    $(<span class="keyword">this</span>).dequeue()</span><br><span class="line">                &#125;)</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">addCopyButton</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">'body'</span>).append(<span class="string">'&lt;div id="copyToCS"&gt;双击复制到CSDN和思否&lt;/div&gt;'</span>)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).css(<span class="string">'width'</span>, <span class="string">'200px'</span>)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).css(<span class="string">'position'</span>, <span class="string">'absolute'</span>)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).css(<span class="string">'top'</span>, <span class="string">'70px'</span>)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).css(<span class="string">'left'</span>, <span class="string">'350px'</span>)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).css(<span class="string">'background-color'</span>, <span class="string">'#28a745'</span>)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).css(<span class="string">'color'</span>, <span class="string">'white'</span>)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).css(<span class="string">'font-size'</span>, <span class="string">'large'</span>)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).css(<span class="string">'z-index'</span>, <span class="number">100</span>)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).css(<span class="string">'border-radius'</span>, <span class="string">'25px'</span>)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).css(<span class="string">'text-align'</span>, <span class="string">'center'</span>)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).dblclick(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            saveArticle()</span><br><span class="line">            GM_openInTab(SF_URL, <span class="literal">true</span>)</span><br><span class="line">            GM_openInTab(CSDN_URL, <span class="literal">true</span>)</span><br><span class="line">            <span class="comment">// GM_openInTab(url, options)在新标签页打开URL。options可选的值：</span></span><br><span class="line">            <span class="comment">// active ：新标签页获得焦点; insert：新标签页在当前页面之后添加; setParent：当新标签页关闭后，焦点给回当前页面 ; incognito: 新标签页在隐身模式或私有模式窗口打开. </span></span><br><span class="line">            <span class="comment">// options可以写成&#123; active: true, insert: true, setParent :true &#125;</span></span><br><span class="line">            <span class="comment">// GM_openInTab(url, loadInBackground)：loadInBackground 可以是 Boolean 类型，如果是 true，则当前 tab 不变，如果是 false，则当前 tab 变为新打开的 tab.  当前tab就是当前标签页(显示的页面)</span></span><br><span class="line">        &#125;)</span><br><span class="line">        $(<span class="string">'#copyToCS'</span>).draggable()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">window</span>.location.href.startsWith(<span class="string">'https://www.jianshu.com'</span>)) &#123;</span><br><span class="line">            addCopyButton()</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">window</span>.location.href.startsWith(SF_URL)) &#123;</span><br><span class="line">            copyToSegmentFault()</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">window</span>.location.href.startsWith(CSDN_URL)) &#123;</span><br><span class="line">            copyToCsdn()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>▲推荐：<a href="https://blog.csdn.net/u011054333/article/details/104101806" target="_blank" rel="noopener">油猴脚本编写教程</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;由于在研究如何优化网盘直链下载助手**&lt;a href=&quot;https://github.com/ziyuanshu/baidupan&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;baidupan&lt;/a&gt;&lt;strong&gt;，如何将直链
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>浙大2020春夏-人工智能习题3——AIforOthello</title>
    <link href="https://nymrli.top/2020/12/01/%E6%B5%99%E5%A4%A72020%E6%98%A5%E5%A4%8F-%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B9%A0%E9%A2%981%E2%80%94%E2%80%94AIforOthello/"/>
    <id>https://nymrli.top/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/</id>
    <published>2020-12-01T04:02:33.000Z</published>
    <updated>2020-12-11T03:17:16.417Z</updated>
    
    <content type="html"><![CDATA[<h2 id="something-about-othello"><a class="markdownIt-Anchor" href="#something-about-othello"></a> something about Othello</h2><h3 id="黑白棋规则"><a class="markdownIt-Anchor" href="#黑白棋规则"></a> 黑白棋规则</h3><p>传统的黑白棋棋盘由 8 x 8 方格组成。开局时，棋盘中央的4格先置黑白相间的4颗棋子 (详见下图)，并由<strong>黑子先行</strong>。</p><p>首步由黑子先下；下子时；新子必须与棋盘上任一己方棋子形成一条或多条 (横、竖、斜) 直线，并夹着对方棋子；由新子及旧子连成的直线之间，必须存有一颗或以上对方的棋子。如图，黑子开局时之可行棋步有以下4格:</p><p>双方交替下子；倘若任何一方没有棋步可行，则其必须将下子权利相认予对手；另在双方均无子可下的情况下，游戏自动结束。</p><p>游戏结束后，拥子较多一方为胜；倘若双方棋数相同的，则为和局。</p><h3 id="黑白棋基本策略"><a class="markdownIt-Anchor" href="#黑白棋基本策略"></a> 黑白棋基本策略</h3><h4 id="占角子及固定子"><a class="markdownIt-Anchor" href="#占角子及固定子"></a> 占角子及固定子</h4><blockquote><p>按照黑白棋的玩法，其中一子落在佔角处的，该棋子将无法再被翻转。</p></blockquote><h4 id="危险方块"><a class="markdownIt-Anchor" href="#危险方块"></a> 危险方块</h4><p>在棋盘上，棋子下在某些方块中，比起其它下子位置更为安全。档游戏开始，一般建议尽量将棋子下于棋盘 4 x 4格的中心范围内 (下图以半透明白子显示)；且应避免将棋子下于靠近边角的方块内(下图以半透明黑子显示)，棋子落于靠近边角的方块中，会让对手更容易占据边角相邻的位置。</p><p><img src="https://www.eothello.com/images/basic_strategy_othello_2.png" alt="Basic strategy - danger zones"></p><h4 id="行动力"><a class="markdownIt-Anchor" href="#行动力"></a> 行动力</h4><p>初学者的普遍错误一般在开盘后<u>不断占子</u>，但在黑白棋中这并<u>不是一个好的策略</u>。<strong>较好的策略为专注于限制对方的落子选项，而交易进入这种策略的方法为占少子</strong>。在下面的例子中，白子虽然只有一颗棋子，但其可轻而易具的在4步内赢得整盘棋。</p><p>from : <a href="https://www.eothello.com/" target="_blank" rel="noopener">https://www.eothello.com/</a></p><p>较为强悍的othello AI: <a href="https://playpager.com/play-reversi/index.html" target="_blank" rel="noopener">https://playpager.com/play-reversi/index.html</a></p><h2 id="ai-for-othello-coding"><a class="markdownIt-Anchor" href="#ai-for-othello-coding"></a> AI for Othello Coding</h2><h3 id="search-before-coding"><a class="markdownIt-Anchor" href="#search-before-coding"></a> search before Coding：</h3><ul><li><a href="https://github.com/Unispac" target="_blank" rel="noopener">Unispac</a>/<strong><a href="https://github.com/Unispac/Alpha-Othello" target="_blank" rel="noopener">Alpha-Othello</a></strong>——浙大学长的（集成了很多Agent）</li><li><a href="https://github.com/YuMu0" target="_blank" rel="noopener">YuMu0</a>/<strong><a href="https://github.com/YuMu0/ReversiAI" target="_blank" rel="noopener">ReversiAI</a></strong>——博弈树、α-β剪枝（有UI；单文件，结构有点差）</li><li><a href="https://github.com/1011497938" target="_blank" rel="noopener">1011497938</a>/<strong><a href="https://github.com/1011497938/Othello" target="_blank" rel="noopener">Othello</a></strong>——MCTS、Q-learning（在浙大学长的基础上增加了几类agent）</li><li><a href="https://github.com/im0qianqian" target="_blank" rel="noopener">im0qianqian</a>/<strong><a href="https://github.com/im0qianqian/Reversi-based-RL" target="_blank" rel="noopener">Reversi-based-RL</a></strong>——毕设，文档说明：<a href="https://www.dreamwings.cn/reversi/3013.html" target="_blank" rel="noopener">https://www.dreamwings.cn/reversi/3013.html</a></li><li><a href="https://github.com/faded53222" target="_blank" rel="noopener">faded53222</a>/<strong><a href="https://github.com/faded53222/Othello" target="_blank" rel="noopener">Othello</a></strong>——B站用户</li></ul><hr><h2 id="mycode"><a class="markdownIt-Anchor" href="#mycode"></a> MyCode</h2><blockquote><p>部分借鉴了<a href="https://github.com/int8/monte-carlo-tree-search" target="_blank" rel="noopener">tic-tac-toe井字棋MCTS</a>的代码框架</p></blockquote><p>MSCT-target： Start：从可行位置进行树探索 -&gt; End：一个价值比较高的action</p><p><mark>代码中容易忘记的是，所有的board在rollout的时候都应该保存的临时变量，即确保node的self.board是不变的；board设计的时候，不要限定死color（move），这样可选择性更好</mark></p><p>虽然加上了corner，但是对站中级还是赢少输多， 看了下比赛棋盘，发现对corner的限制并不奏效，希望能找到更好的方法吧。</p><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/mct-seq.png" alt="mct-seq"></p><h3 id="战力"><a class="markdownIt-Anchor" href="#战力"></a> 战力</h3><h4 id="basic"><a class="markdownIt-Anchor" href="#basic"></a> basic</h4><h5 id="初级win"><a class="markdownIt-Anchor" href="#初级win"></a> 初级WIN</h5><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/E:%5Chexo%5Csource_posts%5CAI-for-Othello%5Cbasic_%E5%88%9D%E7%BA%A7win-%E4%B8%AD%E7%BA%A7Lost%5C%E5%88%9D%E7%BA%A7%5C12.png" alt="12"></p><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/E:%5Chexo%5Csource_posts%5CAI-for-Othello%5Cbasic_%E5%88%9D%E7%BA%A7win-%E4%B8%AD%E7%BA%A7Lost%5C%E5%88%9D%E7%BA%A7%5C21.png" alt="21"></p><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/E:%5Chexo%5Csource_posts%5CAI-for-Othello%5Cbasic_%E5%88%9D%E7%BA%A7win-%E4%B8%AD%E7%BA%A7Lost%5C%E5%88%9D%E7%BA%A7%5C22.png" alt="22"></p><h5 id="中级loss"><a class="markdownIt-Anchor" href="#中级loss"></a> 中级LOSS：</h5><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/E:%5Chexo%5Csource_posts%5CAI-for-Othello%5Cbasic_%E5%88%9D%E7%BA%A7win-%E4%B8%AD%E7%BA%A7Lost%5C%E4%B8%AD%E7%BA%A7%5C11.png" alt="11"></p><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/E:%5Chexo%5Csource_posts%5CAI-for-Othello%5Cbasic_%E5%88%9D%E7%BA%A7win-%E4%B8%AD%E7%BA%A7Lost%5C%E4%B8%AD%E7%BA%A7%5C12.png" alt="12"></p><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/E:%5Chexo%5Csource_posts%5CAI-for-Othello%5Cbasic_%E5%88%9D%E7%BA%A7win-%E4%B8%AD%E7%BA%A7Lost%5C%E4%B8%AD%E7%BA%A7%5C21.png" alt="21"></p><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/E:%5Chexo%5Csource_posts%5CAI-for-Othello%5Cbasic_%E5%88%9D%E7%BA%A7win-%E4%B8%AD%E7%BA%A7Lost%5C%E4%B8%AD%E7%BA%A7%5C22.png" alt="22"></p><h4 id="加上corner"><a class="markdownIt-Anchor" href="#加上corner"></a> 加上corner：</h4><h5 id="中级tie"><a class="markdownIt-Anchor" href="#中级tie"></a> 中级tie</h5><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/E:%5Chexo%5Csource_posts%5CAI-for-Othello%5C%E5%8A%A0%E4%B8%8Acorner%5C11.png" alt="11"></p><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/E:%5Chexo%5Csource_posts%5CAI-for-Othello%5C%E5%8A%A0%E4%B8%8Acorner%5C12.png" alt="12"></p><h5 id="中级win"><a class="markdownIt-Anchor" href="#中级win"></a> 中级WIN</h5><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/E:%5Chexo%5Csource_posts%5CAI-for-Othello%5C%E5%8A%A0%E4%B8%8Acorner%5C21.png" alt="21"></p><p><img src="/2020/12/01/浙大2020春夏-人工智能习题1——AIforOthello/E:%5Chexo%5Csource_posts%5CAI-for-Othello%5C%E5%8A%A0%E4%B8%8Acorner%5C22.png" alt="22"></p><h4 id="高级"><a class="markdownIt-Anchor" href="#高级"></a> 高级：</h4><h2 id="时间安排"><a class="markdownIt-Anchor" href="#时间安排"></a> 时间安排</h2><p>2020/12/2 上网冲浪，搜集相关资料，看了<a href="https://github.com/Unispac" target="_blank" rel="noopener">Unispac</a>/**<a href="https://github.com/Unispac/Alpha-Othello" target="_blank" rel="noopener">Alpha-Othello</a>**的设计报告。</p><p>2020/12/4 结合<a href="https://github.com/1011497938/Othello" target="_blank" rel="noopener">代码</a>和[视频](<a href="https://www.bilibili.com/video/BV1JD4y1Q7mV?from=search&amp;seid=6045698802301050730" target="_blank" rel="noopener">AI如何下棋？直观了解蒙特卡洛树搜索MCTS！！！</a>理了遍MCTS的原理， 列出了大致的框架， 明天开始编写逻辑代码。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;something-about-othello&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#something-about-othello&quot;&gt;&lt;/a&gt; something about Othello&lt;/h2&gt;
&lt;h3 id=&quot;黑白棋规
      
    
    </summary>
    
    
      <category term="ZJU" scheme="https://nymrli.top/tags/ZJU/"/>
    
      <category term="ML" scheme="https://nymrli.top/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>fork curlconverter for Better</title>
    <link href="https://nymrli.top/2020/12/01/fork-curlconverter-for-Better/"/>
    <id>https://nymrli.top/2020/12/01/fork-curlconverter-for-Better/</id>
    <published>2020-12-01T02:43:34.000Z</published>
    <updated>2020-12-01T04:00:56.428Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>终于12月了，又是一个月初，定个flag，pr一个Gitcode</p><p>由于之前写Python爬虫的时候，从<a href="https://github.com/NickCarneiro/curlconverter" target="_blank" rel="noopener">curlconverter</a>受惠很多，并且看到<a href="https://github.com/NickCarneiro/curlconverter/issues/22" target="_blank" rel="noopener">issue #22: Add generator for Java</a>中有Java版本的需求还未完成，所以目标就是完成JAVA for curl</p></blockquote><p>curlconverter提供了一个网页版： <a href="https://curl.trillworks.com/%EF%BC%8C" target="_blank" rel="noopener">https://curl.trillworks.com/，</a> 其实其本质上也是用js完成的，功能如README中所写：</p><h2 id="readme"><a class="markdownIt-Anchor" href="#readme"></a> README</h2><h3 id="install"><a class="markdownIt-Anchor" href="#install"></a> Install</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save curlconverter</span><br></pre></td></tr></table></figure><h3 id="usage"><a class="markdownIt-Anchor" href="#usage"></a> Usage</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> curlconverter = <span class="built_in">require</span>(<span class="string">'curlconverter'</span>);</span><br><span class="line"></span><br><span class="line">curlconverter.toPython(<span class="string">"curl 'http://en.wikipedia.org/' -H 'Accept-Encoding: gzip, deflate, sdch' -H 'Accept-Language: en-US,en;q=0.8' -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8' -H 'Referer: http://www.wikipedia.org/' -H 'Cookie: GeoIP=US:Albuquerque:35.1241:-106.7675:v4; uls-previous-languages=%5B%22en%22%5D; mediaWiki.user.sessionId=VaHaeVW3m0ymvx9kacwshZIDkv8zgF9y; centralnotice_buckets_by_campaign=%7B%22C14_enUS_dsk_lw_FR%22%3A%7B%22val%22%3A%220%22%2C%22start%22%3A1412172000%2C%22end%22%3A1422576000%7D%2C%22C14_en5C_dec_dsk_FR%22%3A%7B%22val%22%3A3%2C%22start%22%3A1417514400%2C%22end%22%3A1425290400%7D%2C%22C14_en5C_bkup_dsk_FR%22%3A%7B%22val%22%3A1%2C%22start%22%3A1417428000%2C%22end%22%3A1425290400%7D%7D; centralnotice_bannercount_fr12=22; centralnotice_bannercount_fr12-wait=14' -H 'Connection: keep-alive' --compressed"</span>);</span><br></pre></td></tr></table></figure><p>Returns a string of Python code like:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">cookies = &#123;</span><br><span class="line">    <span class="string">'GeoIP'</span>: <span class="string">'US:Albuquerque:35.1241:-106.7675:v4'</span>,</span><br><span class="line">    <span class="string">'uls-previous-languages'</span>: <span class="string">'%5B%22en%22%5D'</span>,</span><br><span class="line">    <span class="string">'mediaWiki.user.sessionId'</span>: <span class="string">'VaHaeVW3m0ymvx9kacwshZIDkv8zgF9y'</span>,</span><br><span class="line">    <span class="string">'centralnotice_buckets_by_campaign'</span>: <span class="string">'%7B%22C14_enUS_dsk_lw_FR%22%3A%7B%22val%22%3A%220%22%2C%22start%22%3A1412172000%2C%22end%22%3A1422576000%7D%2C%22C14_en5C_dec_dsk_FR%22%3A%7B%22val%22%3A3%2C%22start%22%3A1417514400%2C%22end%22%3A1425290400%7D%2C%22C14_en5C_bkup_dsk_FR%22%3A%7B%22val%22%3A1%2C%22start%22%3A1417428000%2C%22end%22%3A1425290400%7D%7D'</span>,</span><br><span class="line">    <span class="string">'centralnotice_bannercount_fr12'</span>: <span class="string">'22'</span>,</span><br><span class="line">    <span class="string">'centralnotice_bannercount_fr12-wait'</span>: <span class="string">'14'</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, sdch'</span>,</span><br><span class="line">    <span class="string">'Accept-Language'</span>: <span class="string">'en-US,en;q=0.8'</span>,</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'</span>,</span><br><span class="line">    <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span>,</span><br><span class="line">    <span class="string">'Referer'</span>: <span class="string">'http://www.wikipedia.org/'</span>,</span><br><span class="line">    <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response = requests.get(<span class="string">'http://en.wikipedia.org/'</span>, headers=headers, cookies=cookies)</span><br></pre></td></tr></table></figure><p>想要参加开发，最重要的就是看清master提出的contributing要求：</p><h3 id="contributing"><a class="markdownIt-Anchor" href="#contributing"></a> Contributing</h3><blockquote><p>I’d rather write programs to write programs than write programs.</p><p>Dick Sites, Digital Equipment Corporation, September 1985</p></blockquote><p>Make sure you’re running node 12 or greater. The test suite will fail on older versions of node.</p><p>If you add a new generator, make sure to update the list of supported languages in <a href="https://github.com/NickCarneiro/curlconverter/blob/master/bin/cli.js" target="_blank" rel="noopener">cli.js</a> or else it won’t be accessible from the command line. Further, you’ll want to update test.js and index.js for your new generator to make it part of the testing.</p><p>If you want to add new functionality, start with a test.</p><ul><li>Create a file containing the curl command in <code>fixtures/curl_commands</code> with a descriptive filename like <code>post_with_headers.txt</code></li><li>Create a file containing the output in <code>fixtures/python_output/</code> with a matching filename (but different extension) like <code>post_with_headers.py</code></li><li>Run tests with <code>npm test</code>.</li><li>If your filenames match correctly, you should see one failing test. Fix it by modifying the parser in <code>util.js</code> or the generators in <code>generators/</code></li></ul><p>The parser generates a generic data structure consumed by code generator functions.</p><p>You can run a specific test with this command:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node test.js --test=test_name</span><br></pre></td></tr></table></figure><p>where “test_name” is a file (without extension) in <code>fixtures/curl_commands</code></p><p>You can run a specific test with this command:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node test.js --language=R</span><br></pre></td></tr></table></figure><p>I recommend setting this up with a debugger so you can see exactly what the parser is passing to the generator. Here’s my Intellij run configuration for a single test:</p><p>Before submitting a PR, please check that your JS code conforms to the code style enforced by <a href="https://standardjs.com/" target="_blank" rel="noopener">standardjs</a>. Use the following to fix your code if it doesn’t:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ standard --fix my_file.js</span><br></pre></td></tr></table></figure><p>If you get stuck, please reach out via email. I am always willing to hop on a google hangout and pair program.</p><h4 id="翻译"><a class="markdownIt-Anchor" href="#翻译"></a> 翻译：</h4><blockquote><p>相比写程序，我更愿意写出能写程序的程序。——Dick Sites, Digital Equipment Corporation, September 1985</p></blockquote><p>确保你正在运行node 12或更高版本。测试套件在旧版本的node上会失败。</p><p>如果你添加了一个新的生成器，请确保更新cli.js中的支持语言列表，否则它将无法从命令行访问。此外，你还要为你的新生成器更新test.js和index.js，使其成为测试的一部分。</p><p>如果您想添加新功能，请从测试开始。</p><ul><li>在<code>fixtures/curl_commands</code>中创建一个包含curl命令的文件，文件名为post_with_headers.txt。</li><li>在<code>fixtures/python_output/</code>中创建一个包含输出的文件，并使用一个匹配的文件名（但不同的扩展名），比如<code>post_with_headers.py</code>。</li><li>用<code>npm test</code>运行测试。</li><li>如果您的文件名正确匹配，您应该看到一个失败的测试。通过修改<code>util.js</code>中的解析器或<code>generators/</code>中的生成器来解决。</li></ul><p>解析器需要生成一个通用数据结构给代码生成器函数。</p><p>你可以用这个命令运行一个特定的测试。<code>node test.js --test=test_name</code>， 其中 &quot;test_name &quot;是<code>fixtures/curl_commands</code>中的一个文件（没有扩展名）。</p><p>你可以用这个命令运行一个特定的测试。<code>node test.js --language=R</code>，我建议用调试器来设置，这样你就可以看到解析器传递给生成器的具体内容。这是我的Intellij运行配置，用于单次测试。</p><p><img src="https://github.com/NickCarneiro/curlconverter/raw/master/docs/intellijconfig.png" alt="Screenshot of intellij debug configuration"></p><p>在提交PR之前，请检查您的JS代码是否符合standardjs执行的代码风格。如果不符合的话，请使用下面的方法来修正你的代码。<code>$ standard --fix my_file.js.</code></p><p>如果你遇到困难，请通过电子邮件联系我。我总是愿意跳上google上线、校验程序。</p><hr><h2 id="分析其他contributor的pr"><a class="markdownIt-Anchor" href="#分析其他contributor的pr"></a> 分析其他contributor的PR</h2><h3 id="dainisgorbunovs"><a class="markdownIt-Anchor" href="#dainisgorbunovs"></a> <strong><a href="https://github.com/DainisGorbunovs" target="_blank" rel="noopener">DainisGorbunovs</a></strong></h3><ul><li>PR说明：<a href="https://github.com/NickCarneiro/curlconverter/pull/154" target="_blank" rel="noopener">https://github.com/NickCarneiro/curlconverter/pull/154</a><ul><li>Thanks / what I found helpful：<ul><li>可以使用nc -l 3000，然后在另一个标签页中 curl -X POST <a href="http://localhost:3000" target="_blank" rel="noopener">http://localhost:3000</a> --data “hello=world” (感谢 @NickCarneiro)</li><li>可以使用Wireshark来检查（抓包）</li><li>可以使用<strong>httpbin</strong>服务（用途：个人感觉是将curl结果跟generate结果对比）</li></ul></li></ul></li><li>commit详情：<a href="https://github.com/DainisGorbunovs/curlconverter/commit/5cfedbf595177aa912b78f0fde05f15da81f11f9" target="_blank" rel="noopener">https://github.com/DainisGorbunovs/curlconverter/commit/5cfedbf595177aa912b78f0fde05f15da81f11f9</a></li></ul><hr><h2 id="java-for-curl"><a class="markdownIt-Anchor" href="#java-for-curl"></a> JAVA for Curl</h2><h3 id="http库选取"><a class="markdownIt-Anchor" href="#http库选取"></a> http库选取</h3><blockquote><p>在2016年的时候**<a href="https://github.com/NickCarneiro" target="_blank" rel="noopener">NickCarneiro</a>**就<a href="https://github.com/NickCarneiro/curlconverter/issues/22" target="_blank" rel="noopener">Add generator for Java #22</a>提出增加JAVA版本， 但无奈JAVA较为繁琐，并且没有像Python的requests一样好用的库，因此现在都还未有JAVA版本</p><blockquote><p>Java is super popular and super verbose, making it a good candidate for curlconverter.<br>We need to find out if there is some modern library for sending http requests. Please advise.</p></blockquote></blockquote><h4 id="1-httpclient"><a class="markdownIt-Anchor" href="#1-httpclient"></a> 1、HttpClient</h4><blockquote><p>HttpClient：代码复杂，还得操心资源回收等。代码很复杂，冗余代码多，不建议直接使用。</p></blockquote><h5 id="httpclient使用介绍"><a class="markdownIt-Anchor" href="#httpclient使用介绍"></a> HttpClient使用介绍</h5><p>使用HttpClient发送请求主要分为以下几步骤：</p><ul><li>创建 CloseableHttpClient对象或CloseableHttpAsyncClient对象，前者同步，后者为异步</li><li>创建Http请求对象</li><li>调用execute方法执行请求，如果是异步请求在执行之前需调用start方法</li></ul><ol><li>java原生HttpURLConnection</li><li>apache HttpClient3.1</li><li>apache httpClient4.5</li></ol><p>上述见：<a href="https://www.cnblogs.com/hhhshct/p/8523697.html" target="_blank" rel="noopener">java实现HTTP请求的三种方式</a>—— 有代码demo</p><h4 id="2-okhttp"><a class="markdownIt-Anchor" href="#2-okhttp"></a> 2、okhttp</h4><blockquote><p>okhttp：OkHttp是一个高效的HTTP客户端，允许所有同一个主机地址的请求共享同一个socket连接；连接池减少请求延时；透明的GZIP压缩减少响应数据的大小；缓存响应内容，避免一些完全重复的请求</p></blockquote><p>OkHttp使用</p><p>使用OkHttp发送请求主要分为以下几步骤：</p><ul><li>创建OkHttpClient对象</li><li>创建Request对象</li><li>将Request 对象封装为Call</li><li>通过Call 来执行同步或异步请求，调用execute方法同步执行，调用enqueue方法异步执行</li></ul><h4 id="3-resttemplate"><a class="markdownIt-Anchor" href="#3-resttemplate"></a> 3、RestTemplate</h4><blockquote><p>RestTemplate： 是 Spring 提供的用于访问Rest服务的客户端， RestTemplate 提供了多种便捷访问远程Http服务的方法,能够大大提高客户端的编写效率。</p></blockquote><p><a href="https://www.cnblogs.com/zk-blog/p/12465951.html" target="_blank" rel="noopener">https://www.cnblogs.com/zk-blog/p/12465951.html</a></p><h4 id="4http-request"><a class="markdownIt-Anchor" href="#4http-request"></a> 4.<strong><a href="https://github.com/kevinsawicki/http-request" target="_blank" rel="noopener">http-request</a></strong></h4><blockquote><p>在我们日常工作中，我们需要经常和第三方接口进行交互通信，很多时候我们都是使用http协议进行交互，java原生自带对http的支持（<code>java.net.*</code>），但是使用起来不太方便，除此之外，用的最多的就是apache httpclient工具包。但是个人使用这么久而言，感觉不管是原生的抑或是httpclient，使用起来都不太顺手，也略显复杂</p></blockquote><p>文章见： <a href="https://www.jianshu.com/p/e955b01e2e16" target="_blank" rel="noopener">JAVA http请求工具类http-request</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;终于12月了，又是一个月初，定个flag，pr一个Gitcode&lt;/p&gt;
&lt;p&gt;由于之前写Python爬虫的时候，从&lt;a href=&quot;https://github.com/NickCarneiro/curlconverter&quot; target=&quot;_b
      
    
    </summary>
    
    
      <category term="GitCode" scheme="https://nymrli.top/tags/GitCode/"/>
    
  </entry>
  
  <entry>
    <title>github中各配置文件</title>
    <link href="https://nymrli.top/2020/11/29/github%E4%B8%AD%E5%90%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <id>https://nymrli.top/2020/11/29/github中各配置文件/</id>
    <published>2020-11-29T10:10:04.000Z</published>
    <updated>2020-12-19T13:33:33.298Z</updated>
    
    <content type="html"><![CDATA[<h3 id="pre-commit-configyaml"><a class="markdownIt-Anchor" href="#pre-commit-configyaml"></a> <a href="https://github.com/shidenggui/easyquotation/blob/master/.pre-commit-config.yaml" target="_blank" rel="noopener">.pre-commit-config.yaml</a></h3><blockquote><p>来源：<strong><a href="https://github.com/shidenggui/easyquotation" target="_blank" rel="noopener">easyquotation</a></strong>，项目中有makefile和.pre-commit-config.yaml、<a href="https://github.com/shidenggui/easyquotation/blob/master/.coveragerc" target="_blank" rel="noopener">.coveragerc</a>、<a href="https://github.com/shidenggui/easyquotation/blob/master/.pylintrc" target="_blank" rel="noopener">.pylintrc</a>三个比较新奇的。</p><ul><li><p>makefile一般都在c工程中看到， 这边作者使用是代替了一些编译工作，类似sh脚本的作用。跟setup区别：makefile提供给开发者提交代码时使用；setup当做三方库直接调用</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;   init:</span><br><span class="line">&gt;   pip install pipenv</span><br><span class="line">&gt;   pipenv install --dev</span><br><span class="line">&gt;   pipenv run pre-commit install</span><br><span class="line">&gt;   @echo &amp;&amp; echo use <span class="string">"pipenv shell"</span> to access virtual env</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ul></blockquote><blockquote></blockquote><p>Git钩子脚本对于<strong>在提交代码审查之前识别简单问题</strong>很有用。我们在每次<u>提交时都运行钩子</u>，以<u>自动指出代码中的问题</u>，例如缺少分号，尾随空白和调试语句。通过在代码审阅之前指出这些问题，代码审阅者可以专注于更改的体系结构，而不会浪费琐碎的样式问题。</p><p>在此介绍的pre-commit只是git hook的一部分， git hook分客户端和服务端的，pre-commit属于客户端的。</p><p>使用教程：<a href="https://blog.csdn.net/wuheshi/article/details/104628747/" target="_blank" rel="noopener">项目管理：代码检查 pre-commit 使用详解</a>： PIP安装-&gt;配置(在项目的根目录创建一个.pre-commit-config.yaml 文件)-&gt;<code>pre-commit install</code>把pre-commit安装到了项目.git的hook目录下面-&gt;Done(之后我们在执行git commit 的时候就会先调用这个文件，当然还可以在git操作的很多步骤前面做一些工作)</p><h3 id="travisyml"><a class="markdownIt-Anchor" href="#travisyml"></a> <a href="https://github.com/shidenggui/easyquotation/blob/master/.travis.yml" target="_blank" rel="noopener">.travis.yml</a></h3><h3 id="gitignore"><a class="markdownIt-Anchor" href="#gitignore"></a> .gitignore</h3><blockquote><p>在提交git commit的时候选择性忽略的配置文件</p></blockquote><p>有各种语言的模板，至于具体的文件，可以自己修改细节。</p><h3 id="gitkeep"><a class="markdownIt-Anchor" href="#gitkeep"></a> .gitkeep</h3><blockquote><p>大家可能在很多的开源项目中都看到过.gitkeep这个文件，文件内没有任何内容，一个空空的文件。</p></blockquote><p>那这个类型文件的作用到底是啥呢？这要从git不允许追踪(track)或者说提交一个空的文件夹说起，git本身是不允许提交一个空文件夹的，所有就有了.gitkeep的存在，可以把它看作是一个占位符，当然了，你也可以使用 .nofile或者其他的占位符，自行决定。</p><p>当然了，业内人员已经习惯使用.gitkeep，已经达成了共识，所以我们尽量还是使用.gitkeep。</p><h2 id="代码规范与风格"><a class="markdownIt-Anchor" href="#代码规范与风格"></a> 代码规范与风格</h2><h3 id="pylintrc"><a class="markdownIt-Anchor" href="#pylintrc"></a> <a href="https://github.com/shidenggui/easyquotation/blob/master/.pylintrc" target="_blank" rel="noopener">.pylintrc</a></h3><blockquote><p>Pylint 是一个 Python 代码分析工具，它分析 Python 代码中的错误，查找不符合代码风格标准（Pylint 默认使用的代码风格是 PEP 8，具体信息，请参阅参考资料）和有潜在问题的代码。</p></blockquote><p>跟.gitignore差不多，有模板。</p><h3 id="flake8"><a class="markdownIt-Anchor" href="#flake8"></a> <a href="https://github.com/nonebot/aiocqhttp/blob/master/.flake8" target="_blank" rel="noopener">.flake8</a></h3><p>请使用 Flake8 确保代码符合规范：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flake8 --config .flake8</span><br></pre></td></tr></table></figure><h3 id="styleyapf"><a class="markdownIt-Anchor" href="#styleyapf"></a> <a href="https://github.com/nonebot/aiocqhttp/blob/master/.style.yapf" target="_blank" rel="noopener">.style.yapf</a></h3><p>请使用 YAPF 对代码进行格式下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yapf --style .style.yapf --in-place --recursive aiocqhttp scripts demo.py</span><br></pre></td></tr></table></figure><h3 id="coveragerc"><a class="markdownIt-Anchor" href="#coveragerc"></a> <a href="https://github.com/shidenggui/easyquotation/blob/master/.coveragerc" target="_blank" rel="noopener">.coveragerc</a></h3><blockquote><p>Python用来查看测试中覆盖率的配置文件，如果衡量单元测试对相应代码的测试重量，覆盖率是一个必要非充分条件，因此统计代码的覆盖率，检视单测是否充分，就尤为的重要。这里针对python-unittest的单测的覆盖率coverage进行使用说明与分析.</p></blockquote><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[run]</span></span><br><span class="line"><span class="attr">branch</span> = <span class="literal">True</span></span><br><span class="line"><span class="attr">include</span> = easyquotation/*# 项目名称xxx</span><br><span class="line"><span class="attr">omit</span> = tests/*# 忽略的目录</span><br><span class="line"></span><br><span class="line"><span class="section">[report]</span></span><br><span class="line"><span class="attr">fail_under</span> = -<span class="number">1</span></span><br></pre></td></tr></table></figure><p>官方文档： <a href="https://coverage.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener">https://coverage.readthedocs.io/en/latest/index.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;pre-commit-configyaml&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#pre-commit-configyaml&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/shidenggui/easyqu
      
    
    </summary>
    
    
      <category term="git" scheme="https://nymrli.top/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>《漫画机器学习入门》大关真之——读书笔记</title>
    <link href="https://nymrli.top/2020/11/28/%E3%80%8A%E6%BC%AB%E7%94%BB%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8%E3%80%8B%E5%A4%A7%E5%85%B3%E7%9C%9F%E4%B9%8B%E2%80%94%E2%80%94%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>https://nymrli.top/2020/11/28/《漫画机器学习入门》大关真之——读书笔记/</id>
    <published>2020-11-28T13:39:01.000Z</published>
    <updated>2020-11-28T13:40:38.925Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漫画机器学习入门总结"><a class="markdownIt-Anchor" href="#漫画机器学习入门总结"></a> 《漫画机器学习入门》总结</h1><p>机器学习是指计算机通过不断地处理数据并修正算法和参数来学习各种规则， 从而不断改进模型而得到更优化的算法。书中主要讲解了玻尔兹曼机的机器学习</p><h3 id="谁是世界上最美丽的人"><a class="markdownIt-Anchor" href="#谁是世界上最美丽的人"></a> <a href="https://blog.csdn.net/weixin_41513917/article/details/102646458#%E7%9F%A5%E8%AF%86%E7%82%B9" target="_blank" rel="noopener">谁是世界上最美丽的人？</a></h3><ol><li><p>****特征量****就是如每一个人的年龄，眼睛大小； 特征向量就是每个人的特征量放到一起，特征向量是表达特征的一个数组</p></li><li><p>误差函数： 在美丽程度这个问题上， 误差函数就是—— 计算“美丽程度”的实际输出与给定的理想输出之间的差值</p></li><li><p>最优化问题：  最小化误差函数，其实是一个求解最优化问题：我们的任务就是要找到没有误差或者误差小到满足要求的最适合的模型。这就要通过调节模型中的参数，使误差函数值尽量小，这就是求解（参数）最优化问题。</p><ol><li>微分：稍微拉动一点摇杆，确认误差是否变小。这种操作叫做<strong>微分</strong>。</li><li>梯度下降法： 一直拉到误差不再减少，直到误差值保持不变或者反而有所上升时为止。希望不停地调整权重，使得误差一直在朝着减小的方向前进。这种调整误差的方法叫<strong>梯度下降法</strong>。</li><li><img src="https://img-blog.csdnimg.cn/20191021100811994.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTUxMzkxNw==,size_16,color_FFFFFF,t_70" alt=""></li></ol></li><li><p>回归就是：建立模型—拟合—微调</p></li><li><p>机器学习是寻找输入数据与输出数据之间关系(model-&gt;function map)的一门学问。</p></li><li><p>每一个特征量都很重要，但是不同特征量的重要程度是不同的，所以需要寻找特征的权重矩阵</p></li><li><p>训练数据和测试数据： 学习和测试是机器学习的两项基本任务。 (1)好的算法很重要； (2)要将获得的数据分为训练用数据和测试用数据；(3)仅仅匹配训练用数据是不行的——仅仅满足训练用数据叫overfit过拟合，如果连训练数据都不符合叫underfit欠拟合</p></li><li><p>验证的方法：交叉验证：将所有的数据分成4组， 每组中1份数据用于测试，3份用于训练</p></li><li><p>复杂化模型——寻找新的特征值：sigmoid 函数：当发现检测的结果不太好，王后想把模型变得更复杂一些。王后尝试将原始的特征量组合起来获得新的特征量，再加权求输出，却发现因为只有乘法和加法的情况这种<strong>线性特性</strong>，与之前并没有本质区别。因此，引入了sigmoid函数，这个非线性函数。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>−</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">sig(x) = \frac{1}{1-e^{-x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p><img src="https://img-blog.csdnimg.cn/2019102111070935.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTUxMzkxNw==,size_16,color_FFFFFF,t_70" alt=""></p><p>加权组合，构成新的特征值： 如果我们把将特征量组合，新增加5个特征量的话（如图），摇杆的数量就变成了原来的5倍。</p><p>多层神经网络：在单层神经网络的基础上，增加一层非线性变换，结构上也就多了一个中间的曾，就是多层神经网络。</p></li><li><p>只由输入到输出方向进行信息的传递，被称为正向型神经网络； 而双方向都能够进行信息交换的结构被称为双向型神经网络。双向型神经网络典型代表是Hopfield一处的，玻尔兹曼机也是基于这种神经网络。 双向信息处理模式不同于淡出的正向信息处理， 它可以有多个输出结果， 而且从这些输出结果中它可以回忆起以前记忆过的信息，因此也被叫做联想记忆。</p></li><li><p>模型越复杂，网络就越纠缠，拉动一根线就会对整个网络产生较大的影响。反过来，网络中任何一根线又会连接很多其他的线，拉它的时候也会受到很大限制，甚至拉不动。 距离输出层越近的摇杆越容易搬动，这是有梯度的结果。因为搬动一下离输出很近的摇杆，它的效果能够很方便地传递给输出。离输出越远，梯度越难计算，越难调整。===&gt;BP算法， 以及最好不要使用Sigmod函数， 因为容易梯度消失， 可以换用tanh或者reLU（观察函数的微分结果）</p></li><li><p><strong>dropout</strong>：为了防止过度学习， 需要掌握平衡， 做出取舍：  适当地选取一定比例的特征量，剩下的全部舍弃不用。</p></li><li><p>批量学习与在线学习：</p><p><strong>批量学习（batch learning）</strong>：将全部数据收集齐了之后一起作为训练用数据使用，这叫做批量学习（batch learning）</p><p><strong>在线学习（online learning）</strong>:与此相对的，随着数据不断地获取而逐步进行的学习则称为在线学习（online learning）</p><p>现在批量学习也在改进，有些地方与在线学习差不多， 如使用概率梯度下降法：</p><p><img src="https://img-blog.csdnimg.cn/20191021170700902.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTUxMzkxNw==,size_16,color_FFFFFF,t_70" alt=""></p><p>（采用概率的方式去分组，也叫随机选择，就是不能利用某种故意的特定意图去分组）</p><p>当利用概率分组后，对每一组数据进行训练，动一下摇杆看误差如何变化，然后再向误差变小的方向搬动摇杆，这就是概率梯度下降法。（通过适当地概率计算，让参数或左或右地跳动着变化）</p><p>这种算法考虑的是，与其冲着预先规定好的方向一直走下去，倒不如是不是地左看看，右看看。这样反倒更容易找到隐藏的近路。</p><p>在线学习和随机梯度下降法的优势在于， 可以捕捉灵光霎现的机会， 增加了跳脱鞍点的可能性。</p></li></ol><h3 id="粮食问题"><a class="markdownIt-Anchor" href="#粮食问题"></a> 粮食问题</h3><ol><li><p>感知机perceptron(弗兰克·罗森布拉特)和支持向量机SVM(Vladmir N.Vapnik)</p><p>感知机：移动分割超平面进行数据分类。感知机的缺点：非线性模型处理不好</p><p>支持向量机：使分割超平面处于一种非常“好”的状态，即所有数据点尽量都远离分割超平面，因此能够更好的识别并且<strong>使得安全裕量最大</strong></p></li><li><p><strong>矩阵的秩</strong>：= 模式的种类， 一个模式以一行向量表示。<u>矩阵中两行的规律相似，应该属于同一种模式</u>。假设数据中存在某些模式，那么在矩阵中一定会存在某一行的数值代表该模式，其他的某一行代表另一种模式。</p><p>如果模式能够从可见数据中推演出来，通过对可见数据做有效处理，就能够推测出不可见的那部分数据，这其实是一种无监督学习：希望能够完美地补充矩阵中空白的数据，并能够预测出新的模式。（计算机从大量数据中通过自己的分析来找出规律，叫做无监督学习）</p></li><li><h3 id="预测方面有监督无监督的不同"><a class="markdownIt-Anchor" href="#预测方面有监督无监督的不同"></a> 预测方面有监督/无监督的不同 ：</h3><p>从数据中学到东西，这一点是一致的。之后，在是否进行预测这一点上是不同的。<br>有监督学习是希望计算机越来越聪明并逐渐能够代替人的某些工作。<br>无监督学习，是希望计算机从特征量中选择出我们容易理解的某种模式，将模式分成若干或者某种形式的分类。</p></li><li><p><strong>稀疏化</strong>：有些算法会将不重要的特征量的权重直接设定为0，舍弃一些不重要的东西， 导致矩阵中产生很多0， 这种矩阵将稀疏矩阵。</p></li><li><p><strong>非负矩阵分解（ Nonnegative Matrix Factor ）</strong>： 非负，指在计算的时候不使用负值，也就是只做加法运算。就像用钢笔描绘人脸，先有眼睛，鼻子，再加上嘴等等。这些都是一个一个添加的。（非负好比用钢笔作画不能删除， 而普通作画是用铅笔， 所以可以有负值）</p><p>如果也用减法，就像用铅笔，还可以用橡皮擦去一些地方。</p></li></ol><h3 id="基于玻尔兹曼机器学习的图像处理方法"><a class="markdownIt-Anchor" href="#基于玻尔兹曼机器学习的图像处理方法"></a> 基于玻尔兹曼机器学习的图像处理方法</h3><blockquote><p>首先要明确的一点是， 图片是由像素组成的。每一个像素到底是呈现数模颜色，这是由数据来决定的。</p></blockquote><ol><li><p><strong>玻尔兹曼机器学习</strong>:将图像的颜色数据输入到玻尔兹曼机中，计算机通过分析这些数据，就可以得到实际图像的特征，各像素点显示某种颜色的概率，以及<strong>相邻像素间的关系</strong>。这种过程叫做玻尔兹曼机器学习。</p></li><li><p><strong>似然度</strong>： 相似的程度。 机器学习的目的要么是让误差值最小，要么是让似然度最大</p></li><li><p><strong>采样</strong>：将实际提供的数据输入到玻尔兹曼机后， 模型会输出伪数据（重构数据）， 这个自身不断<strong>产生数据</strong>的过程就叫做采样 sampling</p><p>玻尔兹曼机器学习在进行时，采用马尔科夫蒙特卡罗方法，来逐一考虑相邻像素之间的关系，来完成双向型神经网络的信息流动。这是一种在整个网络结构中的循环，<u>在这一过程中还要不断地采集大量的重构数据。很费时间</u>。==&gt; 替代算法是，单纯考虑由相邻像素传送过来的信息，<strong>平均场近似法</strong></p><p><img src="/2020/11/28/《漫画机器学习入门》大关真之——读书笔记/hexo/source/_posts/%E6%BC%AB%E7%94%BB%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8%E5%A4%A7%E5%85%B3%E7%9C%9F%E4%B9%8B%E2%80%94%E2%80%94%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/1.jpg" alt="平均近场法"></p></li><li><p>中间结果包含每一个像素颜色的变化过程，也能够构成中间过程的许多图像。这些中间产生的图像数据就是重构数据， 也可以叫做伪数据。其实核心就是“依据临近像素的数据， 在现有的参数值情况下， 预测中心像素的颜色值”</p></li><li><p>机器学习与统计力学： 我们在研究原子和分子的时候， 位置、运动扽信息是分析研究的对象， 但是统计力学有趣的地方是利用统计学理论去获取事物整体的特征。类比机器学习， 就像我们并不去计较每一个颗粒的位置和速度， 对于机器学习我们也是希望得到大量数据间的整体组合信息， 这种整体组合信息在最优化问题求解时就是推到出函数模型</p></li><li><p>可见变量、隐含变量：在图像中， 每一个像素颜色的数值时可以直接读取的， 这一部分就叫做可见变量。由可见变量之间关联关系构成的新变量称为隐含变量， 从而可以建立出眼睛、鼻子等部件， 从而将利用各个部件就可以将图像分成各个部分了。 利用上述方式就可以以“开关”的形式来操作了，通过像素和开关之间的关系就可以决定在可见变量一侧表示出什么， 这种方法认为可见变量之间没有任何关系， 各个开关之间也没有关联。只考虑开关与像素之间的关系， 叫做受限玻尔兹曼机（RBM）， 有较好的特性， 如一定条件下的独立性</p></li><li><p><strong>变分原理</strong>：物理学中， 指自然界中静止实物的一个普遍适用的数学定律，也称最小作用原理。比如在确定了物体的起点和终点后， 通过动能和势能之差就能计算出最短路径。</p></li><li><p><strong>对比散度算法</strong>：将实际的颜色数据与建立的模型采集到的伪数据进行比较， 我们希望能够从中找到某些有用的东西。</p></li><li><p><img src="https://img-blog.csdnimg.cn/20191022114125126.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTUxMzkxNw==,size_16,color_FFFFFF,t_70" alt=""></p><p>深度玻尔兹曼机将图像数据作为输入， 内部作为隐含变量的各种开关来决定到底输出什么图像， 因此为了能够对应不同的图像， 建立数量巨大的复杂的隐含变量时非常必要的——深度玻尔兹曼机的目的时<strong>学习图像中隐含的特征</strong>， 知道了图像中拥有的特征可以就可以返回来看可见变量中是否有猫和狗了——传统机器学习和深度学习的区别也在于此， 传统机器学习需要自己手动提取特征（特征工程）， 而神经网络可以自己提取特征。</p></li><li><p>受限玻尔兹曼机是两层神经网络。包含输入层，隐藏层，输出层</p></li><li><p>预训练： ①运用在无监督学习中， 不告诉model特征有哪些 ②用预训练网络做微调：一般图片分类的神经网络每一类别的图片量级至少在5000-10000左右，如果没有这么多图片，（使用数据增强的方法后也不够），此时就需要用预训练网络了（在几十万张图片训练集上获得较好效果的图片多分类器）。然后用我们现有的图片在这个预训练网络的基础上继续训练， 利用现有的图片继续训练就是为了让网络重新适应现有的图片训练集， 这种适应过程往往比从头训练一个网络更快更好， 这种方法跟迁移学习的思想很像。</p></li><li><p>自我符号化（在无监督学习中具有代表性）：吧收到的输入信号原原本本地返回来。</p></li></ol><p><img src="/2020/11/28/《漫画机器学习入门》大关真之——读书笔记/hexo/source/_posts/%E6%BC%AB%E7%94%BB%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8%E5%A4%A7%E5%85%B3%E7%9C%9F%E4%B9%8B%E2%80%94%E2%80%94%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E8%87%AA%E6%88%91%E7%AC%A6%E5%8F%B7%E5%8C%96.jpg" alt="自我符号化"></p><p>注意， 左右知识结构上的复制，权值是不一样的。这些权值是需要进行调整后才能满足右边的“输入”等于左边输入的。在这个调整权值的过程中，输入数据所隐含的特征就可以被挖掘出来了。<mark>&gt;从而使得中间层具有能够反映输入数据中特征的能力。</mark>&gt; 中间层的自我符号化训练其实也是提取特征的过程</p><ol start="13"><li><p>卷积神经网络：</p><blockquote><p>在处理图像时已有已知的神经网络可以利用了——卷积神经网络。</p></blockquote><p><strong>卷积</strong>：卷积是利用了，人在看见图像识别图像时并不需要将所有的细小像素全部看清的特征而设计的。卷积就是在某种程度上将临近的像素组合起来形成新的特征量，然后利用卷积结果进行分析</p><p><strong>池化</strong>：在图片中即使模糊我们也能通过模糊的影像大致判断出—&gt;数据即使有些差异也能够得出同样的结果。因此可以利用卷积将特征进行排序，将相近的特征进行比较并选用其中的最大值或平均值，叫做池化</p><p>▲通过卷积和池化操作，神经网络从而可以将图像中的特征量自动地提取出来了。</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;漫画机器学习入门总结&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#漫画机器学习入门总结&quot;&gt;&lt;/a&gt; 《漫画机器学习入门》总结&lt;/h1&gt;
&lt;p&gt;机器学习是指计算机通过不断地处理数据并修正算法和参数来学习各种规则， 从而不断改进模型而得到
      
    
    </summary>
    
    
      <category term="机器学习" scheme="https://nymrli.top/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="读书笔记" scheme="https://nymrli.top/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
